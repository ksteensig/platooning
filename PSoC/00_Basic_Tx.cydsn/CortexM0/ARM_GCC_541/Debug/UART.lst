ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\UART.c"
   1:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC4/UART.c **** * Version 2.50
   4:Generated_Source\PSoC4/UART.c **** *
   5:Generated_Source\PSoC4/UART.c **** * Description:
   6:Generated_Source\PSoC4/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/UART.c **** *
   8:Generated_Source\PSoC4/UART.c **** * Note:
   9:Generated_Source\PSoC4/UART.c **** *
  10:Generated_Source\PSoC4/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC4/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/UART.c **** 
  17:Generated_Source\PSoC4/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC4/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC4/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/UART.c **** 
  22:Generated_Source\PSoC4/UART.c **** 
  23:Generated_Source\PSoC4/UART.c **** /***************************************
  24:Generated_Source\PSoC4/UART.c **** * Global data allocation
  25:Generated_Source\PSoC4/UART.c **** ***************************************/
  26:Generated_Source\PSoC4/UART.c **** 
  27:Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC4/UART.c **** 
  29:Generated_Source\PSoC4/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 2


  31:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC4/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC4/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC4/UART.c **** 
  35:Generated_Source\PSoC4/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC4/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC4/UART.c **** 
  48:Generated_Source\PSoC4/UART.c **** 
  49:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC4/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC4/UART.c **** *
  53:Generated_Source\PSoC4/UART.c **** * Summary:
  54:Generated_Source\PSoC4/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC4/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC4/UART.c **** *
  59:Generated_Source\PSoC4/UART.c **** * Parameters:
  60:Generated_Source\PSoC4/UART.c **** *  None.
  61:Generated_Source\PSoC4/UART.c **** *
  62:Generated_Source\PSoC4/UART.c **** * Return:
  63:Generated_Source\PSoC4/UART.c **** *  None.
  64:Generated_Source\PSoC4/UART.c **** *
  65:Generated_Source\PSoC4/UART.c **** * Global variables:
  66:Generated_Source\PSoC4/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC4/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC4/UART.c **** *
  72:Generated_Source\PSoC4/UART.c **** * Reentrant:
  73:Generated_Source\PSoC4/UART.c **** *  No.
  74:Generated_Source\PSoC4/UART.c **** *
  75:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC4/UART.c **** {
  78:Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC4/UART.c ****     {
  81:Generated_Source\PSoC4/UART.c ****         UART_Init();
  82:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC4/UART.c ****     }
  84:Generated_Source\PSoC4/UART.c **** 
  85:Generated_Source\PSoC4/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC4/UART.c **** }
  87:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 3


  88:Generated_Source\PSoC4/UART.c **** 
  89:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC4/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC4/UART.c **** *
  93:Generated_Source\PSoC4/UART.c **** * Summary:
  94:Generated_Source\PSoC4/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC4/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/UART.c **** *
  99:Generated_Source\PSoC4/UART.c **** * Parameters:
 100:Generated_Source\PSoC4/UART.c **** *  None.
 101:Generated_Source\PSoC4/UART.c **** *
 102:Generated_Source\PSoC4/UART.c **** * Return:
 103:Generated_Source\PSoC4/UART.c **** *  None.
 104:Generated_Source\PSoC4/UART.c **** *
 105:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC4/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC4/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC4/UART.c **** 
 110:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC4/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/UART.c **** 
 117:Generated_Source\PSoC4/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/UART.c **** 
 123:Generated_Source\PSoC4/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 7122     		movs	r2, #113
  35 0002 074B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC4/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 0023     		movs	r3, #0
  39 0008 064A     		ldr	r2, .L2+4
  40 000a 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC4/UART.c **** 
 129:Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/UART.c ****             /* Set TX interrupt vector and priority */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 4


 132:Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/UART.c **** 
 136:Generated_Source\PSoC4/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  41              		.loc 1 138 0
  42 000c 0621     		movs	r1, #6
  43 000e 064A     		ldr	r2, .L2+8
  44 0010 1170     		strb	r1, [r2]
 139:Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  45              		.loc 1 139 0
  46 0012 4131     		adds	r1, r1, #65
  47 0014 054A     		ldr	r2, .L2+12
  48 0016 1170     		strb	r1, [r2]
 140:Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/UART.c ****         #else
 142:Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/UART.c **** 
 146:Generated_Source\PSoC4/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/UART.c ****         #else
 150:Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  49              		.loc 1 150 0
  50 0018 054A     		ldr	r2, .L2+16
  51 001a 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC4/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/UART.c **** 
 153:Generated_Source\PSoC4/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC4/UART.c **** 
 155:Generated_Source\PSoC4/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC4/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/UART.c **** }
  52              		.loc 1 160 0
  53              		@ sp needed
  54 001c 7047     		bx	lr
  55              	.L3:
  56 001e C046     		.align	2
  57              	.L2:
  58 0020 82000F40 		.word	1074724994
  59 0024 81000F40 		.word	1074724993
  60 0028 23000F40 		.word	1074724899
  61 002c 33000F40 		.word	1074724915
  62 0030 80000F40 		.word	1074724992
  63              		.cfi_endproc
  64              	.LFE1:
  65              		.size	UART_Init, .-UART_Init
  66              		.section	.text.UART_Enable,"ax",%progbits
  67              		.align	2
  68              		.global	UART_Enable
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 5


  69              		.code	16
  70              		.thumb_func
  71              		.type	UART_Enable, %function
  72              	UART_Enable:
  73              	.LFB2:
 161:Generated_Source\PSoC4/UART.c **** 
 162:Generated_Source\PSoC4/UART.c **** 
 163:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC4/UART.c **** *
 167:Generated_Source\PSoC4/UART.c **** * Summary:
 168:Generated_Source\PSoC4/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC4/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/UART.c **** *  operation.
 172:Generated_Source\PSoC4/UART.c **** 
 173:Generated_Source\PSoC4/UART.c **** * Parameters:
 174:Generated_Source\PSoC4/UART.c **** *  None.
 175:Generated_Source\PSoC4/UART.c **** *
 176:Generated_Source\PSoC4/UART.c **** * Return:
 177:Generated_Source\PSoC4/UART.c **** *  None.
 178:Generated_Source\PSoC4/UART.c **** *
 179:Generated_Source\PSoC4/UART.c **** * Global Variables:
 180:Generated_Source\PSoC4/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/UART.c **** *
 182:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC4/UART.c **** {
  74              		.loc 1 184 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 10B5     		push	{r4, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
 185:Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  82              		.loc 1 186 0
  83 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  84              	.LVL0:
  85 0006 0400     		movs	r4, r0
  86              	.LVL1:
 187:Generated_Source\PSoC4/UART.c **** 
 188:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC4/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  87              		.loc 1 190 0
  88 0008 0B4A     		ldr	r2, .L5
  89 000a 1178     		ldrb	r1, [r2]
  90 000c 2023     		movs	r3, #32
  91 000e 0B43     		orrs	r3, r1
  92 0010 DBB2     		uxtb	r3, r3
  93 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/UART.c **** 
 192:Generated_Source\PSoC4/UART.c ****         /* Enable the RX Interrupt */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 6


 193:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  94              		.loc 1 193 0
  95 0014 0949     		ldr	r1, .L5+4
  96 0016 0A78     		ldrb	r2, [r1]
  97 0018 1023     		movs	r3, #16
  98 001a 1A43     		orrs	r2, r3
  99 001c D2B2     		uxtb	r2, r2
 100 001e 0A70     		strb	r2, [r1]
 194:Generated_Source\PSoC4/UART.c **** 
 195:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC4/UART.c **** 
 198:Generated_Source\PSoC4/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC4/UART.c **** 
 204:Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC4/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/UART.c **** 
 210:Generated_Source\PSoC4/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 101              		.loc 1 211 0
 102 0020 074A     		ldr	r2, .L5+8
 103 0022 1178     		ldrb	r1, [r2]
 104 0024 0B43     		orrs	r3, r1
 105 0026 DBB2     		uxtb	r3, r3
 106 0028 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/UART.c **** 
 218:Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 107              		.loc 1 219 0
 108 002a FFF7FEFF 		bl	UART_IntClock_Start
 109              	.LVL2:
 220:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/UART.c **** 
 222:Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 110              		.loc 1 222 0
 111 002e 2000     		movs	r0, r4
 112 0030 FFF7FEFF 		bl	CyExitCriticalSection
 113              	.LVL3:
 223:Generated_Source\PSoC4/UART.c **** }
 114              		.loc 1 223 0
 115              		@ sp needed
 116              	.LVL4:
 117 0034 10BD     		pop	{r4, pc}
 118              	.L6:
 119 0036 C046     		.align	2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 7


 120              	.L5:
 121 0038 92000F40 		.word	1074725010
 122 003c 91000F40 		.word	1074725009
 123 0040 90000F40 		.word	1074725008
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	UART_Enable, .-UART_Enable
 127              		.section	.text.UART_Start,"ax",%progbits
 128              		.align	2
 129              		.global	UART_Start
 130              		.code	16
 131              		.thumb_func
 132              		.type	UART_Start, %function
 133              	UART_Start:
 134              	.LFB0:
  77:Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
 135              		.loc 1 77 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
  79:Generated_Source\PSoC4/UART.c ****     {
 143              		.loc 1 79 0
 144 0002 064B     		ldr	r3, .L9
 145 0004 1B78     		ldrb	r3, [r3]
 146 0006 002B     		cmp	r3, #0
 147 0008 04D1     		bne	.L8
  81:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
 148              		.loc 1 81 0
 149 000a FFF7FEFF 		bl	UART_Init
 150              	.LVL5:
  82:Generated_Source\PSoC4/UART.c ****     }
 151              		.loc 1 82 0
 152 000e 0122     		movs	r2, #1
 153 0010 024B     		ldr	r3, .L9
 154 0012 1A70     		strb	r2, [r3]
 155              	.L8:
  85:Generated_Source\PSoC4/UART.c **** }
 156              		.loc 1 85 0
 157 0014 FFF7FEFF 		bl	UART_Enable
 158              	.LVL6:
  86:Generated_Source\PSoC4/UART.c **** 
 159              		.loc 1 86 0
 160              		@ sp needed
 161 0018 10BD     		pop	{r4, pc}
 162              	.L10:
 163 001a C046     		.align	2
 164              	.L9:
 165 001c 00000000 		.word	.LANCHOR0
 166              		.cfi_endproc
 167              	.LFE0:
 168              		.size	UART_Start, .-UART_Start
 169              		.section	.text.UART_Stop,"ax",%progbits
 170              		.align	2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 8


 171              		.global	UART_Stop
 172              		.code	16
 173              		.thumb_func
 174              		.type	UART_Stop, %function
 175              	UART_Stop:
 176              	.LFB3:
 224:Generated_Source\PSoC4/UART.c **** 
 225:Generated_Source\PSoC4/UART.c **** 
 226:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC4/UART.c **** *
 230:Generated_Source\PSoC4/UART.c **** * Summary:
 231:Generated_Source\PSoC4/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/UART.c **** *
 233:Generated_Source\PSoC4/UART.c **** * Parameters:
 234:Generated_Source\PSoC4/UART.c **** *  None.
 235:Generated_Source\PSoC4/UART.c **** *
 236:Generated_Source\PSoC4/UART.c **** * Return:
 237:Generated_Source\PSoC4/UART.c **** *  None.
 238:Generated_Source\PSoC4/UART.c **** *
 239:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC4/UART.c **** {
 177              		.loc 1 241 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 10B5     		push	{r4, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 185              		.loc 1 243 0
 186 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 187              	.LVL7:
 188 0006 0400     		movs	r4, r0
 189              	.LVL8:
 244:Generated_Source\PSoC4/UART.c **** 
 245:Generated_Source\PSoC4/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 190              		.loc 1 247 0
 191 0008 094A     		ldr	r2, .L12
 192 000a 1378     		ldrb	r3, [r2]
 193 000c 2021     		movs	r1, #32
 194 000e 8B43     		bics	r3, r1
 195 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC4/UART.c **** 
 250:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC4/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 9


 256:Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 196              		.loc 1 257 0
 197 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 198              	.LVL9:
 258:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/UART.c **** 
 260:Generated_Source\PSoC4/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 199              		.loc 1 262 0
 200 0016 074A     		ldr	r2, .L12+4
 201 0018 1378     		ldrb	r3, [r2]
 202 001a 1021     		movs	r1, #16
 203 001c 8B43     		bics	r3, r1
 204 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC4/UART.c **** 
 264:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC4/UART.c **** 
 269:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 205              		.loc 1 270 0
 206 0020 054A     		ldr	r2, .L12+8
 207 0022 1378     		ldrb	r3, [r2]
 208 0024 8B43     		bics	r3, r1
 209 0026 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC4/UART.c **** 
 272:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC4/UART.c **** 
 277:Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 210              		.loc 1 277 0
 211 0028 2000     		movs	r0, r4
 212 002a FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL10:
 278:Generated_Source\PSoC4/UART.c **** }
 214              		.loc 1 278 0
 215              		@ sp needed
 216              	.LVL11:
 217 002e 10BD     		pop	{r4, pc}
 218              	.L13:
 219              		.align	2
 220              	.L12:
 221 0030 92000F40 		.word	1074725010
 222 0034 91000F40 		.word	1074725009
 223 0038 90000F40 		.word	1074725008
 224              		.cfi_endproc
 225              	.LFE3:
 226              		.size	UART_Stop, .-UART_Stop
 227              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 228              		.align	2
 229              		.global	UART_ReadControlRegister
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 10


 230              		.code	16
 231              		.thumb_func
 232              		.type	UART_ReadControlRegister, %function
 233              	UART_ReadControlRegister:
 234              	.LFB4:
 279:Generated_Source\PSoC4/UART.c **** 
 280:Generated_Source\PSoC4/UART.c **** 
 281:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC4/UART.c **** *
 285:Generated_Source\PSoC4/UART.c **** * Summary:
 286:Generated_Source\PSoC4/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/UART.c **** *
 288:Generated_Source\PSoC4/UART.c **** * Parameters:
 289:Generated_Source\PSoC4/UART.c **** *  None.
 290:Generated_Source\PSoC4/UART.c **** *
 291:Generated_Source\PSoC4/UART.c **** * Return:
 292:Generated_Source\PSoC4/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/UART.c **** *
 294:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/UART.c **** {
 235              		.loc 1 296 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 297:Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/UART.c ****         return(0u);
 299:Generated_Source\PSoC4/UART.c ****     #else
 300:Generated_Source\PSoC4/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/UART.c **** }
 240              		.loc 1 302 0
 241 0000 0020     		movs	r0, #0
 242              		@ sp needed
 243 0002 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE4:
 246              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 247              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 248              		.align	2
 249              		.global	UART_WriteControlRegister
 250              		.code	16
 251              		.thumb_func
 252              		.type	UART_WriteControlRegister, %function
 253              	UART_WriteControlRegister:
 254              	.LFB5:
 303:Generated_Source\PSoC4/UART.c **** 
 304:Generated_Source\PSoC4/UART.c **** 
 305:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC4/UART.c **** *
 309:Generated_Source\PSoC4/UART.c **** * Summary:
 310:Generated_Source\PSoC4/UART.c **** *  Writes an 8-bit value into the control register
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 11


 311:Generated_Source\PSoC4/UART.c **** *
 312:Generated_Source\PSoC4/UART.c **** * Parameters:
 313:Generated_Source\PSoC4/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC4/UART.c **** *
 315:Generated_Source\PSoC4/UART.c **** * Return:
 316:Generated_Source\PSoC4/UART.c **** *  None.
 317:Generated_Source\PSoC4/UART.c **** *
 318:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/UART.c **** {
 255              		.loc 1 320 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260              	.LVL12:
 321:Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC4/UART.c ****         {
 324:Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/UART.c ****         }
 326:Generated_Source\PSoC4/UART.c ****     #else
 327:Generated_Source\PSoC4/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/UART.c **** }
 261              		.loc 1 329 0
 262              		@ sp needed
 263 0000 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE5:
 266              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 267 0002 C046     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 268              		.align	2
 269              		.global	UART_SetRxInterruptMode
 270              		.code	16
 271              		.thumb_func
 272              		.type	UART_SetRxInterruptMode, %function
 273              	UART_SetRxInterruptMode:
 274              	.LFB6:
 330:Generated_Source\PSoC4/UART.c **** 
 331:Generated_Source\PSoC4/UART.c **** 
 332:Generated_Source\PSoC4/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/UART.c ****     *
 337:Generated_Source\PSoC4/UART.c ****     * Summary:
 338:Generated_Source\PSoC4/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/UART.c ****     *
 340:Generated_Source\PSoC4/UART.c ****     * Parameters:
 341:Generated_Source\PSoC4/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 12


 348:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/UART.c ****     *
 352:Generated_Source\PSoC4/UART.c ****     * Return:
 353:Generated_Source\PSoC4/UART.c ****     *  None.
 354:Generated_Source\PSoC4/UART.c ****     *
 355:Generated_Source\PSoC4/UART.c ****     * Theory:
 356:Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/UART.c ****     *
 358:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/UART.c ****     {
 275              		.loc 1 360 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280              	.LVL13:
 361:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 281              		.loc 1 361 0
 282 0000 014B     		ldr	r3, .L17
 283 0002 1870     		strb	r0, [r3]
 362:Generated_Source\PSoC4/UART.c ****     }
 284              		.loc 1 362 0
 285              		@ sp needed
 286 0004 7047     		bx	lr
 287              	.L18:
 288 0006 C046     		.align	2
 289              	.L17:
 290 0008 81000F40 		.word	1074724993
 291              		.cfi_endproc
 292              	.LFE6:
 293              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 294              		.section	.text.UART_ReadRxData,"ax",%progbits
 295              		.align	2
 296              		.global	UART_ReadRxData
 297              		.code	16
 298              		.thumb_func
 299              		.type	UART_ReadRxData, %function
 300              	UART_ReadRxData:
 301              	.LFB7:
 363:Generated_Source\PSoC4/UART.c **** 
 364:Generated_Source\PSoC4/UART.c **** 
 365:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/UART.c ****     *
 369:Generated_Source\PSoC4/UART.c ****     * Summary:
 370:Generated_Source\PSoC4/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/UART.c ****     *
 373:Generated_Source\PSoC4/UART.c ****     * Parameters:
 374:Generated_Source\PSoC4/UART.c ****     *  None.
 375:Generated_Source\PSoC4/UART.c ****     *
 376:Generated_Source\PSoC4/UART.c ****     * Return:
 377:Generated_Source\PSoC4/UART.c ****     *  Received data from RX register
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 13


 378:Generated_Source\PSoC4/UART.c ****     *
 379:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/UART.c ****     *
 388:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC4/UART.c ****     *  No.
 390:Generated_Source\PSoC4/UART.c ****     *
 391:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC4/UART.c ****     {
 302              		.loc 1 393 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 394:Generated_Source\PSoC4/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/UART.c **** 
 396:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/UART.c **** 
 398:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/UART.c **** 
 401:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC4/UART.c **** 
 404:Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC4/UART.c **** 
 407:Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC4/UART.c ****         {
 409:Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC4/UART.c **** 
 412:Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC4/UART.c ****             {
 414:Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC4/UART.c ****             }
 416:Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC4/UART.c **** 
 419:Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC4/UART.c ****             {
 421:Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC4/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC4/UART.c ****                             */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 14


 430:Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/UART.c ****                         }
 432:Generated_Source\PSoC4/UART.c ****                     #else
 433:Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC4/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/UART.c ****             }
 437:Generated_Source\PSoC4/UART.c ****         }
 438:Generated_Source\PSoC4/UART.c ****         else
 439:Generated_Source\PSoC4/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC4/UART.c ****         }
 442:Generated_Source\PSoC4/UART.c **** 
 443:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC4/UART.c **** 
 445:Generated_Source\PSoC4/UART.c ****     #else
 446:Generated_Source\PSoC4/UART.c **** 
 447:Generated_Source\PSoC4/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/UART.c ****         rxData = UART_RXDATA_REG;
 307              		.loc 1 448 0
 308 0000 014B     		ldr	r3, .L20
 309 0002 1878     		ldrb	r0, [r3]
 310 0004 C0B2     		uxtb	r0, r0
 311              	.LVL14:
 449:Generated_Source\PSoC4/UART.c **** 
 450:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/UART.c **** 
 452:Generated_Source\PSoC4/UART.c ****         return(rxData);
 453:Generated_Source\PSoC4/UART.c ****     }
 312              		.loc 1 453 0
 313              		@ sp needed
 314 0006 7047     		bx	lr
 315              	.L21:
 316              		.align	2
 317              	.L20:
 318 0008 42000F40 		.word	1074724930
 319              		.cfi_endproc
 320              	.LFE7:
 321              		.size	UART_ReadRxData, .-UART_ReadRxData
 322              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 323              		.align	2
 324              		.global	UART_ReadRxStatus
 325              		.code	16
 326              		.thumb_func
 327              		.type	UART_ReadRxStatus, %function
 328              	UART_ReadRxStatus:
 329              	.LFB8:
 454:Generated_Source\PSoC4/UART.c **** 
 455:Generated_Source\PSoC4/UART.c **** 
 456:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/UART.c ****     *
 460:Generated_Source\PSoC4/UART.c ****     * Summary:
 461:Generated_Source\PSoC4/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 15


 464:Generated_Source\PSoC4/UART.c ****     * Parameters:
 465:Generated_Source\PSoC4/UART.c ****     *  None.
 466:Generated_Source\PSoC4/UART.c ****     *
 467:Generated_Source\PSoC4/UART.c ****     * Return:
 468:Generated_Source\PSoC4/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/UART.c ****     *
 470:Generated_Source\PSoC4/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC4/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/UART.c ****     *  register read.
 475:Generated_Source\PSoC4/UART.c ****     *
 476:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/UART.c ****     *   bits.
 483:Generated_Source\PSoC4/UART.c ****     *
 484:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/UART.c ****     {
 330              		.loc 1 486 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 487:Generated_Source\PSoC4/UART.c ****         uint8 status;
 488:Generated_Source\PSoC4/UART.c **** 
 489:Generated_Source\PSoC4/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 335              		.loc 1 489 0
 336 0000 024B     		ldr	r3, .L23
 337 0002 1878     		ldrb	r0, [r3]
 338 0004 7F23     		movs	r3, #127
 339 0006 1840     		ands	r0, r3
 340              	.LVL15:
 490:Generated_Source\PSoC4/UART.c **** 
 491:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC4/UART.c ****         {
 494:Generated_Source\PSoC4/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC4/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC4/UART.c ****         }
 497:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/UART.c **** 
 499:Generated_Source\PSoC4/UART.c ****         return(status);
 500:Generated_Source\PSoC4/UART.c ****     }
 341              		.loc 1 500 0
 342              		@ sp needed
 343 0008 7047     		bx	lr
 344              	.L24:
 345 000a C046     		.align	2
 346              	.L23:
 347 000c 61000F40 		.word	1074724961
 348              		.cfi_endproc
 349              	.LFE8:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 16


 350              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 351              		.section	.text.UART_GetChar,"ax",%progbits
 352              		.align	2
 353              		.global	UART_GetChar
 354              		.code	16
 355              		.thumb_func
 356              		.type	UART_GetChar, %function
 357              	UART_GetChar:
 358              	.LFB9:
 501:Generated_Source\PSoC4/UART.c **** 
 502:Generated_Source\PSoC4/UART.c **** 
 503:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/UART.c ****     *
 507:Generated_Source\PSoC4/UART.c ****     * Summary:
 508:Generated_Source\PSoC4/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC4/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/UART.c ****     *
 512:Generated_Source\PSoC4/UART.c ****     * Parameters:
 513:Generated_Source\PSoC4/UART.c ****     *  None.
 514:Generated_Source\PSoC4/UART.c ****     *
 515:Generated_Source\PSoC4/UART.c ****     * Return:
 516:Generated_Source\PSoC4/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/UART.c ****     *
 519:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/UART.c ****     *
 528:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC4/UART.c ****     *  No.
 530:Generated_Source\PSoC4/UART.c ****     *
 531:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC4/UART.c ****     {
 359              		.loc 1 533 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL16:
 534:Generated_Source\PSoC4/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC4/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/UART.c **** 
 537:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/UART.c **** 
 541:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 17


 543:Generated_Source\PSoC4/UART.c **** 
 544:Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC4/UART.c **** 
 547:Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC4/UART.c ****         {
 549:Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC4/UART.c ****             {
 553:Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC4/UART.c ****             }
 555:Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC4/UART.c **** 
 558:Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC4/UART.c ****             {
 560:Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC4/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/UART.c ****                             */
 569:Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/UART.c ****                         }
 571:Generated_Source\PSoC4/UART.c ****                     #else
 572:Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC4/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/UART.c ****             }
 576:Generated_Source\PSoC4/UART.c **** 
 577:Generated_Source\PSoC4/UART.c ****         }
 578:Generated_Source\PSoC4/UART.c ****         else
 579:Generated_Source\PSoC4/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC4/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC4/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC4/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC4/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/UART.c ****                 {
 587:Generated_Source\PSoC4/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC4/UART.c ****                 }
 589:Generated_Source\PSoC4/UART.c ****             }
 590:Generated_Source\PSoC4/UART.c ****         }
 591:Generated_Source\PSoC4/UART.c **** 
 592:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC4/UART.c **** 
 594:Generated_Source\PSoC4/UART.c ****     #else
 595:Generated_Source\PSoC4/UART.c **** 
 596:Generated_Source\PSoC4/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 365              		.loc 1 596 0
 366 0000 074B     		ldr	r3, .L29
 367 0002 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 18


 368 0004 DBB2     		uxtb	r3, r3
 369              	.LVL17:
 597:Generated_Source\PSoC4/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 370              		.loc 1 597 0
 371 0006 9A06     		lsls	r2, r3, #26
 372 0008 06D5     		bpl	.L27
 598:Generated_Source\PSoC4/UART.c ****         {
 599:Generated_Source\PSoC4/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 373              		.loc 1 600 0
 374 000a 064A     		ldr	r2, .L29+4
 375 000c 1078     		ldrb	r0, [r2]
 376 000e C0B2     		uxtb	r0, r0
 377              	.LVL18:
 601:Generated_Source\PSoC4/UART.c **** 
 602:Generated_Source\PSoC4/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 378              		.loc 1 603 0
 379 0010 1E22     		movs	r2, #30
 380 0012 1A42     		tst	r2, r3
 381 0014 02D1     		bne	.L28
 382 0016 02E0     		b	.L26
 383              	.LVL19:
 384              	.L27:
 534:Generated_Source\PSoC4/UART.c ****         uint8 rxStatus;
 385              		.loc 1 534 0
 386 0018 0020     		movs	r0, #0
 387 001a 00E0     		b	.L26
 388              	.LVL20:
 389              	.L28:
 604:Generated_Source\PSoC4/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/UART.c ****             {
 606:Generated_Source\PSoC4/UART.c ****                 rxData = 0u;
 390              		.loc 1 606 0
 391 001c 0020     		movs	r0, #0
 392              	.LVL21:
 393              	.L26:
 607:Generated_Source\PSoC4/UART.c ****             }
 608:Generated_Source\PSoC4/UART.c ****         }
 609:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/UART.c **** 
 611:Generated_Source\PSoC4/UART.c ****         return(rxData);
 612:Generated_Source\PSoC4/UART.c ****     }
 394              		.loc 1 612 0
 395              		@ sp needed
 396 001e 7047     		bx	lr
 397              	.L30:
 398              		.align	2
 399              	.L29:
 400 0020 61000F40 		.word	1074724961
 401 0024 42000F40 		.word	1074724930
 402              		.cfi_endproc
 403              	.LFE9:
 404              		.size	UART_GetChar, .-UART_GetChar
 405              		.section	.text.UART_GetByte,"ax",%progbits
 406              		.align	2
 407              		.global	UART_GetByte
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 19


 408              		.code	16
 409              		.thumb_func
 410              		.type	UART_GetByte, %function
 411              	UART_GetByte:
 412              	.LFB10:
 613:Generated_Source\PSoC4/UART.c **** 
 614:Generated_Source\PSoC4/UART.c **** 
 615:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/UART.c ****     *
 619:Generated_Source\PSoC4/UART.c ****     * Summary:
 620:Generated_Source\PSoC4/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/UART.c ****     *  condition.
 622:Generated_Source\PSoC4/UART.c ****     *
 623:Generated_Source\PSoC4/UART.c ****     * Parameters:
 624:Generated_Source\PSoC4/UART.c ****     *  None.
 625:Generated_Source\PSoC4/UART.c ****     *
 626:Generated_Source\PSoC4/UART.c ****     * Return:
 627:Generated_Source\PSoC4/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/UART.c ****     *
 630:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC4/UART.c ****     *  No.
 632:Generated_Source\PSoC4/UART.c ****     *
 633:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC4/UART.c ****     {
 413              		.loc 1 635 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 10B5     		push	{r4, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 636:Generated_Source\PSoC4/UART.c ****         
 637:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC4/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC4/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC4/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC4/UART.c ****     #else
 646:Generated_Source\PSoC4/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 421              		.loc 1 646 0
 422 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 423              	.LVL22:
 424 0006 0402     		lsls	r4, r0, #8
 425 0008 FFF7FEFF 		bl	UART_ReadRxData
 426              	.LVL23:
 427 000c 2043     		orrs	r0, r4
 428 000e 80B2     		uxth	r0, r0
 647:Generated_Source\PSoC4/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/UART.c ****         
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 20


 649:Generated_Source\PSoC4/UART.c ****     }
 429              		.loc 1 649 0
 430              		@ sp needed
 431 0010 10BD     		pop	{r4, pc}
 432              		.cfi_endproc
 433              	.LFE10:
 434              		.size	UART_GetByte, .-UART_GetByte
 435 0012 C046     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 436              		.align	2
 437              		.global	UART_GetRxBufferSize
 438              		.code	16
 439              		.thumb_func
 440              		.type	UART_GetRxBufferSize, %function
 441              	UART_GetRxBufferSize:
 442              	.LFB11:
 650:Generated_Source\PSoC4/UART.c **** 
 651:Generated_Source\PSoC4/UART.c **** 
 652:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/UART.c ****     *
 656:Generated_Source\PSoC4/UART.c ****     * Summary:
 657:Generated_Source\PSoC4/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/UART.c ****     *    account.
 663:Generated_Source\PSoC4/UART.c ****     *
 664:Generated_Source\PSoC4/UART.c ****     * Parameters:
 665:Generated_Source\PSoC4/UART.c ****     *  None.
 666:Generated_Source\PSoC4/UART.c ****     *
 667:Generated_Source\PSoC4/UART.c ****     * Return:
 668:Generated_Source\PSoC4/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC4/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/UART.c ****     *
 671:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/UART.c ****     *
 676:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC4/UART.c ****     *  No.
 678:Generated_Source\PSoC4/UART.c ****     *
 679:Generated_Source\PSoC4/UART.c ****     * Theory:
 680:Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/UART.c ****     *
 682:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/UART.c ****                                                             
 685:Generated_Source\PSoC4/UART.c ****     {
 443              		.loc 1 685 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 686:Generated_Source\PSoC4/UART.c ****         uint8 size;
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 21


 687:Generated_Source\PSoC4/UART.c **** 
 688:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/UART.c **** 
 690:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC4/UART.c **** 
 693:Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC4/UART.c ****         {
 695:Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC4/UART.c ****             {
 697:Generated_Source\PSoC4/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC4/UART.c ****             }
 699:Generated_Source\PSoC4/UART.c ****             else
 700:Generated_Source\PSoC4/UART.c ****             {
 701:Generated_Source\PSoC4/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC4/UART.c ****             }
 703:Generated_Source\PSoC4/UART.c ****         }
 704:Generated_Source\PSoC4/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC4/UART.c ****         {
 706:Generated_Source\PSoC4/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC4/UART.c ****         }
 708:Generated_Source\PSoC4/UART.c ****         else
 709:Generated_Source\PSoC4/UART.c ****         {
 710:Generated_Source\PSoC4/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC4/UART.c ****         }
 712:Generated_Source\PSoC4/UART.c **** 
 713:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC4/UART.c **** 
 715:Generated_Source\PSoC4/UART.c ****     #else
 716:Generated_Source\PSoC4/UART.c **** 
 717:Generated_Source\PSoC4/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 448              		.loc 1 718 0
 449 0000 034B     		ldr	r3, .L35
 450 0002 1B78     		ldrb	r3, [r3]
 451 0004 9B06     		lsls	r3, r3, #26
 452 0006 01D5     		bpl	.L34
 453 0008 0120     		movs	r0, #1
 454 000a 00E0     		b	.L33
 455              	.L34:
 456 000c 0020     		movs	r0, #0
 457              	.L33:
 458              	.LVL24:
 719:Generated_Source\PSoC4/UART.c **** 
 720:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/UART.c **** 
 722:Generated_Source\PSoC4/UART.c ****         return(size);
 723:Generated_Source\PSoC4/UART.c ****     }
 459              		.loc 1 723 0 discriminator 4
 460              		@ sp needed
 461 000e 7047     		bx	lr
 462              	.L36:
 463              		.align	2
 464              	.L35:
 465 0010 61000F40 		.word	1074724961
 466              		.cfi_endproc
 467              	.LFE11:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 22


 468              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 469              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 470              		.align	2
 471              		.global	UART_ClearRxBuffer
 472              		.code	16
 473              		.thumb_func
 474              		.type	UART_ClearRxBuffer, %function
 475              	UART_ClearRxBuffer:
 476              	.LFB12:
 724:Generated_Source\PSoC4/UART.c **** 
 725:Generated_Source\PSoC4/UART.c **** 
 726:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/UART.c ****     *
 730:Generated_Source\PSoC4/UART.c ****     * Summary:
 731:Generated_Source\PSoC4/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/UART.c ****     *
 733:Generated_Source\PSoC4/UART.c ****     * Parameters:
 734:Generated_Source\PSoC4/UART.c ****     *  None.
 735:Generated_Source\PSoC4/UART.c ****     *
 736:Generated_Source\PSoC4/UART.c ****     * Return:
 737:Generated_Source\PSoC4/UART.c ****     *  None.
 738:Generated_Source\PSoC4/UART.c ****     *
 739:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/UART.c ****     *
 745:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC4/UART.c ****     *  No.
 747:Generated_Source\PSoC4/UART.c ****     *
 748:Generated_Source\PSoC4/UART.c ****     * Theory:
 749:Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/UART.c ****     *
 753:Generated_Source\PSoC4/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC4/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/UART.c ****     *
 756:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/UART.c ****     {
 477              		.loc 1 758 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481 0000 10B5     		push	{r4, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 4, -8
 484              		.cfi_offset 14, -4
 759:Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/UART.c **** 
 761:Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 485              		.loc 1 762 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 23


 486 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 487              	.LVL25:
 763:Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 488              		.loc 1 763 0
 489 0006 064A     		ldr	r2, .L38
 490 0008 1178     		ldrb	r1, [r2]
 491 000a 0123     		movs	r3, #1
 492 000c 0B43     		orrs	r3, r1
 493 000e DBB2     		uxtb	r3, r3
 494 0010 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 495              		.loc 1 764 0
 496 0012 1378     		ldrb	r3, [r2]
 497 0014 0121     		movs	r1, #1
 498 0016 8B43     		bics	r3, r1
 499 0018 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 500              		.loc 1 765 0
 501 001a FFF7FEFF 		bl	CyExitCriticalSection
 502              	.LVL26:
 766:Generated_Source\PSoC4/UART.c **** 
 767:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/UART.c **** 
 769:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC4/UART.c **** 
 772:Generated_Source\PSoC4/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC4/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC4/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC4/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC4/UART.c **** 
 777:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC4/UART.c **** 
 779:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/UART.c **** 
 781:Generated_Source\PSoC4/UART.c ****     }
 503              		.loc 1 781 0
 504              		@ sp needed
 505 001e 10BD     		pop	{r4, pc}
 506              	.L39:
 507              		.align	2
 508              	.L38:
 509 0020 92000F40 		.word	1074725010
 510              		.cfi_endproc
 511              	.LFE12:
 512              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 513              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 514              		.align	2
 515              		.global	UART_SetRxAddressMode
 516              		.code	16
 517              		.thumb_func
 518              		.type	UART_SetRxAddressMode, %function
 519              	UART_SetRxAddressMode:
 520              	.LFB13:
 782:Generated_Source\PSoC4/UART.c **** 
 783:Generated_Source\PSoC4/UART.c **** 
 784:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 24


 785:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/UART.c ****     *
 788:Generated_Source\PSoC4/UART.c ****     * Summary:
 789:Generated_Source\PSoC4/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/UART.c ****     *  UART.
 791:Generated_Source\PSoC4/UART.c ****     *
 792:Generated_Source\PSoC4/UART.c ****     * Parameters:
 793:Generated_Source\PSoC4/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/UART.c ****     *                                               detection
 796:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/UART.c ****     *                                               detection
 800:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/UART.c ****     *
 804:Generated_Source\PSoC4/UART.c ****     * Return:
 805:Generated_Source\PSoC4/UART.c ****     *  None.
 806:Generated_Source\PSoC4/UART.c ****     *
 807:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/UART.c ****     *
 812:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/UART.c ****                                                         
 815:Generated_Source\PSoC4/UART.c ****     {
 521              		.loc 1 815 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL27:
 816:Generated_Source\PSoC4/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/UART.c ****                 {
 820:Generated_Source\PSoC4/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/UART.c ****                 }
 822:Generated_Source\PSoC4/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/UART.c **** 
 828:Generated_Source\PSoC4/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/UART.c ****             if(0u != addressMode)
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 25


 836:Generated_Source\PSoC4/UART.c ****             {
 837:Generated_Source\PSoC4/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/UART.c ****             }
 839:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/UART.c ****     }
 527              		.loc 1 840 0
 528              		@ sp needed
 529 0000 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE13:
 532              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 533 0002 C046     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 534              		.align	2
 535              		.global	UART_SetRxAddress1
 536              		.code	16
 537              		.thumb_func
 538              		.type	UART_SetRxAddress1, %function
 539              	UART_SetRxAddress1:
 540              	.LFB14:
 841:Generated_Source\PSoC4/UART.c **** 
 842:Generated_Source\PSoC4/UART.c **** 
 843:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/UART.c ****     *
 847:Generated_Source\PSoC4/UART.c ****     * Summary:
 848:Generated_Source\PSoC4/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/UART.c ****     *
 850:Generated_Source\PSoC4/UART.c ****     * Parameters:
 851:Generated_Source\PSoC4/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/UART.c ****     *
 853:Generated_Source\PSoC4/UART.c ****     * Return:
 854:Generated_Source\PSoC4/UART.c ****     *  None.
 855:Generated_Source\PSoC4/UART.c ****     *
 856:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/UART.c ****     {
 541              		.loc 1 858 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546              	.LVL28:
 859:Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS1_REG = address;
 547              		.loc 1 859 0
 548 0000 014B     		ldr	r3, .L42
 549 0002 1870     		strb	r0, [r3]
 860:Generated_Source\PSoC4/UART.c ****     }
 550              		.loc 1 860 0
 551              		@ sp needed
 552 0004 7047     		bx	lr
 553              	.L43:
 554 0006 C046     		.align	2
 555              	.L42:
 556 0008 22000F40 		.word	1074724898
 557              		.cfi_endproc
 558              	.LFE14:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 26


 559              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 560              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 561              		.align	2
 562              		.global	UART_SetRxAddress2
 563              		.code	16
 564              		.thumb_func
 565              		.type	UART_SetRxAddress2, %function
 566              	UART_SetRxAddress2:
 567              	.LFB15:
 861:Generated_Source\PSoC4/UART.c **** 
 862:Generated_Source\PSoC4/UART.c **** 
 863:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/UART.c ****     *
 867:Generated_Source\PSoC4/UART.c ****     * Summary:
 868:Generated_Source\PSoC4/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/UART.c ****     *
 870:Generated_Source\PSoC4/UART.c ****     * Parameters:
 871:Generated_Source\PSoC4/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/UART.c ****     *
 873:Generated_Source\PSoC4/UART.c ****     * Return:
 874:Generated_Source\PSoC4/UART.c ****     *  None.
 875:Generated_Source\PSoC4/UART.c ****     *
 876:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/UART.c ****     {
 568              		.loc 1 878 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573              	.LVL29:
 879:Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS2_REG = address;
 574              		.loc 1 879 0
 575 0000 014B     		ldr	r3, .L45
 576 0002 1870     		strb	r0, [r3]
 880:Generated_Source\PSoC4/UART.c ****     }
 577              		.loc 1 880 0
 578              		@ sp needed
 579 0004 7047     		bx	lr
 580              	.L46:
 581 0006 C046     		.align	2
 582              	.L45:
 583 0008 32000F40 		.word	1074724914
 584              		.cfi_endproc
 585              	.LFE15:
 586              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 587              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 588              		.align	2
 589              		.global	UART_SetTxInterruptMode
 590              		.code	16
 591              		.thumb_func
 592              		.type	UART_SetTxInterruptMode, %function
 593              	UART_SetTxInterruptMode:
 594              	.LFB16:
 881:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 27


 882:Generated_Source\PSoC4/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC4/UART.c **** 
 884:Generated_Source\PSoC4/UART.c **** 
 885:Generated_Source\PSoC4/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC4/UART.c ****     *
 890:Generated_Source\PSoC4/UART.c ****     * Summary:
 891:Generated_Source\PSoC4/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC4/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC4/UART.c ****     *
 894:Generated_Source\PSoC4/UART.c ****     * Parameters:
 895:Generated_Source\PSoC4/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC4/UART.c ****     *
 901:Generated_Source\PSoC4/UART.c ****     * Return:
 902:Generated_Source\PSoC4/UART.c ****     *  None.
 903:Generated_Source\PSoC4/UART.c ****     *
 904:Generated_Source\PSoC4/UART.c ****     * Theory:
 905:Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC4/UART.c ****     *
 907:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC4/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC4/UART.c ****     {
 595              		.loc 1 909 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL30:
 910:Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 601              		.loc 1 910 0
 602 0000 014B     		ldr	r3, .L48
 603 0002 1870     		strb	r0, [r3]
 911:Generated_Source\PSoC4/UART.c ****     }
 604              		.loc 1 911 0
 605              		@ sp needed
 606 0004 7047     		bx	lr
 607              	.L49:
 608 0006 C046     		.align	2
 609              	.L48:
 610 0008 80000F40 		.word	1074724992
 611              		.cfi_endproc
 612              	.LFE16:
 613              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 614              		.section	.text.UART_WriteTxData,"ax",%progbits
 615              		.align	2
 616              		.global	UART_WriteTxData
 617              		.code	16
 618              		.thumb_func
 619              		.type	UART_WriteTxData, %function
 620              	UART_WriteTxData:
 621              	.LFB17:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 28


 912:Generated_Source\PSoC4/UART.c **** 
 913:Generated_Source\PSoC4/UART.c **** 
 914:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC4/UART.c ****     *
 918:Generated_Source\PSoC4/UART.c ****     * Summary:
 919:Generated_Source\PSoC4/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC4/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC4/UART.c ****     *  separately.
 922:Generated_Source\PSoC4/UART.c ****     *
 923:Generated_Source\PSoC4/UART.c ****     * Parameters:
 924:Generated_Source\PSoC4/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC4/UART.c ****     *
 926:Generated_Source\PSoC4/UART.c ****     * Return:
 927:Generated_Source\PSoC4/UART.c ****     * None.
 928:Generated_Source\PSoC4/UART.c ****     *
 929:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC4/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC4/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC4/UART.c ****     *    initialized.
 937:Generated_Source\PSoC4/UART.c ****     *
 938:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC4/UART.c ****     *  No.
 940:Generated_Source\PSoC4/UART.c ****     *
 941:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC4/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC4/UART.c ****     {
 622              		.loc 1 943 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL31:
 944:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 628              		.loc 1 945 0
 629 0000 034B     		ldr	r3, .L52
 630 0002 1B78     		ldrb	r3, [r3]
 631 0004 002B     		cmp	r3, #0
 632 0006 01D0     		beq	.L50
 946:Generated_Source\PSoC4/UART.c ****         {
 947:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC4/UART.c **** 
 949:Generated_Source\PSoC4/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC4/UART.c **** 
 952:Generated_Source\PSoC4/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC4/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC4/UART.c ****             {
 955:Generated_Source\PSoC4/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC4/UART.c ****             }
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 29


 958:Generated_Source\PSoC4/UART.c ****             else
 959:Generated_Source\PSoC4/UART.c ****             {
 960:Generated_Source\PSoC4/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC4/UART.c ****                 {
 962:Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/UART.c ****                 }
 964:Generated_Source\PSoC4/UART.c **** 
 965:Generated_Source\PSoC4/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC4/UART.c **** 
 967:Generated_Source\PSoC4/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC4/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC4/UART.c ****             }
 970:Generated_Source\PSoC4/UART.c **** 
 971:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC4/UART.c **** 
 973:Generated_Source\PSoC4/UART.c ****         #else
 974:Generated_Source\PSoC4/UART.c **** 
 975:Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
 633              		.loc 1 976 0
 634 0008 024B     		ldr	r3, .L52+4
 635 000a 1870     		strb	r0, [r3]
 636              	.L50:
 977:Generated_Source\PSoC4/UART.c **** 
 978:Generated_Source\PSoC4/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC4/UART.c ****         }
 980:Generated_Source\PSoC4/UART.c ****     }
 637              		.loc 1 980 0
 638              		@ sp needed
 639 000c 7047     		bx	lr
 640              	.L53:
 641 000e C046     		.align	2
 642              	.L52:
 643 0010 00000000 		.word	.LANCHOR0
 644 0014 40000F40 		.word	1074724928
 645              		.cfi_endproc
 646              	.LFE17:
 647              		.size	UART_WriteTxData, .-UART_WriteTxData
 648              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 649              		.align	2
 650              		.global	UART_ReadTxStatus
 651              		.code	16
 652              		.thumb_func
 653              		.type	UART_ReadTxStatus, %function
 654              	UART_ReadTxStatus:
 655              	.LFB18:
 981:Generated_Source\PSoC4/UART.c **** 
 982:Generated_Source\PSoC4/UART.c **** 
 983:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC4/UART.c ****     *
 987:Generated_Source\PSoC4/UART.c ****     * Summary:
 988:Generated_Source\PSoC4/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC4/UART.c ****     *
 990:Generated_Source\PSoC4/UART.c ****     * Parameters:
 991:Generated_Source\PSoC4/UART.c ****     *  None.
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 30


 992:Generated_Source\PSoC4/UART.c ****     *
 993:Generated_Source\PSoC4/UART.c ****     * Return:
 994:Generated_Source\PSoC4/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC4/UART.c ****     *
 996:Generated_Source\PSoC4/UART.c ****     * Theory:
 997:Generated_Source\PSoC4/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC4/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC4/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC4/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC4/UART.c ****     *
1002:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC4/UART.c ****     {
 656              		.loc 1 1004 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
1005:Generated_Source\PSoC4/UART.c ****         return(UART_TXSTATUS_REG);
 661              		.loc 1 1005 0
 662 0000 014B     		ldr	r3, .L55
 663 0002 1878     		ldrb	r0, [r3]
 664 0004 C0B2     		uxtb	r0, r0
1006:Generated_Source\PSoC4/UART.c ****     }
 665              		.loc 1 1006 0
 666              		@ sp needed
 667 0006 7047     		bx	lr
 668              	.L56:
 669              		.align	2
 670              	.L55:
 671 0008 60000F40 		.word	1074724960
 672              		.cfi_endproc
 673              	.LFE18:
 674              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 675              		.section	.text.UART_PutChar,"ax",%progbits
 676              		.align	2
 677              		.global	UART_PutChar
 678              		.code	16
 679              		.thumb_func
 680              		.type	UART_PutChar, %function
 681              	UART_PutChar:
 682              	.LFB19:
1007:Generated_Source\PSoC4/UART.c **** 
1008:Generated_Source\PSoC4/UART.c **** 
1009:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/UART.c ****     *
1013:Generated_Source\PSoC4/UART.c ****     * Summary:
1014:Generated_Source\PSoC4/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC4/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC4/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC4/UART.c ****     *
1018:Generated_Source\PSoC4/UART.c ****     * Parameters:
1019:Generated_Source\PSoC4/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC4/UART.c ****     *
1021:Generated_Source\PSoC4/UART.c ****     * Return:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 31


1022:Generated_Source\PSoC4/UART.c ****     *  None.
1023:Generated_Source\PSoC4/UART.c ****     *
1024:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC4/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC4/UART.c ****     *     initialized.
1033:Generated_Source\PSoC4/UART.c ****     *
1034:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC4/UART.c ****     *  No.
1036:Generated_Source\PSoC4/UART.c ****     *
1037:Generated_Source\PSoC4/UART.c ****     * Theory:
1038:Generated_Source\PSoC4/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC4/UART.c ****     *
1040:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC4/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC4/UART.c ****     {
 683              		.loc 1 1042 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              	.LVL32:
 689              	.L58:
1043:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC4/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC4/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC4/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC4/UART.c ****         */
1048:Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC4/UART.c **** 
1051:Generated_Source\PSoC4/UART.c ****         do
1052:Generated_Source\PSoC4/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC4/UART.c **** 
1054:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC4/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC4/UART.c **** 
1059:Generated_Source\PSoC4/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC4/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC4/UART.c **** 
1062:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC4/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC4/UART.c ****         }
1067:Generated_Source\PSoC4/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC4/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC4/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC4/UART.c **** 
1071:Generated_Source\PSoC4/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 32


1072:Generated_Source\PSoC4/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC4/UART.c ****         {
1074:Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC4/UART.c ****         }
1077:Generated_Source\PSoC4/UART.c ****         else
1078:Generated_Source\PSoC4/UART.c ****         {
1079:Generated_Source\PSoC4/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC4/UART.c ****             {
1081:Generated_Source\PSoC4/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC4/UART.c ****             }
1083:Generated_Source\PSoC4/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC4/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC4/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC4/UART.c **** 
1087:Generated_Source\PSoC4/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC4/UART.c **** 
1092:Generated_Source\PSoC4/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC4/UART.c **** 
1094:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC4/UART.c **** 
1098:Generated_Source\PSoC4/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC4/UART.c ****             {
1100:Generated_Source\PSoC4/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC4/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC4/UART.c ****             }
1103:Generated_Source\PSoC4/UART.c ****         }
1104:Generated_Source\PSoC4/UART.c **** 
1105:Generated_Source\PSoC4/UART.c ****     #else
1106:Generated_Source\PSoC4/UART.c **** 
1107:Generated_Source\PSoC4/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 690              		.loc 1 1107 0 discriminator 1
 691 0000 034B     		ldr	r3, .L59
 692 0002 1B78     		ldrb	r3, [r3]
 693 0004 5B07     		lsls	r3, r3, #29
 694 0006 FBD4     		bmi	.L58
1108:Generated_Source\PSoC4/UART.c ****         {
1109:Generated_Source\PSoC4/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC4/UART.c ****         }
1111:Generated_Source\PSoC4/UART.c **** 
1112:Generated_Source\PSoC4/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC4/UART.c ****         UART_TXDATA_REG = txDataByte;
 695              		.loc 1 1113 0
 696 0008 024B     		ldr	r3, .L59+4
 697 000a 1870     		strb	r0, [r3]
1114:Generated_Source\PSoC4/UART.c **** 
1115:Generated_Source\PSoC4/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC4/UART.c ****     }
 698              		.loc 1 1116 0
 699              		@ sp needed
 700 000c 7047     		bx	lr
 701              	.L60:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 33


 702 000e C046     		.align	2
 703              	.L59:
 704 0010 60000F40 		.word	1074724960
 705 0014 40000F40 		.word	1074724928
 706              		.cfi_endproc
 707              	.LFE19:
 708              		.size	UART_PutChar, .-UART_PutChar
 709              		.section	.text.UART_PutString,"ax",%progbits
 710              		.align	2
 711              		.global	UART_PutString
 712              		.code	16
 713              		.thumb_func
 714              		.type	UART_PutString, %function
 715              	UART_PutString:
 716              	.LFB20:
1117:Generated_Source\PSoC4/UART.c **** 
1118:Generated_Source\PSoC4/UART.c **** 
1119:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC4/UART.c ****     *
1123:Generated_Source\PSoC4/UART.c ****     * Summary:
1124:Generated_Source\PSoC4/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC4/UART.c ****     *
1126:Generated_Source\PSoC4/UART.c ****     * Parameters:
1127:Generated_Source\PSoC4/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC4/UART.c ****     *
1129:Generated_Source\PSoC4/UART.c ****     * Return:
1130:Generated_Source\PSoC4/UART.c ****     *  None.
1131:Generated_Source\PSoC4/UART.c ****     *
1132:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC4/UART.c ****     *     initialized.
1135:Generated_Source\PSoC4/UART.c ****     *
1136:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC4/UART.c ****     *  No.
1138:Generated_Source\PSoC4/UART.c ****     *
1139:Generated_Source\PSoC4/UART.c ****     * Theory:
1140:Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC4/UART.c ****     *
1144:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC4/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC4/UART.c ****     {
 717              		.loc 1 1146 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              	.LVL33:
 722 0000 70B5     		push	{r4, r5, r6, lr}
 723              		.cfi_def_cfa_offset 16
 724              		.cfi_offset 4, -16
 725              		.cfi_offset 5, -12
 726              		.cfi_offset 6, -8
 727              		.cfi_offset 14, -4
 728 0002 0500     		movs	r5, r0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 34


 729              	.LVL34:
1147:Generated_Source\PSoC4/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC4/UART.c **** 
1149:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 730              		.loc 1 1150 0
 731 0004 074B     		ldr	r3, .L66
 732 0006 1B78     		ldrb	r3, [r3]
 733 0008 002B     		cmp	r3, #0
 734 000a 05D1     		bne	.L65
 735 000c 08E0     		b	.L61
 736              	.LVL35:
 737              	.L64:
1151:Generated_Source\PSoC4/UART.c ****         {
1152:Generated_Source\PSoC4/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC4/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC4/UART.c ****             {
1155:Generated_Source\PSoC4/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 738              		.loc 1 1155 0
 739 000e FFF7FEFF 		bl	UART_PutChar
 740              	.LVL36:
1156:Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 741              		.loc 1 1156 0
 742 0012 0134     		adds	r4, r4, #1
 743              	.LVL37:
 744 0014 A4B2     		uxth	r4, r4
 745              	.LVL38:
 746 0016 00E0     		b	.L62
 747              	.LVL39:
 748              	.L65:
 749 0018 0024     		movs	r4, #0
 750              	.LVL40:
 751              	.L62:
1153:Generated_Source\PSoC4/UART.c ****             {
 752              		.loc 1 1153 0
 753 001a 285D     		ldrb	r0, [r5, r4]
 754 001c 0028     		cmp	r0, #0
 755 001e F6D1     		bne	.L64
 756              	.LVL41:
 757              	.L61:
1157:Generated_Source\PSoC4/UART.c ****             }
1158:Generated_Source\PSoC4/UART.c ****         }
1159:Generated_Source\PSoC4/UART.c ****     }
 758              		.loc 1 1159 0
 759              		@ sp needed
 760              	.LVL42:
 761 0020 70BD     		pop	{r4, r5, r6, pc}
 762              	.L67:
 763 0022 C046     		.align	2
 764              	.L66:
 765 0024 00000000 		.word	.LANCHOR0
 766              		.cfi_endproc
 767              	.LFE20:
 768              		.size	UART_PutString, .-UART_PutString
 769              		.section	.text.UART_PutArray,"ax",%progbits
 770              		.align	2
 771              		.global	UART_PutArray
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 35


 772              		.code	16
 773              		.thumb_func
 774              		.type	UART_PutArray, %function
 775              	UART_PutArray:
 776              	.LFB21:
1160:Generated_Source\PSoC4/UART.c **** 
1161:Generated_Source\PSoC4/UART.c **** 
1162:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC4/UART.c ****     *
1166:Generated_Source\PSoC4/UART.c ****     * Summary:
1167:Generated_Source\PSoC4/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC4/UART.c ****     *  transmission.
1169:Generated_Source\PSoC4/UART.c ****     *
1170:Generated_Source\PSoC4/UART.c ****     * Parameters:
1171:Generated_Source\PSoC4/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC4/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC4/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC4/UART.c ****     *
1175:Generated_Source\PSoC4/UART.c ****     * Return:
1176:Generated_Source\PSoC4/UART.c ****     *  None.
1177:Generated_Source\PSoC4/UART.c ****     *
1178:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC4/UART.c ****     *     initialized.
1181:Generated_Source\PSoC4/UART.c ****     *
1182:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC4/UART.c ****     *  No.
1184:Generated_Source\PSoC4/UART.c ****     *
1185:Generated_Source\PSoC4/UART.c ****     * Theory:
1186:Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC4/UART.c ****     *
1190:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC4/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC4/UART.c ****                                                                     
1193:Generated_Source\PSoC4/UART.c ****     {
 777              		.loc 1 1193 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              	.LVL43:
 782 0000 70B5     		push	{r4, r5, r6, lr}
 783              		.cfi_def_cfa_offset 16
 784              		.cfi_offset 4, -16
 785              		.cfi_offset 5, -12
 786              		.cfi_offset 6, -8
 787              		.cfi_offset 14, -4
 788 0002 0600     		movs	r6, r0
 789 0004 0D00     		movs	r5, r1
 790              	.LVL44:
1194:Generated_Source\PSoC4/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC4/UART.c **** 
1196:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 36


 791              		.loc 1 1197 0
 792 0006 074B     		ldr	r3, .L73
 793 0008 1B78     		ldrb	r3, [r3]
 794 000a 002B     		cmp	r3, #0
 795 000c 06D1     		bne	.L72
 796 000e 08E0     		b	.L68
 797              	.LVL45:
 798              	.L71:
1198:Generated_Source\PSoC4/UART.c ****         {
1199:Generated_Source\PSoC4/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC4/UART.c ****             {
1201:Generated_Source\PSoC4/UART.c ****                 UART_PutChar(string[bufIndex]);
 799              		.loc 1 1201 0
 800 0010 305D     		ldrb	r0, [r6, r4]
 801 0012 FFF7FEFF 		bl	UART_PutChar
 802              	.LVL46:
1202:Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 803              		.loc 1 1202 0
 804 0016 0134     		adds	r4, r4, #1
 805              	.LVL47:
 806 0018 E4B2     		uxtb	r4, r4
 807              	.LVL48:
 808 001a 00E0     		b	.L69
 809              	.LVL49:
 810              	.L72:
 811 001c 0024     		movs	r4, #0
 812              	.LVL50:
 813              	.L69:
1199:Generated_Source\PSoC4/UART.c ****             {
 814              		.loc 1 1199 0
 815 001e AC42     		cmp	r4, r5
 816 0020 F6D3     		bcc	.L71
 817              	.LVL51:
 818              	.L68:
1203:Generated_Source\PSoC4/UART.c ****             }
1204:Generated_Source\PSoC4/UART.c ****         }
1205:Generated_Source\PSoC4/UART.c ****     }
 819              		.loc 1 1205 0
 820              		@ sp needed
 821              	.LVL52:
 822 0022 70BD     		pop	{r4, r5, r6, pc}
 823              	.L74:
 824              		.align	2
 825              	.L73:
 826 0024 00000000 		.word	.LANCHOR0
 827              		.cfi_endproc
 828              	.LFE21:
 829              		.size	UART_PutArray, .-UART_PutArray
 830              		.section	.text.UART_PutCRLF,"ax",%progbits
 831              		.align	2
 832              		.global	UART_PutCRLF
 833              		.code	16
 834              		.thumb_func
 835              		.type	UART_PutCRLF, %function
 836              	UART_PutCRLF:
 837              	.LFB22:
1206:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 37


1207:Generated_Source\PSoC4/UART.c **** 
1208:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC4/UART.c ****     *
1212:Generated_Source\PSoC4/UART.c ****     * Summary:
1213:Generated_Source\PSoC4/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC4/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC4/UART.c ****     *
1216:Generated_Source\PSoC4/UART.c ****     * Parameters:
1217:Generated_Source\PSoC4/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC4/UART.c ****     *
1219:Generated_Source\PSoC4/UART.c ****     * Return:
1220:Generated_Source\PSoC4/UART.c ****     *  None.
1221:Generated_Source\PSoC4/UART.c ****     *
1222:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC4/UART.c ****     *     initialized.
1225:Generated_Source\PSoC4/UART.c ****     *
1226:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC4/UART.c ****     *  No.
1228:Generated_Source\PSoC4/UART.c ****     *
1229:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC4/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC4/UART.c ****     {
 838              		.loc 1 1231 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              	.LVL53:
 843 0000 10B5     		push	{r4, lr}
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 4, -8
 846              		.cfi_offset 14, -4
1232:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 847              		.loc 1 1233 0
 848 0002 064B     		ldr	r3, .L77
 849 0004 1B78     		ldrb	r3, [r3]
 850 0006 002B     		cmp	r3, #0
 851 0008 07D0     		beq	.L75
1234:Generated_Source\PSoC4/UART.c ****         {
1235:Generated_Source\PSoC4/UART.c ****             UART_PutChar(txDataByte);
 852              		.loc 1 1235 0
 853 000a FFF7FEFF 		bl	UART_PutChar
 854              	.LVL54:
1236:Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Du);
 855              		.loc 1 1236 0
 856 000e 0D20     		movs	r0, #13
 857 0010 FFF7FEFF 		bl	UART_PutChar
 858              	.LVL55:
1237:Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Au);
 859              		.loc 1 1237 0
 860 0014 0A20     		movs	r0, #10
 861 0016 FFF7FEFF 		bl	UART_PutChar
 862              	.LVL56:
 863              	.L75:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 38


1238:Generated_Source\PSoC4/UART.c ****         }
1239:Generated_Source\PSoC4/UART.c ****     }
 864              		.loc 1 1239 0
 865              		@ sp needed
 866 001a 10BD     		pop	{r4, pc}
 867              	.L78:
 868              		.align	2
 869              	.L77:
 870 001c 00000000 		.word	.LANCHOR0
 871              		.cfi_endproc
 872              	.LFE22:
 873              		.size	UART_PutCRLF, .-UART_PutCRLF
 874              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 875              		.align	2
 876              		.global	UART_GetTxBufferSize
 877              		.code	16
 878              		.thumb_func
 879              		.type	UART_GetTxBufferSize, %function
 880              	UART_GetTxBufferSize:
 881              	.LFB23:
1240:Generated_Source\PSoC4/UART.c **** 
1241:Generated_Source\PSoC4/UART.c **** 
1242:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC4/UART.c ****     *
1246:Generated_Source\PSoC4/UART.c ****     * Summary:
1247:Generated_Source\PSoC4/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC4/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC4/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC4/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC4/UART.c ****     *
1255:Generated_Source\PSoC4/UART.c ****     * Parameters:
1256:Generated_Source\PSoC4/UART.c ****     *  None.
1257:Generated_Source\PSoC4/UART.c ****     *
1258:Generated_Source\PSoC4/UART.c ****     * Return:
1259:Generated_Source\PSoC4/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC4/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC4/UART.c ****     *
1262:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC4/UART.c ****     *
1266:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC4/UART.c ****     *  No.
1268:Generated_Source\PSoC4/UART.c ****     *
1269:Generated_Source\PSoC4/UART.c ****     * Theory:
1270:Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC4/UART.c ****     *
1272:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC4/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC4/UART.c ****                                                             
1275:Generated_Source\PSoC4/UART.c ****     {
 882              		.loc 1 1275 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 39


 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
1276:Generated_Source\PSoC4/UART.c ****         uint8 size;
1277:Generated_Source\PSoC4/UART.c **** 
1278:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC4/UART.c **** 
1280:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC4/UART.c **** 
1283:Generated_Source\PSoC4/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC4/UART.c ****         {
1285:Generated_Source\PSoC4/UART.c ****             size = 0u;
1286:Generated_Source\PSoC4/UART.c ****         }
1287:Generated_Source\PSoC4/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC4/UART.c ****         {
1289:Generated_Source\PSoC4/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC4/UART.c ****         }
1291:Generated_Source\PSoC4/UART.c ****         else
1292:Generated_Source\PSoC4/UART.c ****         {
1293:Generated_Source\PSoC4/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC4/UART.c ****         }
1296:Generated_Source\PSoC4/UART.c **** 
1297:Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC4/UART.c **** 
1299:Generated_Source\PSoC4/UART.c ****     #else
1300:Generated_Source\PSoC4/UART.c **** 
1301:Generated_Source\PSoC4/UART.c ****         size = UART_TXSTATUS_REG;
 887              		.loc 1 1301 0
 888 0000 064B     		ldr	r3, .L83
 889 0002 1B78     		ldrb	r3, [r3]
 890 0004 DBB2     		uxtb	r3, r3
 891              	.LVL57:
1302:Generated_Source\PSoC4/UART.c **** 
1303:Generated_Source\PSoC4/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC4/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 892              		.loc 1 1304 0
 893 0006 5A07     		lsls	r2, r3, #29
 894 0008 03D4     		bmi	.L81
1305:Generated_Source\PSoC4/UART.c ****         {
1306:Generated_Source\PSoC4/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC4/UART.c ****         }
1308:Generated_Source\PSoC4/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 895              		.loc 1 1308 0
 896 000a 9B07     		lsls	r3, r3, #30
 897 000c 03D5     		bpl	.L82
 898              	.LVL58:
1309:Generated_Source\PSoC4/UART.c ****         {
1310:Generated_Source\PSoC4/UART.c ****             size = 0u;
 899              		.loc 1 1310 0
 900 000e 0020     		movs	r0, #0
 901 0010 02E0     		b	.L80
 902              	.LVL59:
 903              	.L81:
1306:Generated_Source\PSoC4/UART.c ****         }
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 40


 904              		.loc 1 1306 0
 905 0012 0420     		movs	r0, #4
 906 0014 00E0     		b	.L80
 907              	.LVL60:
 908              	.L82:
1311:Generated_Source\PSoC4/UART.c ****         }
1312:Generated_Source\PSoC4/UART.c ****         else
1313:Generated_Source\PSoC4/UART.c ****         {
1314:Generated_Source\PSoC4/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC4/UART.c ****             size = 1u;
 909              		.loc 1 1315 0
 910 0016 0120     		movs	r0, #1
 911              	.L80:
 912              	.LVL61:
1316:Generated_Source\PSoC4/UART.c ****         }
1317:Generated_Source\PSoC4/UART.c **** 
1318:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC4/UART.c **** 
1320:Generated_Source\PSoC4/UART.c ****     return(size);
1321:Generated_Source\PSoC4/UART.c ****     }
 913              		.loc 1 1321 0
 914              		@ sp needed
 915 0018 7047     		bx	lr
 916              	.L84:
 917 001a C046     		.align	2
 918              	.L83:
 919 001c 60000F40 		.word	1074724960
 920              		.cfi_endproc
 921              	.LFE23:
 922              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 923              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 924              		.align	2
 925              		.global	UART_ClearTxBuffer
 926              		.code	16
 927              		.thumb_func
 928              		.type	UART_ClearTxBuffer, %function
 929              	UART_ClearTxBuffer:
 930              	.LFB24:
1322:Generated_Source\PSoC4/UART.c **** 
1323:Generated_Source\PSoC4/UART.c **** 
1324:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC4/UART.c ****     *
1328:Generated_Source\PSoC4/UART.c ****     * Summary:
1329:Generated_Source\PSoC4/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC4/UART.c ****     *
1331:Generated_Source\PSoC4/UART.c ****     * Parameters:
1332:Generated_Source\PSoC4/UART.c ****     *  None.
1333:Generated_Source\PSoC4/UART.c ****     *
1334:Generated_Source\PSoC4/UART.c ****     * Return:
1335:Generated_Source\PSoC4/UART.c ****     *  None.
1336:Generated_Source\PSoC4/UART.c ****     *
1337:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 41


1341:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC4/UART.c ****     *  No.
1343:Generated_Source\PSoC4/UART.c ****     *
1344:Generated_Source\PSoC4/UART.c ****     * Theory:
1345:Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC4/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC4/UART.c ****     *
1349:Generated_Source\PSoC4/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC4/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC4/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC4/UART.c ****     *
1353:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC4/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC4/UART.c ****     {
 931              		.loc 1 1355 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 10B5     		push	{r4, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 4, -8
 938              		.cfi_offset 14, -4
1356:Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC4/UART.c **** 
1358:Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 939              		.loc 1 1358 0
 940 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 941              	.LVL62:
1359:Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 942              		.loc 1 1360 0
 943 0006 064A     		ldr	r2, .L86
 944 0008 1178     		ldrb	r1, [r2]
 945 000a 0123     		movs	r3, #1
 946 000c 0B43     		orrs	r3, r1
 947 000e DBB2     		uxtb	r3, r3
 948 0010 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 949              		.loc 1 1361 0
 950 0012 1378     		ldrb	r3, [r2]
 951 0014 0121     		movs	r1, #1
 952 0016 8B43     		bics	r3, r1
 953 0018 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 954              		.loc 1 1362 0
 955 001a FFF7FEFF 		bl	CyExitCriticalSection
 956              	.LVL63:
1363:Generated_Source\PSoC4/UART.c **** 
1364:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC4/UART.c **** 
1366:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC4/UART.c **** 
1369:Generated_Source\PSoC4/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC4/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 42


1372:Generated_Source\PSoC4/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC4/UART.c **** 
1375:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC4/UART.c ****     }
 957              		.loc 1 1376 0
 958              		@ sp needed
 959 001e 10BD     		pop	{r4, pc}
 960              	.L87:
 961              		.align	2
 962              	.L86:
 963 0020 90000F40 		.word	1074725008
 964              		.cfi_endproc
 965              	.LFE24:
 966              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 967              		.section	.text.UART_SendBreak,"ax",%progbits
 968              		.align	2
 969              		.global	UART_SendBreak
 970              		.code	16
 971              		.thumb_func
 972              		.type	UART_SendBreak, %function
 973              	UART_SendBreak:
 974              	.LFB25:
1377:Generated_Source\PSoC4/UART.c **** 
1378:Generated_Source\PSoC4/UART.c **** 
1379:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC4/UART.c ****     *
1383:Generated_Source\PSoC4/UART.c ****     * Summary:
1384:Generated_Source\PSoC4/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC4/UART.c ****     *
1386:Generated_Source\PSoC4/UART.c ****     * Parameters:
1387:Generated_Source\PSoC4/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC4/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC4/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC4/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC4/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC4/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC4/UART.c ****     *       then return.
1394:Generated_Source\PSoC4/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC4/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC4/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC4/UART.c ****     *
1398:Generated_Source\PSoC4/UART.c ****     * Return:
1399:Generated_Source\PSoC4/UART.c ****     *  None.
1400:Generated_Source\PSoC4/UART.c ****     *
1401:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC4/UART.c ****     *     initialized.
1404:Generated_Source\PSoC4/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC4/UART.c ****     *
1406:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC4/UART.c ****     *  No.
1408:Generated_Source\PSoC4/UART.c ****     *
1409:Generated_Source\PSoC4/UART.c ****     * Theory:
1410:Generated_Source\PSoC4/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 43


1411:Generated_Source\PSoC4/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC4/UART.c ****     *  operation.
1413:Generated_Source\PSoC4/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC4/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC4/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC4/UART.c ****     *     complete.
1417:Generated_Source\PSoC4/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC4/UART.c ****     *     operation
1419:Generated_Source\PSoC4/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC4/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC4/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC4/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC4/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC4/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC4/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC4/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC4/UART.c ****     *
1432:Generated_Source\PSoC4/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC4/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC4/UART.c ****     *  break signal.
1435:Generated_Source\PSoC4/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC4/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC4/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC4/UART.c ****     *
1439:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC4/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC4/UART.c ****     {
 975              		.loc 1 1441 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980              	.LVL64:
1442:Generated_Source\PSoC4/UART.c **** 
1443:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 981              		.loc 1 1444 0
 982 0000 134B     		ldr	r3, .L95
 983 0002 1B78     		ldrb	r3, [r3]
 984 0004 002B     		cmp	r3, #0
 985 0006 21D0     		beq	.L88
 986              	.LBB2:
1445:Generated_Source\PSoC4/UART.c ****         {
1446:Generated_Source\PSoC4/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC4/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC4/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC4/UART.c **** 
1450:Generated_Source\PSoC4/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC4/UART.c **** 
1452:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC4/UART.c ****             {
1455:Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 44


1456:Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC4/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC4/UART.c **** 
1461:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC4/UART.c ****                 {
1463:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC4/UART.c ****                 }
1465:Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC4/UART.c ****             }
1467:Generated_Source\PSoC4/UART.c **** 
1468:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC4/UART.c ****             {
1471:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC4/UART.c ****                 {
1473:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC4/UART.c ****                 }
1475:Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC4/UART.c ****             }
1477:Generated_Source\PSoC4/UART.c **** 
1478:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC4/UART.c ****             {
1482:Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC4/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC4/UART.c ****             }
1485:Generated_Source\PSoC4/UART.c **** 
1486:Generated_Source\PSoC4/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC4/UART.c **** 
1488:Generated_Source\PSoC4/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC4/UART.c **** 
1490:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 987              		.loc 1 1490 0
 988 0008 0028     		cmp	r0, #0
 989 000a 01D0     		beq	.L90
 990              		.loc 1 1490 0 is_stmt 0 discriminator 1
 991 000c 0328     		cmp	r0, #3
 992 000e 0CD1     		bne	.L91
 993              	.L90:
1491:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC4/UART.c ****             {
1493:Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC4/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC4/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC4/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC4/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC4/UART.c **** 
1500:Generated_Source\PSoC4/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 994              		.loc 1 1501 0 is_stmt 1
 995 0010 104B     		ldr	r3, .L95+4
 996 0012 1978     		ldrb	r1, [r3]
 997 0014 0E4A     		ldr	r2, .L95
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 45


 998 0016 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC4/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 999              		.loc 1 1502 0
 1000 0018 6722     		movs	r2, #103
 1001 001a 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC4/UART.c ****                 #else
1504:Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC4/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC4/UART.c **** 
1508:Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
 1002              		.loc 1 1509 0
 1003 001c 0022     		movs	r2, #0
 1004 001e 0E4B     		ldr	r3, .L95+8
 1005 0020 1A70     		strb	r2, [r3]
 1006              	.L92:
1510:Generated_Source\PSoC4/UART.c **** 
1511:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC4/UART.c ****                 {
1513:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1007              		.loc 1 1513 0 discriminator 1
 1008 0022 0E4B     		ldr	r3, .L95+12
 1009 0024 1B78     		ldrb	r3, [r3]
 1010              	.LVL65:
1514:Generated_Source\PSoC4/UART.c ****                 }
1515:Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1011              		.loc 1 1515 0 discriminator 1
 1012 0026 9B07     		lsls	r3, r3, #30
 1013 0028 FBD4     		bmi	.L92
 1014              	.LVL66:
 1015              	.L91:
1516:Generated_Source\PSoC4/UART.c ****             }
1517:Generated_Source\PSoC4/UART.c **** 
1518:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1016              		.loc 1 1518 0
 1017 002a 0128     		cmp	r0, #1
 1018 002c 01D0     		beq	.L93
 1019              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1020 002e 0328     		cmp	r0, #3
 1021 0030 04D1     		bne	.L94
 1022              	.L93:
1519:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC4/UART.c ****             {
1521:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC4/UART.c ****                 {
1523:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1023              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1024 0032 0A4B     		ldr	r3, .L95+12
 1025 0034 1A78     		ldrb	r2, [r3]
 1026              	.LVL67:
1524:Generated_Source\PSoC4/UART.c ****                 }
1525:Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1027              		.loc 1 1525 0 discriminator 1
 1028 0036 0123     		movs	r3, #1
 1029 0038 9343     		bics	r3, r2
 1030 003a FAD1     		bne	.L93
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 46


 1031              	.LVL68:
 1032              	.L94:
1526:Generated_Source\PSoC4/UART.c ****             }
1527:Generated_Source\PSoC4/UART.c **** 
1528:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
 1033              		.loc 1 1529 0
 1034 003c 0138     		subs	r0, r0, #1
 1035              	.LVL69:
 1036 003e C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
 1037              		.loc 1 1528 0
 1038 0040 0228     		cmp	r0, #2
 1039 0042 03D8     		bhi	.L88
1530:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC4/UART.c ****             {
1532:Generated_Source\PSoC4/UART.c **** 
1533:Generated_Source\PSoC4/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC4/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1040              		.loc 1 1534 0
 1041 0044 024B     		ldr	r3, .L95
 1042 0046 5A78     		ldrb	r2, [r3, #1]
 1043 0048 024B     		ldr	r3, .L95+4
 1044 004a 1A70     		strb	r2, [r3]
 1045              	.L88:
 1046              	.LBE2:
1535:Generated_Source\PSoC4/UART.c ****             #else
1536:Generated_Source\PSoC4/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC4/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC4/UART.c **** 
1539:Generated_Source\PSoC4/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC4/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC4/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC4/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC4/UART.c ****             }
1545:Generated_Source\PSoC4/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC4/UART.c ****         }
1547:Generated_Source\PSoC4/UART.c ****     }
 1047              		.loc 1 1547 0
 1048              		@ sp needed
 1049 004c 7047     		bx	lr
 1050              	.L96:
 1051 004e C046     		.align	2
 1052              	.L95:
 1053 0050 00000000 		.word	.LANCHOR0
 1054 0054 33000F40 		.word	1074724915
 1055 0058 40000F40 		.word	1074724928
 1056 005c 60000F40 		.word	1074724960
 1057              		.cfi_endproc
 1058              	.LFE25:
 1059              		.size	UART_SendBreak, .-UART_SendBreak
 1060              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1061              		.align	2
 1062              		.global	UART_SetTxAddressMode
 1063              		.code	16
 1064              		.thumb_func
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 47


 1065              		.type	UART_SetTxAddressMode, %function
 1066              	UART_SetTxAddressMode:
 1067              	.LFB26:
1548:Generated_Source\PSoC4/UART.c **** 
1549:Generated_Source\PSoC4/UART.c **** 
1550:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC4/UART.c ****     *
1554:Generated_Source\PSoC4/UART.c ****     * Summary:
1555:Generated_Source\PSoC4/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC4/UART.c ****     *
1557:Generated_Source\PSoC4/UART.c ****     * Parameters:
1558:Generated_Source\PSoC4/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC4/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC4/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC4/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC4/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC4/UART.c ****     *
1564:Generated_Source\PSoC4/UART.c ****     * Return:
1565:Generated_Source\PSoC4/UART.c ****     *  None.
1566:Generated_Source\PSoC4/UART.c ****     *
1567:Generated_Source\PSoC4/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC4/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC4/UART.c ****     *  register.
1570:Generated_Source\PSoC4/UART.c ****     *
1571:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC4/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC4/UART.c ****     {
 1068              		.loc 1 1573 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073              	.LVL70:
1574:Generated_Source\PSoC4/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC4/UART.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC4/UART.c ****         {
1577:Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
1579:Generated_Source\PSoC4/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC4/UART.c ****         }
1582:Generated_Source\PSoC4/UART.c ****         else
1583:Generated_Source\PSoC4/UART.c ****         {
1584:Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
1586:Generated_Source\PSoC4/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC4/UART.c ****         }
1589:Generated_Source\PSoC4/UART.c ****     }
 1074              		.loc 1 1589 0
 1075              		@ sp needed
 1076 0000 7047     		bx	lr
 1077              		.cfi_endproc
 1078              	.LFE26:
 1079              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 48


 1080              		.global	UART_initVar
 1081 0002 C046     		.bss
 1082              		.set	.LANCHOR0,. + 0
 1083              		.type	UART_initVar, %object
 1084              		.size	UART_initVar, 1
 1085              	UART_initVar:
 1086 0000 00       		.space	1
 1087              		.type	txPeriod.4983, %object
 1088              		.size	txPeriod.4983, 1
 1089              	txPeriod.4983:
 1090 0001 00       		.space	1
 1091              		.text
 1092              	.Letext0:
 1093              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1094              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1095              		.file 4 "Generated_Source\\PSoC4\\UART_IntClock.h"
 1096              		.section	.debug_info,"",%progbits
 1097              	.Ldebug_info0:
 1098 0000 06060000 		.4byte	0x606
 1099 0004 0400     		.2byte	0x4
 1100 0006 00000000 		.4byte	.Ldebug_abbrev0
 1101 000a 04       		.byte	0x4
 1102 000b 01       		.uleb128 0x1
 1103 000c 2F000000 		.4byte	.LASF64
 1104 0010 0C       		.byte	0xc
 1105 0011 20040000 		.4byte	.LASF65
 1106 0015 AC020000 		.4byte	.LASF66
 1107 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1108 001d 00000000 		.4byte	0
 1109 0021 00000000 		.4byte	.Ldebug_line0
 1110 0025 02       		.uleb128 0x2
 1111 0026 01       		.byte	0x1
 1112 0027 06       		.byte	0x6
 1113 0028 05010000 		.4byte	.LASF0
 1114 002c 02       		.uleb128 0x2
 1115 002d 01       		.byte	0x1
 1116 002e 08       		.byte	0x8
 1117 002f 45030000 		.4byte	.LASF1
 1118 0033 02       		.uleb128 0x2
 1119 0034 02       		.byte	0x2
 1120 0035 05       		.byte	0x5
 1121 0036 64030000 		.4byte	.LASF2
 1122 003a 02       		.uleb128 0x2
 1123 003b 02       		.byte	0x2
 1124 003c 07       		.byte	0x7
 1125 003d 02020000 		.4byte	.LASF3
 1126 0041 02       		.uleb128 0x2
 1127 0042 04       		.byte	0x4
 1128 0043 05       		.byte	0x5
 1129 0044 1A010000 		.4byte	.LASF4
 1130 0048 02       		.uleb128 0x2
 1131 0049 04       		.byte	0x4
 1132 004a 07       		.byte	0x7
 1133 004b C6010000 		.4byte	.LASF5
 1134 004f 02       		.uleb128 0x2
 1135 0050 08       		.byte	0x8
 1136 0051 05       		.byte	0x5
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 49


 1137 0052 F7000000 		.4byte	.LASF6
 1138 0056 02       		.uleb128 0x2
 1139 0057 08       		.byte	0x8
 1140 0058 07       		.byte	0x7
 1141 0059 BD000000 		.4byte	.LASF7
 1142 005d 03       		.uleb128 0x3
 1143 005e 04       		.byte	0x4
 1144 005f 05       		.byte	0x5
 1145 0060 696E7400 		.ascii	"int\000"
 1146 0064 02       		.uleb128 0x2
 1147 0065 04       		.byte	0x4
 1148 0066 07       		.byte	0x7
 1149 0067 99010000 		.4byte	.LASF8
 1150 006b 04       		.uleb128 0x4
 1151 006c 40010000 		.4byte	.LASF9
 1152 0070 02       		.byte	0x2
 1153 0071 D201     		.2byte	0x1d2
 1154 0073 2C000000 		.4byte	0x2c
 1155 0077 04       		.uleb128 0x4
 1156 0078 00000000 		.4byte	.LASF10
 1157 007c 02       		.byte	0x2
 1158 007d D301     		.2byte	0x1d3
 1159 007f 3A000000 		.4byte	0x3a
 1160 0083 02       		.uleb128 0x2
 1161 0084 04       		.byte	0x4
 1162 0085 04       		.byte	0x4
 1163 0086 0F030000 		.4byte	.LASF11
 1164 008a 02       		.uleb128 0x2
 1165 008b 08       		.byte	0x8
 1166 008c 04       		.byte	0x4
 1167 008d 5F010000 		.4byte	.LASF12
 1168 0091 04       		.uleb128 0x4
 1169 0092 B1030000 		.4byte	.LASF13
 1170 0096 02       		.byte	0x2
 1171 0097 E301     		.2byte	0x1e3
 1172 0099 9D000000 		.4byte	0x9d
 1173 009d 02       		.uleb128 0x2
 1174 009e 01       		.byte	0x1
 1175 009f 08       		.byte	0x8
 1176 00a0 AC030000 		.4byte	.LASF14
 1177 00a4 04       		.uleb128 0x4
 1178 00a5 2A030000 		.4byte	.LASF15
 1179 00a9 02       		.byte	0x2
 1180 00aa 7C02     		.2byte	0x27c
 1181 00ac B0000000 		.4byte	0xb0
 1182 00b0 05       		.uleb128 0x5
 1183 00b1 6B000000 		.4byte	0x6b
 1184 00b5 02       		.uleb128 0x2
 1185 00b6 08       		.byte	0x8
 1186 00b7 04       		.byte	0x4
 1187 00b8 72020000 		.4byte	.LASF16
 1188 00bc 02       		.uleb128 0x2
 1189 00bd 04       		.byte	0x4
 1190 00be 07       		.byte	0x7
 1191 00bf 69020000 		.4byte	.LASF17
 1192 00c3 06       		.uleb128 0x6
 1193 00c4 7A010000 		.4byte	.LASF67
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 50


 1194 00c8 01       		.byte	0x1
 1195 00c9 6A       		.byte	0x6a
 1196 00ca 00000000 		.4byte	.LFB1
 1197 00ce 34000000 		.4byte	.LFE1-.LFB1
 1198 00d2 01       		.uleb128 0x1
 1199 00d3 9C       		.byte	0x9c
 1200 00d4 07       		.uleb128 0x7
 1201 00d5 8E030000 		.4byte	.LASF18
 1202 00d9 01       		.byte	0x1
 1203 00da B7       		.byte	0xb7
 1204 00db 00000000 		.4byte	.LFB2
 1205 00df 44000000 		.4byte	.LFE2-.LFB2
 1206 00e3 01       		.uleb128 0x1
 1207 00e4 9C       		.byte	0x9c
 1208 00e5 1B010000 		.4byte	0x11b
 1209 00e9 08       		.uleb128 0x8
 1210 00ea DC030000 		.4byte	.LASF21
 1211 00ee 01       		.byte	0x1
 1212 00ef B9       		.byte	0xb9
 1213 00f0 6B000000 		.4byte	0x6b
 1214 00f4 00000000 		.4byte	.LLST0
 1215 00f8 09       		.uleb128 0x9
 1216 00f9 06000000 		.4byte	.LVL0
 1217 00fd DD050000 		.4byte	0x5dd
 1218 0101 09       		.uleb128 0x9
 1219 0102 2E000000 		.4byte	.LVL2
 1220 0106 E8050000 		.4byte	0x5e8
 1221 010a 0A       		.uleb128 0xa
 1222 010b 34000000 		.4byte	.LVL3
 1223 010f F3050000 		.4byte	0x5f3
 1224 0113 0B       		.uleb128 0xb
 1225 0114 01       		.uleb128 0x1
 1226 0115 50       		.byte	0x50
 1227 0116 02       		.uleb128 0x2
 1228 0117 74       		.byte	0x74
 1229 0118 00       		.sleb128 0
 1230 0119 00       		.byte	0
 1231 011a 00       		.byte	0
 1232 011b 07       		.uleb128 0x7
 1233 011c D4000000 		.4byte	.LASF19
 1234 0120 01       		.byte	0x1
 1235 0121 4C       		.byte	0x4c
 1236 0122 00000000 		.4byte	.LFB0
 1237 0126 20000000 		.4byte	.LFE0-.LFB0
 1238 012a 01       		.uleb128 0x1
 1239 012b 9C       		.byte	0x9c
 1240 012c 43010000 		.4byte	0x143
 1241 0130 09       		.uleb128 0x9
 1242 0131 0E000000 		.4byte	.LVL5
 1243 0135 C3000000 		.4byte	0xc3
 1244 0139 09       		.uleb128 0x9
 1245 013a 18000000 		.4byte	.LVL6
 1246 013e D4000000 		.4byte	0xd4
 1247 0142 00       		.byte	0
 1248 0143 07       		.uleb128 0x7
 1249 0144 16040000 		.4byte	.LASF20
 1250 0148 01       		.byte	0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 51


 1251 0149 F0       		.byte	0xf0
 1252 014a 00000000 		.4byte	.LFB3
 1253 014e 3C000000 		.4byte	.LFE3-.LFB3
 1254 0152 01       		.uleb128 0x1
 1255 0153 9C       		.byte	0x9c
 1256 0154 8A010000 		.4byte	0x18a
 1257 0158 08       		.uleb128 0x8
 1258 0159 DC030000 		.4byte	.LASF21
 1259 015d 01       		.byte	0x1
 1260 015e F2       		.byte	0xf2
 1261 015f 6B000000 		.4byte	0x6b
 1262 0163 13000000 		.4byte	.LLST1
 1263 0167 09       		.uleb128 0x9
 1264 0168 06000000 		.4byte	.LVL7
 1265 016c DD050000 		.4byte	0x5dd
 1266 0170 09       		.uleb128 0x9
 1267 0171 16000000 		.4byte	.LVL9
 1268 0175 FE050000 		.4byte	0x5fe
 1269 0179 0A       		.uleb128 0xa
 1270 017a 2E000000 		.4byte	.LVL10
 1271 017e F3050000 		.4byte	0x5f3
 1272 0182 0B       		.uleb128 0xb
 1273 0183 01       		.uleb128 0x1
 1274 0184 50       		.byte	0x50
 1275 0185 02       		.uleb128 0x2
 1276 0186 74       		.byte	0x74
 1277 0187 00       		.sleb128 0
 1278 0188 00       		.byte	0
 1279 0189 00       		.byte	0
 1280 018a 0C       		.uleb128 0xc
 1281 018b 46010000 		.4byte	.LASF44
 1282 018f 01       		.byte	0x1
 1283 0190 2701     		.2byte	0x127
 1284 0192 6B000000 		.4byte	0x6b
 1285 0196 00000000 		.4byte	.LFB4
 1286 019a 04000000 		.4byte	.LFE4-.LFB4
 1287 019e 01       		.uleb128 0x1
 1288 019f 9C       		.byte	0x9c
 1289 01a0 0D       		.uleb128 0xd
 1290 01a1 4D040000 		.4byte	.LASF22
 1291 01a5 01       		.byte	0x1
 1292 01a6 3F01     		.2byte	0x13f
 1293 01a8 00000000 		.4byte	.LFB5
 1294 01ac 02000000 		.4byte	.LFE5-.LFB5
 1295 01b0 01       		.uleb128 0x1
 1296 01b1 9C       		.byte	0x9c
 1297 01b2 C5010000 		.4byte	0x1c5
 1298 01b6 0E       		.uleb128 0xe
 1299 01b7 72010000 		.4byte	.LASF24
 1300 01bb 01       		.byte	0x1
 1301 01bc 3F01     		.2byte	0x13f
 1302 01be 6B000000 		.4byte	0x6b
 1303 01c2 01       		.uleb128 0x1
 1304 01c3 50       		.byte	0x50
 1305 01c4 00       		.byte	0
 1306 01c5 0D       		.uleb128 0xd
 1307 01c6 B7030000 		.4byte	.LASF23
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 52


 1308 01ca 01       		.byte	0x1
 1309 01cb 6701     		.2byte	0x167
 1310 01cd 00000000 		.4byte	.LFB6
 1311 01d1 0C000000 		.4byte	.LFE6-.LFB6
 1312 01d5 01       		.uleb128 0x1
 1313 01d6 9C       		.byte	0x9c
 1314 01d7 EA010000 		.4byte	0x1ea
 1315 01db 0E       		.uleb128 0xe
 1316 01dc 1E020000 		.4byte	.LASF25
 1317 01e0 01       		.byte	0x1
 1318 01e1 6701     		.2byte	0x167
 1319 01e3 6B000000 		.4byte	0x6b
 1320 01e7 01       		.uleb128 0x1
 1321 01e8 50       		.byte	0x50
 1322 01e9 00       		.byte	0
 1323 01ea 0F       		.uleb128 0xf
 1324 01eb 30010000 		.4byte	.LASF27
 1325 01ef 01       		.byte	0x1
 1326 01f0 8801     		.2byte	0x188
 1327 01f2 6B000000 		.4byte	0x6b
 1328 01f6 00000000 		.4byte	.LFB7
 1329 01fa 0C000000 		.4byte	.LFE7-.LFB7
 1330 01fe 01       		.uleb128 0x1
 1331 01ff 9C       		.byte	0x9c
 1332 0200 13020000 		.4byte	0x213
 1333 0204 10       		.uleb128 0x10
 1334 0205 87030000 		.4byte	.LASF26
 1335 0209 01       		.byte	0x1
 1336 020a 8A01     		.2byte	0x18a
 1337 020c 6B000000 		.4byte	0x6b
 1338 0210 01       		.uleb128 0x1
 1339 0211 50       		.byte	0x50
 1340 0212 00       		.byte	0
 1341 0213 0F       		.uleb128 0xf
 1342 0214 9A030000 		.4byte	.LASF28
 1343 0218 01       		.byte	0x1
 1344 0219 E501     		.2byte	0x1e5
 1345 021b 6B000000 		.4byte	0x6b
 1346 021f 00000000 		.4byte	.LFB8
 1347 0223 10000000 		.4byte	.LFE8-.LFB8
 1348 0227 01       		.uleb128 0x1
 1349 0228 9C       		.byte	0x9c
 1350 0229 3C020000 		.4byte	0x23c
 1351 022d 10       		.uleb128 0x10
 1352 022e 0F040000 		.4byte	.LASF29
 1353 0232 01       		.byte	0x1
 1354 0233 E701     		.2byte	0x1e7
 1355 0235 6B000000 		.4byte	0x6b
 1356 0239 01       		.uleb128 0x1
 1357 023a 50       		.byte	0x50
 1358 023b 00       		.byte	0
 1359 023c 0F       		.uleb128 0xf
 1360 023d CF030000 		.4byte	.LASF30
 1361 0241 01       		.byte	0x1
 1362 0242 1402     		.2byte	0x214
 1363 0244 6B000000 		.4byte	0x6b
 1364 0248 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 53


 1365 024c 28000000 		.4byte	.LFE9-.LFB9
 1366 0250 01       		.uleb128 0x1
 1367 0251 9C       		.byte	0x9c
 1368 0252 75020000 		.4byte	0x275
 1369 0256 11       		.uleb128 0x11
 1370 0257 87030000 		.4byte	.LASF26
 1371 025b 01       		.byte	0x1
 1372 025c 1602     		.2byte	0x216
 1373 025e 6B000000 		.4byte	0x6b
 1374 0262 26000000 		.4byte	.LLST2
 1375 0266 10       		.uleb128 0x10
 1376 0267 F3020000 		.4byte	.LASF31
 1377 026b 01       		.byte	0x1
 1378 026c 1702     		.2byte	0x217
 1379 026e 6B000000 		.4byte	0x6b
 1380 0272 01       		.uleb128 0x1
 1381 0273 53       		.byte	0x53
 1382 0274 00       		.byte	0
 1383 0275 0F       		.uleb128 0xf
 1384 0276 8C010000 		.4byte	.LASF32
 1385 027a 01       		.byte	0x1
 1386 027b 7A02     		.2byte	0x27a
 1387 027d 77000000 		.4byte	0x77
 1388 0281 00000000 		.4byte	.LFB10
 1389 0285 12000000 		.4byte	.LFE10-.LFB10
 1390 0289 01       		.uleb128 0x1
 1391 028a 9C       		.byte	0x9c
 1392 028b A2020000 		.4byte	0x2a2
 1393 028f 09       		.uleb128 0x9
 1394 0290 06000000 		.4byte	.LVL22
 1395 0294 13020000 		.4byte	0x213
 1396 0298 09       		.uleb128 0x9
 1397 0299 0C000000 		.4byte	.LVL23
 1398 029d EA010000 		.4byte	0x1ea
 1399 02a1 00       		.byte	0
 1400 02a2 0F       		.uleb128 0xf
 1401 02a3 FA030000 		.4byte	.LASF33
 1402 02a7 01       		.byte	0x1
 1403 02a8 AB02     		.2byte	0x2ab
 1404 02aa 6B000000 		.4byte	0x6b
 1405 02ae 00000000 		.4byte	.LFB11
 1406 02b2 14000000 		.4byte	.LFE11-.LFB11
 1407 02b6 01       		.uleb128 0x1
 1408 02b7 9C       		.byte	0x9c
 1409 02b8 CB020000 		.4byte	0x2cb
 1410 02bc 10       		.uleb128 0x10
 1411 02bd FD010000 		.4byte	.LASF34
 1412 02c1 01       		.byte	0x1
 1413 02c2 AE02     		.2byte	0x2ae
 1414 02c4 6B000000 		.4byte	0x6b
 1415 02c8 01       		.uleb128 0x1
 1416 02c9 50       		.byte	0x50
 1417 02ca 00       		.byte	0
 1418 02cb 0D       		.uleb128 0xd
 1419 02cc 67040000 		.4byte	.LASF35
 1420 02d0 01       		.byte	0x1
 1421 02d1 F502     		.2byte	0x2f5
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 54


 1422 02d3 00000000 		.4byte	.LFB12
 1423 02d7 24000000 		.4byte	.LFE12-.LFB12
 1424 02db 01       		.uleb128 0x1
 1425 02dc 9C       		.byte	0x9c
 1426 02dd 04030000 		.4byte	0x304
 1427 02e1 11       		.uleb128 0x11
 1428 02e2 DC030000 		.4byte	.LASF21
 1429 02e6 01       		.byte	0x1
 1430 02e7 F702     		.2byte	0x2f7
 1431 02e9 6B000000 		.4byte	0x6b
 1432 02ed 5C000000 		.4byte	.LLST3
 1433 02f1 09       		.uleb128 0x9
 1434 02f2 06000000 		.4byte	.LVL25
 1435 02f6 DD050000 		.4byte	0x5dd
 1436 02fa 09       		.uleb128 0x9
 1437 02fb 1E000000 		.4byte	.LVL26
 1438 02ff F3050000 		.4byte	0x5f3
 1439 0303 00       		.byte	0
 1440 0304 0D       		.uleb128 0xd
 1441 0305 2F030000 		.4byte	.LASF36
 1442 0309 01       		.byte	0x1
 1443 030a 2D03     		.2byte	0x32d
 1444 030c 00000000 		.4byte	.LFB13
 1445 0310 02000000 		.4byte	.LFE13-.LFB13
 1446 0314 01       		.uleb128 0x1
 1447 0315 9C       		.byte	0x9c
 1448 0316 29030000 		.4byte	0x329
 1449 031a 0E       		.uleb128 0xe
 1450 031b 66010000 		.4byte	.LASF37
 1451 031f 01       		.byte	0x1
 1452 0320 2D03     		.2byte	0x32d
 1453 0322 6B000000 		.4byte	0x6b
 1454 0326 01       		.uleb128 0x1
 1455 0327 50       		.byte	0x50
 1456 0328 00       		.byte	0
 1457 0329 0D       		.uleb128 0xd
 1458 032a 86020000 		.4byte	.LASF38
 1459 032e 01       		.byte	0x1
 1460 032f 5903     		.2byte	0x359
 1461 0331 00000000 		.4byte	.LFB14
 1462 0335 0C000000 		.4byte	.LFE14-.LFB14
 1463 0339 01       		.uleb128 0x1
 1464 033a 9C       		.byte	0x9c
 1465 033b 4E030000 		.4byte	0x34e
 1466 033f 0E       		.uleb128 0xe
 1467 0340 7E020000 		.4byte	.LASF39
 1468 0344 01       		.byte	0x1
 1469 0345 5903     		.2byte	0x359
 1470 0347 6B000000 		.4byte	0x6b
 1471 034b 01       		.uleb128 0x1
 1472 034c 50       		.byte	0x50
 1473 034d 00       		.byte	0
 1474 034e 0D       		.uleb128 0xd
 1475 034f 99020000 		.4byte	.LASF40
 1476 0353 01       		.byte	0x1
 1477 0354 6D03     		.2byte	0x36d
 1478 0356 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 55


 1479 035a 0C000000 		.4byte	.LFE15-.LFB15
 1480 035e 01       		.uleb128 0x1
 1481 035f 9C       		.byte	0x9c
 1482 0360 73030000 		.4byte	0x373
 1483 0364 0E       		.uleb128 0xe
 1484 0365 7E020000 		.4byte	.LASF39
 1485 0369 01       		.byte	0x1
 1486 036a 6D03     		.2byte	0x36d
 1487 036c 6B000000 		.4byte	0x6b
 1488 0370 01       		.uleb128 0x1
 1489 0371 50       		.byte	0x50
 1490 0372 00       		.byte	0
 1491 0373 0D       		.uleb128 0xd
 1492 0374 DF000000 		.4byte	.LASF41
 1493 0378 01       		.byte	0x1
 1494 0379 8C03     		.2byte	0x38c
 1495 037b 00000000 		.4byte	.LFB16
 1496 037f 0C000000 		.4byte	.LFE16-.LFB16
 1497 0383 01       		.uleb128 0x1
 1498 0384 9C       		.byte	0x9c
 1499 0385 98030000 		.4byte	0x398
 1500 0389 0E       		.uleb128 0xe
 1501 038a 1E020000 		.4byte	.LASF25
 1502 038e 01       		.byte	0x1
 1503 038f 8C03     		.2byte	0x38c
 1504 0391 6B000000 		.4byte	0x6b
 1505 0395 01       		.uleb128 0x1
 1506 0396 50       		.byte	0x50
 1507 0397 00       		.byte	0
 1508 0398 0D       		.uleb128 0xd
 1509 0399 53030000 		.4byte	.LASF42
 1510 039d 01       		.byte	0x1
 1511 039e AE03     		.2byte	0x3ae
 1512 03a0 00000000 		.4byte	.LFB17
 1513 03a4 18000000 		.4byte	.LFE17-.LFB17
 1514 03a8 01       		.uleb128 0x1
 1515 03a9 9C       		.byte	0x9c
 1516 03aa BD030000 		.4byte	0x3bd
 1517 03ae 0E       		.uleb128 0xe
 1518 03af 1D000000 		.4byte	.LASF43
 1519 03b3 01       		.byte	0x1
 1520 03b4 AE03     		.2byte	0x3ae
 1521 03b6 6B000000 		.4byte	0x6b
 1522 03ba 01       		.uleb128 0x1
 1523 03bb 50       		.byte	0x50
 1524 03bc 00       		.byte	0
 1525 03bd 0C       		.uleb128 0xc
 1526 03be 3B020000 		.4byte	.LASF45
 1527 03c2 01       		.byte	0x1
 1528 03c3 EB03     		.2byte	0x3eb
 1529 03c5 6B000000 		.4byte	0x6b
 1530 03c9 00000000 		.4byte	.LFB18
 1531 03cd 0C000000 		.4byte	.LFE18-.LFB18
 1532 03d1 01       		.uleb128 0x1
 1533 03d2 9C       		.byte	0x9c
 1534 03d3 0D       		.uleb128 0xd
 1535 03d4 23010000 		.4byte	.LASF46
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 56


 1536 03d8 01       		.byte	0x1
 1537 03d9 1104     		.2byte	0x411
 1538 03db 00000000 		.4byte	.LFB19
 1539 03df 18000000 		.4byte	.LFE19-.LFB19
 1540 03e3 01       		.uleb128 0x1
 1541 03e4 9C       		.byte	0x9c
 1542 03e5 F8030000 		.4byte	0x3f8
 1543 03e9 0E       		.uleb128 0xe
 1544 03ea 1D000000 		.4byte	.LASF43
 1545 03ee 01       		.byte	0x1
 1546 03ef 1104     		.2byte	0x411
 1547 03f1 6B000000 		.4byte	0x6b
 1548 03f5 01       		.uleb128 0x1
 1549 03f6 50       		.byte	0x50
 1550 03f7 00       		.byte	0
 1551 03f8 0D       		.uleb128 0xd
 1552 03f9 3E040000 		.4byte	.LASF47
 1553 03fd 01       		.byte	0x1
 1554 03fe 7904     		.2byte	0x479
 1555 0400 00000000 		.4byte	.LFB20
 1556 0404 28000000 		.4byte	.LFE20-.LFB20
 1557 0408 01       		.uleb128 0x1
 1558 0409 9C       		.byte	0x9c
 1559 040a 38040000 		.4byte	0x438
 1560 040e 12       		.uleb128 0x12
 1561 040f 28000000 		.4byte	.LASF48
 1562 0413 01       		.byte	0x1
 1563 0414 7904     		.2byte	0x479
 1564 0416 38040000 		.4byte	0x438
 1565 041a 6F000000 		.4byte	.LLST4
 1566 041e 11       		.uleb128 0x11
 1567 041f 15020000 		.4byte	.LASF49
 1568 0423 01       		.byte	0x1
 1569 0424 7B04     		.2byte	0x47b
 1570 0426 77000000 		.4byte	0x77
 1571 042a B1000000 		.4byte	.LLST5
 1572 042e 09       		.uleb128 0x9
 1573 042f 12000000 		.4byte	.LVL36
 1574 0433 D3030000 		.4byte	0x3d3
 1575 0437 00       		.byte	0
 1576 0438 13       		.uleb128 0x13
 1577 0439 04       		.byte	0x4
 1578 043a 3E040000 		.4byte	0x43e
 1579 043e 14       		.uleb128 0x14
 1580 043f 91000000 		.4byte	0x91
 1581 0443 0D       		.uleb128 0xd
 1582 0444 D8010000 		.4byte	.LASF50
 1583 0448 01       		.byte	0x1
 1584 0449 A704     		.2byte	0x4a7
 1585 044b 00000000 		.4byte	.LFB21
 1586 044f 28000000 		.4byte	.LFE21-.LFB21
 1587 0453 01       		.uleb128 0x1
 1588 0454 9C       		.byte	0x9c
 1589 0455 93040000 		.4byte	0x493
 1590 0459 12       		.uleb128 0x12
 1591 045a 28000000 		.4byte	.LASF48
 1592 045e 01       		.byte	0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 57


 1593 045f A704     		.2byte	0x4a7
 1594 0461 93040000 		.4byte	0x493
 1595 0465 F2000000 		.4byte	.LLST6
 1596 0469 12       		.uleb128 0x12
 1597 046a 7D030000 		.4byte	.LASF51
 1598 046e 01       		.byte	0x1
 1599 046f A704     		.2byte	0x4a7
 1600 0471 6B000000 		.4byte	0x6b
 1601 0475 34010000 		.4byte	.LLST7
 1602 0479 11       		.uleb128 0x11
 1603 047a 15020000 		.4byte	.LASF49
 1604 047e 01       		.byte	0x1
 1605 047f AA04     		.2byte	0x4aa
 1606 0481 6B000000 		.4byte	0x6b
 1607 0485 6E010000 		.4byte	.LLST8
 1608 0489 09       		.uleb128 0x9
 1609 048a 16000000 		.4byte	.LVL46
 1610 048e D3030000 		.4byte	0x3d3
 1611 0492 00       		.byte	0
 1612 0493 13       		.uleb128 0x13
 1613 0494 04       		.byte	0x4
 1614 0495 99040000 		.4byte	0x499
 1615 0499 14       		.uleb128 0x14
 1616 049a 6B000000 		.4byte	0x6b
 1617 049e 0D       		.uleb128 0xd
 1618 049f B9010000 		.4byte	.LASF52
 1619 04a3 01       		.byte	0x1
 1620 04a4 CE04     		.2byte	0x4ce
 1621 04a6 00000000 		.4byte	.LFB22
 1622 04aa 20000000 		.4byte	.LFE22-.LFB22
 1623 04ae 01       		.uleb128 0x1
 1624 04af 9C       		.byte	0x9c
 1625 04b0 F0040000 		.4byte	0x4f0
 1626 04b4 12       		.uleb128 0x12
 1627 04b5 1D000000 		.4byte	.LASF43
 1628 04b9 01       		.byte	0x1
 1629 04ba CE04     		.2byte	0x4ce
 1630 04bc 6B000000 		.4byte	0x6b
 1631 04c0 AF010000 		.4byte	.LLST9
 1632 04c4 09       		.uleb128 0x9
 1633 04c5 0E000000 		.4byte	.LVL54
 1634 04c9 D3030000 		.4byte	0x3d3
 1635 04cd 15       		.uleb128 0x15
 1636 04ce 14000000 		.4byte	.LVL55
 1637 04d2 D3030000 		.4byte	0x3d3
 1638 04d6 E0040000 		.4byte	0x4e0
 1639 04da 0B       		.uleb128 0xb
 1640 04db 01       		.uleb128 0x1
 1641 04dc 50       		.byte	0x50
 1642 04dd 01       		.uleb128 0x1
 1643 04de 3D       		.byte	0x3d
 1644 04df 00       		.byte	0
 1645 04e0 0A       		.uleb128 0xa
 1646 04e1 1A000000 		.4byte	.LVL56
 1647 04e5 D3030000 		.4byte	0x3d3
 1648 04e9 0B       		.uleb128 0xb
 1649 04ea 01       		.uleb128 0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 58


 1650 04eb 50       		.byte	0x50
 1651 04ec 01       		.uleb128 0x1
 1652 04ed 3A       		.byte	0x3a
 1653 04ee 00       		.byte	0
 1654 04ef 00       		.byte	0
 1655 04f0 0F       		.uleb128 0xf
 1656 04f1 15030000 		.4byte	.LASF53
 1657 04f5 01       		.byte	0x1
 1658 04f6 F904     		.2byte	0x4f9
 1659 04f8 6B000000 		.4byte	0x6b
 1660 04fc 00000000 		.4byte	.LFB23
 1661 0500 20000000 		.4byte	.LFE23-.LFB23
 1662 0504 01       		.uleb128 0x1
 1663 0505 9C       		.byte	0x9c
 1664 0506 1B050000 		.4byte	0x51b
 1665 050a 11       		.uleb128 0x11
 1666 050b FD010000 		.4byte	.LASF34
 1667 050f 01       		.byte	0x1
 1668 0510 FC04     		.2byte	0x4fc
 1669 0512 6B000000 		.4byte	0x6b
 1670 0516 D0010000 		.4byte	.LLST10
 1671 051a 00       		.byte	0
 1672 051b 0D       		.uleb128 0xd
 1673 051c A6010000 		.4byte	.LASF54
 1674 0520 01       		.byte	0x1
 1675 0521 4A05     		.2byte	0x54a
 1676 0523 00000000 		.4byte	.LFB24
 1677 0527 24000000 		.4byte	.LFE24-.LFB24
 1678 052b 01       		.uleb128 0x1
 1679 052c 9C       		.byte	0x9c
 1680 052d 54050000 		.4byte	0x554
 1681 0531 11       		.uleb128 0x11
 1682 0532 DC030000 		.4byte	.LASF21
 1683 0536 01       		.byte	0x1
 1684 0537 4C05     		.2byte	0x54c
 1685 0539 6B000000 		.4byte	0x6b
 1686 053d F9010000 		.4byte	.LLST11
 1687 0541 09       		.uleb128 0x9
 1688 0542 06000000 		.4byte	.LVL62
 1689 0546 DD050000 		.4byte	0x5dd
 1690 054a 09       		.uleb128 0x9
 1691 054b 1E000000 		.4byte	.LVL63
 1692 054f F3050000 		.4byte	0x5f3
 1693 0553 00       		.byte	0
 1694 0554 0D       		.uleb128 0xd
 1695 0555 6E030000 		.4byte	.LASF55
 1696 0559 01       		.byte	0x1
 1697 055a A005     		.2byte	0x5a0
 1698 055c 00000000 		.4byte	.LFB25
 1699 0560 60000000 		.4byte	.LFE25-.LFB25
 1700 0564 01       		.uleb128 0x1
 1701 0565 9C       		.byte	0x9c
 1702 0566 A7050000 		.4byte	0x5a7
 1703 056a 12       		.uleb128 0x12
 1704 056b 84010000 		.4byte	.LASF56
 1705 056f 01       		.byte	0x1
 1706 0570 A005     		.2byte	0x5a0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 59


 1707 0572 6B000000 		.4byte	0x6b
 1708 0576 0C020000 		.4byte	.LLST12
 1709 057a 16       		.uleb128 0x16
 1710 057b 08000000 		.4byte	.LBB2
 1711 057f 44000000 		.4byte	.LBE2-.LBB2
 1712 0583 11       		.uleb128 0x11
 1713 0584 61020000 		.4byte	.LASF57
 1714 0588 01       		.byte	0x1
 1715 0589 A805     		.2byte	0x5a8
 1716 058b 6B000000 		.4byte	0x6b
 1717 058f 2D020000 		.4byte	.LLST13
 1718 0593 10       		.uleb128 0x10
 1719 0594 11010000 		.4byte	.LASF58
 1720 0598 01       		.byte	0x1
 1721 0599 D005     		.2byte	0x5d0
 1722 059b 6B000000 		.4byte	0x6b
 1723 059f 05       		.uleb128 0x5
 1724 05a0 03       		.byte	0x3
 1725 05a1 01000000 		.4byte	txPeriod.4983
 1726 05a5 00       		.byte	0
 1727 05a6 00       		.byte	0
 1728 05a7 0D       		.uleb128 0xd
 1729 05a8 25020000 		.4byte	.LASF59
 1730 05ac 01       		.byte	0x1
 1731 05ad 2406     		.2byte	0x624
 1732 05af 00000000 		.4byte	.LFB26
 1733 05b3 02000000 		.4byte	.LFE26-.LFB26
 1734 05b7 01       		.uleb128 0x1
 1735 05b8 9C       		.byte	0x9c
 1736 05b9 CC050000 		.4byte	0x5cc
 1737 05bd 0E       		.uleb128 0xe
 1738 05be 66010000 		.4byte	.LASF37
 1739 05c2 01       		.byte	0x1
 1740 05c3 2406     		.2byte	0x624
 1741 05c5 6B000000 		.4byte	0x6b
 1742 05c9 01       		.uleb128 0x1
 1743 05ca 50       		.byte	0x50
 1744 05cb 00       		.byte	0
 1745 05cc 17       		.uleb128 0x17
 1746 05cd ED030000 		.4byte	.LASF68
 1747 05d1 01       		.byte	0x1
 1748 05d2 1B       		.byte	0x1b
 1749 05d3 6B000000 		.4byte	0x6b
 1750 05d7 05       		.uleb128 0x5
 1751 05d8 03       		.byte	0x3
 1752 05d9 00000000 		.4byte	UART_initVar
 1753 05dd 18       		.uleb128 0x18
 1754 05de E6010000 		.4byte	.LASF60
 1755 05e2 E6010000 		.4byte	.LASF60
 1756 05e6 03       		.byte	0x3
 1757 05e7 E5       		.byte	0xe5
 1758 05e8 18       		.uleb128 0x18
 1759 05e9 4D020000 		.4byte	.LASF61
 1760 05ed 4D020000 		.4byte	.LASF61
 1761 05f1 04       		.byte	0x4
 1762 05f2 23       		.byte	0x23
 1763 05f3 18       		.uleb128 0x18
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 60


 1764 05f4 07000000 		.4byte	.LASF62
 1765 05f8 07000000 		.4byte	.LASF62
 1766 05fc 03       		.byte	0x3
 1767 05fd E6       		.byte	0xe6
 1768 05fe 18       		.uleb128 0x18
 1769 05ff FC020000 		.4byte	.LASF63
 1770 0603 FC020000 		.4byte	.LASF63
 1771 0607 04       		.byte	0x4
 1772 0608 27       		.byte	0x27
 1773 0609 00       		.byte	0
 1774              		.section	.debug_abbrev,"",%progbits
 1775              	.Ldebug_abbrev0:
 1776 0000 01       		.uleb128 0x1
 1777 0001 11       		.uleb128 0x11
 1778 0002 01       		.byte	0x1
 1779 0003 25       		.uleb128 0x25
 1780 0004 0E       		.uleb128 0xe
 1781 0005 13       		.uleb128 0x13
 1782 0006 0B       		.uleb128 0xb
 1783 0007 03       		.uleb128 0x3
 1784 0008 0E       		.uleb128 0xe
 1785 0009 1B       		.uleb128 0x1b
 1786 000a 0E       		.uleb128 0xe
 1787 000b 55       		.uleb128 0x55
 1788 000c 17       		.uleb128 0x17
 1789 000d 11       		.uleb128 0x11
 1790 000e 01       		.uleb128 0x1
 1791 000f 10       		.uleb128 0x10
 1792 0010 17       		.uleb128 0x17
 1793 0011 00       		.byte	0
 1794 0012 00       		.byte	0
 1795 0013 02       		.uleb128 0x2
 1796 0014 24       		.uleb128 0x24
 1797 0015 00       		.byte	0
 1798 0016 0B       		.uleb128 0xb
 1799 0017 0B       		.uleb128 0xb
 1800 0018 3E       		.uleb128 0x3e
 1801 0019 0B       		.uleb128 0xb
 1802 001a 03       		.uleb128 0x3
 1803 001b 0E       		.uleb128 0xe
 1804 001c 00       		.byte	0
 1805 001d 00       		.byte	0
 1806 001e 03       		.uleb128 0x3
 1807 001f 24       		.uleb128 0x24
 1808 0020 00       		.byte	0
 1809 0021 0B       		.uleb128 0xb
 1810 0022 0B       		.uleb128 0xb
 1811 0023 3E       		.uleb128 0x3e
 1812 0024 0B       		.uleb128 0xb
 1813 0025 03       		.uleb128 0x3
 1814 0026 08       		.uleb128 0x8
 1815 0027 00       		.byte	0
 1816 0028 00       		.byte	0
 1817 0029 04       		.uleb128 0x4
 1818 002a 16       		.uleb128 0x16
 1819 002b 00       		.byte	0
 1820 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 61


 1821 002d 0E       		.uleb128 0xe
 1822 002e 3A       		.uleb128 0x3a
 1823 002f 0B       		.uleb128 0xb
 1824 0030 3B       		.uleb128 0x3b
 1825 0031 05       		.uleb128 0x5
 1826 0032 49       		.uleb128 0x49
 1827 0033 13       		.uleb128 0x13
 1828 0034 00       		.byte	0
 1829 0035 00       		.byte	0
 1830 0036 05       		.uleb128 0x5
 1831 0037 35       		.uleb128 0x35
 1832 0038 00       		.byte	0
 1833 0039 49       		.uleb128 0x49
 1834 003a 13       		.uleb128 0x13
 1835 003b 00       		.byte	0
 1836 003c 00       		.byte	0
 1837 003d 06       		.uleb128 0x6
 1838 003e 2E       		.uleb128 0x2e
 1839 003f 00       		.byte	0
 1840 0040 3F       		.uleb128 0x3f
 1841 0041 19       		.uleb128 0x19
 1842 0042 03       		.uleb128 0x3
 1843 0043 0E       		.uleb128 0xe
 1844 0044 3A       		.uleb128 0x3a
 1845 0045 0B       		.uleb128 0xb
 1846 0046 3B       		.uleb128 0x3b
 1847 0047 0B       		.uleb128 0xb
 1848 0048 27       		.uleb128 0x27
 1849 0049 19       		.uleb128 0x19
 1850 004a 11       		.uleb128 0x11
 1851 004b 01       		.uleb128 0x1
 1852 004c 12       		.uleb128 0x12
 1853 004d 06       		.uleb128 0x6
 1854 004e 40       		.uleb128 0x40
 1855 004f 18       		.uleb128 0x18
 1856 0050 9742     		.uleb128 0x2117
 1857 0052 19       		.uleb128 0x19
 1858 0053 00       		.byte	0
 1859 0054 00       		.byte	0
 1860 0055 07       		.uleb128 0x7
 1861 0056 2E       		.uleb128 0x2e
 1862 0057 01       		.byte	0x1
 1863 0058 3F       		.uleb128 0x3f
 1864 0059 19       		.uleb128 0x19
 1865 005a 03       		.uleb128 0x3
 1866 005b 0E       		.uleb128 0xe
 1867 005c 3A       		.uleb128 0x3a
 1868 005d 0B       		.uleb128 0xb
 1869 005e 3B       		.uleb128 0x3b
 1870 005f 0B       		.uleb128 0xb
 1871 0060 27       		.uleb128 0x27
 1872 0061 19       		.uleb128 0x19
 1873 0062 11       		.uleb128 0x11
 1874 0063 01       		.uleb128 0x1
 1875 0064 12       		.uleb128 0x12
 1876 0065 06       		.uleb128 0x6
 1877 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 62


 1878 0067 18       		.uleb128 0x18
 1879 0068 9742     		.uleb128 0x2117
 1880 006a 19       		.uleb128 0x19
 1881 006b 01       		.uleb128 0x1
 1882 006c 13       		.uleb128 0x13
 1883 006d 00       		.byte	0
 1884 006e 00       		.byte	0
 1885 006f 08       		.uleb128 0x8
 1886 0070 34       		.uleb128 0x34
 1887 0071 00       		.byte	0
 1888 0072 03       		.uleb128 0x3
 1889 0073 0E       		.uleb128 0xe
 1890 0074 3A       		.uleb128 0x3a
 1891 0075 0B       		.uleb128 0xb
 1892 0076 3B       		.uleb128 0x3b
 1893 0077 0B       		.uleb128 0xb
 1894 0078 49       		.uleb128 0x49
 1895 0079 13       		.uleb128 0x13
 1896 007a 02       		.uleb128 0x2
 1897 007b 17       		.uleb128 0x17
 1898 007c 00       		.byte	0
 1899 007d 00       		.byte	0
 1900 007e 09       		.uleb128 0x9
 1901 007f 898201   		.uleb128 0x4109
 1902 0082 00       		.byte	0
 1903 0083 11       		.uleb128 0x11
 1904 0084 01       		.uleb128 0x1
 1905 0085 31       		.uleb128 0x31
 1906 0086 13       		.uleb128 0x13
 1907 0087 00       		.byte	0
 1908 0088 00       		.byte	0
 1909 0089 0A       		.uleb128 0xa
 1910 008a 898201   		.uleb128 0x4109
 1911 008d 01       		.byte	0x1
 1912 008e 11       		.uleb128 0x11
 1913 008f 01       		.uleb128 0x1
 1914 0090 31       		.uleb128 0x31
 1915 0091 13       		.uleb128 0x13
 1916 0092 00       		.byte	0
 1917 0093 00       		.byte	0
 1918 0094 0B       		.uleb128 0xb
 1919 0095 8A8201   		.uleb128 0x410a
 1920 0098 00       		.byte	0
 1921 0099 02       		.uleb128 0x2
 1922 009a 18       		.uleb128 0x18
 1923 009b 9142     		.uleb128 0x2111
 1924 009d 18       		.uleb128 0x18
 1925 009e 00       		.byte	0
 1926 009f 00       		.byte	0
 1927 00a0 0C       		.uleb128 0xc
 1928 00a1 2E       		.uleb128 0x2e
 1929 00a2 00       		.byte	0
 1930 00a3 3F       		.uleb128 0x3f
 1931 00a4 19       		.uleb128 0x19
 1932 00a5 03       		.uleb128 0x3
 1933 00a6 0E       		.uleb128 0xe
 1934 00a7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 63


 1935 00a8 0B       		.uleb128 0xb
 1936 00a9 3B       		.uleb128 0x3b
 1937 00aa 05       		.uleb128 0x5
 1938 00ab 27       		.uleb128 0x27
 1939 00ac 19       		.uleb128 0x19
 1940 00ad 49       		.uleb128 0x49
 1941 00ae 13       		.uleb128 0x13
 1942 00af 11       		.uleb128 0x11
 1943 00b0 01       		.uleb128 0x1
 1944 00b1 12       		.uleb128 0x12
 1945 00b2 06       		.uleb128 0x6
 1946 00b3 40       		.uleb128 0x40
 1947 00b4 18       		.uleb128 0x18
 1948 00b5 9742     		.uleb128 0x2117
 1949 00b7 19       		.uleb128 0x19
 1950 00b8 00       		.byte	0
 1951 00b9 00       		.byte	0
 1952 00ba 0D       		.uleb128 0xd
 1953 00bb 2E       		.uleb128 0x2e
 1954 00bc 01       		.byte	0x1
 1955 00bd 3F       		.uleb128 0x3f
 1956 00be 19       		.uleb128 0x19
 1957 00bf 03       		.uleb128 0x3
 1958 00c0 0E       		.uleb128 0xe
 1959 00c1 3A       		.uleb128 0x3a
 1960 00c2 0B       		.uleb128 0xb
 1961 00c3 3B       		.uleb128 0x3b
 1962 00c4 05       		.uleb128 0x5
 1963 00c5 27       		.uleb128 0x27
 1964 00c6 19       		.uleb128 0x19
 1965 00c7 11       		.uleb128 0x11
 1966 00c8 01       		.uleb128 0x1
 1967 00c9 12       		.uleb128 0x12
 1968 00ca 06       		.uleb128 0x6
 1969 00cb 40       		.uleb128 0x40
 1970 00cc 18       		.uleb128 0x18
 1971 00cd 9742     		.uleb128 0x2117
 1972 00cf 19       		.uleb128 0x19
 1973 00d0 01       		.uleb128 0x1
 1974 00d1 13       		.uleb128 0x13
 1975 00d2 00       		.byte	0
 1976 00d3 00       		.byte	0
 1977 00d4 0E       		.uleb128 0xe
 1978 00d5 05       		.uleb128 0x5
 1979 00d6 00       		.byte	0
 1980 00d7 03       		.uleb128 0x3
 1981 00d8 0E       		.uleb128 0xe
 1982 00d9 3A       		.uleb128 0x3a
 1983 00da 0B       		.uleb128 0xb
 1984 00db 3B       		.uleb128 0x3b
 1985 00dc 05       		.uleb128 0x5
 1986 00dd 49       		.uleb128 0x49
 1987 00de 13       		.uleb128 0x13
 1988 00df 02       		.uleb128 0x2
 1989 00e0 18       		.uleb128 0x18
 1990 00e1 00       		.byte	0
 1991 00e2 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 64


 1992 00e3 0F       		.uleb128 0xf
 1993 00e4 2E       		.uleb128 0x2e
 1994 00e5 01       		.byte	0x1
 1995 00e6 3F       		.uleb128 0x3f
 1996 00e7 19       		.uleb128 0x19
 1997 00e8 03       		.uleb128 0x3
 1998 00e9 0E       		.uleb128 0xe
 1999 00ea 3A       		.uleb128 0x3a
 2000 00eb 0B       		.uleb128 0xb
 2001 00ec 3B       		.uleb128 0x3b
 2002 00ed 05       		.uleb128 0x5
 2003 00ee 27       		.uleb128 0x27
 2004 00ef 19       		.uleb128 0x19
 2005 00f0 49       		.uleb128 0x49
 2006 00f1 13       		.uleb128 0x13
 2007 00f2 11       		.uleb128 0x11
 2008 00f3 01       		.uleb128 0x1
 2009 00f4 12       		.uleb128 0x12
 2010 00f5 06       		.uleb128 0x6
 2011 00f6 40       		.uleb128 0x40
 2012 00f7 18       		.uleb128 0x18
 2013 00f8 9742     		.uleb128 0x2117
 2014 00fa 19       		.uleb128 0x19
 2015 00fb 01       		.uleb128 0x1
 2016 00fc 13       		.uleb128 0x13
 2017 00fd 00       		.byte	0
 2018 00fe 00       		.byte	0
 2019 00ff 10       		.uleb128 0x10
 2020 0100 34       		.uleb128 0x34
 2021 0101 00       		.byte	0
 2022 0102 03       		.uleb128 0x3
 2023 0103 0E       		.uleb128 0xe
 2024 0104 3A       		.uleb128 0x3a
 2025 0105 0B       		.uleb128 0xb
 2026 0106 3B       		.uleb128 0x3b
 2027 0107 05       		.uleb128 0x5
 2028 0108 49       		.uleb128 0x49
 2029 0109 13       		.uleb128 0x13
 2030 010a 02       		.uleb128 0x2
 2031 010b 18       		.uleb128 0x18
 2032 010c 00       		.byte	0
 2033 010d 00       		.byte	0
 2034 010e 11       		.uleb128 0x11
 2035 010f 34       		.uleb128 0x34
 2036 0110 00       		.byte	0
 2037 0111 03       		.uleb128 0x3
 2038 0112 0E       		.uleb128 0xe
 2039 0113 3A       		.uleb128 0x3a
 2040 0114 0B       		.uleb128 0xb
 2041 0115 3B       		.uleb128 0x3b
 2042 0116 05       		.uleb128 0x5
 2043 0117 49       		.uleb128 0x49
 2044 0118 13       		.uleb128 0x13
 2045 0119 02       		.uleb128 0x2
 2046 011a 17       		.uleb128 0x17
 2047 011b 00       		.byte	0
 2048 011c 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 65


 2049 011d 12       		.uleb128 0x12
 2050 011e 05       		.uleb128 0x5
 2051 011f 00       		.byte	0
 2052 0120 03       		.uleb128 0x3
 2053 0121 0E       		.uleb128 0xe
 2054 0122 3A       		.uleb128 0x3a
 2055 0123 0B       		.uleb128 0xb
 2056 0124 3B       		.uleb128 0x3b
 2057 0125 05       		.uleb128 0x5
 2058 0126 49       		.uleb128 0x49
 2059 0127 13       		.uleb128 0x13
 2060 0128 02       		.uleb128 0x2
 2061 0129 17       		.uleb128 0x17
 2062 012a 00       		.byte	0
 2063 012b 00       		.byte	0
 2064 012c 13       		.uleb128 0x13
 2065 012d 0F       		.uleb128 0xf
 2066 012e 00       		.byte	0
 2067 012f 0B       		.uleb128 0xb
 2068 0130 0B       		.uleb128 0xb
 2069 0131 49       		.uleb128 0x49
 2070 0132 13       		.uleb128 0x13
 2071 0133 00       		.byte	0
 2072 0134 00       		.byte	0
 2073 0135 14       		.uleb128 0x14
 2074 0136 26       		.uleb128 0x26
 2075 0137 00       		.byte	0
 2076 0138 49       		.uleb128 0x49
 2077 0139 13       		.uleb128 0x13
 2078 013a 00       		.byte	0
 2079 013b 00       		.byte	0
 2080 013c 15       		.uleb128 0x15
 2081 013d 898201   		.uleb128 0x4109
 2082 0140 01       		.byte	0x1
 2083 0141 11       		.uleb128 0x11
 2084 0142 01       		.uleb128 0x1
 2085 0143 31       		.uleb128 0x31
 2086 0144 13       		.uleb128 0x13
 2087 0145 01       		.uleb128 0x1
 2088 0146 13       		.uleb128 0x13
 2089 0147 00       		.byte	0
 2090 0148 00       		.byte	0
 2091 0149 16       		.uleb128 0x16
 2092 014a 0B       		.uleb128 0xb
 2093 014b 01       		.byte	0x1
 2094 014c 11       		.uleb128 0x11
 2095 014d 01       		.uleb128 0x1
 2096 014e 12       		.uleb128 0x12
 2097 014f 06       		.uleb128 0x6
 2098 0150 00       		.byte	0
 2099 0151 00       		.byte	0
 2100 0152 17       		.uleb128 0x17
 2101 0153 34       		.uleb128 0x34
 2102 0154 00       		.byte	0
 2103 0155 03       		.uleb128 0x3
 2104 0156 0E       		.uleb128 0xe
 2105 0157 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 66


 2106 0158 0B       		.uleb128 0xb
 2107 0159 3B       		.uleb128 0x3b
 2108 015a 0B       		.uleb128 0xb
 2109 015b 49       		.uleb128 0x49
 2110 015c 13       		.uleb128 0x13
 2111 015d 3F       		.uleb128 0x3f
 2112 015e 19       		.uleb128 0x19
 2113 015f 02       		.uleb128 0x2
 2114 0160 18       		.uleb128 0x18
 2115 0161 00       		.byte	0
 2116 0162 00       		.byte	0
 2117 0163 18       		.uleb128 0x18
 2118 0164 2E       		.uleb128 0x2e
 2119 0165 00       		.byte	0
 2120 0166 3F       		.uleb128 0x3f
 2121 0167 19       		.uleb128 0x19
 2122 0168 3C       		.uleb128 0x3c
 2123 0169 19       		.uleb128 0x19
 2124 016a 6E       		.uleb128 0x6e
 2125 016b 0E       		.uleb128 0xe
 2126 016c 03       		.uleb128 0x3
 2127 016d 0E       		.uleb128 0xe
 2128 016e 3A       		.uleb128 0x3a
 2129 016f 0B       		.uleb128 0xb
 2130 0170 3B       		.uleb128 0x3b
 2131 0171 0B       		.uleb128 0xb
 2132 0172 00       		.byte	0
 2133 0173 00       		.byte	0
 2134 0174 00       		.byte	0
 2135              		.section	.debug_loc,"",%progbits
 2136              	.Ldebug_loc0:
 2137              	.LLST0:
 2138 0000 08000000 		.4byte	.LVL1
 2139 0004 34000000 		.4byte	.LVL4
 2140 0008 0100     		.2byte	0x1
 2141 000a 54       		.byte	0x54
 2142 000b 00000000 		.4byte	0
 2143 000f 00000000 		.4byte	0
 2144              	.LLST1:
 2145 0013 08000000 		.4byte	.LVL8
 2146 0017 2E000000 		.4byte	.LVL11
 2147 001b 0100     		.2byte	0x1
 2148 001d 54       		.byte	0x54
 2149 001e 00000000 		.4byte	0
 2150 0022 00000000 		.4byte	0
 2151              	.LLST2:
 2152 0026 00000000 		.4byte	.LVL16
 2153 002a 10000000 		.4byte	.LVL18
 2154 002e 0200     		.2byte	0x2
 2155 0030 30       		.byte	0x30
 2156 0031 9F       		.byte	0x9f
 2157 0032 10000000 		.4byte	.LVL18
 2158 0036 18000000 		.4byte	.LVL19
 2159 003a 0100     		.2byte	0x1
 2160 003c 50       		.byte	0x50
 2161 003d 18000000 		.4byte	.LVL19
 2162 0041 1C000000 		.4byte	.LVL20
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 67


 2163 0045 0200     		.2byte	0x2
 2164 0047 30       		.byte	0x30
 2165 0048 9F       		.byte	0x9f
 2166 0049 1C000000 		.4byte	.LVL20
 2167 004d 28000000 		.4byte	.LFE9
 2168 0051 0100     		.2byte	0x1
 2169 0053 50       		.byte	0x50
 2170 0054 00000000 		.4byte	0
 2171 0058 00000000 		.4byte	0
 2172              	.LLST3:
 2173 005c 06000000 		.4byte	.LVL25
 2174 0060 1D000000 		.4byte	.LVL26-1
 2175 0064 0100     		.2byte	0x1
 2176 0066 50       		.byte	0x50
 2177 0067 00000000 		.4byte	0
 2178 006b 00000000 		.4byte	0
 2179              	.LLST4:
 2180 006f 00000000 		.4byte	.LVL33
 2181 0073 0E000000 		.4byte	.LVL35
 2182 0077 0100     		.2byte	0x1
 2183 0079 50       		.byte	0x50
 2184 007a 0E000000 		.4byte	.LVL35
 2185 007e 18000000 		.4byte	.LVL39
 2186 0082 0100     		.2byte	0x1
 2187 0084 55       		.byte	0x55
 2188 0085 18000000 		.4byte	.LVL39
 2189 0089 1A000000 		.4byte	.LVL40
 2190 008d 0100     		.2byte	0x1
 2191 008f 50       		.byte	0x50
 2192 0090 1A000000 		.4byte	.LVL40
 2193 0094 20000000 		.4byte	.LVL42
 2194 0098 0100     		.2byte	0x1
 2195 009a 55       		.byte	0x55
 2196 009b 20000000 		.4byte	.LVL42
 2197 009f 28000000 		.4byte	.LFE20
 2198 00a3 0400     		.2byte	0x4
 2199 00a5 F3       		.byte	0xf3
 2200 00a6 01       		.uleb128 0x1
 2201 00a7 50       		.byte	0x50
 2202 00a8 9F       		.byte	0x9f
 2203 00a9 00000000 		.4byte	0
 2204 00ad 00000000 		.4byte	0
 2205              	.LLST5:
 2206 00b1 04000000 		.4byte	.LVL34
 2207 00b5 0E000000 		.4byte	.LVL35
 2208 00b9 0200     		.2byte	0x2
 2209 00bb 30       		.byte	0x30
 2210 00bc 9F       		.byte	0x9f
 2211 00bd 0E000000 		.4byte	.LVL35
 2212 00c1 14000000 		.4byte	.LVL37
 2213 00c5 0100     		.2byte	0x1
 2214 00c7 54       		.byte	0x54
 2215 00c8 16000000 		.4byte	.LVL38
 2216 00cc 18000000 		.4byte	.LVL39
 2217 00d0 0100     		.2byte	0x1
 2218 00d2 54       		.byte	0x54
 2219 00d3 18000000 		.4byte	.LVL39
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 68


 2220 00d7 1A000000 		.4byte	.LVL40
 2221 00db 0200     		.2byte	0x2
 2222 00dd 30       		.byte	0x30
 2223 00de 9F       		.byte	0x9f
 2224 00df 1A000000 		.4byte	.LVL40
 2225 00e3 20000000 		.4byte	.LVL41
 2226 00e7 0100     		.2byte	0x1
 2227 00e9 54       		.byte	0x54
 2228 00ea 00000000 		.4byte	0
 2229 00ee 00000000 		.4byte	0
 2230              	.LLST6:
 2231 00f2 00000000 		.4byte	.LVL43
 2232 00f6 10000000 		.4byte	.LVL45
 2233 00fa 0100     		.2byte	0x1
 2234 00fc 50       		.byte	0x50
 2235 00fd 10000000 		.4byte	.LVL45
 2236 0101 1C000000 		.4byte	.LVL49
 2237 0105 0100     		.2byte	0x1
 2238 0107 56       		.byte	0x56
 2239 0108 1C000000 		.4byte	.LVL49
 2240 010c 1E000000 		.4byte	.LVL50
 2241 0110 0100     		.2byte	0x1
 2242 0112 50       		.byte	0x50
 2243 0113 1E000000 		.4byte	.LVL50
 2244 0117 22000000 		.4byte	.LVL52
 2245 011b 0100     		.2byte	0x1
 2246 011d 56       		.byte	0x56
 2247 011e 22000000 		.4byte	.LVL52
 2248 0122 28000000 		.4byte	.LFE21
 2249 0126 0400     		.2byte	0x4
 2250 0128 F3       		.byte	0xf3
 2251 0129 01       		.uleb128 0x1
 2252 012a 50       		.byte	0x50
 2253 012b 9F       		.byte	0x9f
 2254 012c 00000000 		.4byte	0
 2255 0130 00000000 		.4byte	0
 2256              	.LLST7:
 2257 0134 00000000 		.4byte	.LVL43
 2258 0138 10000000 		.4byte	.LVL45
 2259 013c 0100     		.2byte	0x1
 2260 013e 51       		.byte	0x51
 2261 013f 10000000 		.4byte	.LVL45
 2262 0143 1C000000 		.4byte	.LVL49
 2263 0147 0400     		.2byte	0x4
 2264 0149 F3       		.byte	0xf3
 2265 014a 01       		.uleb128 0x1
 2266 014b 51       		.byte	0x51
 2267 014c 9F       		.byte	0x9f
 2268 014d 1C000000 		.4byte	.LVL49
 2269 0151 1E000000 		.4byte	.LVL50
 2270 0155 0100     		.2byte	0x1
 2271 0157 51       		.byte	0x51
 2272 0158 1E000000 		.4byte	.LVL50
 2273 015c 28000000 		.4byte	.LFE21
 2274 0160 0400     		.2byte	0x4
 2275 0162 F3       		.byte	0xf3
 2276 0163 01       		.uleb128 0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 69


 2277 0164 51       		.byte	0x51
 2278 0165 9F       		.byte	0x9f
 2279 0166 00000000 		.4byte	0
 2280 016a 00000000 		.4byte	0
 2281              	.LLST8:
 2282 016e 06000000 		.4byte	.LVL44
 2283 0172 10000000 		.4byte	.LVL45
 2284 0176 0200     		.2byte	0x2
 2285 0178 30       		.byte	0x30
 2286 0179 9F       		.byte	0x9f
 2287 017a 10000000 		.4byte	.LVL45
 2288 017e 18000000 		.4byte	.LVL47
 2289 0182 0100     		.2byte	0x1
 2290 0184 54       		.byte	0x54
 2291 0185 1A000000 		.4byte	.LVL48
 2292 0189 1C000000 		.4byte	.LVL49
 2293 018d 0100     		.2byte	0x1
 2294 018f 54       		.byte	0x54
 2295 0190 1C000000 		.4byte	.LVL49
 2296 0194 1E000000 		.4byte	.LVL50
 2297 0198 0200     		.2byte	0x2
 2298 019a 30       		.byte	0x30
 2299 019b 9F       		.byte	0x9f
 2300 019c 1E000000 		.4byte	.LVL50
 2301 01a0 22000000 		.4byte	.LVL51
 2302 01a4 0100     		.2byte	0x1
 2303 01a6 54       		.byte	0x54
 2304 01a7 00000000 		.4byte	0
 2305 01ab 00000000 		.4byte	0
 2306              	.LLST9:
 2307 01af 00000000 		.4byte	.LVL53
 2308 01b3 0D000000 		.4byte	.LVL54-1
 2309 01b7 0100     		.2byte	0x1
 2310 01b9 50       		.byte	0x50
 2311 01ba 0D000000 		.4byte	.LVL54-1
 2312 01be 20000000 		.4byte	.LFE22
 2313 01c2 0400     		.2byte	0x4
 2314 01c4 F3       		.byte	0xf3
 2315 01c5 01       		.uleb128 0x1
 2316 01c6 50       		.byte	0x50
 2317 01c7 9F       		.byte	0x9f
 2318 01c8 00000000 		.4byte	0
 2319 01cc 00000000 		.4byte	0
 2320              	.LLST10:
 2321 01d0 06000000 		.4byte	.LVL57
 2322 01d4 0E000000 		.4byte	.LVL58
 2323 01d8 0100     		.2byte	0x1
 2324 01da 53       		.byte	0x53
 2325 01db 12000000 		.4byte	.LVL59
 2326 01df 16000000 		.4byte	.LVL60
 2327 01e3 0100     		.2byte	0x1
 2328 01e5 53       		.byte	0x53
 2329 01e6 18000000 		.4byte	.LVL61
 2330 01ea 20000000 		.4byte	.LFE23
 2331 01ee 0100     		.2byte	0x1
 2332 01f0 50       		.byte	0x50
 2333 01f1 00000000 		.4byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 70


 2334 01f5 00000000 		.4byte	0
 2335              	.LLST11:
 2336 01f9 06000000 		.4byte	.LVL62
 2337 01fd 1D000000 		.4byte	.LVL63-1
 2338 0201 0100     		.2byte	0x1
 2339 0203 50       		.byte	0x50
 2340 0204 00000000 		.4byte	0
 2341 0208 00000000 		.4byte	0
 2342              	.LLST12:
 2343 020c 00000000 		.4byte	.LVL64
 2344 0210 3E000000 		.4byte	.LVL69
 2345 0214 0100     		.2byte	0x1
 2346 0216 50       		.byte	0x50
 2347 0217 3E000000 		.4byte	.LVL69
 2348 021b 60000000 		.4byte	.LFE25
 2349 021f 0400     		.2byte	0x4
 2350 0221 F3       		.byte	0xf3
 2351 0222 01       		.uleb128 0x1
 2352 0223 50       		.byte	0x50
 2353 0224 9F       		.byte	0x9f
 2354 0225 00000000 		.4byte	0
 2355 0229 00000000 		.4byte	0
 2356              	.LLST13:
 2357 022d 26000000 		.4byte	.LVL65
 2358 0231 2A000000 		.4byte	.LVL66
 2359 0235 0100     		.2byte	0x1
 2360 0237 53       		.byte	0x53
 2361 0238 36000000 		.4byte	.LVL67
 2362 023c 3C000000 		.4byte	.LVL68
 2363 0240 0100     		.2byte	0x1
 2364 0242 52       		.byte	0x52
 2365 0243 00000000 		.4byte	0
 2366 0247 00000000 		.4byte	0
 2367              		.section	.debug_aranges,"",%progbits
 2368 0000 EC000000 		.4byte	0xec
 2369 0004 0200     		.2byte	0x2
 2370 0006 00000000 		.4byte	.Ldebug_info0
 2371 000a 04       		.byte	0x4
 2372 000b 00       		.byte	0
 2373 000c 0000     		.2byte	0
 2374 000e 0000     		.2byte	0
 2375 0010 00000000 		.4byte	.LFB1
 2376 0014 34000000 		.4byte	.LFE1-.LFB1
 2377 0018 00000000 		.4byte	.LFB2
 2378 001c 44000000 		.4byte	.LFE2-.LFB2
 2379 0020 00000000 		.4byte	.LFB0
 2380 0024 20000000 		.4byte	.LFE0-.LFB0
 2381 0028 00000000 		.4byte	.LFB3
 2382 002c 3C000000 		.4byte	.LFE3-.LFB3
 2383 0030 00000000 		.4byte	.LFB4
 2384 0034 04000000 		.4byte	.LFE4-.LFB4
 2385 0038 00000000 		.4byte	.LFB5
 2386 003c 02000000 		.4byte	.LFE5-.LFB5
 2387 0040 00000000 		.4byte	.LFB6
 2388 0044 0C000000 		.4byte	.LFE6-.LFB6
 2389 0048 00000000 		.4byte	.LFB7
 2390 004c 0C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 71


 2391 0050 00000000 		.4byte	.LFB8
 2392 0054 10000000 		.4byte	.LFE8-.LFB8
 2393 0058 00000000 		.4byte	.LFB9
 2394 005c 28000000 		.4byte	.LFE9-.LFB9
 2395 0060 00000000 		.4byte	.LFB10
 2396 0064 12000000 		.4byte	.LFE10-.LFB10
 2397 0068 00000000 		.4byte	.LFB11
 2398 006c 14000000 		.4byte	.LFE11-.LFB11
 2399 0070 00000000 		.4byte	.LFB12
 2400 0074 24000000 		.4byte	.LFE12-.LFB12
 2401 0078 00000000 		.4byte	.LFB13
 2402 007c 02000000 		.4byte	.LFE13-.LFB13
 2403 0080 00000000 		.4byte	.LFB14
 2404 0084 0C000000 		.4byte	.LFE14-.LFB14
 2405 0088 00000000 		.4byte	.LFB15
 2406 008c 0C000000 		.4byte	.LFE15-.LFB15
 2407 0090 00000000 		.4byte	.LFB16
 2408 0094 0C000000 		.4byte	.LFE16-.LFB16
 2409 0098 00000000 		.4byte	.LFB17
 2410 009c 18000000 		.4byte	.LFE17-.LFB17
 2411 00a0 00000000 		.4byte	.LFB18
 2412 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2413 00a8 00000000 		.4byte	.LFB19
 2414 00ac 18000000 		.4byte	.LFE19-.LFB19
 2415 00b0 00000000 		.4byte	.LFB20
 2416 00b4 28000000 		.4byte	.LFE20-.LFB20
 2417 00b8 00000000 		.4byte	.LFB21
 2418 00bc 28000000 		.4byte	.LFE21-.LFB21
 2419 00c0 00000000 		.4byte	.LFB22
 2420 00c4 20000000 		.4byte	.LFE22-.LFB22
 2421 00c8 00000000 		.4byte	.LFB23
 2422 00cc 20000000 		.4byte	.LFE23-.LFB23
 2423 00d0 00000000 		.4byte	.LFB24
 2424 00d4 24000000 		.4byte	.LFE24-.LFB24
 2425 00d8 00000000 		.4byte	.LFB25
 2426 00dc 60000000 		.4byte	.LFE25-.LFB25
 2427 00e0 00000000 		.4byte	.LFB26
 2428 00e4 02000000 		.4byte	.LFE26-.LFB26
 2429 00e8 00000000 		.4byte	0
 2430 00ec 00000000 		.4byte	0
 2431              		.section	.debug_ranges,"",%progbits
 2432              	.Ldebug_ranges0:
 2433 0000 00000000 		.4byte	.LFB1
 2434 0004 34000000 		.4byte	.LFE1
 2435 0008 00000000 		.4byte	.LFB2
 2436 000c 44000000 		.4byte	.LFE2
 2437 0010 00000000 		.4byte	.LFB0
 2438 0014 20000000 		.4byte	.LFE0
 2439 0018 00000000 		.4byte	.LFB3
 2440 001c 3C000000 		.4byte	.LFE3
 2441 0020 00000000 		.4byte	.LFB4
 2442 0024 04000000 		.4byte	.LFE4
 2443 0028 00000000 		.4byte	.LFB5
 2444 002c 02000000 		.4byte	.LFE5
 2445 0030 00000000 		.4byte	.LFB6
 2446 0034 0C000000 		.4byte	.LFE6
 2447 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 72


 2448 003c 0C000000 		.4byte	.LFE7
 2449 0040 00000000 		.4byte	.LFB8
 2450 0044 10000000 		.4byte	.LFE8
 2451 0048 00000000 		.4byte	.LFB9
 2452 004c 28000000 		.4byte	.LFE9
 2453 0050 00000000 		.4byte	.LFB10
 2454 0054 12000000 		.4byte	.LFE10
 2455 0058 00000000 		.4byte	.LFB11
 2456 005c 14000000 		.4byte	.LFE11
 2457 0060 00000000 		.4byte	.LFB12
 2458 0064 24000000 		.4byte	.LFE12
 2459 0068 00000000 		.4byte	.LFB13
 2460 006c 02000000 		.4byte	.LFE13
 2461 0070 00000000 		.4byte	.LFB14
 2462 0074 0C000000 		.4byte	.LFE14
 2463 0078 00000000 		.4byte	.LFB15
 2464 007c 0C000000 		.4byte	.LFE15
 2465 0080 00000000 		.4byte	.LFB16
 2466 0084 0C000000 		.4byte	.LFE16
 2467 0088 00000000 		.4byte	.LFB17
 2468 008c 18000000 		.4byte	.LFE17
 2469 0090 00000000 		.4byte	.LFB18
 2470 0094 0C000000 		.4byte	.LFE18
 2471 0098 00000000 		.4byte	.LFB19
 2472 009c 18000000 		.4byte	.LFE19
 2473 00a0 00000000 		.4byte	.LFB20
 2474 00a4 28000000 		.4byte	.LFE20
 2475 00a8 00000000 		.4byte	.LFB21
 2476 00ac 28000000 		.4byte	.LFE21
 2477 00b0 00000000 		.4byte	.LFB22
 2478 00b4 20000000 		.4byte	.LFE22
 2479 00b8 00000000 		.4byte	.LFB23
 2480 00bc 20000000 		.4byte	.LFE23
 2481 00c0 00000000 		.4byte	.LFB24
 2482 00c4 24000000 		.4byte	.LFE24
 2483 00c8 00000000 		.4byte	.LFB25
 2484 00cc 60000000 		.4byte	.LFE25
 2485 00d0 00000000 		.4byte	.LFB26
 2486 00d4 02000000 		.4byte	.LFE26
 2487 00d8 00000000 		.4byte	0
 2488 00dc 00000000 		.4byte	0
 2489              		.section	.debug_line,"",%progbits
 2490              	.Ldebug_line0:
 2491 0000 DA020000 		.section	.debug_str,"MS",%progbits,1
 2491      02005F00 
 2491      00000201 
 2491      FB0E0D00 
 2491      01010101 
 2492              	.LASF10:
 2493 0000 75696E74 		.ascii	"uint16\000"
 2493      313600
 2494              	.LASF62:
 2495 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2495      69744372 
 2495      69746963 
 2495      616C5365 
 2495      6374696F 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 73


 2496              	.LASF43:
 2497 001d 74784461 		.ascii	"txDataByte\000"
 2497      74614279 
 2497      746500
 2498              	.LASF48:
 2499 0028 73747269 		.ascii	"string\000"
 2499      6E6700
 2500              	.LASF64:
 2501 002f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2501      43313120 
 2501      352E342E 
 2501      31203230 
 2501      31363036 
 2502 0062 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2502      20726576 
 2502      6973696F 
 2502      6E203233 
 2502      37373135 
 2503 0095 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2503      66756E63 
 2503      74696F6E 
 2503      2D736563 
 2503      74696F6E 
 2504              	.LASF7:
 2505 00bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 2505      206C6F6E 
 2505      6720756E 
 2505      7369676E 
 2505      65642069 
 2506              	.LASF19:
 2507 00d4 55415254 		.ascii	"UART_Start\000"
 2507      5F537461 
 2507      727400
 2508              	.LASF41:
 2509 00df 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2509      5F536574 
 2509      5478496E 
 2509      74657272 
 2509      7570744D 
 2510              	.LASF6:
 2511 00f7 6C6F6E67 		.ascii	"long long int\000"
 2511      206C6F6E 
 2511      6720696E 
 2511      7400
 2512              	.LASF0:
 2513 0105 7369676E 		.ascii	"signed char\000"
 2513      65642063 
 2513      68617200 
 2514              	.LASF58:
 2515 0111 74785065 		.ascii	"txPeriod\000"
 2515      72696F64 
 2515      00
 2516              	.LASF4:
 2517 011a 6C6F6E67 		.ascii	"long int\000"
 2517      20696E74 
 2517      00
 2518              	.LASF46:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 74


 2519 0123 55415254 		.ascii	"UART_PutChar\000"
 2519      5F507574 
 2519      43686172 
 2519      00
 2520              	.LASF27:
 2521 0130 55415254 		.ascii	"UART_ReadRxData\000"
 2521      5F526561 
 2521      64527844 
 2521      61746100 
 2522              	.LASF9:
 2523 0140 75696E74 		.ascii	"uint8\000"
 2523      3800
 2524              	.LASF44:
 2525 0146 55415254 		.ascii	"UART_ReadControlRegister\000"
 2525      5F526561 
 2525      64436F6E 
 2525      74726F6C 
 2525      52656769 
 2526              	.LASF12:
 2527 015f 646F7562 		.ascii	"double\000"
 2527      6C6500
 2528              	.LASF37:
 2529 0166 61646472 		.ascii	"addressMode\000"
 2529      6573734D 
 2529      6F646500 
 2530              	.LASF24:
 2531 0172 636F6E74 		.ascii	"control\000"
 2531      726F6C00 
 2532              	.LASF67:
 2533 017a 55415254 		.ascii	"UART_Init\000"
 2533      5F496E69 
 2533      7400
 2534              	.LASF56:
 2535 0184 7265744D 		.ascii	"retMode\000"
 2535      6F646500 
 2536              	.LASF32:
 2537 018c 55415254 		.ascii	"UART_GetByte\000"
 2537      5F476574 
 2537      42797465 
 2537      00
 2538              	.LASF8:
 2539 0199 756E7369 		.ascii	"unsigned int\000"
 2539      676E6564 
 2539      20696E74 
 2539      00
 2540              	.LASF54:
 2541 01a6 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2541      5F436C65 
 2541      61725478 
 2541      42756666 
 2541      657200
 2542              	.LASF52:
 2543 01b9 55415254 		.ascii	"UART_PutCRLF\000"
 2543      5F507574 
 2543      43524C46 
 2543      00
 2544              	.LASF5:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 75


 2545 01c6 6C6F6E67 		.ascii	"long unsigned int\000"
 2545      20756E73 
 2545      69676E65 
 2545      6420696E 
 2545      7400
 2546              	.LASF50:
 2547 01d8 55415254 		.ascii	"UART_PutArray\000"
 2547      5F507574 
 2547      41727261 
 2547      7900
 2548              	.LASF60:
 2549 01e6 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2549      74657243 
 2549      72697469 
 2549      63616C53 
 2549      65637469 
 2550              	.LASF34:
 2551 01fd 73697A65 		.ascii	"size\000"
 2551      00
 2552              	.LASF3:
 2553 0202 73686F72 		.ascii	"short unsigned int\000"
 2553      7420756E 
 2553      7369676E 
 2553      65642069 
 2553      6E7400
 2554              	.LASF49:
 2555 0215 62756649 		.ascii	"bufIndex\000"
 2555      6E646578 
 2555      00
 2556              	.LASF25:
 2557 021e 696E7453 		.ascii	"intSrc\000"
 2557      726300
 2558              	.LASF59:
 2559 0225 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2559      5F536574 
 2559      54784164 
 2559      64726573 
 2559      734D6F64 
 2560              	.LASF45:
 2561 023b 55415254 		.ascii	"UART_ReadTxStatus\000"
 2561      5F526561 
 2561      64547853 
 2561      74617475 
 2561      7300
 2562              	.LASF61:
 2563 024d 55415254 		.ascii	"UART_IntClock_Start\000"
 2563      5F496E74 
 2563      436C6F63 
 2563      6B5F5374 
 2563      61727400 
 2564              	.LASF57:
 2565 0261 746D7053 		.ascii	"tmpStat\000"
 2565      74617400 
 2566              	.LASF17:
 2567 0269 73697A65 		.ascii	"sizetype\000"
 2567      74797065 
 2567      00
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 76


 2568              	.LASF16:
 2569 0272 6C6F6E67 		.ascii	"long double\000"
 2569      20646F75 
 2569      626C6500 
 2570              	.LASF39:
 2571 027e 61646472 		.ascii	"address\000"
 2571      65737300 
 2572              	.LASF38:
 2573 0286 55415254 		.ascii	"UART_SetRxAddress1\000"
 2573      5F536574 
 2573      52784164 
 2573      64726573 
 2573      733100
 2574              	.LASF40:
 2575 0299 55415254 		.ascii	"UART_SetRxAddress2\000"
 2575      5F536574 
 2575      52784164 
 2575      64726573 
 2575      733200
 2576              	.LASF66:
 2577 02ac 433A5C55 		.ascii	"C:\\Users\\mikke\\Desktop\\nRF24_Example_Projects-m"
 2577      73657273 
 2577      5C6D696B 
 2577      6B655C44 
 2577      65736B74 
 2578 02db 61737465 		.ascii	"aster\\00_Basic_Tx.cydsn\000"
 2578      725C3030 
 2578      5F426173 
 2578      69635F54 
 2578      782E6379 
 2579              	.LASF31:
 2580 02f3 72785374 		.ascii	"rxStatus\000"
 2580      61747573 
 2580      00
 2581              	.LASF63:
 2582 02fc 55415254 		.ascii	"UART_IntClock_Stop\000"
 2582      5F496E74 
 2582      436C6F63 
 2582      6B5F5374 
 2582      6F7000
 2583              	.LASF11:
 2584 030f 666C6F61 		.ascii	"float\000"
 2584      7400
 2585              	.LASF53:
 2586 0315 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2586      5F476574 
 2586      54784275 
 2586      66666572 
 2586      53697A65 
 2587              	.LASF15:
 2588 032a 72656738 		.ascii	"reg8\000"
 2588      00
 2589              	.LASF36:
 2590 032f 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2590      5F536574 
 2590      52784164 
 2590      64726573 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 77


 2590      734D6F64 
 2591              	.LASF1:
 2592 0345 756E7369 		.ascii	"unsigned char\000"
 2592      676E6564 
 2592      20636861 
 2592      7200
 2593              	.LASF42:
 2594 0353 55415254 		.ascii	"UART_WriteTxData\000"
 2594      5F577269 
 2594      74655478 
 2594      44617461 
 2594      00
 2595              	.LASF2:
 2596 0364 73686F72 		.ascii	"short int\000"
 2596      7420696E 
 2596      7400
 2597              	.LASF55:
 2598 036e 55415254 		.ascii	"UART_SendBreak\000"
 2598      5F53656E 
 2598      64427265 
 2598      616B00
 2599              	.LASF51:
 2600 037d 62797465 		.ascii	"byteCount\000"
 2600      436F756E 
 2600      7400
 2601              	.LASF26:
 2602 0387 72784461 		.ascii	"rxData\000"
 2602      746100
 2603              	.LASF18:
 2604 038e 55415254 		.ascii	"UART_Enable\000"
 2604      5F456E61 
 2604      626C6500 
 2605              	.LASF28:
 2606 039a 55415254 		.ascii	"UART_ReadRxStatus\000"
 2606      5F526561 
 2606      64527853 
 2606      74617475 
 2606      7300
 2607              	.LASF14:
 2608 03ac 63686172 		.ascii	"char\000"
 2608      00
 2609              	.LASF13:
 2610 03b1 63686172 		.ascii	"char8\000"
 2610      3800
 2611              	.LASF23:
 2612 03b7 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2612      5F536574 
 2612      5278496E 
 2612      74657272 
 2612      7570744D 
 2613              	.LASF30:
 2614 03cf 55415254 		.ascii	"UART_GetChar\000"
 2614      5F476574 
 2614      43686172 
 2614      00
 2615              	.LASF21:
 2616 03dc 656E6162 		.ascii	"enableInterrupts\000"
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccavYxmj.s 			page 78


 2616      6C65496E 
 2616      74657272 
 2616      75707473 
 2616      00
 2617              	.LASF68:
 2618 03ed 55415254 		.ascii	"UART_initVar\000"
 2618      5F696E69 
 2618      74566172 
 2618      00
 2619              	.LASF33:
 2620 03fa 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2620      5F476574 
 2620      52784275 
 2620      66666572 
 2620      53697A65 
 2621              	.LASF29:
 2622 040f 73746174 		.ascii	"status\000"
 2622      757300
 2623              	.LASF20:
 2624 0416 55415254 		.ascii	"UART_Stop\000"
 2624      5F53746F 
 2624      7000
 2625              	.LASF65:
 2626 0420 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART.c\000"
 2626      72617465 
 2626      645F536F 
 2626      75726365 
 2626      5C50536F 
 2627              	.LASF47:
 2628 043e 55415254 		.ascii	"UART_PutString\000"
 2628      5F507574 
 2628      53747269 
 2628      6E6700
 2629              	.LASF22:
 2630 044d 55415254 		.ascii	"UART_WriteControlRegister\000"
 2630      5F577269 
 2630      7465436F 
 2630      6E74726F 
 2630      6C526567 
 2631              	.LASF35:
 2632 0467 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2632      5F436C65 
 2632      61725278 
 2632      42756666 
 2632      657200
 2633              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
