ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"throttleTimer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.throttleTimer_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	throttleTimer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	throttleTimer_Enable, %function
  25              	throttleTimer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\throttleTimer.c"
   1:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/throttleTimer.c **** * File Name: throttleTimer.c
   3:Generated_Source\PSoC5/throttleTimer.c **** * Version 2.80
   4:Generated_Source\PSoC5/throttleTimer.c **** *
   5:Generated_Source\PSoC5/throttleTimer.c **** * Description:
   6:Generated_Source\PSoC5/throttleTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/throttleTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/throttleTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/throttleTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/throttleTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/throttleTimer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/throttleTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/throttleTimer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/throttleTimer.c **** *
  15:Generated_Source\PSoC5/throttleTimer.c **** * Note:
  16:Generated_Source\PSoC5/throttleTimer.c **** *
  17:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/throttleTimer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/throttleTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/throttleTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/throttleTimer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/throttleTimer.c **** 
  24:Generated_Source\PSoC5/throttleTimer.c **** #include "throttleTimer.h"
  25:Generated_Source\PSoC5/throttleTimer.c **** 
  26:Generated_Source\PSoC5/throttleTimer.c **** uint8 throttleTimer_initVar = 0u;
  27:Generated_Source\PSoC5/throttleTimer.c **** 
  28:Generated_Source\PSoC5/throttleTimer.c **** 
  29:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_Init
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 2


  31:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/throttleTimer.c **** *
  33:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
  34:Generated_Source\PSoC5/throttleTimer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/throttleTimer.c **** *
  36:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
  37:Generated_Source\PSoC5/throttleTimer.c **** *  void
  38:Generated_Source\PSoC5/throttleTimer.c **** *
  39:Generated_Source\PSoC5/throttleTimer.c **** * Return:
  40:Generated_Source\PSoC5/throttleTimer.c **** *  void
  41:Generated_Source\PSoC5/throttleTimer.c **** *
  42:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_Init(void) 
  44:Generated_Source\PSoC5/throttleTimer.c **** {
  45:Generated_Source\PSoC5/throttleTimer.c ****     #if(!throttleTimer_UsingFixedFunction)
  46:Generated_Source\PSoC5/throttleTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/throttleTimer.c ****             uint8 throttleTimer_interruptState;
  48:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/throttleTimer.c **** 
  50:Generated_Source\PSoC5/throttleTimer.c ****     #if (throttleTimer_UsingFixedFunction)
  51:Generated_Source\PSoC5/throttleTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL &= throttleTimer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/throttleTimer.c **** 
  54:Generated_Source\PSoC5/throttleTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/throttleTimer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/throttleTimer.c ****             throttleTimer_CONTROL2 &= ((uint8)(~throttleTimer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/throttleTimer.c **** 
  59:Generated_Source\PSoC5/throttleTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/throttleTimer.c ****             throttleTimer_CONTROL3 &= ((uint8)(~throttleTimer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/throttleTimer.c **** 
  63:Generated_Source\PSoC5/throttleTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/throttleTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/throttleTimer.c ****             throttleTimer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/throttleTimer.c **** 
  69:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/throttleTimer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/throttleTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/throttleTimer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/throttleTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/throttleTimer.c **** 
  76:Generated_Source\PSoC5/throttleTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/throttleTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/throttleTimer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/throttleTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/throttleTimer.c **** 
  82:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/throttleTimer.c **** 
  84:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/throttleTimer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/throttleTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL2 |= throttleTimer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 3


  88:Generated_Source\PSoC5/throttleTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/throttleTimer.c **** 
  90:Generated_Source\PSoC5/throttleTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/throttleTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL3 &= ((uint8)(~throttleTimer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL3 |= throttleTimer_CTRL_RCOD;
  94:Generated_Source\PSoC5/throttleTimer.c **** 
  95:Generated_Source\PSoC5/throttleTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL3 &= ((uint8)(~throttleTimer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL3 |= throttleTimer_CTRL_ENBL;
  98:Generated_Source\PSoC5/throttleTimer.c **** 
  99:Generated_Source\PSoC5/throttleTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/throttleTimer.c ****                 throttleTimer_CONTROL3 |= throttleTimer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/throttleTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/throttleTimer.c **** 
 103:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/throttleTimer.c **** 
 105:Generated_Source\PSoC5/throttleTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_RT1 &= ((uint8)(~throttleTimer_RT1_MASK));
 107:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_RT1 |= throttleTimer_SYNC;
 108:Generated_Source\PSoC5/throttleTimer.c **** 
 109:Generated_Source\PSoC5/throttleTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_RT1 &= ((uint8)(~throttleTimer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_RT1 |= throttleTimer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/throttleTimer.c **** 
 113:Generated_Source\PSoC5/throttleTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL2 |= throttleTimer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/throttleTimer.c **** 
 117:Generated_Source\PSoC5/throttleTimer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_WritePeriod(throttleTimer_INIT_PERIOD);
 119:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_WriteCounter(throttleTimer_INIT_PERIOD);
 120:Generated_Source\PSoC5/throttleTimer.c **** 
 121:Generated_Source\PSoC5/throttleTimer.c ****     #if (throttleTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CAPTURE_COUNT_CTRL |= throttleTimer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_SetCaptureCount(throttleTimer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/throttleTimer.c **** 
 126:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UsingFixedFunction)
 127:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/throttleTimer.c ****             throttleTimer_SetCaptureMode(throttleTimer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/throttleTimer.c **** 
 131:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/throttleTimer.c ****             #if (!throttleTimer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/throttleTimer.c ****                 if (0u == (throttleTimer_CONTROL & throttleTimer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/throttleTimer.c ****                 {
 135:Generated_Source\PSoC5/throttleTimer.c ****                     throttleTimer_SetTriggerMode(throttleTimer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/throttleTimer.c ****                 }
 137:Generated_Source\PSoC5/throttleTimer.c ****             #endif /* (!throttleTimer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/throttleTimer.c **** 
 140:Generated_Source\PSoC5/throttleTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/throttleTimer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/throttleTimer.c **** 
 144:Generated_Source\PSoC5/throttleTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 4


 145:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_STATUS_AUX_CTRL |= throttleTimer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/throttleTimer.c **** 
 147:Generated_Source\PSoC5/throttleTimer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/throttleTimer.c ****         CyExitCriticalSection(throttleTimer_interruptState);
 149:Generated_Source\PSoC5/throttleTimer.c **** 
 150:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_EnableTriggerMode)
 151:Generated_Source\PSoC5/throttleTimer.c ****             throttleTimer_EnableTrigger();
 152:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/throttleTimer.c **** 		
 154:Generated_Source\PSoC5/throttleTimer.c **** 		
 155:Generated_Source\PSoC5/throttleTimer.c ****         #if (throttleTimer_InterruptOnCaptureCount && !throttleTimer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/throttleTimer.c ****             throttleTimer_SetInterruptCount(throttleTimer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/throttleTimer.c **** 
 159:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_ClearFIFO();
 160:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/throttleTimer.c **** 
 162:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_SetInterruptMode(throttleTimer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/throttleTimer.c **** }
 164:Generated_Source\PSoC5/throttleTimer.c **** 
 165:Generated_Source\PSoC5/throttleTimer.c **** 
 166:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_Enable
 168:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/throttleTimer.c **** *
 170:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 171:Generated_Source\PSoC5/throttleTimer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/throttleTimer.c **** *
 173:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 174:Generated_Source\PSoC5/throttleTimer.c **** *  void
 175:Generated_Source\PSoC5/throttleTimer.c **** *
 176:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 177:Generated_Source\PSoC5/throttleTimer.c **** *  void
 178:Generated_Source\PSoC5/throttleTimer.c **** *
 179:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_Enable(void) 
 181:Generated_Source\PSoC5/throttleTimer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/throttleTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/throttleTimer.c ****     #if (throttleTimer_UsingFixedFunction)
 184:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_GLOBAL_ENABLE |= throttleTimer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_GLOBAL_STBY_ENABLE |= throttleTimer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/throttleTimer.c **** 
 188:Generated_Source\PSoC5/throttleTimer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED || throttleTimer_UsingFixedFunction)
 190:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL |= throttleTimer_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7B650040 		.word	1073767803
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	throttleTimer_Enable, .-throttleTimer_Enable
  46              		.section	.text.throttleTimer_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	throttleTimer_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	throttleTimer_Stop, %function
  52              	throttleTimer_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/throttleTimer.c **** }
 193:Generated_Source\PSoC5/throttleTimer.c **** 
 194:Generated_Source\PSoC5/throttleTimer.c **** 
 195:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_Start
 197:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/throttleTimer.c **** *
 199:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 200:Generated_Source\PSoC5/throttleTimer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/throttleTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/throttleTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/throttleTimer.c **** *
 204:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 205:Generated_Source\PSoC5/throttleTimer.c **** *  void
 206:Generated_Source\PSoC5/throttleTimer.c **** *
 207:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 208:Generated_Source\PSoC5/throttleTimer.c **** *  void
 209:Generated_Source\PSoC5/throttleTimer.c **** *
 210:Generated_Source\PSoC5/throttleTimer.c **** * Global variables:
 211:Generated_Source\PSoC5/throttleTimer.c **** *  throttleTimer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/throttleTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/throttleTimer.c **** *
 214:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_Start(void) 
 216:Generated_Source\PSoC5/throttleTimer.c **** {
 217:Generated_Source\PSoC5/throttleTimer.c ****     if(throttleTimer_initVar == 0u)
 218:Generated_Source\PSoC5/throttleTimer.c ****     {
 219:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_Init();
 220:Generated_Source\PSoC5/throttleTimer.c **** 
 221:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/throttleTimer.c ****     }
 223:Generated_Source\PSoC5/throttleTimer.c **** 
 224:Generated_Source\PSoC5/throttleTimer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_Enable();
 226:Generated_Source\PSoC5/throttleTimer.c **** }
 227:Generated_Source\PSoC5/throttleTimer.c **** 
 228:Generated_Source\PSoC5/throttleTimer.c **** 
 229:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_Stop
 231:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/throttleTimer.c **** *
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 6


 233:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 234:Generated_Source\PSoC5/throttleTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/throttleTimer.c **** *  interrupts.
 236:Generated_Source\PSoC5/throttleTimer.c **** *
 237:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 238:Generated_Source\PSoC5/throttleTimer.c **** *  void
 239:Generated_Source\PSoC5/throttleTimer.c **** *
 240:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 241:Generated_Source\PSoC5/throttleTimer.c **** *  void
 242:Generated_Source\PSoC5/throttleTimer.c **** *
 243:Generated_Source\PSoC5/throttleTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/throttleTimer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/throttleTimer.c **** *
 246:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_Stop(void) 
 248:Generated_Source\PSoC5/throttleTimer.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/throttleTimer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/throttleTimer.c ****     #if(!throttleTimer_UDB_CONTROL_REG_REMOVED || throttleTimer_UsingFixedFunction)
 251:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL &= ((uint8)(~throttleTimer_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7B650040 		.word	1073767803
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	throttleTimer_Stop, .-throttleTimer_Stop
  72              		.section	.text.throttleTimer_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	throttleTimer_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	throttleTimer_SetInterruptMode, %function
  78              	throttleTimer_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/throttleTimer.c **** 
 254:Generated_Source\PSoC5/throttleTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/throttleTimer.c ****     #if (throttleTimer_UsingFixedFunction)
 256:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_GLOBAL_ENABLE &= ((uint8)(~throttleTimer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~throttleTimer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/throttleTimer.c **** }
 260:Generated_Source\PSoC5/throttleTimer.c **** 
 261:Generated_Source\PSoC5/throttleTimer.c **** 
 262:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_SetInterruptMode
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 7


 264:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/throttleTimer.c **** *
 266:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 267:Generated_Source\PSoC5/throttleTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/throttleTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/throttleTimer.c **** *  be selected.
 270:Generated_Source\PSoC5/throttleTimer.c **** *
 271:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 272:Generated_Source\PSoC5/throttleTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/throttleTimer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/throttleTimer.c **** *
 275:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 276:Generated_Source\PSoC5/throttleTimer.c **** *  void
 277:Generated_Source\PSoC5/throttleTimer.c **** *
 278:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/throttleTimer.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 89640040 		.word	1073767561
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	throttleTimer_SetInterruptMode, .-throttleTimer_SetInterruptMode
  97              		.section	.text.throttleTimer_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	throttleTimer_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	throttleTimer_SoftwareCapture, %function
 103              	throttleTimer_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/throttleTimer.c **** }
 283:Generated_Source\PSoC5/throttleTimer.c **** 
 284:Generated_Source\PSoC5/throttleTimer.c **** 
 285:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_SoftwareCapture
 287:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/throttleTimer.c **** *
 289:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 290:Generated_Source\PSoC5/throttleTimer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/throttleTimer.c **** *
 292:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 293:Generated_Source\PSoC5/throttleTimer.c **** *  void
 294:Generated_Source\PSoC5/throttleTimer.c **** *
 295:Generated_Source\PSoC5/throttleTimer.c **** * Return:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 8


 296:Generated_Source\PSoC5/throttleTimer.c **** *  void
 297:Generated_Source\PSoC5/throttleTimer.c **** *
 298:Generated_Source\PSoC5/throttleTimer.c **** * Side Effects:
 299:Generated_Source\PSoC5/throttleTimer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/throttleTimer.c **** *
 301:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/throttleTimer.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/throttleTimer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/throttleTimer.c ****     #if(throttleTimer_UsingFixedFunction)
 306:Generated_Source\PSoC5/throttleTimer.c ****         (void)CY_GET_REG16(throttleTimer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/throttleTimer.c ****     #else
 308:Generated_Source\PSoC5/throttleTimer.c ****         (void)CY_GET_REG8(throttleTimer_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 08650040 		.word	1073767688
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	throttleTimer_SoftwareCapture, .-throttleTimer_SoftwareCapture
 121              		.section	.text.throttleTimer_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	throttleTimer_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	throttleTimer_ReadStatusRegister, %function
 127              	throttleTimer_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/throttleTimer.c ****     #endif/* (throttleTimer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/throttleTimer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/throttleTimer.c **** }
 312:Generated_Source\PSoC5/throttleTimer.c **** 
 313:Generated_Source\PSoC5/throttleTimer.c **** 
 314:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ReadStatusRegister
 316:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/throttleTimer.c **** *
 318:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 319:Generated_Source\PSoC5/throttleTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/throttleTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/throttleTimer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/throttleTimer.c **** *
 323:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 324:Generated_Source\PSoC5/throttleTimer.c **** *  void
 325:Generated_Source\PSoC5/throttleTimer.c **** *
 326:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 327:Generated_Source\PSoC5/throttleTimer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/throttleTimer.c **** *
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 9


 329:Generated_Source\PSoC5/throttleTimer.c **** * Side Effects:
 330:Generated_Source\PSoC5/throttleTimer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/throttleTimer.c **** *
 332:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/throttleTimer.c **** uint8   throttleTimer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/throttleTimer.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/throttleTimer.c ****     return (throttleTimer_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/throttleTimer.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 69640040 		.word	1073767529
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	throttleTimer_ReadStatusRegister, .-throttleTimer_ReadStatusRegister
 146              		.section	.text.throttleTimer_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	throttleTimer_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	throttleTimer_ReadControlRegister, %function
 152              	throttleTimer_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/throttleTimer.c **** 
 338:Generated_Source\PSoC5/throttleTimer.c **** 
 339:Generated_Source\PSoC5/throttleTimer.c **** #if (!throttleTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/throttleTimer.c **** 
 341:Generated_Source\PSoC5/throttleTimer.c **** 
 342:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ReadControlRegister
 344:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/throttleTimer.c **** *
 346:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 347:Generated_Source\PSoC5/throttleTimer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/throttleTimer.c **** *
 349:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 350:Generated_Source\PSoC5/throttleTimer.c **** *  void
 351:Generated_Source\PSoC5/throttleTimer.c **** *
 352:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 353:Generated_Source\PSoC5/throttleTimer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/throttleTimer.c **** *
 355:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/throttleTimer.c **** uint8 throttleTimer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/throttleTimer.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/throttleTimer.c ****         return ((uint8)throttleTimer_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/throttleTimer.c ****     #else
 361:Generated_Source\PSoC5/throttleTimer.c ****         return (0);
 362:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* (!throttleTimer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/throttleTimer.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 7B650040 		.word	1073767803
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	throttleTimer_ReadControlRegister, .-throttleTimer_ReadControlRegister
 171              		.section	.text.throttleTimer_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	throttleTimer_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	throttleTimer_WriteControlRegister, %function
 177              	throttleTimer_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/throttleTimer.c **** 
 365:Generated_Source\PSoC5/throttleTimer.c **** 
 366:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_WriteControlRegister
 368:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/throttleTimer.c **** *
 370:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 371:Generated_Source\PSoC5/throttleTimer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/throttleTimer.c **** *
 373:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 374:Generated_Source\PSoC5/throttleTimer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/throttleTimer.c **** *
 376:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 377:Generated_Source\PSoC5/throttleTimer.c **** *
 378:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/throttleTimer.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 7B650040 		.word	1073767803
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	throttleTimer_WriteControlRegister, .-throttleTimer_WriteControlRegister
 196              		.section	.text.throttleTimer_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	throttleTimer_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	throttleTimer_ReadPeriod, %function
 202              	throttleTimer_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/throttleTimer.c ****     #else
 384:Generated_Source\PSoC5/throttleTimer.c ****         control = 0u;
 385:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* (!throttleTimer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/throttleTimer.c **** }
 387:Generated_Source\PSoC5/throttleTimer.c **** 
 388:Generated_Source\PSoC5/throttleTimer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/throttleTimer.c **** 
 390:Generated_Source\PSoC5/throttleTimer.c **** 
 391:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ReadPeriod
 393:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/throttleTimer.c **** *
 395:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 396:Generated_Source\PSoC5/throttleTimer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/throttleTimer.c **** *
 398:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 399:Generated_Source\PSoC5/throttleTimer.c **** *  void
 400:Generated_Source\PSoC5/throttleTimer.c **** *
 401:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 402:Generated_Source\PSoC5/throttleTimer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/throttleTimer.c **** *
 404:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/throttleTimer.c **** uint16 throttleTimer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/throttleTimer.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/throttleTimer.c ****    #if(throttleTimer_UsingFixedFunction)
 408:Generated_Source\PSoC5/throttleTimer.c ****        return ((uint16)CY_GET_REG16(throttleTimer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/throttleTimer.c ****    #else
 410:Generated_Source\PSoC5/throttleTimer.c ****        return (CY_GET_REG16(throttleTimer_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1888     		ldrh	r0, [r3]
 411:Generated_Source\PSoC5/throttleTimer.c ****    #endif /* (throttleTimer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/throttleTimer.c **** }
 212              		.loc 1 412 0
 213 0004 80B2     		uxth	r0, r0
 214 0006 7047     		bx	lr
 215              	.L24:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 12


 216              		.align	2
 217              	.L23:
 218 0008 506A0040 		.word	1073769040
 219              		.cfi_endproc
 220              	.LFE9:
 221              		.size	throttleTimer_ReadPeriod, .-throttleTimer_ReadPeriod
 222              		.section	.text.throttleTimer_WritePeriod,"ax",%progbits
 223              		.align	2
 224              		.global	throttleTimer_WritePeriod
 225              		.thumb
 226              		.thumb_func
 227              		.type	throttleTimer_WritePeriod, %function
 228              	throttleTimer_WritePeriod:
 229              	.LFB10:
 413:Generated_Source\PSoC5/throttleTimer.c **** 
 414:Generated_Source\PSoC5/throttleTimer.c **** 
 415:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_WritePeriod
 417:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/throttleTimer.c **** *
 419:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 420:Generated_Source\PSoC5/throttleTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/throttleTimer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/throttleTimer.c **** *
 423:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 424:Generated_Source\PSoC5/throttleTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/throttleTimer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/throttleTimer.c **** *
 427:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 428:Generated_Source\PSoC5/throttleTimer.c **** *  void
 429:Generated_Source\PSoC5/throttleTimer.c **** *
 430:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/throttleTimer.c **** {
 230              		.loc 1 432 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL2:
 433:Generated_Source\PSoC5/throttleTimer.c ****     #if(throttleTimer_UsingFixedFunction)
 434:Generated_Source\PSoC5/throttleTimer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/throttleTimer.c ****         CY_SET_REG16(throttleTimer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/throttleTimer.c ****     #else
 437:Generated_Source\PSoC5/throttleTimer.c ****         CY_SET_REG16(throttleTimer_PERIOD_LSB_PTR, period);
 236              		.loc 1 437 0
 237 0000 014B     		ldr	r3, .L26
 238 0002 1880     		strh	r0, [r3]	@ movhi
 239 0004 7047     		bx	lr
 240              	.L27:
 241 0006 00BF     		.align	2
 242              	.L26:
 243 0008 506A0040 		.word	1073769040
 244              		.cfi_endproc
 245              	.LFE10:
 246              		.size	throttleTimer_WritePeriod, .-throttleTimer_WritePeriod
 247              		.section	.text.throttleTimer_ReadCapture,"ax",%progbits
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 13


 248              		.align	2
 249              		.global	throttleTimer_ReadCapture
 250              		.thumb
 251              		.thumb_func
 252              		.type	throttleTimer_ReadCapture, %function
 253              	throttleTimer_ReadCapture:
 254              	.LFB11:
 438:Generated_Source\PSoC5/throttleTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/throttleTimer.c **** }
 440:Generated_Source\PSoC5/throttleTimer.c **** 
 441:Generated_Source\PSoC5/throttleTimer.c **** 
 442:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ReadCapture
 444:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/throttleTimer.c **** *
 446:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 447:Generated_Source\PSoC5/throttleTimer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/throttleTimer.c **** *
 449:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 450:Generated_Source\PSoC5/throttleTimer.c **** *  void
 451:Generated_Source\PSoC5/throttleTimer.c **** *
 452:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 453:Generated_Source\PSoC5/throttleTimer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/throttleTimer.c **** *
 455:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/throttleTimer.c **** uint16 throttleTimer_ReadCapture(void) 
 457:Generated_Source\PSoC5/throttleTimer.c **** {
 255              		.loc 1 457 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 458:Generated_Source\PSoC5/throttleTimer.c ****    #if(throttleTimer_UsingFixedFunction)
 459:Generated_Source\PSoC5/throttleTimer.c ****        return ((uint16)CY_GET_REG16(throttleTimer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/throttleTimer.c ****    #else
 461:Generated_Source\PSoC5/throttleTimer.c ****        return (CY_GET_REG16(throttleTimer_CAPTURE_LSB_PTR));
 260              		.loc 1 461 0
 261 0000 014B     		ldr	r3, .L29
 262 0002 1888     		ldrh	r0, [r3]
 462:Generated_Source\PSoC5/throttleTimer.c ****    #endif /* (throttleTimer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/throttleTimer.c **** }
 263              		.loc 1 463 0
 264 0004 80B2     		uxth	r0, r0
 265 0006 7047     		bx	lr
 266              	.L30:
 267              		.align	2
 268              	.L29:
 269 0008 906A0040 		.word	1073769104
 270              		.cfi_endproc
 271              	.LFE11:
 272              		.size	throttleTimer_ReadCapture, .-throttleTimer_ReadCapture
 273              		.section	.text.throttleTimer_WriteCounter,"ax",%progbits
 274              		.align	2
 275              		.global	throttleTimer_WriteCounter
 276              		.thumb
 277              		.thumb_func
 278              		.type	throttleTimer_WriteCounter, %function
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 14


 279              	throttleTimer_WriteCounter:
 280              	.LFB12:
 464:Generated_Source\PSoC5/throttleTimer.c **** 
 465:Generated_Source\PSoC5/throttleTimer.c **** 
 466:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_WriteCounter
 468:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/throttleTimer.c **** *
 470:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 471:Generated_Source\PSoC5/throttleTimer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/throttleTimer.c **** *
 473:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 474:Generated_Source\PSoC5/throttleTimer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/throttleTimer.c **** *
 476:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 477:Generated_Source\PSoC5/throttleTimer.c **** *  void
 478:Generated_Source\PSoC5/throttleTimer.c **** *
 479:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/throttleTimer.c **** {
 281              		.loc 1 481 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL3:
 482:Generated_Source\PSoC5/throttleTimer.c ****    #if(throttleTimer_UsingFixedFunction)
 483:Generated_Source\PSoC5/throttleTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/throttleTimer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/throttleTimer.c ****          */
 486:Generated_Source\PSoC5/throttleTimer.c ****         CY_SET_REG16(throttleTimer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/throttleTimer.c ****         
 488:Generated_Source\PSoC5/throttleTimer.c ****     #else
 489:Generated_Source\PSoC5/throttleTimer.c ****         CY_SET_REG16(throttleTimer_COUNTER_LSB_PTR, counter);
 287              		.loc 1 489 0
 288 0000 014B     		ldr	r3, .L32
 289 0002 1880     		strh	r0, [r3]	@ movhi
 290 0004 7047     		bx	lr
 291              	.L33:
 292 0006 00BF     		.align	2
 293              	.L32:
 294 0008 106A0040 		.word	1073768976
 295              		.cfi_endproc
 296              	.LFE12:
 297              		.size	throttleTimer_WriteCounter, .-throttleTimer_WriteCounter
 298              		.section	.text.throttleTimer_ReadCounter,"ax",%progbits
 299              		.align	2
 300              		.global	throttleTimer_ReadCounter
 301              		.thumb
 302              		.thumb_func
 303              		.type	throttleTimer_ReadCounter, %function
 304              	throttleTimer_ReadCounter:
 305              	.LFB13:
 490:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/throttleTimer.c **** }
 492:Generated_Source\PSoC5/throttleTimer.c **** 
 493:Generated_Source\PSoC5/throttleTimer.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 15


 494:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ReadCounter
 496:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/throttleTimer.c **** *
 498:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 499:Generated_Source\PSoC5/throttleTimer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/throttleTimer.c **** *
 501:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 502:Generated_Source\PSoC5/throttleTimer.c **** *  void
 503:Generated_Source\PSoC5/throttleTimer.c **** *
 504:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 505:Generated_Source\PSoC5/throttleTimer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/throttleTimer.c **** *
 507:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/throttleTimer.c **** uint16 throttleTimer_ReadCounter(void) 
 509:Generated_Source\PSoC5/throttleTimer.c **** {
 306              		.loc 1 509 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 510:Generated_Source\PSoC5/throttleTimer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/throttleTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/throttleTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/throttleTimer.c ****     #if(throttleTimer_UsingFixedFunction)
 514:Generated_Source\PSoC5/throttleTimer.c ****         (void)CY_GET_REG16(throttleTimer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/throttleTimer.c ****     #else
 516:Generated_Source\PSoC5/throttleTimer.c ****         (void)CY_GET_REG8(throttleTimer_COUNTER_LSB_PTR_8BIT);
 311              		.loc 1 516 0
 312 0000 024B     		ldr	r3, .L35
 313 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/throttleTimer.c ****     #endif/* (throttleTimer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/throttleTimer.c **** 
 519:Generated_Source\PSoC5/throttleTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/throttleTimer.c ****     #if(throttleTimer_UsingFixedFunction)
 521:Generated_Source\PSoC5/throttleTimer.c ****         return ((uint16)CY_GET_REG16(throttleTimer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/throttleTimer.c ****     #else
 523:Generated_Source\PSoC5/throttleTimer.c ****         return (CY_GET_REG16(throttleTimer_CAPTURE_LSB_PTR));
 314              		.loc 1 523 0
 315 0004 024B     		ldr	r3, .L35+4
 316 0006 1888     		ldrh	r0, [r3]
 524:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* (throttleTimer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/throttleTimer.c **** }
 317              		.loc 1 525 0
 318 0008 80B2     		uxth	r0, r0
 319 000a 7047     		bx	lr
 320              	.L36:
 321              		.align	2
 322              	.L35:
 323 000c 08650040 		.word	1073767688
 324 0010 906A0040 		.word	1073769104
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	throttleTimer_ReadCounter, .-throttleTimer_ReadCounter
 328              		.section	.text.throttleTimer_EnableTrigger,"ax",%progbits
 329              		.align	2
 330              		.global	throttleTimer_EnableTrigger
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 16


 331              		.thumb
 332              		.thumb_func
 333              		.type	throttleTimer_EnableTrigger, %function
 334              	throttleTimer_EnableTrigger:
 335              	.LFB14:
 526:Generated_Source\PSoC5/throttleTimer.c **** 
 527:Generated_Source\PSoC5/throttleTimer.c **** 
 528:Generated_Source\PSoC5/throttleTimer.c **** #if(!throttleTimer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/throttleTimer.c **** 
 530:Generated_Source\PSoC5/throttleTimer.c ****     
 531:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/throttleTimer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/throttleTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/throttleTimer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/throttleTimer.c **** 
 536:Generated_Source\PSoC5/throttleTimer.c **** 
 537:Generated_Source\PSoC5/throttleTimer.c **** #if (throttleTimer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/throttleTimer.c **** 
 539:Generated_Source\PSoC5/throttleTimer.c **** 
 540:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_SetCaptureMode
 542:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/throttleTimer.c **** *
 544:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 545:Generated_Source\PSoC5/throttleTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/throttleTimer.c **** *
 547:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 548:Generated_Source\PSoC5/throttleTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/throttleTimer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/throttleTimer.c **** *  #define throttleTimer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/throttleTimer.c **** #define throttleTimer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/throttleTimer.c **** #define throttleTimer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/throttleTimer.c **** #define throttleTimer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/throttleTimer.c **** #define throttleTimer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/throttleTimer.c ****  identifiers
 556:Generated_Source\PSoC5/throttleTimer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/throttleTimer.c **** *  throttleTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/throttleTimer.c **** *  throttleTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/throttleTimer.c **** *  throttleTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/throttleTimer.c **** *  throttleTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/throttleTimer.c **** *
 562:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 563:Generated_Source\PSoC5/throttleTimer.c **** *  void
 564:Generated_Source\PSoC5/throttleTimer.c **** *
 565:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/throttleTimer.c **** {
 568:Generated_Source\PSoC5/throttleTimer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/throttleTimer.c ****     captureMode = ((uint8)((uint8)captureMode << throttleTimer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/throttleTimer.c ****     captureMode &= (throttleTimer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/throttleTimer.c **** 
 572:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/throttleTimer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL &= ((uint8)(~throttleTimer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/throttleTimer.c **** 
 576:Generated_Source\PSoC5/throttleTimer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL |= captureMode;
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 17


 578:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* (!throttleTimer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/throttleTimer.c **** }
 580:Generated_Source\PSoC5/throttleTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/throttleTimer.c **** 
 582:Generated_Source\PSoC5/throttleTimer.c **** 
 583:Generated_Source\PSoC5/throttleTimer.c **** #if (throttleTimer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/throttleTimer.c **** 
 585:Generated_Source\PSoC5/throttleTimer.c **** 
 586:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_SetTriggerMode
 588:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/throttleTimer.c **** *
 590:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 591:Generated_Source\PSoC5/throttleTimer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/throttleTimer.c **** *
 593:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 594:Generated_Source\PSoC5/throttleTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/throttleTimer.c ****     #define throttleTimer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/throttleTimer.c ****     #define throttleTimer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/throttleTimer.c ****     #define throttleTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/throttleTimer.c ****     #define throttleTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/throttleTimer.c ****     #define throttleTimer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/throttleTimer.c **** *
 601:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 602:Generated_Source\PSoC5/throttleTimer.c **** *  void
 603:Generated_Source\PSoC5/throttleTimer.c **** *
 604:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/throttleTimer.c **** {
 607:Generated_Source\PSoC5/throttleTimer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/throttleTimer.c ****     triggerMode &= throttleTimer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/throttleTimer.c **** 
 610:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remo
 611:Generated_Source\PSoC5/throttleTimer.c ****     
 612:Generated_Source\PSoC5/throttleTimer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL &= ((uint8)(~throttleTimer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/throttleTimer.c **** 
 615:Generated_Source\PSoC5/throttleTimer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL |= (triggerMode | throttleTimer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/throttleTimer.c **** }
 619:Generated_Source\PSoC5/throttleTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/throttleTimer.c **** 
 621:Generated_Source\PSoC5/throttleTimer.c **** #if (throttleTimer_EnableTriggerMode)
 622:Generated_Source\PSoC5/throttleTimer.c **** 
 623:Generated_Source\PSoC5/throttleTimer.c **** 
 624:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_EnableTrigger
 626:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/throttleTimer.c **** *
 628:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 629:Generated_Source\PSoC5/throttleTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/throttleTimer.c **** *
 631:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 632:Generated_Source\PSoC5/throttleTimer.c **** *  void
 633:Generated_Source\PSoC5/throttleTimer.c **** *
 634:Generated_Source\PSoC5/throttleTimer.c **** * Return:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 18


 635:Generated_Source\PSoC5/throttleTimer.c **** *  void
 636:Generated_Source\PSoC5/throttleTimer.c **** *
 637:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/throttleTimer.c **** {
 336              		.loc 1 639 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 640:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remo
 641:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL |= throttleTimer_CTRL_TRIG_EN;
 341              		.loc 1 641 0
 342 0000 024A     		ldr	r2, .L38
 343 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 344 0004 43F01003 		orr	r3, r3, #16
 345 0008 1370     		strb	r3, [r2]
 346 000a 7047     		bx	lr
 347              	.L39:
 348              		.align	2
 349              	.L38:
 350 000c 7B650040 		.word	1073767803
 351              		.cfi_endproc
 352              	.LFE14:
 353              		.size	throttleTimer_EnableTrigger, .-throttleTimer_EnableTrigger
 354              		.section	.text.throttleTimer_DisableTrigger,"ax",%progbits
 355              		.align	2
 356              		.global	throttleTimer_DisableTrigger
 357              		.thumb
 358              		.thumb_func
 359              		.type	throttleTimer_DisableTrigger, %function
 360              	throttleTimer_DisableTrigger:
 361              	.LFB15:
 642:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/throttleTimer.c **** }
 644:Generated_Source\PSoC5/throttleTimer.c **** 
 645:Generated_Source\PSoC5/throttleTimer.c **** 
 646:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_DisableTrigger
 648:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/throttleTimer.c **** *
 650:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 651:Generated_Source\PSoC5/throttleTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/throttleTimer.c **** *
 653:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 654:Generated_Source\PSoC5/throttleTimer.c **** *  void
 655:Generated_Source\PSoC5/throttleTimer.c **** *
 656:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 657:Generated_Source\PSoC5/throttleTimer.c **** *  void
 658:Generated_Source\PSoC5/throttleTimer.c **** *
 659:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/throttleTimer.c **** {
 362              		.loc 1 661 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 19


 366              		@ link register save eliminated.
 662:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is rem
 663:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL &= ((uint8)(~throttleTimer_CTRL_TRIG_EN));
 367              		.loc 1 663 0
 368 0000 024A     		ldr	r2, .L41
 369 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 370 0004 03F0EF03 		and	r3, r3, #239
 371 0008 1370     		strb	r3, [r2]
 372 000a 7047     		bx	lr
 373              	.L42:
 374              		.align	2
 375              	.L41:
 376 000c 7B650040 		.word	1073767803
 377              		.cfi_endproc
 378              	.LFE15:
 379              		.size	throttleTimer_DisableTrigger, .-throttleTimer_DisableTrigger
 380              		.section	.text.throttleTimer_ClearFIFO,"ax",%progbits
 381              		.align	2
 382              		.global	throttleTimer_ClearFIFO
 383              		.thumb
 384              		.thumb_func
 385              		.type	throttleTimer_ClearFIFO, %function
 386              	throttleTimer_ClearFIFO:
 387              	.LFB16:
 664:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/throttleTimer.c **** }
 666:Generated_Source\PSoC5/throttleTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/throttleTimer.c **** 
 668:Generated_Source\PSoC5/throttleTimer.c **** #if(throttleTimer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/throttleTimer.c **** 
 670:Generated_Source\PSoC5/throttleTimer.c **** 
 671:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_SetInterruptCount
 673:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/throttleTimer.c **** *
 675:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 676:Generated_Source\PSoC5/throttleTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/throttleTimer.c **** *
 678:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 679:Generated_Source\PSoC5/throttleTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/throttleTimer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/throttleTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/throttleTimer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/throttleTimer.c **** *
 684:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 685:Generated_Source\PSoC5/throttleTimer.c **** *  void
 686:Generated_Source\PSoC5/throttleTimer.c **** *
 687:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/throttleTimer.c **** {
 690:Generated_Source\PSoC5/throttleTimer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/throttleTimer.c ****     interruptCount &= throttleTimer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/throttleTimer.c **** 
 693:Generated_Source\PSoC5/throttleTimer.c ****     #if (!throttleTimer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/throttleTimer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL &= ((uint8)(~throttleTimer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/throttleTimer.c ****         /* Write The New Setting */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 20


 697:Generated_Source\PSoC5/throttleTimer.c ****         throttleTimer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* (!throttleTimer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/throttleTimer.c **** }
 700:Generated_Source\PSoC5/throttleTimer.c **** #endif /* throttleTimer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/throttleTimer.c **** 
 702:Generated_Source\PSoC5/throttleTimer.c **** 
 703:Generated_Source\PSoC5/throttleTimer.c **** #if (throttleTimer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/throttleTimer.c **** 
 705:Generated_Source\PSoC5/throttleTimer.c **** 
 706:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_SetCaptureCount
 708:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/throttleTimer.c **** *
 710:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 711:Generated_Source\PSoC5/throttleTimer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/throttleTimer.c **** *
 713:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 714:Generated_Source\PSoC5/throttleTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/throttleTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/throttleTimer.c **** *                captures.
 717:Generated_Source\PSoC5/throttleTimer.c **** *
 718:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 719:Generated_Source\PSoC5/throttleTimer.c **** *  void
 720:Generated_Source\PSoC5/throttleTimer.c **** *
 721:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/throttleTimer.c **** {
 724:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/throttleTimer.c **** }
 726:Generated_Source\PSoC5/throttleTimer.c **** 
 727:Generated_Source\PSoC5/throttleTimer.c **** 
 728:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ReadCaptureCount
 730:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/throttleTimer.c **** *
 732:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
 733:Generated_Source\PSoC5/throttleTimer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/throttleTimer.c **** *
 735:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 736:Generated_Source\PSoC5/throttleTimer.c **** *  void
 737:Generated_Source\PSoC5/throttleTimer.c **** *
 738:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 739:Generated_Source\PSoC5/throttleTimer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/throttleTimer.c **** *
 741:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/throttleTimer.c **** uint8 throttleTimer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/throttleTimer.c **** {
 744:Generated_Source\PSoC5/throttleTimer.c ****     return ((uint8)throttleTimer_CAP_COUNT);
 745:Generated_Source\PSoC5/throttleTimer.c **** }
 746:Generated_Source\PSoC5/throttleTimer.c **** #endif /* throttleTimer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/throttleTimer.c **** 
 748:Generated_Source\PSoC5/throttleTimer.c **** 
 749:Generated_Source\PSoC5/throttleTimer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/throttleTimer.c **** * Function Name: throttleTimer_ClearFIFO
 751:Generated_Source\PSoC5/throttleTimer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/throttleTimer.c **** *
 753:Generated_Source\PSoC5/throttleTimer.c **** * Summary:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 21


 754:Generated_Source\PSoC5/throttleTimer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/throttleTimer.c **** *
 756:Generated_Source\PSoC5/throttleTimer.c **** * Parameters:
 757:Generated_Source\PSoC5/throttleTimer.c **** *  void
 758:Generated_Source\PSoC5/throttleTimer.c **** *
 759:Generated_Source\PSoC5/throttleTimer.c **** * Return:
 760:Generated_Source\PSoC5/throttleTimer.c **** *  void
 761:Generated_Source\PSoC5/throttleTimer.c **** *
 762:Generated_Source\PSoC5/throttleTimer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/throttleTimer.c **** void throttleTimer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/throttleTimer.c **** {
 388              		.loc 1 764 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392 0000 08B5     		push	{r3, lr}
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/throttleTimer.c ****     while(0u != (throttleTimer_ReadStatusRegister() & throttleTimer_STATUS_FIFONEMP))
 396              		.loc 1 765 0
 397 0002 01E0     		b	.L44
 398              	.L45:
 766:Generated_Source\PSoC5/throttleTimer.c ****     {
 767:Generated_Source\PSoC5/throttleTimer.c ****         (void)throttleTimer_ReadCapture();
 399              		.loc 1 767 0
 400 0004 FFF7FEFF 		bl	throttleTimer_ReadCapture
 401              	.LVL4:
 402              	.L44:
 765:Generated_Source\PSoC5/throttleTimer.c ****     while(0u != (throttleTimer_ReadStatusRegister() & throttleTimer_STATUS_FIFONEMP))
 403              		.loc 1 765 0
 404 0008 FFF7FEFF 		bl	throttleTimer_ReadStatusRegister
 405              	.LVL5:
 406 000c 10F0080F 		tst	r0, #8
 407 0010 F8D1     		bne	.L45
 768:Generated_Source\PSoC5/throttleTimer.c ****     }
 769:Generated_Source\PSoC5/throttleTimer.c **** }
 408              		.loc 1 769 0
 409 0012 08BD     		pop	{r3, pc}
 410              		.cfi_endproc
 411              	.LFE16:
 412              		.size	throttleTimer_ClearFIFO, .-throttleTimer_ClearFIFO
 413              		.section	.text.throttleTimer_Init,"ax",%progbits
 414              		.align	2
 415              		.global	throttleTimer_Init
 416              		.thumb
 417              		.thumb_func
 418              		.type	throttleTimer_Init, %function
 419              	throttleTimer_Init:
 420              	.LFB0:
  44:Generated_Source\PSoC5/throttleTimer.c ****     #if(!throttleTimer_UsingFixedFunction)
 421              		.loc 1 44 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 08B5     		push	{r3, lr}
 426              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 22


 427              		.cfi_offset 3, -8
 428              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/throttleTimer.c ****     throttleTimer_WriteCounter(throttleTimer_INIT_PERIOD);
 429              		.loc 1 118 0
 430 0002 42F20F70 		movw	r0, #9999
 431 0006 FFF7FEFF 		bl	throttleTimer_WritePeriod
 432              	.LVL6:
 119:Generated_Source\PSoC5/throttleTimer.c **** 
 433              		.loc 1 119 0
 434 000a 42F20F70 		movw	r0, #9999
 435 000e FFF7FEFF 		bl	throttleTimer_WriteCounter
 436              	.LVL7:
 142:Generated_Source\PSoC5/throttleTimer.c **** 
 437              		.loc 1 142 0
 438 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 439              	.LVL8:
 145:Generated_Source\PSoC5/throttleTimer.c **** 
 440              		.loc 1 145 0
 441 0016 074A     		ldr	r2, .L49
 442 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 443 001a 43F01003 		orr	r3, r3, #16
 444 001e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/throttleTimer.c **** 
 445              		.loc 1 148 0
 446 0020 FFF7FEFF 		bl	CyExitCriticalSection
 447              	.LVL9:
 151:Generated_Source\PSoC5/throttleTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 448              		.loc 1 151 0
 449 0024 FFF7FEFF 		bl	throttleTimer_EnableTrigger
 450              	.LVL10:
 159:Generated_Source\PSoC5/throttleTimer.c ****     #endif /* Configure additional features of UDB implementation */
 451              		.loc 1 159 0
 452 0028 FFF7FEFF 		bl	throttleTimer_ClearFIFO
 453              	.LVL11:
 162:Generated_Source\PSoC5/throttleTimer.c **** }
 454              		.loc 1 162 0
 455 002c 0020     		movs	r0, #0
 456 002e FFF7FEFF 		bl	throttleTimer_SetInterruptMode
 457              	.LVL12:
 458 0032 08BD     		pop	{r3, pc}
 459              	.L50:
 460              		.align	2
 461              	.L49:
 462 0034 99640040 		.word	1073767577
 463              		.cfi_endproc
 464              	.LFE0:
 465              		.size	throttleTimer_Init, .-throttleTimer_Init
 466              		.section	.text.throttleTimer_Start,"ax",%progbits
 467              		.align	2
 468              		.global	throttleTimer_Start
 469              		.thumb
 470              		.thumb_func
 471              		.type	throttleTimer_Start, %function
 472              	throttleTimer_Start:
 473              	.LFB2:
 216:Generated_Source\PSoC5/throttleTimer.c ****     if(throttleTimer_initVar == 0u)
 474              		.loc 1 216 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 23


 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/throttleTimer.c ****     {
 482              		.loc 1 217 0
 483 0002 054B     		ldr	r3, .L54
 484 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0006 23B9     		cbnz	r3, .L52
 219:Generated_Source\PSoC5/throttleTimer.c **** 
 486              		.loc 1 219 0
 487 0008 FFF7FEFF 		bl	throttleTimer_Init
 488              	.LVL13:
 221:Generated_Source\PSoC5/throttleTimer.c ****     }
 489              		.loc 1 221 0
 490 000c 0122     		movs	r2, #1
 491 000e 024B     		ldr	r3, .L54
 492 0010 1A70     		strb	r2, [r3]
 493              	.L52:
 225:Generated_Source\PSoC5/throttleTimer.c **** }
 494              		.loc 1 225 0
 495 0012 FFF7FEFF 		bl	throttleTimer_Enable
 496              	.LVL14:
 497 0016 08BD     		pop	{r3, pc}
 498              	.L55:
 499              		.align	2
 500              	.L54:
 501 0018 00000000 		.word	.LANCHOR0
 502              		.cfi_endproc
 503              	.LFE2:
 504              		.size	throttleTimer_Start, .-throttleTimer_Start
 505              		.global	throttleTimer_initVar
 506              		.bss
 507              		.set	.LANCHOR0,. + 0
 508              		.type	throttleTimer_initVar, %object
 509              		.size	throttleTimer_initVar, 1
 510              	throttleTimer_initVar:
 511 0000 00       		.space	1
 512              		.text
 513              	.Letext0:
 514              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 515              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 516              		.section	.debug_info,"",%progbits
 517              	.Ldebug_info0:
 518 0000 19030000 		.4byte	0x319
 519 0004 0400     		.2byte	0x4
 520 0006 00000000 		.4byte	.Ldebug_abbrev0
 521 000a 04       		.byte	0x4
 522 000b 01       		.uleb128 0x1
 523 000c 45010000 		.4byte	.LASF41
 524 0010 0C       		.byte	0xc
 525 0011 C2020000 		.4byte	.LASF42
 526 0015 70020000 		.4byte	.LASF43
 527 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 24


 528 001d 00000000 		.4byte	0
 529 0021 00000000 		.4byte	.Ldebug_line0
 530 0025 02       		.uleb128 0x2
 531 0026 01       		.byte	0x1
 532 0027 06       		.byte	0x6
 533 0028 BC030000 		.4byte	.LASF0
 534 002c 02       		.uleb128 0x2
 535 002d 01       		.byte	0x1
 536 002e 08       		.byte	0x8
 537 002f 37010000 		.4byte	.LASF1
 538 0033 02       		.uleb128 0x2
 539 0034 02       		.byte	0x2
 540 0035 05       		.byte	0x5
 541 0036 75030000 		.4byte	.LASF2
 542 003a 02       		.uleb128 0x2
 543 003b 02       		.byte	0x2
 544 003c 07       		.byte	0x7
 545 003d A1000000 		.4byte	.LASF3
 546 0041 02       		.uleb128 0x2
 547 0042 04       		.byte	0x4
 548 0043 05       		.byte	0x5
 549 0044 A2030000 		.4byte	.LASF4
 550 0048 02       		.uleb128 0x2
 551 0049 04       		.byte	0x4
 552 004a 07       		.byte	0x7
 553 004b 09020000 		.4byte	.LASF5
 554 004f 02       		.uleb128 0x2
 555 0050 08       		.byte	0x8
 556 0051 05       		.byte	0x5
 557 0052 31030000 		.4byte	.LASF6
 558 0056 02       		.uleb128 0x2
 559 0057 08       		.byte	0x8
 560 0058 07       		.byte	0x7
 561 0059 20010000 		.4byte	.LASF7
 562 005d 03       		.uleb128 0x3
 563 005e 04       		.byte	0x4
 564 005f 05       		.byte	0x5
 565 0060 696E7400 		.ascii	"int\000"
 566 0064 02       		.uleb128 0x2
 567 0065 04       		.byte	0x4
 568 0066 07       		.byte	0x7
 569 0067 00030000 		.4byte	.LASF8
 570 006b 04       		.uleb128 0x4
 571 006c 1B020000 		.4byte	.LASF9
 572 0070 02       		.byte	0x2
 573 0071 9201     		.2byte	0x192
 574 0073 2C000000 		.4byte	0x2c
 575 0077 04       		.uleb128 0x4
 576 0078 BB020000 		.4byte	.LASF10
 577 007c 02       		.byte	0x2
 578 007d 9301     		.2byte	0x193
 579 007f 3A000000 		.4byte	0x3a
 580 0083 02       		.uleb128 0x2
 581 0084 04       		.byte	0x4
 582 0085 04       		.byte	0x4
 583 0086 12010000 		.4byte	.LASF11
 584 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 25


 585 008b 08       		.byte	0x8
 586 008c 04       		.byte	0x4
 587 008d C8030000 		.4byte	.LASF12
 588 0091 02       		.uleb128 0x2
 589 0092 01       		.byte	0x1
 590 0093 08       		.byte	0x8
 591 0094 AB030000 		.4byte	.LASF13
 592 0098 04       		.uleb128 0x4
 593 0099 23030000 		.4byte	.LASF14
 594 009d 02       		.byte	0x2
 595 009e 3C02     		.2byte	0x23c
 596 00a0 A4000000 		.4byte	0xa4
 597 00a4 05       		.uleb128 0x5
 598 00a5 6B000000 		.4byte	0x6b
 599 00a9 04       		.uleb128 0x4
 600 00aa 00000000 		.4byte	.LASF15
 601 00ae 02       		.byte	0x2
 602 00af 3D02     		.2byte	0x23d
 603 00b1 B5000000 		.4byte	0xb5
 604 00b5 05       		.uleb128 0x5
 605 00b6 77000000 		.4byte	0x77
 606 00ba 02       		.uleb128 0x2
 607 00bb 08       		.byte	0x8
 608 00bc 04       		.byte	0x4
 609 00bd B0030000 		.4byte	.LASF16
 610 00c1 02       		.uleb128 0x2
 611 00c2 04       		.byte	0x4
 612 00c3 07       		.byte	0x7
 613 00c4 28030000 		.4byte	.LASF17
 614 00c8 06       		.uleb128 0x6
 615 00c9 3F030000 		.4byte	.LASF18
 616 00cd 01       		.byte	0x1
 617 00ce B4       		.byte	0xb4
 618 00cf 00000000 		.4byte	.LFB1
 619 00d3 10000000 		.4byte	.LFE1-.LFB1
 620 00d7 01       		.uleb128 0x1
 621 00d8 9C       		.byte	0x9c
 622 00d9 06       		.uleb128 0x6
 623 00da 62030000 		.4byte	.LASF19
 624 00de 01       		.byte	0x1
 625 00df F7       		.byte	0xf7
 626 00e0 00000000 		.4byte	.LFB3
 627 00e4 10000000 		.4byte	.LFE3-.LFB3
 628 00e8 01       		.uleb128 0x1
 629 00e9 9C       		.byte	0x9c
 630 00ea 07       		.uleb128 0x7
 631 00eb D1000000 		.4byte	.LASF23
 632 00ef 01       		.byte	0x1
 633 00f0 1701     		.2byte	0x117
 634 00f2 00000000 		.4byte	.LFB4
 635 00f6 0C000000 		.4byte	.LFE4-.LFB4
 636 00fa 01       		.uleb128 0x1
 637 00fb 9C       		.byte	0x9c
 638 00fc 0F010000 		.4byte	0x10f
 639 0100 08       		.uleb128 0x8
 640 0101 54030000 		.4byte	.LASF25
 641 0105 01       		.byte	0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 26


 642 0106 1701     		.2byte	0x117
 643 0108 6B000000 		.4byte	0x6b
 644 010c 01       		.uleb128 0x1
 645 010d 50       		.byte	0x50
 646 010e 00       		.byte	0
 647 010f 09       		.uleb128 0x9
 648 0110 83000000 		.4byte	.LASF20
 649 0114 01       		.byte	0x1
 650 0115 2E01     		.2byte	0x12e
 651 0117 00000000 		.4byte	.LFB5
 652 011b 0C000000 		.4byte	.LFE5-.LFB5
 653 011f 01       		.uleb128 0x1
 654 0120 9C       		.byte	0x9c
 655 0121 0A       		.uleb128 0xa
 656 0122 CF030000 		.4byte	.LASF21
 657 0126 01       		.byte	0x1
 658 0127 4D01     		.2byte	0x14d
 659 0129 6B000000 		.4byte	0x6b
 660 012d 00000000 		.4byte	.LFB6
 661 0131 0C000000 		.4byte	.LFE6-.LFB6
 662 0135 01       		.uleb128 0x1
 663 0136 9C       		.byte	0x9c
 664 0137 0A       		.uleb128 0xa
 665 0138 F0000000 		.4byte	.LASF22
 666 013c 01       		.byte	0x1
 667 013d 6401     		.2byte	0x164
 668 013f 6B000000 		.4byte	0x6b
 669 0143 00000000 		.4byte	.LFB7
 670 0147 0C000000 		.4byte	.LFE7-.LFB7
 671 014b 01       		.uleb128 0x1
 672 014c 9C       		.byte	0x9c
 673 014d 07       		.uleb128 0x7
 674 014e 7F030000 		.4byte	.LASF24
 675 0152 01       		.byte	0x1
 676 0153 7B01     		.2byte	0x17b
 677 0155 00000000 		.4byte	.LFB8
 678 0159 0C000000 		.4byte	.LFE8-.LFB8
 679 015d 01       		.uleb128 0x1
 680 015e 9C       		.byte	0x9c
 681 015f 72010000 		.4byte	0x172
 682 0163 08       		.uleb128 0x8
 683 0164 21020000 		.4byte	.LASF26
 684 0168 01       		.byte	0x1
 685 0169 7B01     		.2byte	0x17b
 686 016b 6B000000 		.4byte	0x6b
 687 016f 01       		.uleb128 0x1
 688 0170 50       		.byte	0x50
 689 0171 00       		.byte	0
 690 0172 0A       		.uleb128 0xa
 691 0173 57020000 		.4byte	.LASF27
 692 0177 01       		.byte	0x1
 693 0178 9501     		.2byte	0x195
 694 017a 77000000 		.4byte	0x77
 695 017e 00000000 		.4byte	.LFB9
 696 0182 0C000000 		.4byte	.LFE9-.LFB9
 697 0186 01       		.uleb128 0x1
 698 0187 9C       		.byte	0x9c
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 27


 699 0188 07       		.uleb128 0x7
 700 0189 4C000000 		.4byte	.LASF28
 701 018d 01       		.byte	0x1
 702 018e AF01     		.2byte	0x1af
 703 0190 00000000 		.4byte	.LFB10
 704 0194 0C000000 		.4byte	.LFE10-.LFB10
 705 0198 01       		.uleb128 0x1
 706 0199 9C       		.byte	0x9c
 707 019a AD010000 		.4byte	0x1ad
 708 019e 08       		.uleb128 0x8
 709 019f 7C000000 		.4byte	.LASF29
 710 01a3 01       		.byte	0x1
 711 01a4 AF01     		.2byte	0x1af
 712 01a6 77000000 		.4byte	0x77
 713 01aa 01       		.uleb128 0x1
 714 01ab 50       		.byte	0x50
 715 01ac 00       		.byte	0
 716 01ad 0A       		.uleb128 0xa
 717 01ae 1E000000 		.4byte	.LASF30
 718 01b2 01       		.byte	0x1
 719 01b3 C801     		.2byte	0x1c8
 720 01b5 77000000 		.4byte	0x77
 721 01b9 00000000 		.4byte	.LFB11
 722 01bd 0C000000 		.4byte	.LFE11-.LFB11
 723 01c1 01       		.uleb128 0x1
 724 01c2 9C       		.byte	0x9c
 725 01c3 07       		.uleb128 0x7
 726 01c4 29020000 		.4byte	.LASF31
 727 01c8 01       		.byte	0x1
 728 01c9 E001     		.2byte	0x1e0
 729 01cb 00000000 		.4byte	.LFB12
 730 01cf 0C000000 		.4byte	.LFE12-.LFB12
 731 01d3 01       		.uleb128 0x1
 732 01d4 9C       		.byte	0x9c
 733 01d5 E8010000 		.4byte	0x1e8
 734 01d9 08       		.uleb128 0x8
 735 01da 18010000 		.4byte	.LASF32
 736 01de 01       		.byte	0x1
 737 01df E001     		.2byte	0x1e0
 738 01e1 77000000 		.4byte	0x77
 739 01e5 01       		.uleb128 0x1
 740 01e6 50       		.byte	0x50
 741 01e7 00       		.byte	0
 742 01e8 0A       		.uleb128 0xa
 743 01e9 D3010000 		.4byte	.LASF33
 744 01ed 01       		.byte	0x1
 745 01ee FC01     		.2byte	0x1fc
 746 01f0 77000000 		.4byte	0x77
 747 01f4 00000000 		.4byte	.LFB13
 748 01f8 14000000 		.4byte	.LFE13-.LFB13
 749 01fc 01       		.uleb128 0x1
 750 01fd 9C       		.byte	0x9c
 751 01fe 09       		.uleb128 0x9
 752 01ff ED010000 		.4byte	.LASF34
 753 0203 01       		.byte	0x1
 754 0204 7E02     		.2byte	0x27e
 755 0206 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 28


 756 020a 10000000 		.4byte	.LFE14-.LFB14
 757 020e 01       		.uleb128 0x1
 758 020f 9C       		.byte	0x9c
 759 0210 09       		.uleb128 0x9
 760 0211 B4000000 		.4byte	.LASF35
 761 0215 01       		.byte	0x1
 762 0216 9402     		.2byte	0x294
 763 0218 00000000 		.4byte	.LFB15
 764 021c 10000000 		.4byte	.LFE15-.LFB15
 765 0220 01       		.uleb128 0x1
 766 0221 9C       		.byte	0x9c
 767 0222 07       		.uleb128 0x7
 768 0223 06000000 		.4byte	.LASF36
 769 0227 01       		.byte	0x1
 770 0228 FB02     		.2byte	0x2fb
 771 022a 00000000 		.4byte	.LFB16
 772 022e 14000000 		.4byte	.LFE16-.LFB16
 773 0232 01       		.uleb128 0x1
 774 0233 9C       		.byte	0x9c
 775 0234 4B020000 		.4byte	0x24b
 776 0238 0B       		.uleb128 0xb
 777 0239 08000000 		.4byte	.LVL4
 778 023d AD010000 		.4byte	0x1ad
 779 0241 0B       		.uleb128 0xb
 780 0242 0C000000 		.4byte	.LVL5
 781 0246 21010000 		.4byte	0x121
 782 024a 00       		.byte	0
 783 024b 0C       		.uleb128 0xc
 784 024c 44020000 		.4byte	.LASF37
 785 0250 01       		.byte	0x1
 786 0251 2B       		.byte	0x2b
 787 0252 00000000 		.4byte	.LFB0
 788 0256 38000000 		.4byte	.LFE0-.LFB0
 789 025a 01       		.uleb128 0x1
 790 025b 9C       		.byte	0x9c
 791 025c CD020000 		.4byte	0x2cd
 792 0260 0D       		.uleb128 0xd
 793 0261 F0030000 		.4byte	.LASF44
 794 0265 01       		.byte	0x1
 795 0266 2F       		.byte	0x2f
 796 0267 6B000000 		.4byte	0x6b
 797 026b 00000000 		.4byte	.LLST0
 798 026f 0E       		.uleb128 0xe
 799 0270 0A000000 		.4byte	.LVL6
 800 0274 88010000 		.4byte	0x188
 801 0278 84020000 		.4byte	0x284
 802 027c 0F       		.uleb128 0xf
 803 027d 01       		.uleb128 0x1
 804 027e 50       		.byte	0x50
 805 027f 03       		.uleb128 0x3
 806 0280 0A       		.byte	0xa
 807 0281 0F27     		.2byte	0x270f
 808 0283 00       		.byte	0
 809 0284 0E       		.uleb128 0xe
 810 0285 12000000 		.4byte	.LVL7
 811 0289 C3010000 		.4byte	0x1c3
 812 028d 99020000 		.4byte	0x299
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 29


 813 0291 0F       		.uleb128 0xf
 814 0292 01       		.uleb128 0x1
 815 0293 50       		.byte	0x50
 816 0294 03       		.uleb128 0x3
 817 0295 0A       		.byte	0xa
 818 0296 0F27     		.2byte	0x270f
 819 0298 00       		.byte	0
 820 0299 0B       		.uleb128 0xb
 821 029a 16000000 		.4byte	.LVL8
 822 029e 06030000 		.4byte	0x306
 823 02a2 0B       		.uleb128 0xb
 824 02a3 24000000 		.4byte	.LVL9
 825 02a7 11030000 		.4byte	0x311
 826 02ab 0B       		.uleb128 0xb
 827 02ac 28000000 		.4byte	.LVL10
 828 02b0 FE010000 		.4byte	0x1fe
 829 02b4 0B       		.uleb128 0xb
 830 02b5 2C000000 		.4byte	.LVL11
 831 02b9 22020000 		.4byte	0x222
 832 02bd 10       		.uleb128 0x10
 833 02be 32000000 		.4byte	.LVL12
 834 02c2 EA000000 		.4byte	0xea
 835 02c6 0F       		.uleb128 0xf
 836 02c7 01       		.uleb128 0x1
 837 02c8 50       		.byte	0x50
 838 02c9 01       		.uleb128 0x1
 839 02ca 30       		.byte	0x30
 840 02cb 00       		.byte	0
 841 02cc 00       		.byte	0
 842 02cd 0C       		.uleb128 0xc
 843 02ce 38000000 		.4byte	.LASF38
 844 02d2 01       		.byte	0x1
 845 02d3 D7       		.byte	0xd7
 846 02d4 00000000 		.4byte	.LFB2
 847 02d8 1C000000 		.4byte	.LFE2-.LFB2
 848 02dc 01       		.uleb128 0x1
 849 02dd 9C       		.byte	0x9c
 850 02de F5020000 		.4byte	0x2f5
 851 02e2 0B       		.uleb128 0xb
 852 02e3 0C000000 		.4byte	.LVL13
 853 02e7 4B020000 		.4byte	0x24b
 854 02eb 0B       		.uleb128 0xb
 855 02ec 16000000 		.4byte	.LVL14
 856 02f0 C8000000 		.4byte	0xc8
 857 02f4 00       		.byte	0
 858 02f5 11       		.uleb128 0x11
 859 02f6 66000000 		.4byte	.LASF45
 860 02fa 01       		.byte	0x1
 861 02fb 1A       		.byte	0x1a
 862 02fc 6B000000 		.4byte	0x6b
 863 0300 05       		.uleb128 0x5
 864 0301 03       		.byte	0x3
 865 0302 00000000 		.4byte	throttleTimer_initVar
 866 0306 12       		.uleb128 0x12
 867 0307 E9020000 		.4byte	.LASF39
 868 030b E9020000 		.4byte	.LASF39
 869 030f 03       		.byte	0x3
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 30


 870 0310 7D       		.byte	0x7d
 871 0311 12       		.uleb128 0x12
 872 0312 0D030000 		.4byte	.LASF40
 873 0316 0D030000 		.4byte	.LASF40
 874 031a 03       		.byte	0x3
 875 031b 7E       		.byte	0x7e
 876 031c 00       		.byte	0
 877              		.section	.debug_abbrev,"",%progbits
 878              	.Ldebug_abbrev0:
 879 0000 01       		.uleb128 0x1
 880 0001 11       		.uleb128 0x11
 881 0002 01       		.byte	0x1
 882 0003 25       		.uleb128 0x25
 883 0004 0E       		.uleb128 0xe
 884 0005 13       		.uleb128 0x13
 885 0006 0B       		.uleb128 0xb
 886 0007 03       		.uleb128 0x3
 887 0008 0E       		.uleb128 0xe
 888 0009 1B       		.uleb128 0x1b
 889 000a 0E       		.uleb128 0xe
 890 000b 55       		.uleb128 0x55
 891 000c 17       		.uleb128 0x17
 892 000d 11       		.uleb128 0x11
 893 000e 01       		.uleb128 0x1
 894 000f 10       		.uleb128 0x10
 895 0010 17       		.uleb128 0x17
 896 0011 00       		.byte	0
 897 0012 00       		.byte	0
 898 0013 02       		.uleb128 0x2
 899 0014 24       		.uleb128 0x24
 900 0015 00       		.byte	0
 901 0016 0B       		.uleb128 0xb
 902 0017 0B       		.uleb128 0xb
 903 0018 3E       		.uleb128 0x3e
 904 0019 0B       		.uleb128 0xb
 905 001a 03       		.uleb128 0x3
 906 001b 0E       		.uleb128 0xe
 907 001c 00       		.byte	0
 908 001d 00       		.byte	0
 909 001e 03       		.uleb128 0x3
 910 001f 24       		.uleb128 0x24
 911 0020 00       		.byte	0
 912 0021 0B       		.uleb128 0xb
 913 0022 0B       		.uleb128 0xb
 914 0023 3E       		.uleb128 0x3e
 915 0024 0B       		.uleb128 0xb
 916 0025 03       		.uleb128 0x3
 917 0026 08       		.uleb128 0x8
 918 0027 00       		.byte	0
 919 0028 00       		.byte	0
 920 0029 04       		.uleb128 0x4
 921 002a 16       		.uleb128 0x16
 922 002b 00       		.byte	0
 923 002c 03       		.uleb128 0x3
 924 002d 0E       		.uleb128 0xe
 925 002e 3A       		.uleb128 0x3a
 926 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 31


 927 0030 3B       		.uleb128 0x3b
 928 0031 05       		.uleb128 0x5
 929 0032 49       		.uleb128 0x49
 930 0033 13       		.uleb128 0x13
 931 0034 00       		.byte	0
 932 0035 00       		.byte	0
 933 0036 05       		.uleb128 0x5
 934 0037 35       		.uleb128 0x35
 935 0038 00       		.byte	0
 936 0039 49       		.uleb128 0x49
 937 003a 13       		.uleb128 0x13
 938 003b 00       		.byte	0
 939 003c 00       		.byte	0
 940 003d 06       		.uleb128 0x6
 941 003e 2E       		.uleb128 0x2e
 942 003f 00       		.byte	0
 943 0040 3F       		.uleb128 0x3f
 944 0041 19       		.uleb128 0x19
 945 0042 03       		.uleb128 0x3
 946 0043 0E       		.uleb128 0xe
 947 0044 3A       		.uleb128 0x3a
 948 0045 0B       		.uleb128 0xb
 949 0046 3B       		.uleb128 0x3b
 950 0047 0B       		.uleb128 0xb
 951 0048 27       		.uleb128 0x27
 952 0049 19       		.uleb128 0x19
 953 004a 11       		.uleb128 0x11
 954 004b 01       		.uleb128 0x1
 955 004c 12       		.uleb128 0x12
 956 004d 06       		.uleb128 0x6
 957 004e 40       		.uleb128 0x40
 958 004f 18       		.uleb128 0x18
 959 0050 9742     		.uleb128 0x2117
 960 0052 19       		.uleb128 0x19
 961 0053 00       		.byte	0
 962 0054 00       		.byte	0
 963 0055 07       		.uleb128 0x7
 964 0056 2E       		.uleb128 0x2e
 965 0057 01       		.byte	0x1
 966 0058 3F       		.uleb128 0x3f
 967 0059 19       		.uleb128 0x19
 968 005a 03       		.uleb128 0x3
 969 005b 0E       		.uleb128 0xe
 970 005c 3A       		.uleb128 0x3a
 971 005d 0B       		.uleb128 0xb
 972 005e 3B       		.uleb128 0x3b
 973 005f 05       		.uleb128 0x5
 974 0060 27       		.uleb128 0x27
 975 0061 19       		.uleb128 0x19
 976 0062 11       		.uleb128 0x11
 977 0063 01       		.uleb128 0x1
 978 0064 12       		.uleb128 0x12
 979 0065 06       		.uleb128 0x6
 980 0066 40       		.uleb128 0x40
 981 0067 18       		.uleb128 0x18
 982 0068 9742     		.uleb128 0x2117
 983 006a 19       		.uleb128 0x19
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 32


 984 006b 01       		.uleb128 0x1
 985 006c 13       		.uleb128 0x13
 986 006d 00       		.byte	0
 987 006e 00       		.byte	0
 988 006f 08       		.uleb128 0x8
 989 0070 05       		.uleb128 0x5
 990 0071 00       		.byte	0
 991 0072 03       		.uleb128 0x3
 992 0073 0E       		.uleb128 0xe
 993 0074 3A       		.uleb128 0x3a
 994 0075 0B       		.uleb128 0xb
 995 0076 3B       		.uleb128 0x3b
 996 0077 05       		.uleb128 0x5
 997 0078 49       		.uleb128 0x49
 998 0079 13       		.uleb128 0x13
 999 007a 02       		.uleb128 0x2
 1000 007b 18       		.uleb128 0x18
 1001 007c 00       		.byte	0
 1002 007d 00       		.byte	0
 1003 007e 09       		.uleb128 0x9
 1004 007f 2E       		.uleb128 0x2e
 1005 0080 00       		.byte	0
 1006 0081 3F       		.uleb128 0x3f
 1007 0082 19       		.uleb128 0x19
 1008 0083 03       		.uleb128 0x3
 1009 0084 0E       		.uleb128 0xe
 1010 0085 3A       		.uleb128 0x3a
 1011 0086 0B       		.uleb128 0xb
 1012 0087 3B       		.uleb128 0x3b
 1013 0088 05       		.uleb128 0x5
 1014 0089 27       		.uleb128 0x27
 1015 008a 19       		.uleb128 0x19
 1016 008b 11       		.uleb128 0x11
 1017 008c 01       		.uleb128 0x1
 1018 008d 12       		.uleb128 0x12
 1019 008e 06       		.uleb128 0x6
 1020 008f 40       		.uleb128 0x40
 1021 0090 18       		.uleb128 0x18
 1022 0091 9742     		.uleb128 0x2117
 1023 0093 19       		.uleb128 0x19
 1024 0094 00       		.byte	0
 1025 0095 00       		.byte	0
 1026 0096 0A       		.uleb128 0xa
 1027 0097 2E       		.uleb128 0x2e
 1028 0098 00       		.byte	0
 1029 0099 3F       		.uleb128 0x3f
 1030 009a 19       		.uleb128 0x19
 1031 009b 03       		.uleb128 0x3
 1032 009c 0E       		.uleb128 0xe
 1033 009d 3A       		.uleb128 0x3a
 1034 009e 0B       		.uleb128 0xb
 1035 009f 3B       		.uleb128 0x3b
 1036 00a0 05       		.uleb128 0x5
 1037 00a1 27       		.uleb128 0x27
 1038 00a2 19       		.uleb128 0x19
 1039 00a3 49       		.uleb128 0x49
 1040 00a4 13       		.uleb128 0x13
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 33


 1041 00a5 11       		.uleb128 0x11
 1042 00a6 01       		.uleb128 0x1
 1043 00a7 12       		.uleb128 0x12
 1044 00a8 06       		.uleb128 0x6
 1045 00a9 40       		.uleb128 0x40
 1046 00aa 18       		.uleb128 0x18
 1047 00ab 9742     		.uleb128 0x2117
 1048 00ad 19       		.uleb128 0x19
 1049 00ae 00       		.byte	0
 1050 00af 00       		.byte	0
 1051 00b0 0B       		.uleb128 0xb
 1052 00b1 898201   		.uleb128 0x4109
 1053 00b4 00       		.byte	0
 1054 00b5 11       		.uleb128 0x11
 1055 00b6 01       		.uleb128 0x1
 1056 00b7 31       		.uleb128 0x31
 1057 00b8 13       		.uleb128 0x13
 1058 00b9 00       		.byte	0
 1059 00ba 00       		.byte	0
 1060 00bb 0C       		.uleb128 0xc
 1061 00bc 2E       		.uleb128 0x2e
 1062 00bd 01       		.byte	0x1
 1063 00be 3F       		.uleb128 0x3f
 1064 00bf 19       		.uleb128 0x19
 1065 00c0 03       		.uleb128 0x3
 1066 00c1 0E       		.uleb128 0xe
 1067 00c2 3A       		.uleb128 0x3a
 1068 00c3 0B       		.uleb128 0xb
 1069 00c4 3B       		.uleb128 0x3b
 1070 00c5 0B       		.uleb128 0xb
 1071 00c6 27       		.uleb128 0x27
 1072 00c7 19       		.uleb128 0x19
 1073 00c8 11       		.uleb128 0x11
 1074 00c9 01       		.uleb128 0x1
 1075 00ca 12       		.uleb128 0x12
 1076 00cb 06       		.uleb128 0x6
 1077 00cc 40       		.uleb128 0x40
 1078 00cd 18       		.uleb128 0x18
 1079 00ce 9742     		.uleb128 0x2117
 1080 00d0 19       		.uleb128 0x19
 1081 00d1 01       		.uleb128 0x1
 1082 00d2 13       		.uleb128 0x13
 1083 00d3 00       		.byte	0
 1084 00d4 00       		.byte	0
 1085 00d5 0D       		.uleb128 0xd
 1086 00d6 34       		.uleb128 0x34
 1087 00d7 00       		.byte	0
 1088 00d8 03       		.uleb128 0x3
 1089 00d9 0E       		.uleb128 0xe
 1090 00da 3A       		.uleb128 0x3a
 1091 00db 0B       		.uleb128 0xb
 1092 00dc 3B       		.uleb128 0x3b
 1093 00dd 0B       		.uleb128 0xb
 1094 00de 49       		.uleb128 0x49
 1095 00df 13       		.uleb128 0x13
 1096 00e0 02       		.uleb128 0x2
 1097 00e1 17       		.uleb128 0x17
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 34


 1098 00e2 00       		.byte	0
 1099 00e3 00       		.byte	0
 1100 00e4 0E       		.uleb128 0xe
 1101 00e5 898201   		.uleb128 0x4109
 1102 00e8 01       		.byte	0x1
 1103 00e9 11       		.uleb128 0x11
 1104 00ea 01       		.uleb128 0x1
 1105 00eb 31       		.uleb128 0x31
 1106 00ec 13       		.uleb128 0x13
 1107 00ed 01       		.uleb128 0x1
 1108 00ee 13       		.uleb128 0x13
 1109 00ef 00       		.byte	0
 1110 00f0 00       		.byte	0
 1111 00f1 0F       		.uleb128 0xf
 1112 00f2 8A8201   		.uleb128 0x410a
 1113 00f5 00       		.byte	0
 1114 00f6 02       		.uleb128 0x2
 1115 00f7 18       		.uleb128 0x18
 1116 00f8 9142     		.uleb128 0x2111
 1117 00fa 18       		.uleb128 0x18
 1118 00fb 00       		.byte	0
 1119 00fc 00       		.byte	0
 1120 00fd 10       		.uleb128 0x10
 1121 00fe 898201   		.uleb128 0x4109
 1122 0101 01       		.byte	0x1
 1123 0102 11       		.uleb128 0x11
 1124 0103 01       		.uleb128 0x1
 1125 0104 31       		.uleb128 0x31
 1126 0105 13       		.uleb128 0x13
 1127 0106 00       		.byte	0
 1128 0107 00       		.byte	0
 1129 0108 11       		.uleb128 0x11
 1130 0109 34       		.uleb128 0x34
 1131 010a 00       		.byte	0
 1132 010b 03       		.uleb128 0x3
 1133 010c 0E       		.uleb128 0xe
 1134 010d 3A       		.uleb128 0x3a
 1135 010e 0B       		.uleb128 0xb
 1136 010f 3B       		.uleb128 0x3b
 1137 0110 0B       		.uleb128 0xb
 1138 0111 49       		.uleb128 0x49
 1139 0112 13       		.uleb128 0x13
 1140 0113 3F       		.uleb128 0x3f
 1141 0114 19       		.uleb128 0x19
 1142 0115 02       		.uleb128 0x2
 1143 0116 18       		.uleb128 0x18
 1144 0117 00       		.byte	0
 1145 0118 00       		.byte	0
 1146 0119 12       		.uleb128 0x12
 1147 011a 2E       		.uleb128 0x2e
 1148 011b 00       		.byte	0
 1149 011c 3F       		.uleb128 0x3f
 1150 011d 19       		.uleb128 0x19
 1151 011e 3C       		.uleb128 0x3c
 1152 011f 19       		.uleb128 0x19
 1153 0120 6E       		.uleb128 0x6e
 1154 0121 0E       		.uleb128 0xe
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 35


 1155 0122 03       		.uleb128 0x3
 1156 0123 0E       		.uleb128 0xe
 1157 0124 3A       		.uleb128 0x3a
 1158 0125 0B       		.uleb128 0xb
 1159 0126 3B       		.uleb128 0x3b
 1160 0127 0B       		.uleb128 0xb
 1161 0128 00       		.byte	0
 1162 0129 00       		.byte	0
 1163 012a 00       		.byte	0
 1164              		.section	.debug_loc,"",%progbits
 1165              	.Ldebug_loc0:
 1166              	.LLST0:
 1167 0000 16000000 		.4byte	.LVL8
 1168 0004 23000000 		.4byte	.LVL9-1
 1169 0008 0100     		.2byte	0x1
 1170 000a 50       		.byte	0x50
 1171 000b 00000000 		.4byte	0
 1172 000f 00000000 		.4byte	0
 1173              		.section	.debug_aranges,"",%progbits
 1174 0000 9C000000 		.4byte	0x9c
 1175 0004 0200     		.2byte	0x2
 1176 0006 00000000 		.4byte	.Ldebug_info0
 1177 000a 04       		.byte	0x4
 1178 000b 00       		.byte	0
 1179 000c 0000     		.2byte	0
 1180 000e 0000     		.2byte	0
 1181 0010 00000000 		.4byte	.LFB1
 1182 0014 10000000 		.4byte	.LFE1-.LFB1
 1183 0018 00000000 		.4byte	.LFB3
 1184 001c 10000000 		.4byte	.LFE3-.LFB3
 1185 0020 00000000 		.4byte	.LFB4
 1186 0024 0C000000 		.4byte	.LFE4-.LFB4
 1187 0028 00000000 		.4byte	.LFB5
 1188 002c 0C000000 		.4byte	.LFE5-.LFB5
 1189 0030 00000000 		.4byte	.LFB6
 1190 0034 0C000000 		.4byte	.LFE6-.LFB6
 1191 0038 00000000 		.4byte	.LFB7
 1192 003c 0C000000 		.4byte	.LFE7-.LFB7
 1193 0040 00000000 		.4byte	.LFB8
 1194 0044 0C000000 		.4byte	.LFE8-.LFB8
 1195 0048 00000000 		.4byte	.LFB9
 1196 004c 0C000000 		.4byte	.LFE9-.LFB9
 1197 0050 00000000 		.4byte	.LFB10
 1198 0054 0C000000 		.4byte	.LFE10-.LFB10
 1199 0058 00000000 		.4byte	.LFB11
 1200 005c 0C000000 		.4byte	.LFE11-.LFB11
 1201 0060 00000000 		.4byte	.LFB12
 1202 0064 0C000000 		.4byte	.LFE12-.LFB12
 1203 0068 00000000 		.4byte	.LFB13
 1204 006c 14000000 		.4byte	.LFE13-.LFB13
 1205 0070 00000000 		.4byte	.LFB14
 1206 0074 10000000 		.4byte	.LFE14-.LFB14
 1207 0078 00000000 		.4byte	.LFB15
 1208 007c 10000000 		.4byte	.LFE15-.LFB15
 1209 0080 00000000 		.4byte	.LFB16
 1210 0084 14000000 		.4byte	.LFE16-.LFB16
 1211 0088 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 36


 1212 008c 38000000 		.4byte	.LFE0-.LFB0
 1213 0090 00000000 		.4byte	.LFB2
 1214 0094 1C000000 		.4byte	.LFE2-.LFB2
 1215 0098 00000000 		.4byte	0
 1216 009c 00000000 		.4byte	0
 1217              		.section	.debug_ranges,"",%progbits
 1218              	.Ldebug_ranges0:
 1219 0000 00000000 		.4byte	.LFB1
 1220 0004 10000000 		.4byte	.LFE1
 1221 0008 00000000 		.4byte	.LFB3
 1222 000c 10000000 		.4byte	.LFE3
 1223 0010 00000000 		.4byte	.LFB4
 1224 0014 0C000000 		.4byte	.LFE4
 1225 0018 00000000 		.4byte	.LFB5
 1226 001c 0C000000 		.4byte	.LFE5
 1227 0020 00000000 		.4byte	.LFB6
 1228 0024 0C000000 		.4byte	.LFE6
 1229 0028 00000000 		.4byte	.LFB7
 1230 002c 0C000000 		.4byte	.LFE7
 1231 0030 00000000 		.4byte	.LFB8
 1232 0034 0C000000 		.4byte	.LFE8
 1233 0038 00000000 		.4byte	.LFB9
 1234 003c 0C000000 		.4byte	.LFE9
 1235 0040 00000000 		.4byte	.LFB10
 1236 0044 0C000000 		.4byte	.LFE10
 1237 0048 00000000 		.4byte	.LFB11
 1238 004c 0C000000 		.4byte	.LFE11
 1239 0050 00000000 		.4byte	.LFB12
 1240 0054 0C000000 		.4byte	.LFE12
 1241 0058 00000000 		.4byte	.LFB13
 1242 005c 14000000 		.4byte	.LFE13
 1243 0060 00000000 		.4byte	.LFB14
 1244 0064 10000000 		.4byte	.LFE14
 1245 0068 00000000 		.4byte	.LFB15
 1246 006c 10000000 		.4byte	.LFE15
 1247 0070 00000000 		.4byte	.LFB16
 1248 0074 14000000 		.4byte	.LFE16
 1249 0078 00000000 		.4byte	.LFB0
 1250 007c 38000000 		.4byte	.LFE0
 1251 0080 00000000 		.4byte	.LFB2
 1252 0084 1C000000 		.4byte	.LFE2
 1253 0088 00000000 		.4byte	0
 1254 008c 00000000 		.4byte	0
 1255              		.section	.debug_line,"",%progbits
 1256              	.Ldebug_line0:
 1257 0000 95010000 		.section	.debug_str,"MS",%progbits,1
 1257      02005500 
 1257      00000201 
 1257      FB0E0D00 
 1257      01010101 
 1258              	.LASF15:
 1259 0000 72656731 		.ascii	"reg16\000"
 1259      3600
 1260              	.LASF36:
 1261 0006 7468726F 		.ascii	"throttleTimer_ClearFIFO\000"
 1261      74746C65 
 1261      54696D65 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 37


 1261      725F436C 
 1261      65617246 
 1262              	.LASF30:
 1263 001e 7468726F 		.ascii	"throttleTimer_ReadCapture\000"
 1263      74746C65 
 1263      54696D65 
 1263      725F5265 
 1263      61644361 
 1264              	.LASF38:
 1265 0038 7468726F 		.ascii	"throttleTimer_Start\000"
 1265      74746C65 
 1265      54696D65 
 1265      725F5374 
 1265      61727400 
 1266              	.LASF28:
 1267 004c 7468726F 		.ascii	"throttleTimer_WritePeriod\000"
 1267      74746C65 
 1267      54696D65 
 1267      725F5772 
 1267      69746550 
 1268              	.LASF45:
 1269 0066 7468726F 		.ascii	"throttleTimer_initVar\000"
 1269      74746C65 
 1269      54696D65 
 1269      725F696E 
 1269      69745661 
 1270              	.LASF29:
 1271 007c 70657269 		.ascii	"period\000"
 1271      6F6400
 1272              	.LASF20:
 1273 0083 7468726F 		.ascii	"throttleTimer_SoftwareCapture\000"
 1273      74746C65 
 1273      54696D65 
 1273      725F536F 
 1273      66747761 
 1274              	.LASF3:
 1275 00a1 73686F72 		.ascii	"short unsigned int\000"
 1275      7420756E 
 1275      7369676E 
 1275      65642069 
 1275      6E7400
 1276              	.LASF35:
 1277 00b4 7468726F 		.ascii	"throttleTimer_DisableTrigger\000"
 1277      74746C65 
 1277      54696D65 
 1277      725F4469 
 1277      7361626C 
 1278              	.LASF23:
 1279 00d1 7468726F 		.ascii	"throttleTimer_SetInterruptMode\000"
 1279      74746C65 
 1279      54696D65 
 1279      725F5365 
 1279      74496E74 
 1280              	.LASF22:
 1281 00f0 7468726F 		.ascii	"throttleTimer_ReadControlRegister\000"
 1281      74746C65 
 1281      54696D65 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 38


 1281      725F5265 
 1281      6164436F 
 1282              	.LASF11:
 1283 0112 666C6F61 		.ascii	"float\000"
 1283      7400
 1284              	.LASF32:
 1285 0118 636F756E 		.ascii	"counter\000"
 1285      74657200 
 1286              	.LASF7:
 1287 0120 6C6F6E67 		.ascii	"long long unsigned int\000"
 1287      206C6F6E 
 1287      6720756E 
 1287      7369676E 
 1287      65642069 
 1288              	.LASF1:
 1289 0137 756E7369 		.ascii	"unsigned char\000"
 1289      676E6564 
 1289      20636861 
 1289      7200
 1290              	.LASF41:
 1291 0145 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1291      43313120 
 1291      352E342E 
 1291      31203230 
 1291      31363036 
 1292 0178 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1292      20726576 
 1292      6973696F 
 1292      6E203233 
 1292      37373135 
 1293 01ab 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1293      66756E63 
 1293      74696F6E 
 1293      2D736563 
 1293      74696F6E 
 1294              	.LASF33:
 1295 01d3 7468726F 		.ascii	"throttleTimer_ReadCounter\000"
 1295      74746C65 
 1295      54696D65 
 1295      725F5265 
 1295      6164436F 
 1296              	.LASF34:
 1297 01ed 7468726F 		.ascii	"throttleTimer_EnableTrigger\000"
 1297      74746C65 
 1297      54696D65 
 1297      725F456E 
 1297      61626C65 
 1298              	.LASF5:
 1299 0209 6C6F6E67 		.ascii	"long unsigned int\000"
 1299      20756E73 
 1299      69676E65 
 1299      6420696E 
 1299      7400
 1300              	.LASF9:
 1301 021b 75696E74 		.ascii	"uint8\000"
 1301      3800
 1302              	.LASF26:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 39


 1303 0221 636F6E74 		.ascii	"control\000"
 1303      726F6C00 
 1304              	.LASF31:
 1305 0229 7468726F 		.ascii	"throttleTimer_WriteCounter\000"
 1305      74746C65 
 1305      54696D65 
 1305      725F5772 
 1305      69746543 
 1306              	.LASF37:
 1307 0244 7468726F 		.ascii	"throttleTimer_Init\000"
 1307      74746C65 
 1307      54696D65 
 1307      725F496E 
 1307      697400
 1308              	.LASF27:
 1309 0257 7468726F 		.ascii	"throttleTimer_ReadPeriod\000"
 1309      74746C65 
 1309      54696D65 
 1309      725F5265 
 1309      61645065 
 1310              	.LASF43:
 1311 0270 433A5C55 		.ascii	"C:\\Users\\mikke\\OneDrive\\Documents\\GitHub\\plat"
 1311      73657273 
 1311      5C6D696B 
 1311      6B655C4F 
 1311      6E654472 
 1312 029d 6F6F6E69 		.ascii	"ooning\\PSoC\\00_Basic_Tx.cydsn\000"
 1312      6E675C50 
 1312      536F435C 
 1312      30305F42 
 1312      61736963 
 1313              	.LASF10:
 1314 02bb 75696E74 		.ascii	"uint16\000"
 1314      313600
 1315              	.LASF42:
 1316 02c2 47656E65 		.ascii	"Generated_Source\\PSoC5\\throttleTimer.c\000"
 1316      72617465 
 1316      645F536F 
 1316      75726365 
 1316      5C50536F 
 1317              	.LASF39:
 1318 02e9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1318      74657243 
 1318      72697469 
 1318      63616C53 
 1318      65637469 
 1319              	.LASF8:
 1320 0300 756E7369 		.ascii	"unsigned int\000"
 1320      676E6564 
 1320      20696E74 
 1320      00
 1321              	.LASF40:
 1322 030d 43794578 		.ascii	"CyExitCriticalSection\000"
 1322      69744372 
 1322      69746963 
 1322      616C5365 
 1322      6374696F 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 40


 1323              	.LASF14:
 1324 0323 72656738 		.ascii	"reg8\000"
 1324      00
 1325              	.LASF17:
 1326 0328 73697A65 		.ascii	"sizetype\000"
 1326      74797065 
 1326      00
 1327              	.LASF6:
 1328 0331 6C6F6E67 		.ascii	"long long int\000"
 1328      206C6F6E 
 1328      6720696E 
 1328      7400
 1329              	.LASF18:
 1330 033f 7468726F 		.ascii	"throttleTimer_Enable\000"
 1330      74746C65 
 1330      54696D65 
 1330      725F456E 
 1330      61626C65 
 1331              	.LASF25:
 1332 0354 696E7465 		.ascii	"interruptMode\000"
 1332      72727570 
 1332      744D6F64 
 1332      6500
 1333              	.LASF19:
 1334 0362 7468726F 		.ascii	"throttleTimer_Stop\000"
 1334      74746C65 
 1334      54696D65 
 1334      725F5374 
 1334      6F7000
 1335              	.LASF2:
 1336 0375 73686F72 		.ascii	"short int\000"
 1336      7420696E 
 1336      7400
 1337              	.LASF24:
 1338 037f 7468726F 		.ascii	"throttleTimer_WriteControlRegister\000"
 1338      74746C65 
 1338      54696D65 
 1338      725F5772 
 1338      69746543 
 1339              	.LASF4:
 1340 03a2 6C6F6E67 		.ascii	"long int\000"
 1340      20696E74 
 1340      00
 1341              	.LASF13:
 1342 03ab 63686172 		.ascii	"char\000"
 1342      00
 1343              	.LASF16:
 1344 03b0 6C6F6E67 		.ascii	"long double\000"
 1344      20646F75 
 1344      626C6500 
 1345              	.LASF0:
 1346 03bc 7369676E 		.ascii	"signed char\000"
 1346      65642063 
 1346      68617200 
 1347              	.LASF12:
 1348 03c8 646F7562 		.ascii	"double\000"
 1348      6C6500
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccL92R6Q.s 			page 41


 1349              	.LASF21:
 1350 03cf 7468726F 		.ascii	"throttleTimer_ReadStatusRegister\000"
 1350      74746C65 
 1350      54696D65 
 1350      725F5265 
 1350      61645374 
 1351              	.LASF44:
 1352 03f0 7468726F 		.ascii	"throttleTimer_interruptState\000"
 1352      74746C65 
 1352      54696D65 
 1352      725F696E 
 1352      74657272 
 1353              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
