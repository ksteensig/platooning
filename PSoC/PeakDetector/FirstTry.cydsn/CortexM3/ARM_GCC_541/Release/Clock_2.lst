ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_2_Start,"ax",%progbits
  20              		.align	1
  21              		.global	Clock_2_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	Clock_2_Start, %function
  25              	Clock_2_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Clock_2.c"
   1:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Clock_2.c **** * File Name: Clock_2.c
   3:Generated_Source\PSoC5/Clock_2.c **** * Version 2.20
   4:Generated_Source\PSoC5/Clock_2.c **** *
   5:Generated_Source\PSoC5/Clock_2.c **** *  Description:
   6:Generated_Source\PSoC5/Clock_2.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/Clock_2.c **** *
   8:Generated_Source\PSoC5/Clock_2.c **** *  Note:
   9:Generated_Source\PSoC5/Clock_2.c **** *
  10:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Clock_2.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Clock_2.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Clock_2.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Clock_2.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Clock_2.c **** 
  17:Generated_Source\PSoC5/Clock_2.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/Clock_2.c **** #include "Clock_2.h"
  19:Generated_Source\PSoC5/Clock_2.c **** 
  20:Generated_Source\PSoC5/Clock_2.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/Clock_2.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/Clock_2.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/Clock_2.c **** 
  27:Generated_Source\PSoC5/Clock_2.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/Clock_2.c **** 
  29:Generated_Source\PSoC5/Clock_2.c **** 
  30:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 2


  31:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_Start
  32:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  33:Generated_Source\PSoC5/Clock_2.c **** *
  34:Generated_Source\PSoC5/Clock_2.c **** * Summary:
  35:Generated_Source\PSoC5/Clock_2.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/Clock_2.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/Clock_2.c **** *
  38:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
  39:Generated_Source\PSoC5/Clock_2.c **** *  None
  40:Generated_Source\PSoC5/Clock_2.c **** *
  41:Generated_Source\PSoC5/Clock_2.c **** * Returns:
  42:Generated_Source\PSoC5/Clock_2.c **** *  None
  43:Generated_Source\PSoC5/Clock_2.c **** *
  44:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_Start(void) 
  46:Generated_Source\PSoC5/Clock_2.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  47:Generated_Source\PSoC5/Clock_2.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_CLKEN |= Clock_2_CLKEN_MASK;
  33              		.loc 1 48 0
  34 0000 044A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00103 		orr	r3, r3, #1
  37 0008 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/Clock_2.c **** 	Clock_2_CLKSTBY |= Clock_2_CLKSTBY_MASK;
  38              		.loc 1 49 0
  39 000a 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
  40 000c 43F00103 		orr	r3, r3, #1
  41 0010 1374     		strb	r3, [r2, #16]
  42 0012 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0014 A1430040 		.word	1073759137
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	Clock_2_Start, .-Clock_2_Start
  50              		.section	.text.Clock_2_Stop,"ax",%progbits
  51              		.align	1
  52              		.global	Clock_2_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	Clock_2_Stop, %function
  56              	Clock_2_Stop:
  57              	.LFB1:
  50:Generated_Source\PSoC5/Clock_2.c **** }
  51:Generated_Source\PSoC5/Clock_2.c **** 
  52:Generated_Source\PSoC5/Clock_2.c **** 
  53:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_Stop
  55:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
  56:Generated_Source\PSoC5/Clock_2.c **** *
  57:Generated_Source\PSoC5/Clock_2.c **** * Summary:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 3


  58:Generated_Source\PSoC5/Clock_2.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/Clock_2.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/Clock_2.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/Clock_2.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/Clock_2.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/Clock_2.c **** *
  64:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
  65:Generated_Source\PSoC5/Clock_2.c **** *  None
  66:Generated_Source\PSoC5/Clock_2.c **** *
  67:Generated_Source\PSoC5/Clock_2.c **** * Returns:
  68:Generated_Source\PSoC5/Clock_2.c **** *  None
  69:Generated_Source\PSoC5/Clock_2.c **** *
  70:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_Stop(void) 
  72:Generated_Source\PSoC5/Clock_2.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:Generated_Source\PSoC5/Clock_2.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_CLKEN &= (uint8)(~Clock_2_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 044A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66 0004 03F0FE03 		and	r3, r3, #254
  67 0008 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/Clock_2.c **** 	Clock_2_CLKSTBY &= (uint8)(~Clock_2_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
  70 000c 03F0FE03 		and	r3, r3, #254
  71 0010 1374     		strb	r3, [r2, #16]
  72 0012 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 0014 A1430040 		.word	1073759137
  77              		.cfi_endproc
  78              	.LFE1:
  79              		.size	Clock_2_Stop, .-Clock_2_Stop
  80              		.section	.text.Clock_2_StopBlock,"ax",%progbits
  81              		.align	1
  82              		.global	Clock_2_StopBlock
  83              		.thumb
  84              		.thumb_func
  85              		.type	Clock_2_StopBlock, %function
  86              	Clock_2_StopBlock:
  87              	.LFB2:
  76:Generated_Source\PSoC5/Clock_2.c **** }
  77:Generated_Source\PSoC5/Clock_2.c **** 
  78:Generated_Source\PSoC5/Clock_2.c **** 
  79:Generated_Source\PSoC5/Clock_2.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/Clock_2.c **** 
  81:Generated_Source\PSoC5/Clock_2.c **** 
  82:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
  83:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_StopBlock
  84:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 4


  85:Generated_Source\PSoC5/Clock_2.c **** *
  86:Generated_Source\PSoC5/Clock_2.c **** * Summary:
  87:Generated_Source\PSoC5/Clock_2.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/Clock_2.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/Clock_2.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/Clock_2.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/Clock_2.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/Clock_2.c **** *
  93:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
  94:Generated_Source\PSoC5/Clock_2.c **** *  None
  95:Generated_Source\PSoC5/Clock_2.c **** *
  96:Generated_Source\PSoC5/Clock_2.c **** * Returns:
  97:Generated_Source\PSoC5/Clock_2.c **** *  None
  98:Generated_Source\PSoC5/Clock_2.c **** *
  99:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 100:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_StopBlock(void) 
 101:Generated_Source\PSoC5/Clock_2.c **** {
  88              		.loc 1 101 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 102:Generated_Source\PSoC5/Clock_2.c ****     if ((Clock_2_CLKEN & Clock_2_CLKEN_MASK) != 0u)
  96              		.loc 1 102 0
  97 0002 154B     		ldr	r3, .L15
  98 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  99 0006 D207     		lsls	r2, r2, #31
 100 0008 25D5     		bpl	.L7
 101              	.LBB10:
 103:Generated_Source\PSoC5/Clock_2.c ****     {
 104:Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/Clock_2.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/Clock_2.c **** 
 107:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_LD = 0u;
 108:Generated_Source\PSoC5/Clock_2.c **** 
 109:Generated_Source\PSoC5/Clock_2.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/Clock_2.c **** #if defined(Clock_2__CFG3)
 111:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_AMASK = Clock_2_CLKEN_MASK;
 102              		.loc 1 111 0
 103 000a 1448     		ldr	r0, .L15+4
 107:Generated_Source\PSoC5/Clock_2.c **** 
 104              		.loc 1 107 0
 105 000c 144A     		ldr	r2, .L15+8
 106 000e 0021     		movs	r1, #0
 107              		.loc 1 111 0
 108 0010 0124     		movs	r4, #1
 107:Generated_Source\PSoC5/Clock_2.c **** 
 109              		.loc 1 107 0
 110 0012 1170     		strb	r1, [r2]
 111              		.loc 1 111 0
 112 0014 0470     		strb	r4, [r0]
 112:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_DMASK = 0x00u;
 113              		.loc 1 112 0
 114 0016 00F8041C 		strb	r1, [r0, #-4]
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 5


 113:Generated_Source\PSoC5/Clock_2.c **** #else
 114:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_DMASK = Clock_2_CLKEN_MASK;
 115:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_AMASK = 0x00u;
 116:Generated_Source\PSoC5/Clock_2.c **** #endif /* Clock_2__CFG3 */
 117:Generated_Source\PSoC5/Clock_2.c **** 
 118:Generated_Source\PSoC5/Clock_2.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 115              		.loc 1 119 0
 116 001a 10F80C1C 		ldrb	r1, [r0, #-12]	@ zero_extendqisi2
 117 001e 01F07F01 		and	r1, r1, #127
 118 0022 00F80C1C 		strb	r1, [r0, #-12]
 120:Generated_Source\PSoC5/Clock_2.c **** 
 121:Generated_Source\PSoC5/Clock_2.c ****         oldDivider = CY_GET_REG16(Clock_2_DIV_PTR);
 119              		.loc 1 121 0
 120 0026 0F49     		ldr	r1, .L15+12
 121 0028 0888     		ldrh	r0, [r1]
 122 002a 80B2     		uxth	r0, r0
 123              	.LVL0:
 122:Generated_Source\PSoC5/Clock_2.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 124              		.loc 1 122 0
 125 002c 21F8FE0C 		strh	r0, [r1, #-254]	@ movhi
 123:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 126              		.loc 1 123 0
 127 0030 0721     		movs	r1, #7
 128 0032 1170     		strb	r1, [r2]
 129              	.L9:
 124:Generated_Source\PSoC5/Clock_2.c **** 
 125:Generated_Source\PSoC5/Clock_2.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/Clock_2.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 130              		.loc 1 126 0 discriminator 1
 131 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 132 0036 11F00101 		ands	r1, r1, #1
 133 003a FBD1     		bne	.L9
 127:Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/Clock_2.c **** 
 129:Generated_Source\PSoC5/Clock_2.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKEN &= (uint8)(~Clock_2_CLKEN_MASK);
 134              		.loc 1 130 0
 135 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 136 003e 02F0FE02 		and	r2, r2, #254
 137 0042 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKSTBY &= (uint8)(~Clock_2_CLKSTBY_MASK);
 138              		.loc 1 131 0
 139 0044 084A     		ldr	r2, .L15+16
 140 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 141 0048 03F0FE03 		and	r3, r3, #254
 142 004c 1370     		strb	r3, [r2]
 132:Generated_Source\PSoC5/Clock_2.c **** 
 133:Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/Clock_2.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/Clock_2.c ****         CLK_DIST_LD = 0x00u;
 143              		.loc 1 135 0
 144 004e 044B     		ldr	r3, .L15+8
 145 0050 1970     		strb	r1, [r3]
 136:Generated_Source\PSoC5/Clock_2.c ****         CY_SET_REG16(Clock_2_DIV_PTR, oldDivider);
 146              		.loc 1 136 0
 147 0052 A3F8FF00 		strh	r0, [r3, #255]	@ movhi
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 6


 148              	.LVL1:
 149              	.L7:
 150 0056 10BD     		pop	{r4, pc}
 151              	.L16:
 152              		.align	2
 153              	.L15:
 154 0058 A1430040 		.word	1073759137
 155 005c 14400040 		.word	1073758228
 156 0060 01400040 		.word	1073758209
 157 0064 00410040 		.word	1073758464
 158 0068 B1430040 		.word	1073759153
 159              	.LBE10:
 160              		.cfi_endproc
 161              	.LFE2:
 162              		.size	Clock_2_StopBlock, .-Clock_2_StopBlock
 163              		.section	.text.Clock_2_StandbyPower,"ax",%progbits
 164              		.align	1
 165              		.global	Clock_2_StandbyPower
 166              		.thumb
 167              		.thumb_func
 168              		.type	Clock_2_StandbyPower, %function
 169              	Clock_2_StandbyPower:
 170              	.LFB3:
 137:Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/Clock_2.c ****     }
 139:Generated_Source\PSoC5/Clock_2.c **** }
 140:Generated_Source\PSoC5/Clock_2.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/Clock_2.c **** 
 142:Generated_Source\PSoC5/Clock_2.c **** 
 143:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_StandbyPower
 145:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 146:Generated_Source\PSoC5/Clock_2.c **** *
 147:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 148:Generated_Source\PSoC5/Clock_2.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/Clock_2.c **** *
 150:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 151:Generated_Source\PSoC5/Clock_2.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/Clock_2.c **** *
 153:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 154:Generated_Source\PSoC5/Clock_2.c **** *  None
 155:Generated_Source\PSoC5/Clock_2.c **** *
 156:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/Clock_2.c **** {
 171              		.loc 1 158 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL2:
 177 0000 044B     		ldr	r3, .L21
 159:Generated_Source\PSoC5/Clock_2.c ****     if(state == 0u)
 160:Generated_Source\PSoC5/Clock_2.c ****     {
 161:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKSTBY &= (uint8)(~Clock_2_CLKSTBY_MASK);
 178              		.loc 1 161 0
 179 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 7


 159:Generated_Source\PSoC5/Clock_2.c ****     if(state == 0u)
 180              		.loc 1 159 0
 181 0004 10B9     		cbnz	r0, .L18
 182              		.loc 1 161 0
 183 0006 02F0FE02 		and	r2, r2, #254
 184 000a 01E0     		b	.L20
 185              	.L18:
 162:Generated_Source\PSoC5/Clock_2.c ****     }
 163:Generated_Source\PSoC5/Clock_2.c ****     else
 164:Generated_Source\PSoC5/Clock_2.c ****     {
 165:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_CLKSTBY |= Clock_2_CLKSTBY_MASK;
 186              		.loc 1 165 0
 187 000c 42F00102 		orr	r2, r2, #1
 188              	.L20:
 189 0010 1A70     		strb	r2, [r3]
 190 0012 7047     		bx	lr
 191              	.L22:
 192              		.align	2
 193              	.L21:
 194 0014 B1430040 		.word	1073759153
 195              		.cfi_endproc
 196              	.LFE3:
 197              		.size	Clock_2_StandbyPower, .-Clock_2_StandbyPower
 198              		.section	.text.Clock_2_SetDividerRegister,"ax",%progbits
 199              		.align	1
 200              		.global	Clock_2_SetDividerRegister
 201              		.thumb
 202              		.thumb_func
 203              		.type	Clock_2_SetDividerRegister, %function
 204              	Clock_2_SetDividerRegister:
 205              	.LFB4:
 166:Generated_Source\PSoC5/Clock_2.c ****     }
 167:Generated_Source\PSoC5/Clock_2.c **** }
 168:Generated_Source\PSoC5/Clock_2.c **** 
 169:Generated_Source\PSoC5/Clock_2.c **** 
 170:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetDividerRegister
 172:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 173:Generated_Source\PSoC5/Clock_2.c **** *
 174:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 175:Generated_Source\PSoC5/Clock_2.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/Clock_2.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/Clock_2.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/Clock_2.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/Clock_2.c **** *
 180:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 181:Generated_Source\PSoC5/Clock_2.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/Clock_2.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/Clock_2.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/Clock_2.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/Clock_2.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/Clock_2.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:Generated_Source\PSoC5/Clock_2.c **** *   cycle.
 188:Generated_Source\PSoC5/Clock_2.c **** *
 189:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 190:Generated_Source\PSoC5/Clock_2.c **** *  None
 191:Generated_Source\PSoC5/Clock_2.c **** *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 8


 192:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 193:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/Clock_2.c ****                                 
 195:Generated_Source\PSoC5/Clock_2.c **** {
 206              		.loc 1 195 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL3:
 211 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 212              		.cfi_def_cfa_offset 20
 213              		.cfi_offset 4, -20
 214              		.cfi_offset 5, -16
 215              		.cfi_offset 6, -12
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218              	.LBB11:
 219              	.LBB12:
 196:Generated_Source\PSoC5/Clock_2.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/Clock_2.c **** 
 198:Generated_Source\PSoC5/Clock_2.c ****     uint8 currSrc = Clock_2_GetSourceRegister();
 199:Generated_Source\PSoC5/Clock_2.c ****     uint16 oldDivider = Clock_2_GetDividerRegister();
 200:Generated_Source\PSoC5/Clock_2.c **** 
 201:Generated_Source\PSoC5/Clock_2.c ****     if (clkDivider != oldDivider)
 202:Generated_Source\PSoC5/Clock_2.c ****     {
 203:Generated_Source\PSoC5/Clock_2.c ****         enabled = Clock_2_CLKEN & Clock_2_CLKEN_MASK;
 204:Generated_Source\PSoC5/Clock_2.c **** 
 205:Generated_Source\PSoC5/Clock_2.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:Generated_Source\PSoC5/Clock_2.c ****         {
 207:Generated_Source\PSoC5/Clock_2.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/Clock_2.c ****             if (oldDivider == 0u)
 209:Generated_Source\PSoC5/Clock_2.c ****             {
 210:Generated_Source\PSoC5/Clock_2.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/Clock_2.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/Clock_2.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 214:Generated_Source\PSoC5/Clock_2.c ****                 Clock_2_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:Generated_Source\PSoC5/Clock_2.c ****             }
 216:Generated_Source\PSoC5/Clock_2.c ****             else
 217:Generated_Source\PSoC5/Clock_2.c ****             {
 218:Generated_Source\PSoC5/Clock_2.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/Clock_2.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/Clock_2.c ****                 Clock_2_MOD_SRC |= CYCLK_SSS;
 221:Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 222:Generated_Source\PSoC5/Clock_2.c ****             }
 223:Generated_Source\PSoC5/Clock_2.c ****         }
 224:Generated_Source\PSoC5/Clock_2.c ****         else
 225:Generated_Source\PSoC5/Clock_2.c ****         {
 226:Generated_Source\PSoC5/Clock_2.c **** 			
 227:Generated_Source\PSoC5/Clock_2.c ****             if (enabled != 0u)
 228:Generated_Source\PSoC5/Clock_2.c ****             {
 229:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_LD = 0x00u;
 230:Generated_Source\PSoC5/Clock_2.c **** 
 231:Generated_Source\PSoC5/Clock_2.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/Clock_2.c **** #if defined(Clock_2__CFG3)
 233:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_AMASK = Clock_2_CLKEN_MASK;
 234:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = 0x00u;
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 9


 235:Generated_Source\PSoC5/Clock_2.c **** #else
 236:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = Clock_2_CLKEN_MASK;
 237:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_AMASK = 0x00u;
 238:Generated_Source\PSoC5/Clock_2.c **** #endif /* Clock_2__CFG3 */
 239:Generated_Source\PSoC5/Clock_2.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:Generated_Source\PSoC5/Clock_2.c **** 
 242:Generated_Source\PSoC5/Clock_2.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/Clock_2.c ****                 if (((Clock_2_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:Generated_Source\PSoC5/Clock_2.c ****                 {
 245:Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/Clock_2.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:Generated_Source\PSoC5/Clock_2.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:Generated_Source\PSoC5/Clock_2.c **** 
 249:Generated_Source\PSoC5/Clock_2.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/Clock_2.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/Clock_2.c **** 
 253:Generated_Source\PSoC5/Clock_2.c ****                     Clock_2_CLKEN &= (uint8)(~Clock_2_CLKEN_MASK);
 254:Generated_Source\PSoC5/Clock_2.c **** 
 255:Generated_Source\PSoC5/Clock_2.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/Clock_2.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/Clock_2.c ****                     CLK_DIST_LD = 0x00u;
 258:Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/Clock_2.c ****                 }
 260:Generated_Source\PSoC5/Clock_2.c ****             }
 261:Generated_Source\PSoC5/Clock_2.c **** 
 262:Generated_Source\PSoC5/Clock_2.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/Clock_2.c ****             if ((Clock_2_CLKEN & Clock_2_CLKEN_MASK) != 0u)
 264:Generated_Source\PSoC5/Clock_2.c ****             {
 265:Generated_Source\PSoC5/Clock_2.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:Generated_Source\PSoC5/Clock_2.c **** 
 268:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:Generated_Source\PSoC5/Clock_2.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:Generated_Source\PSoC5/Clock_2.c ****             }
 271:Generated_Source\PSoC5/Clock_2.c ****             else
 272:Generated_Source\PSoC5/Clock_2.c ****             {
 273:Generated_Source\PSoC5/Clock_2.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/Clock_2.c **** 				Clock_2_CLKEN |= enabled;
 276:Generated_Source\PSoC5/Clock_2.c ****             }
 277:Generated_Source\PSoC5/Clock_2.c ****         }
 278:Generated_Source\PSoC5/Clock_2.c ****     }
 279:Generated_Source\PSoC5/Clock_2.c **** }
 280:Generated_Source\PSoC5/Clock_2.c **** 
 281:Generated_Source\PSoC5/Clock_2.c **** 
 282:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetDividerRegister
 284:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 285:Generated_Source\PSoC5/Clock_2.c **** *
 286:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 287:Generated_Source\PSoC5/Clock_2.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/Clock_2.c **** *
 289:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 290:Generated_Source\PSoC5/Clock_2.c **** *  None
 291:Generated_Source\PSoC5/Clock_2.c **** *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 10


 292:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 293:Generated_Source\PSoC5/Clock_2.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:Generated_Source\PSoC5/Clock_2.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/Clock_2.c **** *
 296:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/Clock_2.c **** uint16 Clock_2_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/Clock_2.c **** {
 299:Generated_Source\PSoC5/Clock_2.c ****     return CY_GET_REG16(Clock_2_DIV_PTR);
 300:Generated_Source\PSoC5/Clock_2.c **** }
 301:Generated_Source\PSoC5/Clock_2.c **** 
 302:Generated_Source\PSoC5/Clock_2.c **** 
 303:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetModeRegister
 305:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 306:Generated_Source\PSoC5/Clock_2.c **** *
 307:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 308:Generated_Source\PSoC5/Clock_2.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/Clock_2.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/Clock_2.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/Clock_2.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/Clock_2.c **** *
 313:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 314:Generated_Source\PSoC5/Clock_2.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/Clock_2.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/Clock_2.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/Clock_2.c **** *                 value.
 319:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/Clock_2.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/Clock_2.c **** *                 disabled, the output clock is asserted for one period of the
 322:Generated_Source\PSoC5/Clock_2.c **** *                 source clock.
 323:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/Clock_2.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/Clock_2.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/Clock_2.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/Clock_2.c **** *
 328:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 329:Generated_Source\PSoC5/Clock_2.c **** *  None
 330:Generated_Source\PSoC5/Clock_2.c **** *
 331:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/Clock_2.c **** {
 334:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_MOD_SRC |= modeBitMask & (uint8)Clock_2_MODE_MASK;
 335:Generated_Source\PSoC5/Clock_2.c **** }
 336:Generated_Source\PSoC5/Clock_2.c **** 
 337:Generated_Source\PSoC5/Clock_2.c **** 
 338:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_ClearModeRegister
 340:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 341:Generated_Source\PSoC5/Clock_2.c **** *
 342:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 343:Generated_Source\PSoC5/Clock_2.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/Clock_2.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/Clock_2.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/Clock_2.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/Clock_2.c **** *
 348:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 11


 349:Generated_Source\PSoC5/Clock_2.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/Clock_2.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/Clock_2.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/Clock_2.c **** *                 value.
 354:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/Clock_2.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/Clock_2.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/Clock_2.c **** *                 source clock.
 358:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/Clock_2.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/Clock_2.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/Clock_2.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/Clock_2.c **** *
 363:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 364:Generated_Source\PSoC5/Clock_2.c **** *  None
 365:Generated_Source\PSoC5/Clock_2.c **** *
 366:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/Clock_2.c **** {
 369:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_2_MODE_MASK));
 370:Generated_Source\PSoC5/Clock_2.c **** }
 371:Generated_Source\PSoC5/Clock_2.c **** 
 372:Generated_Source\PSoC5/Clock_2.c **** 
 373:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetModeRegister
 375:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 376:Generated_Source\PSoC5/Clock_2.c **** *
 377:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 378:Generated_Source\PSoC5/Clock_2.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/Clock_2.c **** *
 380:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 381:Generated_Source\PSoC5/Clock_2.c **** *  None
 382:Generated_Source\PSoC5/Clock_2.c **** *
 383:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 384:Generated_Source\PSoC5/Clock_2.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/Clock_2.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/Clock_2.c **** *
 387:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/Clock_2.c **** uint8 Clock_2_GetModeRegister(void) 
 389:Generated_Source\PSoC5/Clock_2.c **** {
 390:Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_MOD_SRC & (uint8)(Clock_2_MODE_MASK);
 391:Generated_Source\PSoC5/Clock_2.c **** }
 392:Generated_Source\PSoC5/Clock_2.c **** 
 393:Generated_Source\PSoC5/Clock_2.c **** 
 394:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetSourceRegister
 396:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 397:Generated_Source\PSoC5/Clock_2.c **** *
 398:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 399:Generated_Source\PSoC5/Clock_2.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:Generated_Source\PSoC5/Clock_2.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/Clock_2.c **** *
 402:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 403:Generated_Source\PSoC5/Clock_2.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:Generated_Source\PSoC5/Clock_2.c **** *   following input sources:
 405:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 12


 406:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_XTALM
 408:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/Clock_2.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/Clock_2.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/Clock_2.c **** *
 415:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 416:Generated_Source\PSoC5/Clock_2.c **** *  None
 417:Generated_Source\PSoC5/Clock_2.c **** *
 418:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/Clock_2.c **** {
 421:Generated_Source\PSoC5/Clock_2.c ****     uint16 currDiv = Clock_2_GetDividerRegister();
 422:Generated_Source\PSoC5/Clock_2.c ****     uint8 oldSrc = Clock_2_GetSourceRegister();
 423:Generated_Source\PSoC5/Clock_2.c **** 
 424:Generated_Source\PSoC5/Clock_2.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:Generated_Source\PSoC5/Clock_2.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:Generated_Source\PSoC5/Clock_2.c ****     {
 427:Generated_Source\PSoC5/Clock_2.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/Clock_2.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC |= CYCLK_SSS;
 430:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 431:Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 432:Generated_Source\PSoC5/Clock_2.c ****     }
 433:Generated_Source\PSoC5/Clock_2.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:Generated_Source\PSoC5/Clock_2.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:Generated_Source\PSoC5/Clock_2.c ****     {
 436:Generated_Source\PSoC5/Clock_2.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/Clock_2.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 439:Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 440:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:Generated_Source\PSoC5/Clock_2.c ****     }
 442:Generated_Source\PSoC5/Clock_2.c ****     else
 443:Generated_Source\PSoC5/Clock_2.c ****     {
 444:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 445:Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 446:Generated_Source\PSoC5/Clock_2.c ****     }
 447:Generated_Source\PSoC5/Clock_2.c **** }
 448:Generated_Source\PSoC5/Clock_2.c **** 
 449:Generated_Source\PSoC5/Clock_2.c **** 
 450:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetSourceRegister
 452:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 453:Generated_Source\PSoC5/Clock_2.c **** *
 454:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 455:Generated_Source\PSoC5/Clock_2.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/Clock_2.c **** *
 457:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 458:Generated_Source\PSoC5/Clock_2.c **** *  None
 459:Generated_Source\PSoC5/Clock_2.c **** *
 460:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 461:Generated_Source\PSoC5/Clock_2.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/Clock_2.c **** *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 13


 463:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/Clock_2.c **** uint8 Clock_2_GetSourceRegister(void) 
 465:Generated_Source\PSoC5/Clock_2.c **** {
 466:Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_MOD_SRC & Clock_2_SRC_SEL_MSK;
 220              		.loc 1 466 0
 221 0002 2C4B     		ldr	r3, .L44
 222              	.LBE12:
 223              	.LBE11:
 224              	.LBB15:
 225              	.LBB16:
 299:Generated_Source\PSoC5/Clock_2.c **** }
 226              		.loc 1 299 0
 227 0004 2C4E     		ldr	r6, .L44+4
 228              	.LBE16:
 229              	.LBE15:
 230              	.LBB19:
 231              	.LBB13:
 232              		.loc 1 466 0
 233 0006 1F78     		ldrb	r7, [r3]	@ zero_extendqisi2
 234              	.LBE13:
 235              	.LBE19:
 236              	.LBB20:
 237              	.LBB17:
 299:Generated_Source\PSoC5/Clock_2.c **** }
 238              		.loc 1 299 0
 239 0008 3288     		ldrh	r2, [r6]
 240              	.LBE17:
 241              	.LBE20:
 242              	.LBB21:
 243              	.LBB14:
 244              		.loc 1 466 0
 245 000a 07F00707 		and	r7, r7, #7
 246              	.LBE14:
 247              	.LBE21:
 248              	.LBB22:
 249              	.LBB18:
 299:Generated_Source\PSoC5/Clock_2.c **** }
 250              		.loc 1 299 0
 251 000e 92B2     		uxth	r2, r2
 252              	.LBE18:
 253              	.LBE22:
 201:Generated_Source\PSoC5/Clock_2.c ****     {
 254              		.loc 1 201 0
 255 0010 9042     		cmp	r0, r2
 256 0012 9E46     		mov	lr, r3
 257 0014 4CD0     		beq	.L23
 203:Generated_Source\PSoC5/Clock_2.c **** 
 258              		.loc 1 203 0
 259 0016 294D     		ldr	r5, .L44+8
 260 0018 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 261 001a E4B2     		uxtb	r4, r4
 262              	.LVL4:
 205:Generated_Source\PSoC5/Clock_2.c ****         {
 263              		.loc 1 205 0
 264 001c 6FB9     		cbnz	r7, .L26
 205:Generated_Source\PSoC5/Clock_2.c ****         {
 265              		.loc 1 205 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 14


 266 001e 32B1     		cbz	r2, .L27
 205:Generated_Source\PSoC5/Clock_2.c ****         {
 267              		.loc 1 205 0 discriminator 2
 268 0020 58B9     		cbnz	r0, .L26
 220:Generated_Source\PSoC5/Clock_2.c ****                 CY_SET_REG16(Clock_2_DIV_PTR, clkDivider);
 269              		.loc 1 220 0 is_stmt 1
 270 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 271 0024 42F04002 		orr	r2, r2, #64
 272 0028 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/Clock_2.c ****             }
 273              		.loc 1 221 0
 274 002a 3080     		strh	r0, [r6]	@ movhi
 275 002c F0BD     		pop	{r4, r5, r6, r7, pc}
 276              	.LVL5:
 277              	.L27:
 213:Generated_Source\PSoC5/Clock_2.c ****                 Clock_2_MOD_SRC &= (uint8)(~CYCLK_SSS);
 278              		.loc 1 213 0
 279 002e 3080     		strh	r0, [r6]	@ movhi
 214:Generated_Source\PSoC5/Clock_2.c ****             }
 280              		.loc 1 214 0
 281 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 282 0032 02F0BF02 		and	r2, r2, #191
 283 0036 1A70     		strb	r2, [r3]
 284 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 285              	.LVL6:
 286              	.L26:
 227:Generated_Source\PSoC5/Clock_2.c ****             {
 287              		.loc 1 227 0
 288 003a 14F00104 		ands	r4, r4, #1
 289              	.LVL7:
 290 003e 22D0     		beq	.L30
 233:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = 0x00u;
 291              		.loc 1 233 0
 292 0040 1F4F     		ldr	r7, .L44+12
 229:Generated_Source\PSoC5/Clock_2.c **** 
 293              		.loc 1 229 0
 294 0042 204B     		ldr	r3, .L44+16
 295 0044 0026     		movs	r6, #0
 233:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = 0x00u;
 296              		.loc 1 233 0
 297 0046 4FF0010C 		mov	ip, #1
 229:Generated_Source\PSoC5/Clock_2.c **** 
 298              		.loc 1 229 0
 299 004a 1E70     		strb	r6, [r3]
 233:Generated_Source\PSoC5/Clock_2.c ****                 CLK_DIST_DMASK = 0x00u;
 300              		.loc 1 233 0
 301 004c 87F800C0 		strb	ip, [r7]
 234:Generated_Source\PSoC5/Clock_2.c **** #else
 302              		.loc 1 234 0
 303 0050 07F8046C 		strb	r6, [r7, #-4]
 240:Generated_Source\PSoC5/Clock_2.c **** 
 304              		.loc 1 240 0
 305 0054 17F80C6C 		ldrb	r6, [r7, #-12]	@ zero_extendqisi2
 306 0058 06F07F06 		and	r6, r6, #127
 307 005c 07F80C6C 		strb	r6, [r7, #-12]
 243:Generated_Source\PSoC5/Clock_2.c ****                 {
 308              		.loc 1 243 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 15


 309 0060 9EF80060 		ldrb	r6, [lr]	@ zero_extendqisi2
 310 0064 3607     		lsls	r6, r6, #28
 311 0066 00D5     		bpl	.L31
 243:Generated_Source\PSoC5/Clock_2.c ****                 {
 312              		.loc 1 243 0 is_stmt 0 discriminator 1
 313 0068 68B9     		cbnz	r0, .L30
 314              	.L31:
 246:Generated_Source\PSoC5/Clock_2.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 315              		.loc 1 246 0 is_stmt 1
 316 006a 174E     		ldr	r6, .L44+20
 317 006c 3280     		strh	r2, [r6]	@ movhi
 247:Generated_Source\PSoC5/Clock_2.c **** 
 318              		.loc 1 247 0
 319 006e 0722     		movs	r2, #7
 320 0070 1A70     		strb	r2, [r3]
 321              	.L33:
 250:Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 322              		.loc 1 250 0 discriminator 1
 323 0072 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 324 0074 12F00102 		ands	r2, r2, #1
 325 0078 FBD1     		bne	.L33
 253:Generated_Source\PSoC5/Clock_2.c **** 
 326              		.loc 1 253 0
 327 007a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 328 007c 03F0FE03 		and	r3, r3, #254
 329 0080 2B70     		strb	r3, [r5]
 257:Generated_Source\PSoC5/Clock_2.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 330              		.loc 1 257 0
 331 0082 104B     		ldr	r3, .L44+16
 332 0084 1A70     		strb	r2, [r3]
 333              	.L30:
 263:Generated_Source\PSoC5/Clock_2.c ****             {
 334              		.loc 1 263 0
 335 0086 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 336 0088 0C4A     		ldr	r2, .L44+8
 337 008a DD07     		lsls	r5, r3, #31
 338 008c 0BD5     		bpl	.L34
 266:Generated_Source\PSoC5/Clock_2.c **** 
 339              		.loc 1 266 0
 340 008e 0E4B     		ldr	r3, .L44+20
 268:Generated_Source\PSoC5/Clock_2.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 341              		.loc 1 268 0
 342 0090 0029     		cmp	r1, #0
 266:Generated_Source\PSoC5/Clock_2.c **** 
 343              		.loc 1 266 0
 344 0092 1880     		strh	r0, [r3]	@ movhi
 268:Generated_Source\PSoC5/Clock_2.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 345              		.loc 1 268 0
 346 0094 14BF     		ite	ne
 347 0096 0322     		movne	r2, #3
 348 0098 0122     		moveq	r2, #1
 349 009a 013B     		subs	r3, r3, #1
 350 009c 1A70     		strb	r2, [r3]
 351              	.L36:
 269:Generated_Source\PSoC5/Clock_2.c ****             }
 352              		.loc 1 269 0 discriminator 1
 353 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 16


 354 00a0 D207     		lsls	r2, r2, #31
 355 00a2 FCD4     		bmi	.L36
 356 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 357              	.L34:
 274:Generated_Source\PSoC5/Clock_2.c **** 				Clock_2_CLKEN |= enabled;
 358              		.loc 1 274 0
 359 00a6 044B     		ldr	r3, .L44+4
 360 00a8 1880     		strh	r0, [r3]	@ movhi
 275:Generated_Source\PSoC5/Clock_2.c ****             }
 361              		.loc 1 275 0
 362 00aa 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 363 00ac 1C43     		orrs	r4, r4, r3
 364 00ae 1470     		strb	r4, [r2]
 365              	.L23:
 366 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 367              	.L45:
 368 00b2 00BF     		.align	2
 369              	.L44:
 370 00b4 02410040 		.word	1073758466
 371 00b8 00410040 		.word	1073758464
 372 00bc A1430040 		.word	1073759137
 373 00c0 14400040 		.word	1073758228
 374 00c4 01400040 		.word	1073758209
 375 00c8 02400040 		.word	1073758210
 376              		.cfi_endproc
 377              	.LFE4:
 378              		.size	Clock_2_SetDividerRegister, .-Clock_2_SetDividerRegister
 379              		.section	.text.Clock_2_GetDividerRegister,"ax",%progbits
 380              		.align	1
 381              		.global	Clock_2_GetDividerRegister
 382              		.thumb
 383              		.thumb_func
 384              		.type	Clock_2_GetDividerRegister, %function
 385              	Clock_2_GetDividerRegister:
 386              	.LFB5:
 298:Generated_Source\PSoC5/Clock_2.c ****     return CY_GET_REG16(Clock_2_DIV_PTR);
 387              		.loc 1 298 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 299:Generated_Source\PSoC5/Clock_2.c **** }
 392              		.loc 1 299 0
 393 0000 014B     		ldr	r3, .L47
 394 0002 1888     		ldrh	r0, [r3]
 300:Generated_Source\PSoC5/Clock_2.c **** 
 395              		.loc 1 300 0
 396 0004 80B2     		uxth	r0, r0
 397 0006 7047     		bx	lr
 398              	.L48:
 399              		.align	2
 400              	.L47:
 401 0008 00410040 		.word	1073758464
 402              		.cfi_endproc
 403              	.LFE5:
 404              		.size	Clock_2_GetDividerRegister, .-Clock_2_GetDividerRegister
 405              		.section	.text.Clock_2_SetModeRegister,"ax",%progbits
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 17


 406              		.align	1
 407              		.global	Clock_2_SetModeRegister
 408              		.thumb
 409              		.thumb_func
 410              		.type	Clock_2_SetModeRegister, %function
 411              	Clock_2_SetModeRegister:
 412              	.LFB6:
 333:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_MOD_SRC |= modeBitMask & (uint8)Clock_2_MODE_MASK;
 413              		.loc 1 333 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              	.LVL8:
 334:Generated_Source\PSoC5/Clock_2.c **** }
 419              		.loc 1 334 0
 420 0000 034A     		ldr	r2, .L50
 421 0002 00F0F800 		and	r0, r0, #248
 422              	.LVL9:
 423 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 424 0008 0343     		orrs	r3, r3, r0
 425 000a 1370     		strb	r3, [r2]
 426 000c 7047     		bx	lr
 427              	.L51:
 428 000e 00BF     		.align	2
 429              	.L50:
 430 0010 02410040 		.word	1073758466
 431              		.cfi_endproc
 432              	.LFE6:
 433              		.size	Clock_2_SetModeRegister, .-Clock_2_SetModeRegister
 434              		.section	.text.Clock_2_ClearModeRegister,"ax",%progbits
 435              		.align	1
 436              		.global	Clock_2_ClearModeRegister
 437              		.thumb
 438              		.thumb_func
 439              		.type	Clock_2_ClearModeRegister, %function
 440              	Clock_2_ClearModeRegister:
 441              	.LFB7:
 368:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_2_MODE_MASK));
 442              		.loc 1 368 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447              	.LVL10:
 369:Generated_Source\PSoC5/Clock_2.c **** }
 448              		.loc 1 369 0
 449 0000 C043     		mvns	r0, r0
 450              	.LVL11:
 451 0002 034B     		ldr	r3, .L53
 452 0004 40F00700 		orr	r0, r0, #7
 453 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 454 000a 1040     		ands	r0, r0, r2
 455 000c 1870     		strb	r0, [r3]
 456 000e 7047     		bx	lr
 457              	.L54:
 458              		.align	2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 18


 459              	.L53:
 460 0010 02410040 		.word	1073758466
 461              		.cfi_endproc
 462              	.LFE7:
 463              		.size	Clock_2_ClearModeRegister, .-Clock_2_ClearModeRegister
 464              		.section	.text.Clock_2_GetModeRegister,"ax",%progbits
 465              		.align	1
 466              		.global	Clock_2_GetModeRegister
 467              		.thumb
 468              		.thumb_func
 469              		.type	Clock_2_GetModeRegister, %function
 470              	Clock_2_GetModeRegister:
 471              	.LFB8:
 389:Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_MOD_SRC & (uint8)(Clock_2_MODE_MASK);
 472              		.loc 1 389 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 390:Generated_Source\PSoC5/Clock_2.c **** }
 477              		.loc 1 390 0
 478 0000 024B     		ldr	r3, .L56
 479 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:Generated_Source\PSoC5/Clock_2.c **** 
 480              		.loc 1 391 0
 481 0004 00F0F800 		and	r0, r0, #248
 482 0008 7047     		bx	lr
 483              	.L57:
 484 000a 00BF     		.align	2
 485              	.L56:
 486 000c 02410040 		.word	1073758466
 487              		.cfi_endproc
 488              	.LFE8:
 489              		.size	Clock_2_GetModeRegister, .-Clock_2_GetModeRegister
 490              		.section	.text.Clock_2_SetSourceRegister,"ax",%progbits
 491              		.align	1
 492              		.global	Clock_2_SetSourceRegister
 493              		.thumb
 494              		.thumb_func
 495              		.type	Clock_2_SetSourceRegister, %function
 496              	Clock_2_SetSourceRegister:
 497              	.LFB9:
 420:Generated_Source\PSoC5/Clock_2.c ****     uint16 currDiv = Clock_2_GetDividerRegister();
 498              		.loc 1 420 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL12:
 504              	.LBB23:
 505              	.LBB24:
 299:Generated_Source\PSoC5/Clock_2.c **** }
 506              		.loc 1 299 0
 507 0000 124B     		ldr	r3, .L66
 508 0002 1A88     		ldrh	r2, [r3]
 509              	.LBE24:
 510              	.LBE23:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 19


 511              	.LBB26:
 512              	.LBB27:
 513              		.loc 1 466 0
 514 0004 0233     		adds	r3, r3, #2
 515 0006 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 516              	.LBE27:
 517              	.LBE26:
 518              	.LBB28:
 519              	.LBB25:
 299:Generated_Source\PSoC5/Clock_2.c **** }
 520              		.loc 1 299 0
 521 0008 92B2     		uxth	r2, r2
 522              	.LBE25:
 523              	.LBE28:
 424:Generated_Source\PSoC5/Clock_2.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 524              		.loc 1 424 0
 525 000a 11F0070F 		tst	r1, #7
 526 000e 1946     		mov	r1, r3
 527 0010 09D0     		beq	.L59
 424:Generated_Source\PSoC5/Clock_2.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 528              		.loc 1 424 0 is_stmt 0 discriminator 1
 529 0012 A0B9     		cbnz	r0, .L60
 425:Generated_Source\PSoC5/Clock_2.c ****     {
 530              		.loc 1 425 0 is_stmt 1
 531 0014 9AB9     		cbnz	r2, .L60
 429:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC =
 532              		.loc 1 429 0
 533 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 534 0018 42F04002 		orr	r2, r2, #64
 535 001c 1A70     		strb	r2, [r3]
 431:Generated_Source\PSoC5/Clock_2.c ****     }
 536              		.loc 1 431 0
 537 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 538              		.loc 1 430 0
 539 0020 02F0F802 		and	r2, r2, #248
 540 0024 09E0     		b	.L65
 541              	.L59:
 433:Generated_Source\PSoC5/Clock_2.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 542              		.loc 1 433 0 discriminator 1
 543 0026 50B1     		cbz	r0, .L60
 434:Generated_Source\PSoC5/Clock_2.c ****     {
 544              		.loc 1 434 0
 545 0028 4AB9     		cbnz	r2, .L60
 439:Generated_Source\PSoC5/Clock_2.c ****         Clock_2_MOD_SRC &= (uint8)(~CYCLK_SSS);
 546              		.loc 1 439 0
 547 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 548              		.loc 1 438 0
 549 002c 02F0F802 		and	r2, r2, #248
 550 0030 1043     		orrs	r0, r0, r2
 551              	.LVL13:
 552 0032 1870     		strb	r0, [r3]
 440:Generated_Source\PSoC5/Clock_2.c ****     }
 553              		.loc 1 440 0
 554 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 555 0036 02F0BF02 		and	r2, r2, #191
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 20


 556              	.L65:
 557 003a 1A70     		strb	r2, [r3]
 558 003c 7047     		bx	lr
 559              	.LVL14:
 560              	.L60:
 445:Generated_Source\PSoC5/Clock_2.c ****     }
 561              		.loc 1 445 0
 562 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444:Generated_Source\PSoC5/Clock_2.c ****             (Clock_2_MOD_SRC & (uint8)(~Clock_2_SRC_SEL_MSK)) | clkSource;
 563              		.loc 1 444 0
 564 0040 03F0F803 		and	r3, r3, #248
 565 0044 1843     		orrs	r0, r0, r3
 566              	.LVL15:
 567 0046 0870     		strb	r0, [r1]
 568 0048 7047     		bx	lr
 569              	.L67:
 570 004a 00BF     		.align	2
 571              	.L66:
 572 004c 00410040 		.word	1073758464
 573              		.cfi_endproc
 574              	.LFE9:
 575              		.size	Clock_2_SetSourceRegister, .-Clock_2_SetSourceRegister
 576              		.section	.text.Clock_2_GetSourceRegister,"ax",%progbits
 577              		.align	1
 578              		.global	Clock_2_GetSourceRegister
 579              		.thumb
 580              		.thumb_func
 581              		.type	Clock_2_GetSourceRegister, %function
 582              	Clock_2_GetSourceRegister:
 583              	.LFB10:
 465:Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_MOD_SRC & Clock_2_SRC_SEL_MSK;
 584              		.loc 1 465 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              		.loc 1 466 0
 590 0000 024B     		ldr	r3, .L69
 591 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:Generated_Source\PSoC5/Clock_2.c **** }
 592              		.loc 1 467 0
 593 0004 00F00700 		and	r0, r0, #7
 594 0008 7047     		bx	lr
 595              	.L70:
 596 000a 00BF     		.align	2
 597              	.L69:
 598 000c 02410040 		.word	1073758466
 599              		.cfi_endproc
 600              	.LFE10:
 601              		.size	Clock_2_GetSourceRegister, .-Clock_2_GetSourceRegister
 602              		.section	.text.Clock_2_SetPhaseRegister,"ax",%progbits
 603              		.align	1
 604              		.global	Clock_2_SetPhaseRegister
 605              		.thumb
 606              		.thumb_func
 607              		.type	Clock_2_SetPhaseRegister, %function
 608              	Clock_2_SetPhaseRegister:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 21


 609              	.LFB11:
 468:Generated_Source\PSoC5/Clock_2.c **** 
 469:Generated_Source\PSoC5/Clock_2.c **** 
 470:Generated_Source\PSoC5/Clock_2.c **** #if defined(Clock_2__CFG3)
 471:Generated_Source\PSoC5/Clock_2.c **** 
 472:Generated_Source\PSoC5/Clock_2.c **** 
 473:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 474:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_SetPhaseRegister
 475:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 476:Generated_Source\PSoC5/Clock_2.c **** *
 477:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 478:Generated_Source\PSoC5/Clock_2.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:Generated_Source\PSoC5/Clock_2.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:Generated_Source\PSoC5/Clock_2.c **** *  delay to avoid glitches.
 481:Generated_Source\PSoC5/Clock_2.c **** *
 482:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 483:Generated_Source\PSoC5/Clock_2.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:Generated_Source\PSoC5/Clock_2.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:Generated_Source\PSoC5/Clock_2.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:Generated_Source\PSoC5/Clock_2.c **** *   produces a 10ns delay.
 487:Generated_Source\PSoC5/Clock_2.c **** *
 488:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 489:Generated_Source\PSoC5/Clock_2.c **** *  None
 490:Generated_Source\PSoC5/Clock_2.c **** *
 491:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 492:Generated_Source\PSoC5/Clock_2.c **** void Clock_2_SetPhaseRegister(uint8 clkPhase) 
 493:Generated_Source\PSoC5/Clock_2.c **** {
 610              		.loc 1 493 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615              	.LVL16:
 494:Generated_Source\PSoC5/Clock_2.c ****     Clock_2_PHASE = clkPhase & Clock_2_PHASE_MASK;
 616              		.loc 1 494 0
 617 0000 024B     		ldr	r3, .L72
 618 0002 00F00F00 		and	r0, r0, #15
 619              	.LVL17:
 620 0006 1870     		strb	r0, [r3]
 621 0008 7047     		bx	lr
 622              	.L73:
 623 000a 00BF     		.align	2
 624              	.L72:
 625 000c 03410040 		.word	1073758467
 626              		.cfi_endproc
 627              	.LFE11:
 628              		.size	Clock_2_SetPhaseRegister, .-Clock_2_SetPhaseRegister
 629              		.section	.text.Clock_2_GetPhaseRegister,"ax",%progbits
 630              		.align	1
 631              		.global	Clock_2_GetPhaseRegister
 632              		.thumb
 633              		.thumb_func
 634              		.type	Clock_2_GetPhaseRegister, %function
 635              	Clock_2_GetPhaseRegister:
 636              	.LFB12:
 495:Generated_Source\PSoC5/Clock_2.c **** }
 496:Generated_Source\PSoC5/Clock_2.c **** 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 22


 497:Generated_Source\PSoC5/Clock_2.c **** 
 498:Generated_Source\PSoC5/Clock_2.c **** /*******************************************************************************
 499:Generated_Source\PSoC5/Clock_2.c **** * Function Name: Clock_2_GetPhase
 500:Generated_Source\PSoC5/Clock_2.c **** ********************************************************************************
 501:Generated_Source\PSoC5/Clock_2.c **** *
 502:Generated_Source\PSoC5/Clock_2.c **** * Summary:
 503:Generated_Source\PSoC5/Clock_2.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:Generated_Source\PSoC5/Clock_2.c **** *  for analog clocks.
 505:Generated_Source\PSoC5/Clock_2.c **** *
 506:Generated_Source\PSoC5/Clock_2.c **** * Parameters:
 507:Generated_Source\PSoC5/Clock_2.c **** *  None
 508:Generated_Source\PSoC5/Clock_2.c **** *
 509:Generated_Source\PSoC5/Clock_2.c **** * Returns:
 510:Generated_Source\PSoC5/Clock_2.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:Generated_Source\PSoC5/Clock_2.c **** *
 512:Generated_Source\PSoC5/Clock_2.c **** *******************************************************************************/
 513:Generated_Source\PSoC5/Clock_2.c **** uint8 Clock_2_GetPhaseRegister(void) 
 514:Generated_Source\PSoC5/Clock_2.c **** {
 637              		.loc 1 514 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 515:Generated_Source\PSoC5/Clock_2.c ****     return Clock_2_PHASE & Clock_2_PHASE_MASK;
 642              		.loc 1 515 0
 643 0000 024B     		ldr	r3, .L75
 644 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 516:Generated_Source\PSoC5/Clock_2.c **** }
 645              		.loc 1 516 0
 646 0004 00F00F00 		and	r0, r0, #15
 647 0008 7047     		bx	lr
 648              	.L76:
 649 000a 00BF     		.align	2
 650              	.L75:
 651 000c 03410040 		.word	1073758467
 652              		.cfi_endproc
 653              	.LFE12:
 654              		.size	Clock_2_GetPhaseRegister, .-Clock_2_GetPhaseRegister
 655              		.text
 656              	.Letext0:
 657              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 658              		.section	.debug_info,"",%progbits
 659              	.Ldebug_info0:
 660 0000 D6020000 		.4byte	0x2d6
 661 0004 0400     		.2byte	0x4
 662 0006 00000000 		.4byte	.Ldebug_abbrev0
 663 000a 04       		.byte	0x4
 664 000b 01       		.uleb128 0x1
 665 000c E7010000 		.4byte	.LASF40
 666 0010 0C       		.byte	0xc
 667 0011 71000000 		.4byte	.LASF41
 668 0015 0F010000 		.4byte	.LASF42
 669 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 670 001d 00000000 		.4byte	0
 671 0021 00000000 		.4byte	.Ldebug_line0
 672 0025 02       		.uleb128 0x2
 673 0026 01       		.byte	0x1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 23


 674 0027 06       		.byte	0x6
 675 0028 A9010000 		.4byte	.LASF0
 676 002c 02       		.uleb128 0x2
 677 002d 01       		.byte	0x1
 678 002e 08       		.byte	0x8
 679 002f 74010000 		.4byte	.LASF1
 680 0033 02       		.uleb128 0x2
 681 0034 02       		.byte	0x2
 682 0035 05       		.byte	0x5
 683 0036 33000000 		.4byte	.LASF2
 684 003a 02       		.uleb128 0x2
 685 003b 02       		.byte	0x2
 686 003c 07       		.byte	0x7
 687 003d 8F020000 		.4byte	.LASF3
 688 0041 02       		.uleb128 0x2
 689 0042 04       		.byte	0x4
 690 0043 05       		.byte	0x5
 691 0044 06010000 		.4byte	.LASF4
 692 0048 02       		.uleb128 0x2
 693 0049 04       		.byte	0x4
 694 004a 07       		.byte	0x7
 695 004b 0F030000 		.4byte	.LASF5
 696 004f 02       		.uleb128 0x2
 697 0050 08       		.byte	0x8
 698 0051 05       		.byte	0x5
 699 0052 F8000000 		.4byte	.LASF6
 700 0056 02       		.uleb128 0x2
 701 0057 08       		.byte	0x8
 702 0058 07       		.byte	0x7
 703 0059 B5010000 		.4byte	.LASF7
 704 005d 03       		.uleb128 0x3
 705 005e 04       		.byte	0x4
 706 005f 05       		.byte	0x5
 707 0060 696E7400 		.ascii	"int\000"
 708 0064 02       		.uleb128 0x2
 709 0065 04       		.byte	0x4
 710 0066 07       		.byte	0x7
 711 0067 CC010000 		.4byte	.LASF8
 712 006b 04       		.uleb128 0x4
 713 006c A8000000 		.4byte	.LASF9
 714 0070 02       		.byte	0x2
 715 0071 9201     		.2byte	0x192
 716 0073 2C000000 		.4byte	0x2c
 717 0077 04       		.uleb128 0x4
 718 0078 92000000 		.4byte	.LASF10
 719 007c 02       		.byte	0x2
 720 007d 9301     		.2byte	0x193
 721 007f 3A000000 		.4byte	0x3a
 722 0083 02       		.uleb128 0x2
 723 0084 04       		.byte	0x4
 724 0085 04       		.byte	0x4
 725 0086 F2000000 		.4byte	.LASF11
 726 008a 02       		.uleb128 0x2
 727 008b 08       		.byte	0x8
 728 008c 04       		.byte	0x4
 729 008d 2E030000 		.4byte	.LASF12
 730 0091 02       		.uleb128 0x2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 24


 731 0092 01       		.byte	0x1
 732 0093 08       		.byte	0x8
 733 0094 A2020000 		.4byte	.LASF13
 734 0098 04       		.uleb128 0x4
 735 0099 0A030000 		.4byte	.LASF14
 736 009d 02       		.byte	0x2
 737 009e 3C02     		.2byte	0x23c
 738 00a0 A4000000 		.4byte	0xa4
 739 00a4 05       		.uleb128 0x5
 740 00a5 6B000000 		.4byte	0x6b
 741 00a9 04       		.uleb128 0x4
 742 00aa 2D000000 		.4byte	.LASF15
 743 00ae 02       		.byte	0x2
 744 00af 3D02     		.2byte	0x23d
 745 00b1 B5000000 		.4byte	0xb5
 746 00b5 05       		.uleb128 0x5
 747 00b6 77000000 		.4byte	0x77
 748 00ba 06       		.uleb128 0x6
 749 00bb 3D000000 		.4byte	.LASF16
 750 00bf 01       		.byte	0x1
 751 00c0 2901     		.2byte	0x129
 752 00c2 77000000 		.4byte	0x77
 753 00c6 01       		.byte	0x1
 754 00c7 06       		.uleb128 0x6
 755 00c8 00000000 		.4byte	.LASF17
 756 00cc 01       		.byte	0x1
 757 00cd D001     		.2byte	0x1d0
 758 00cf 6B000000 		.4byte	0x6b
 759 00d3 01       		.byte	0x1
 760 00d4 07       		.uleb128 0x7
 761 00d5 D9010000 		.4byte	.LASF18
 762 00d9 01       		.byte	0x1
 763 00da 2D       		.byte	0x2d
 764 00db 00000000 		.4byte	.LFB0
 765 00df 18000000 		.4byte	.LFE0-.LFB0
 766 00e3 01       		.uleb128 0x1
 767 00e4 9C       		.byte	0x9c
 768 00e5 07       		.uleb128 0x7
 769 00e6 21030000 		.4byte	.LASF19
 770 00ea 01       		.byte	0x1
 771 00eb 47       		.byte	0x47
 772 00ec 00000000 		.4byte	.LFB1
 773 00f0 18000000 		.4byte	.LFE1-.LFB1
 774 00f4 01       		.uleb128 0x1
 775 00f5 9C       		.byte	0x9c
 776 00f6 08       		.uleb128 0x8
 777 00f7 AE000000 		.4byte	.LASF20
 778 00fb 01       		.byte	0x1
 779 00fc 64       		.byte	0x64
 780 00fd 00000000 		.4byte	.LFB2
 781 0101 6C000000 		.4byte	.LFE2-.LFB2
 782 0105 01       		.uleb128 0x1
 783 0106 9C       		.byte	0x9c
 784 0107 25010000 		.4byte	0x125
 785 010b 09       		.uleb128 0x9
 786 010c 0A000000 		.4byte	.LBB10
 787 0110 62000000 		.4byte	.LBE10-.LBB10
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 25


 788 0114 0A       		.uleb128 0xa
 789 0115 CE020000 		.4byte	.LASF26
 790 0119 01       		.byte	0x1
 791 011a 69       		.byte	0x69
 792 011b 77000000 		.4byte	0x77
 793 011f 00000000 		.4byte	.LLST0
 794 0123 00       		.byte	0
 795 0124 00       		.byte	0
 796 0125 08       		.uleb128 0x8
 797 0126 A7020000 		.4byte	.LASF21
 798 012a 01       		.byte	0x1
 799 012b 9D       		.byte	0x9d
 800 012c 00000000 		.4byte	.LFB3
 801 0130 18000000 		.4byte	.LFE3-.LFB3
 802 0134 01       		.uleb128 0x1
 803 0135 9C       		.byte	0x9c
 804 0136 48010000 		.4byte	0x148
 805 013a 0B       		.uleb128 0xb
 806 013b 65010000 		.4byte	.LASF23
 807 013f 01       		.byte	0x1
 808 0140 9D       		.byte	0x9d
 809 0141 6B000000 		.4byte	0x6b
 810 0145 01       		.uleb128 0x1
 811 0146 50       		.byte	0x50
 812 0147 00       		.byte	0
 813 0148 08       		.uleb128 0x8
 814 0149 8E010000 		.4byte	.LASF22
 815 014d 01       		.byte	0x1
 816 014e C1       		.byte	0xc1
 817 014f 00000000 		.4byte	.LFB4
 818 0153 CC000000 		.4byte	.LFE4-.LFB4
 819 0157 01       		.uleb128 0x1
 820 0158 9C       		.byte	0x9c
 821 0159 BB010000 		.4byte	0x1bb
 822 015d 0B       		.uleb128 0xb
 823 015e 22000000 		.4byte	.LASF24
 824 0162 01       		.byte	0x1
 825 0163 C1       		.byte	0xc1
 826 0164 77000000 		.4byte	0x77
 827 0168 01       		.uleb128 0x1
 828 0169 50       		.byte	0x50
 829 016a 0B       		.uleb128 0xb
 830 016b 99000000 		.4byte	.LASF25
 831 016f 01       		.byte	0x1
 832 0170 C1       		.byte	0xc1
 833 0171 6B000000 		.4byte	0x6b
 834 0175 01       		.uleb128 0x1
 835 0176 51       		.byte	0x51
 836 0177 0A       		.uleb128 0xa
 837 0178 35030000 		.4byte	.LASF27
 838 017c 01       		.byte	0x1
 839 017d C4       		.byte	0xc4
 840 017e 6B000000 		.4byte	0x6b
 841 0182 13000000 		.4byte	.LLST1
 842 0186 0C       		.uleb128 0xc
 843 0187 C6020000 		.4byte	.LASF28
 844 018b 01       		.byte	0x1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 26


 845 018c C6       		.byte	0xc6
 846 018d 6B000000 		.4byte	0x6b
 847 0191 0C       		.uleb128 0xc
 848 0192 CE020000 		.4byte	.LASF26
 849 0196 01       		.byte	0x1
 850 0197 C7       		.byte	0xc7
 851 0198 77000000 		.4byte	0x77
 852 019c 0D       		.uleb128 0xd
 853 019d C7000000 		.4byte	0xc7
 854 01a1 02000000 		.4byte	.LBB11
 855 01a5 00000000 		.4byte	.Ldebug_ranges0+0
 856 01a9 01       		.byte	0x1
 857 01aa C6       		.byte	0xc6
 858 01ab 0D       		.uleb128 0xd
 859 01ac BA000000 		.4byte	0xba
 860 01b0 04000000 		.4byte	.LBB15
 861 01b4 20000000 		.4byte	.Ldebug_ranges0+0x20
 862 01b8 01       		.byte	0x1
 863 01b9 C7       		.byte	0xc7
 864 01ba 00       		.byte	0
 865 01bb 0E       		.uleb128 0xe
 866 01bc BA000000 		.4byte	0xba
 867 01c0 00000000 		.4byte	.LFB5
 868 01c4 0C000000 		.4byte	.LFE5-.LFB5
 869 01c8 01       		.uleb128 0x1
 870 01c9 9C       		.byte	0x9c
 871 01ca 0F       		.uleb128 0xf
 872 01cb DA000000 		.4byte	.LASF29
 873 01cf 01       		.byte	0x1
 874 01d0 4C01     		.2byte	0x14c
 875 01d2 00000000 		.4byte	.LFB6
 876 01d6 14000000 		.4byte	.LFE6-.LFB6
 877 01da 01       		.uleb128 0x1
 878 01db 9C       		.byte	0x9c
 879 01dc F1010000 		.4byte	0x1f1
 880 01e0 10       		.uleb128 0x10
 881 01e1 82010000 		.4byte	.LASF30
 882 01e5 01       		.byte	0x1
 883 01e6 4C01     		.2byte	0x14c
 884 01e8 6B000000 		.4byte	0x6b
 885 01ec 2A000000 		.4byte	.LLST2
 886 01f0 00       		.byte	0
 887 01f1 0F       		.uleb128 0xf
 888 01f2 C0000000 		.4byte	.LASF31
 889 01f6 01       		.byte	0x1
 890 01f7 6F01     		.2byte	0x16f
 891 01f9 00000000 		.4byte	.LFB7
 892 01fd 14000000 		.4byte	.LFE7-.LFB7
 893 0201 01       		.uleb128 0x1
 894 0202 9C       		.byte	0x9c
 895 0203 18020000 		.4byte	0x218
 896 0207 10       		.uleb128 0x10
 897 0208 82010000 		.4byte	.LASF30
 898 020c 01       		.byte	0x1
 899 020d 6F01     		.2byte	0x16f
 900 020f 6B000000 		.4byte	0x6b
 901 0213 4B000000 		.4byte	.LLST3
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 27


 902 0217 00       		.byte	0
 903 0218 11       		.uleb128 0x11
 904 0219 F2020000 		.4byte	.LASF38
 905 021d 01       		.byte	0x1
 906 021e 8401     		.2byte	0x184
 907 0220 6B000000 		.4byte	0x6b
 908 0224 00000000 		.4byte	.LFB8
 909 0228 10000000 		.4byte	.LFE8-.LFB8
 910 022c 01       		.uleb128 0x1
 911 022d 9C       		.byte	0x9c
 912 022e 0F       		.uleb128 0xf
 913 022f 75020000 		.4byte	.LASF32
 914 0233 01       		.byte	0x1
 915 0234 A301     		.2byte	0x1a3
 916 0236 00000000 		.4byte	.LFB9
 917 023a 50000000 		.4byte	.LFE9-.LFB9
 918 023e 01       		.uleb128 0x1
 919 023f 9C       		.byte	0x9c
 920 0240 8D020000 		.4byte	0x28d
 921 0244 10       		.uleb128 0x10
 922 0245 BC020000 		.4byte	.LASF33
 923 0249 01       		.byte	0x1
 924 024a A301     		.2byte	0x1a3
 925 024c 6B000000 		.4byte	0x6b
 926 0250 6C000000 		.4byte	.LLST4
 927 0254 12       		.uleb128 0x12
 928 0255 1A000000 		.4byte	.LASF34
 929 0259 01       		.byte	0x1
 930 025a A501     		.2byte	0x1a5
 931 025c 77000000 		.4byte	0x77
 932 0260 12       		.uleb128 0x12
 933 0261 A1000000 		.4byte	.LASF35
 934 0265 01       		.byte	0x1
 935 0266 A601     		.2byte	0x1a6
 936 0268 6B000000 		.4byte	0x6b
 937 026c 13       		.uleb128 0x13
 938 026d BA000000 		.4byte	0xba
 939 0271 00000000 		.4byte	.LBB23
 940 0275 40000000 		.4byte	.Ldebug_ranges0+0x40
 941 0279 01       		.byte	0x1
 942 027a A501     		.2byte	0x1a5
 943 027c 14       		.uleb128 0x14
 944 027d C7000000 		.4byte	0xc7
 945 0281 04000000 		.4byte	.LBB26
 946 0285 04000000 		.4byte	.LBE26-.LBB26
 947 0289 01       		.byte	0x1
 948 028a A601     		.2byte	0x1a6
 949 028c 00       		.byte	0
 950 028d 0E       		.uleb128 0xe
 951 028e C7000000 		.4byte	0xc7
 952 0292 00000000 		.4byte	.LFB10
 953 0296 10000000 		.4byte	.LFE10-.LFB10
 954 029a 01       		.uleb128 0x1
 955 029b 9C       		.byte	0x9c
 956 029c 0F       		.uleb128 0xf
 957 029d D9020000 		.4byte	.LASF36
 958 02a1 01       		.byte	0x1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 28


 959 02a2 EC01     		.2byte	0x1ec
 960 02a4 00000000 		.4byte	.LFB11
 961 02a8 10000000 		.4byte	.LFE11-.LFB11
 962 02ac 01       		.uleb128 0x1
 963 02ad 9C       		.byte	0x9c
 964 02ae C3020000 		.4byte	0x2c3
 965 02b2 10       		.uleb128 0x10
 966 02b3 6B010000 		.4byte	.LASF37
 967 02b7 01       		.byte	0x1
 968 02b8 EC01     		.2byte	0x1ec
 969 02ba 6B000000 		.4byte	0x6b
 970 02be A6000000 		.4byte	.LLST5
 971 02c2 00       		.byte	0
 972 02c3 11       		.uleb128 0x11
 973 02c4 58000000 		.4byte	.LASF39
 974 02c8 01       		.byte	0x1
 975 02c9 0102     		.2byte	0x201
 976 02cb 6B000000 		.4byte	0x6b
 977 02cf 00000000 		.4byte	.LFB12
 978 02d3 10000000 		.4byte	.LFE12-.LFB12
 979 02d7 01       		.uleb128 0x1
 980 02d8 9C       		.byte	0x9c
 981 02d9 00       		.byte	0
 982              		.section	.debug_abbrev,"",%progbits
 983              	.Ldebug_abbrev0:
 984 0000 01       		.uleb128 0x1
 985 0001 11       		.uleb128 0x11
 986 0002 01       		.byte	0x1
 987 0003 25       		.uleb128 0x25
 988 0004 0E       		.uleb128 0xe
 989 0005 13       		.uleb128 0x13
 990 0006 0B       		.uleb128 0xb
 991 0007 03       		.uleb128 0x3
 992 0008 0E       		.uleb128 0xe
 993 0009 1B       		.uleb128 0x1b
 994 000a 0E       		.uleb128 0xe
 995 000b 55       		.uleb128 0x55
 996 000c 17       		.uleb128 0x17
 997 000d 11       		.uleb128 0x11
 998 000e 01       		.uleb128 0x1
 999 000f 10       		.uleb128 0x10
 1000 0010 17       		.uleb128 0x17
 1001 0011 00       		.byte	0
 1002 0012 00       		.byte	0
 1003 0013 02       		.uleb128 0x2
 1004 0014 24       		.uleb128 0x24
 1005 0015 00       		.byte	0
 1006 0016 0B       		.uleb128 0xb
 1007 0017 0B       		.uleb128 0xb
 1008 0018 3E       		.uleb128 0x3e
 1009 0019 0B       		.uleb128 0xb
 1010 001a 03       		.uleb128 0x3
 1011 001b 0E       		.uleb128 0xe
 1012 001c 00       		.byte	0
 1013 001d 00       		.byte	0
 1014 001e 03       		.uleb128 0x3
 1015 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 29


 1016 0020 00       		.byte	0
 1017 0021 0B       		.uleb128 0xb
 1018 0022 0B       		.uleb128 0xb
 1019 0023 3E       		.uleb128 0x3e
 1020 0024 0B       		.uleb128 0xb
 1021 0025 03       		.uleb128 0x3
 1022 0026 08       		.uleb128 0x8
 1023 0027 00       		.byte	0
 1024 0028 00       		.byte	0
 1025 0029 04       		.uleb128 0x4
 1026 002a 16       		.uleb128 0x16
 1027 002b 00       		.byte	0
 1028 002c 03       		.uleb128 0x3
 1029 002d 0E       		.uleb128 0xe
 1030 002e 3A       		.uleb128 0x3a
 1031 002f 0B       		.uleb128 0xb
 1032 0030 3B       		.uleb128 0x3b
 1033 0031 05       		.uleb128 0x5
 1034 0032 49       		.uleb128 0x49
 1035 0033 13       		.uleb128 0x13
 1036 0034 00       		.byte	0
 1037 0035 00       		.byte	0
 1038 0036 05       		.uleb128 0x5
 1039 0037 35       		.uleb128 0x35
 1040 0038 00       		.byte	0
 1041 0039 49       		.uleb128 0x49
 1042 003a 13       		.uleb128 0x13
 1043 003b 00       		.byte	0
 1044 003c 00       		.byte	0
 1045 003d 06       		.uleb128 0x6
 1046 003e 2E       		.uleb128 0x2e
 1047 003f 00       		.byte	0
 1048 0040 3F       		.uleb128 0x3f
 1049 0041 19       		.uleb128 0x19
 1050 0042 03       		.uleb128 0x3
 1051 0043 0E       		.uleb128 0xe
 1052 0044 3A       		.uleb128 0x3a
 1053 0045 0B       		.uleb128 0xb
 1054 0046 3B       		.uleb128 0x3b
 1055 0047 05       		.uleb128 0x5
 1056 0048 27       		.uleb128 0x27
 1057 0049 19       		.uleb128 0x19
 1058 004a 49       		.uleb128 0x49
 1059 004b 13       		.uleb128 0x13
 1060 004c 20       		.uleb128 0x20
 1061 004d 0B       		.uleb128 0xb
 1062 004e 00       		.byte	0
 1063 004f 00       		.byte	0
 1064 0050 07       		.uleb128 0x7
 1065 0051 2E       		.uleb128 0x2e
 1066 0052 00       		.byte	0
 1067 0053 3F       		.uleb128 0x3f
 1068 0054 19       		.uleb128 0x19
 1069 0055 03       		.uleb128 0x3
 1070 0056 0E       		.uleb128 0xe
 1071 0057 3A       		.uleb128 0x3a
 1072 0058 0B       		.uleb128 0xb
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 30


 1073 0059 3B       		.uleb128 0x3b
 1074 005a 0B       		.uleb128 0xb
 1075 005b 27       		.uleb128 0x27
 1076 005c 19       		.uleb128 0x19
 1077 005d 11       		.uleb128 0x11
 1078 005e 01       		.uleb128 0x1
 1079 005f 12       		.uleb128 0x12
 1080 0060 06       		.uleb128 0x6
 1081 0061 40       		.uleb128 0x40
 1082 0062 18       		.uleb128 0x18
 1083 0063 9742     		.uleb128 0x2117
 1084 0065 19       		.uleb128 0x19
 1085 0066 00       		.byte	0
 1086 0067 00       		.byte	0
 1087 0068 08       		.uleb128 0x8
 1088 0069 2E       		.uleb128 0x2e
 1089 006a 01       		.byte	0x1
 1090 006b 3F       		.uleb128 0x3f
 1091 006c 19       		.uleb128 0x19
 1092 006d 03       		.uleb128 0x3
 1093 006e 0E       		.uleb128 0xe
 1094 006f 3A       		.uleb128 0x3a
 1095 0070 0B       		.uleb128 0xb
 1096 0071 3B       		.uleb128 0x3b
 1097 0072 0B       		.uleb128 0xb
 1098 0073 27       		.uleb128 0x27
 1099 0074 19       		.uleb128 0x19
 1100 0075 11       		.uleb128 0x11
 1101 0076 01       		.uleb128 0x1
 1102 0077 12       		.uleb128 0x12
 1103 0078 06       		.uleb128 0x6
 1104 0079 40       		.uleb128 0x40
 1105 007a 18       		.uleb128 0x18
 1106 007b 9742     		.uleb128 0x2117
 1107 007d 19       		.uleb128 0x19
 1108 007e 01       		.uleb128 0x1
 1109 007f 13       		.uleb128 0x13
 1110 0080 00       		.byte	0
 1111 0081 00       		.byte	0
 1112 0082 09       		.uleb128 0x9
 1113 0083 0B       		.uleb128 0xb
 1114 0084 01       		.byte	0x1
 1115 0085 11       		.uleb128 0x11
 1116 0086 01       		.uleb128 0x1
 1117 0087 12       		.uleb128 0x12
 1118 0088 06       		.uleb128 0x6
 1119 0089 00       		.byte	0
 1120 008a 00       		.byte	0
 1121 008b 0A       		.uleb128 0xa
 1122 008c 34       		.uleb128 0x34
 1123 008d 00       		.byte	0
 1124 008e 03       		.uleb128 0x3
 1125 008f 0E       		.uleb128 0xe
 1126 0090 3A       		.uleb128 0x3a
 1127 0091 0B       		.uleb128 0xb
 1128 0092 3B       		.uleb128 0x3b
 1129 0093 0B       		.uleb128 0xb
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 31


 1130 0094 49       		.uleb128 0x49
 1131 0095 13       		.uleb128 0x13
 1132 0096 02       		.uleb128 0x2
 1133 0097 17       		.uleb128 0x17
 1134 0098 00       		.byte	0
 1135 0099 00       		.byte	0
 1136 009a 0B       		.uleb128 0xb
 1137 009b 05       		.uleb128 0x5
 1138 009c 00       		.byte	0
 1139 009d 03       		.uleb128 0x3
 1140 009e 0E       		.uleb128 0xe
 1141 009f 3A       		.uleb128 0x3a
 1142 00a0 0B       		.uleb128 0xb
 1143 00a1 3B       		.uleb128 0x3b
 1144 00a2 0B       		.uleb128 0xb
 1145 00a3 49       		.uleb128 0x49
 1146 00a4 13       		.uleb128 0x13
 1147 00a5 02       		.uleb128 0x2
 1148 00a6 18       		.uleb128 0x18
 1149 00a7 00       		.byte	0
 1150 00a8 00       		.byte	0
 1151 00a9 0C       		.uleb128 0xc
 1152 00aa 34       		.uleb128 0x34
 1153 00ab 00       		.byte	0
 1154 00ac 03       		.uleb128 0x3
 1155 00ad 0E       		.uleb128 0xe
 1156 00ae 3A       		.uleb128 0x3a
 1157 00af 0B       		.uleb128 0xb
 1158 00b0 3B       		.uleb128 0x3b
 1159 00b1 0B       		.uleb128 0xb
 1160 00b2 49       		.uleb128 0x49
 1161 00b3 13       		.uleb128 0x13
 1162 00b4 00       		.byte	0
 1163 00b5 00       		.byte	0
 1164 00b6 0D       		.uleb128 0xd
 1165 00b7 1D       		.uleb128 0x1d
 1166 00b8 00       		.byte	0
 1167 00b9 31       		.uleb128 0x31
 1168 00ba 13       		.uleb128 0x13
 1169 00bb 52       		.uleb128 0x52
 1170 00bc 01       		.uleb128 0x1
 1171 00bd 55       		.uleb128 0x55
 1172 00be 17       		.uleb128 0x17
 1173 00bf 58       		.uleb128 0x58
 1174 00c0 0B       		.uleb128 0xb
 1175 00c1 59       		.uleb128 0x59
 1176 00c2 0B       		.uleb128 0xb
 1177 00c3 00       		.byte	0
 1178 00c4 00       		.byte	0
 1179 00c5 0E       		.uleb128 0xe
 1180 00c6 2E       		.uleb128 0x2e
 1181 00c7 00       		.byte	0
 1182 00c8 31       		.uleb128 0x31
 1183 00c9 13       		.uleb128 0x13
 1184 00ca 11       		.uleb128 0x11
 1185 00cb 01       		.uleb128 0x1
 1186 00cc 12       		.uleb128 0x12
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 32


 1187 00cd 06       		.uleb128 0x6
 1188 00ce 40       		.uleb128 0x40
 1189 00cf 18       		.uleb128 0x18
 1190 00d0 9742     		.uleb128 0x2117
 1191 00d2 19       		.uleb128 0x19
 1192 00d3 00       		.byte	0
 1193 00d4 00       		.byte	0
 1194 00d5 0F       		.uleb128 0xf
 1195 00d6 2E       		.uleb128 0x2e
 1196 00d7 01       		.byte	0x1
 1197 00d8 3F       		.uleb128 0x3f
 1198 00d9 19       		.uleb128 0x19
 1199 00da 03       		.uleb128 0x3
 1200 00db 0E       		.uleb128 0xe
 1201 00dc 3A       		.uleb128 0x3a
 1202 00dd 0B       		.uleb128 0xb
 1203 00de 3B       		.uleb128 0x3b
 1204 00df 05       		.uleb128 0x5
 1205 00e0 27       		.uleb128 0x27
 1206 00e1 19       		.uleb128 0x19
 1207 00e2 11       		.uleb128 0x11
 1208 00e3 01       		.uleb128 0x1
 1209 00e4 12       		.uleb128 0x12
 1210 00e5 06       		.uleb128 0x6
 1211 00e6 40       		.uleb128 0x40
 1212 00e7 18       		.uleb128 0x18
 1213 00e8 9742     		.uleb128 0x2117
 1214 00ea 19       		.uleb128 0x19
 1215 00eb 01       		.uleb128 0x1
 1216 00ec 13       		.uleb128 0x13
 1217 00ed 00       		.byte	0
 1218 00ee 00       		.byte	0
 1219 00ef 10       		.uleb128 0x10
 1220 00f0 05       		.uleb128 0x5
 1221 00f1 00       		.byte	0
 1222 00f2 03       		.uleb128 0x3
 1223 00f3 0E       		.uleb128 0xe
 1224 00f4 3A       		.uleb128 0x3a
 1225 00f5 0B       		.uleb128 0xb
 1226 00f6 3B       		.uleb128 0x3b
 1227 00f7 05       		.uleb128 0x5
 1228 00f8 49       		.uleb128 0x49
 1229 00f9 13       		.uleb128 0x13
 1230 00fa 02       		.uleb128 0x2
 1231 00fb 17       		.uleb128 0x17
 1232 00fc 00       		.byte	0
 1233 00fd 00       		.byte	0
 1234 00fe 11       		.uleb128 0x11
 1235 00ff 2E       		.uleb128 0x2e
 1236 0100 00       		.byte	0
 1237 0101 3F       		.uleb128 0x3f
 1238 0102 19       		.uleb128 0x19
 1239 0103 03       		.uleb128 0x3
 1240 0104 0E       		.uleb128 0xe
 1241 0105 3A       		.uleb128 0x3a
 1242 0106 0B       		.uleb128 0xb
 1243 0107 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 33


 1244 0108 05       		.uleb128 0x5
 1245 0109 27       		.uleb128 0x27
 1246 010a 19       		.uleb128 0x19
 1247 010b 49       		.uleb128 0x49
 1248 010c 13       		.uleb128 0x13
 1249 010d 11       		.uleb128 0x11
 1250 010e 01       		.uleb128 0x1
 1251 010f 12       		.uleb128 0x12
 1252 0110 06       		.uleb128 0x6
 1253 0111 40       		.uleb128 0x40
 1254 0112 18       		.uleb128 0x18
 1255 0113 9742     		.uleb128 0x2117
 1256 0115 19       		.uleb128 0x19
 1257 0116 00       		.byte	0
 1258 0117 00       		.byte	0
 1259 0118 12       		.uleb128 0x12
 1260 0119 34       		.uleb128 0x34
 1261 011a 00       		.byte	0
 1262 011b 03       		.uleb128 0x3
 1263 011c 0E       		.uleb128 0xe
 1264 011d 3A       		.uleb128 0x3a
 1265 011e 0B       		.uleb128 0xb
 1266 011f 3B       		.uleb128 0x3b
 1267 0120 05       		.uleb128 0x5
 1268 0121 49       		.uleb128 0x49
 1269 0122 13       		.uleb128 0x13
 1270 0123 00       		.byte	0
 1271 0124 00       		.byte	0
 1272 0125 13       		.uleb128 0x13
 1273 0126 1D       		.uleb128 0x1d
 1274 0127 00       		.byte	0
 1275 0128 31       		.uleb128 0x31
 1276 0129 13       		.uleb128 0x13
 1277 012a 52       		.uleb128 0x52
 1278 012b 01       		.uleb128 0x1
 1279 012c 55       		.uleb128 0x55
 1280 012d 17       		.uleb128 0x17
 1281 012e 58       		.uleb128 0x58
 1282 012f 0B       		.uleb128 0xb
 1283 0130 59       		.uleb128 0x59
 1284 0131 05       		.uleb128 0x5
 1285 0132 00       		.byte	0
 1286 0133 00       		.byte	0
 1287 0134 14       		.uleb128 0x14
 1288 0135 1D       		.uleb128 0x1d
 1289 0136 00       		.byte	0
 1290 0137 31       		.uleb128 0x31
 1291 0138 13       		.uleb128 0x13
 1292 0139 11       		.uleb128 0x11
 1293 013a 01       		.uleb128 0x1
 1294 013b 12       		.uleb128 0x12
 1295 013c 06       		.uleb128 0x6
 1296 013d 58       		.uleb128 0x58
 1297 013e 0B       		.uleb128 0xb
 1298 013f 59       		.uleb128 0x59
 1299 0140 05       		.uleb128 0x5
 1300 0141 00       		.byte	0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 34


 1301 0142 00       		.byte	0
 1302 0143 00       		.byte	0
 1303              		.section	.debug_loc,"",%progbits
 1304              	.Ldebug_loc0:
 1305              	.LLST0:
 1306 0000 2C000000 		.4byte	.LVL0
 1307 0004 56000000 		.4byte	.LVL1
 1308 0008 0100     		.2byte	0x1
 1309 000a 50       		.byte	0x50
 1310 000b 00000000 		.4byte	0
 1311 000f 00000000 		.4byte	0
 1312              	.LLST1:
 1313 0013 1C000000 		.4byte	.LVL4
 1314 0017 3E000000 		.4byte	.LVL7
 1315 001b 0500     		.2byte	0x5
 1316 001d 74       		.byte	0x74
 1317 001e 00       		.sleb128 0
 1318 001f 31       		.byte	0x31
 1319 0020 1A       		.byte	0x1a
 1320 0021 9F       		.byte	0x9f
 1321 0022 00000000 		.4byte	0
 1322 0026 00000000 		.4byte	0
 1323              	.LLST2:
 1324 002a 00000000 		.4byte	.LVL8
 1325 002e 06000000 		.4byte	.LVL9
 1326 0032 0100     		.2byte	0x1
 1327 0034 50       		.byte	0x50
 1328 0035 06000000 		.4byte	.LVL9
 1329 0039 14000000 		.4byte	.LFE6
 1330 003d 0400     		.2byte	0x4
 1331 003f F3       		.byte	0xf3
 1332 0040 01       		.uleb128 0x1
 1333 0041 50       		.byte	0x50
 1334 0042 9F       		.byte	0x9f
 1335 0043 00000000 		.4byte	0
 1336 0047 00000000 		.4byte	0
 1337              	.LLST3:
 1338 004b 00000000 		.4byte	.LVL10
 1339 004f 02000000 		.4byte	.LVL11
 1340 0053 0100     		.2byte	0x1
 1341 0055 50       		.byte	0x50
 1342 0056 02000000 		.4byte	.LVL11
 1343 005a 14000000 		.4byte	.LFE7
 1344 005e 0400     		.2byte	0x4
 1345 0060 F3       		.byte	0xf3
 1346 0061 01       		.uleb128 0x1
 1347 0062 50       		.byte	0x50
 1348 0063 9F       		.byte	0x9f
 1349 0064 00000000 		.4byte	0
 1350 0068 00000000 		.4byte	0
 1351              	.LLST4:
 1352 006c 00000000 		.4byte	.LVL12
 1353 0070 32000000 		.4byte	.LVL13
 1354 0074 0100     		.2byte	0x1
 1355 0076 50       		.byte	0x50
 1356 0077 32000000 		.4byte	.LVL13
 1357 007b 3E000000 		.4byte	.LVL14
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 35


 1358 007f 0400     		.2byte	0x4
 1359 0081 F3       		.byte	0xf3
 1360 0082 01       		.uleb128 0x1
 1361 0083 50       		.byte	0x50
 1362 0084 9F       		.byte	0x9f
 1363 0085 3E000000 		.4byte	.LVL14
 1364 0089 46000000 		.4byte	.LVL15
 1365 008d 0100     		.2byte	0x1
 1366 008f 50       		.byte	0x50
 1367 0090 46000000 		.4byte	.LVL15
 1368 0094 50000000 		.4byte	.LFE9
 1369 0098 0400     		.2byte	0x4
 1370 009a F3       		.byte	0xf3
 1371 009b 01       		.uleb128 0x1
 1372 009c 50       		.byte	0x50
 1373 009d 9F       		.byte	0x9f
 1374 009e 00000000 		.4byte	0
 1375 00a2 00000000 		.4byte	0
 1376              	.LLST5:
 1377 00a6 00000000 		.4byte	.LVL16
 1378 00aa 06000000 		.4byte	.LVL17
 1379 00ae 0100     		.2byte	0x1
 1380 00b0 50       		.byte	0x50
 1381 00b1 06000000 		.4byte	.LVL17
 1382 00b5 10000000 		.4byte	.LFE11
 1383 00b9 0400     		.2byte	0x4
 1384 00bb F3       		.byte	0xf3
 1385 00bc 01       		.uleb128 0x1
 1386 00bd 50       		.byte	0x50
 1387 00be 9F       		.byte	0x9f
 1388 00bf 00000000 		.4byte	0
 1389 00c3 00000000 		.4byte	0
 1390              		.section	.debug_aranges,"",%progbits
 1391 0000 7C000000 		.4byte	0x7c
 1392 0004 0200     		.2byte	0x2
 1393 0006 00000000 		.4byte	.Ldebug_info0
 1394 000a 04       		.byte	0x4
 1395 000b 00       		.byte	0
 1396 000c 0000     		.2byte	0
 1397 000e 0000     		.2byte	0
 1398 0010 00000000 		.4byte	.LFB0
 1399 0014 18000000 		.4byte	.LFE0-.LFB0
 1400 0018 00000000 		.4byte	.LFB1
 1401 001c 18000000 		.4byte	.LFE1-.LFB1
 1402 0020 00000000 		.4byte	.LFB2
 1403 0024 6C000000 		.4byte	.LFE2-.LFB2
 1404 0028 00000000 		.4byte	.LFB3
 1405 002c 18000000 		.4byte	.LFE3-.LFB3
 1406 0030 00000000 		.4byte	.LFB4
 1407 0034 CC000000 		.4byte	.LFE4-.LFB4
 1408 0038 00000000 		.4byte	.LFB5
 1409 003c 0C000000 		.4byte	.LFE5-.LFB5
 1410 0040 00000000 		.4byte	.LFB6
 1411 0044 14000000 		.4byte	.LFE6-.LFB6
 1412 0048 00000000 		.4byte	.LFB7
 1413 004c 14000000 		.4byte	.LFE7-.LFB7
 1414 0050 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 36


 1415 0054 10000000 		.4byte	.LFE8-.LFB8
 1416 0058 00000000 		.4byte	.LFB9
 1417 005c 50000000 		.4byte	.LFE9-.LFB9
 1418 0060 00000000 		.4byte	.LFB10
 1419 0064 10000000 		.4byte	.LFE10-.LFB10
 1420 0068 00000000 		.4byte	.LFB11
 1421 006c 10000000 		.4byte	.LFE11-.LFB11
 1422 0070 00000000 		.4byte	.LFB12
 1423 0074 10000000 		.4byte	.LFE12-.LFB12
 1424 0078 00000000 		.4byte	0
 1425 007c 00000000 		.4byte	0
 1426              		.section	.debug_ranges,"",%progbits
 1427              	.Ldebug_ranges0:
 1428 0000 02000000 		.4byte	.LBB11
 1429 0004 04000000 		.4byte	.LBE11
 1430 0008 06000000 		.4byte	.LBB19
 1431 000c 08000000 		.4byte	.LBE19
 1432 0010 0A000000 		.4byte	.LBB21
 1433 0014 0E000000 		.4byte	.LBE21
 1434 0018 00000000 		.4byte	0
 1435 001c 00000000 		.4byte	0
 1436 0020 04000000 		.4byte	.LBB15
 1437 0024 06000000 		.4byte	.LBE15
 1438 0028 08000000 		.4byte	.LBB20
 1439 002c 0A000000 		.4byte	.LBE20
 1440 0030 0E000000 		.4byte	.LBB22
 1441 0034 10000000 		.4byte	.LBE22
 1442 0038 00000000 		.4byte	0
 1443 003c 00000000 		.4byte	0
 1444 0040 00000000 		.4byte	.LBB23
 1445 0044 04000000 		.4byte	.LBE23
 1446 0048 08000000 		.4byte	.LBB28
 1447 004c 0A000000 		.4byte	.LBE28
 1448 0050 00000000 		.4byte	0
 1449 0054 00000000 		.4byte	0
 1450 0058 00000000 		.4byte	.LFB0
 1451 005c 18000000 		.4byte	.LFE0
 1452 0060 00000000 		.4byte	.LFB1
 1453 0064 18000000 		.4byte	.LFE1
 1454 0068 00000000 		.4byte	.LFB2
 1455 006c 6C000000 		.4byte	.LFE2
 1456 0070 00000000 		.4byte	.LFB3
 1457 0074 18000000 		.4byte	.LFE3
 1458 0078 00000000 		.4byte	.LFB4
 1459 007c CC000000 		.4byte	.LFE4
 1460 0080 00000000 		.4byte	.LFB5
 1461 0084 0C000000 		.4byte	.LFE5
 1462 0088 00000000 		.4byte	.LFB6
 1463 008c 14000000 		.4byte	.LFE6
 1464 0090 00000000 		.4byte	.LFB7
 1465 0094 14000000 		.4byte	.LFE7
 1466 0098 00000000 		.4byte	.LFB8
 1467 009c 10000000 		.4byte	.LFE8
 1468 00a0 00000000 		.4byte	.LFB9
 1469 00a4 50000000 		.4byte	.LFE9
 1470 00a8 00000000 		.4byte	.LFB10
 1471 00ac 10000000 		.4byte	.LFE10
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 37


 1472 00b0 00000000 		.4byte	.LFB11
 1473 00b4 10000000 		.4byte	.LFE11
 1474 00b8 00000000 		.4byte	.LFB12
 1475 00bc 10000000 		.4byte	.LFE12
 1476 00c0 00000000 		.4byte	0
 1477 00c4 00000000 		.4byte	0
 1478              		.section	.debug_line,"",%progbits
 1479              	.Ldebug_line0:
 1480 0000 C0010000 		.section	.debug_str,"MS",%progbits,1
 1480      02004400 
 1480      00000201 
 1480      FB0E0D00 
 1480      01010101 
 1481              	.LASF17:
 1482 0000 436C6F63 		.ascii	"Clock_2_GetSourceRegister\000"
 1482      6B5F325F 
 1482      47657453 
 1482      6F757263 
 1482      65526567 
 1483              	.LASF34:
 1484 001a 63757272 		.ascii	"currDiv\000"
 1484      44697600 
 1485              	.LASF24:
 1486 0022 636C6B44 		.ascii	"clkDivider\000"
 1486      69766964 
 1486      657200
 1487              	.LASF15:
 1488 002d 72656731 		.ascii	"reg16\000"
 1488      3600
 1489              	.LASF2:
 1490 0033 73686F72 		.ascii	"short int\000"
 1490      7420696E 
 1490      7400
 1491              	.LASF16:
 1492 003d 436C6F63 		.ascii	"Clock_2_GetDividerRegister\000"
 1492      6B5F325F 
 1492      47657444 
 1492      69766964 
 1492      65725265 
 1493              	.LASF39:
 1494 0058 436C6F63 		.ascii	"Clock_2_GetPhaseRegister\000"
 1494      6B5F325F 
 1494      47657450 
 1494      68617365 
 1494      52656769 
 1495              	.LASF41:
 1496 0071 47656E65 		.ascii	"Generated_Source\\PSoC5\\Clock_2.c\000"
 1496      72617465 
 1496      645F536F 
 1496      75726365 
 1496      5C50536F 
 1497              	.LASF10:
 1498 0092 75696E74 		.ascii	"uint16\000"
 1498      313600
 1499              	.LASF25:
 1500 0099 72657374 		.ascii	"restart\000"
 1500      61727400 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 38


 1501              	.LASF35:
 1502 00a1 6F6C6453 		.ascii	"oldSrc\000"
 1502      726300
 1503              	.LASF9:
 1504 00a8 75696E74 		.ascii	"uint8\000"
 1504      3800
 1505              	.LASF20:
 1506 00ae 436C6F63 		.ascii	"Clock_2_StopBlock\000"
 1506      6B5F325F 
 1506      53746F70 
 1506      426C6F63 
 1506      6B00
 1507              	.LASF31:
 1508 00c0 436C6F63 		.ascii	"Clock_2_ClearModeRegister\000"
 1508      6B5F325F 
 1508      436C6561 
 1508      724D6F64 
 1508      65526567 
 1509              	.LASF29:
 1510 00da 436C6F63 		.ascii	"Clock_2_SetModeRegister\000"
 1510      6B5F325F 
 1510      5365744D 
 1510      6F646552 
 1510      65676973 
 1511              	.LASF11:
 1512 00f2 666C6F61 		.ascii	"float\000"
 1512      7400
 1513              	.LASF6:
 1514 00f8 6C6F6E67 		.ascii	"long long int\000"
 1514      206C6F6E 
 1514      6720696E 
 1514      7400
 1515              	.LASF4:
 1516 0106 6C6F6E67 		.ascii	"long int\000"
 1516      20696E74 
 1516      00
 1517              	.LASF42:
 1518 010f 433A5C55 		.ascii	"C:\\Users\\Krist\\OneDrive\\Dokumenter\\GitHub\\pla"
 1518      73657273 
 1518      5C4B7269 
 1518      73745C4F 
 1518      6E654472 
 1519 013c 746F6F6E 		.ascii	"tooning\\PSoC\\PeakDetector\\FirstTry.cydsn\000"
 1519      696E675C 
 1519      50536F43 
 1519      5C506561 
 1519      6B446574 
 1520              	.LASF23:
 1521 0165 73746174 		.ascii	"state\000"
 1521      6500
 1522              	.LASF37:
 1523 016b 636C6B50 		.ascii	"clkPhase\000"
 1523      68617365 
 1523      00
 1524              	.LASF1:
 1525 0174 756E7369 		.ascii	"unsigned char\000"
 1525      676E6564 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 39


 1525      20636861 
 1525      7200
 1526              	.LASF30:
 1527 0182 6D6F6465 		.ascii	"modeBitMask\000"
 1527      4269744D 
 1527      61736B00 
 1528              	.LASF22:
 1529 018e 436C6F63 		.ascii	"Clock_2_SetDividerRegister\000"
 1529      6B5F325F 
 1529      53657444 
 1529      69766964 
 1529      65725265 
 1530              	.LASF0:
 1531 01a9 7369676E 		.ascii	"signed char\000"
 1531      65642063 
 1531      68617200 
 1532              	.LASF7:
 1533 01b5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1533      206C6F6E 
 1533      6720756E 
 1533      7369676E 
 1533      65642069 
 1534              	.LASF8:
 1535 01cc 756E7369 		.ascii	"unsigned int\000"
 1535      676E6564 
 1535      20696E74 
 1535      00
 1536              	.LASF18:
 1537 01d9 436C6F63 		.ascii	"Clock_2_Start\000"
 1537      6B5F325F 
 1537      53746172 
 1537      7400
 1538              	.LASF40:
 1539 01e7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1539      43313120 
 1539      352E342E 
 1539      31203230 
 1539      31363036 
 1540 021a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1540      20726576 
 1540      6973696F 
 1540      6E203233 
 1540      37373135 
 1541 024d 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1541      66756E63 
 1541      74696F6E 
 1541      2D736563 
 1541      74696F6E 
 1542              	.LASF32:
 1543 0275 436C6F63 		.ascii	"Clock_2_SetSourceRegister\000"
 1543      6B5F325F 
 1543      53657453 
 1543      6F757263 
 1543      65526567 
 1544              	.LASF3:
 1545 028f 73686F72 		.ascii	"short unsigned int\000"
 1545      7420756E 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccFch3Af.s 			page 40


 1545      7369676E 
 1545      65642069 
 1545      6E7400
 1546              	.LASF13:
 1547 02a2 63686172 		.ascii	"char\000"
 1547      00
 1548              	.LASF21:
 1549 02a7 436C6F63 		.ascii	"Clock_2_StandbyPower\000"
 1549      6B5F325F 
 1549      5374616E 
 1549      64627950 
 1549      6F776572 
 1550              	.LASF33:
 1551 02bc 636C6B53 		.ascii	"clkSource\000"
 1551      6F757263 
 1551      6500
 1552              	.LASF28:
 1553 02c6 63757272 		.ascii	"currSrc\000"
 1553      53726300 
 1554              	.LASF26:
 1555 02ce 6F6C6444 		.ascii	"oldDivider\000"
 1555      69766964 
 1555      657200
 1556              	.LASF36:
 1557 02d9 436C6F63 		.ascii	"Clock_2_SetPhaseRegister\000"
 1557      6B5F325F 
 1557      53657450 
 1557      68617365 
 1557      52656769 
 1558              	.LASF38:
 1559 02f2 436C6F63 		.ascii	"Clock_2_GetModeRegister\000"
 1559      6B5F325F 
 1559      4765744D 
 1559      6F646552 
 1559      65676973 
 1560              	.LASF14:
 1561 030a 72656738 		.ascii	"reg8\000"
 1561      00
 1562              	.LASF5:
 1563 030f 6C6F6E67 		.ascii	"long unsigned int\000"
 1563      20756E73 
 1563      69676E65 
 1563      6420696E 
 1563      7400
 1564              	.LASF19:
 1565 0321 436C6F63 		.ascii	"Clock_2_Stop\000"
 1565      6B5F325F 
 1565      53746F70 
 1565      00
 1566              	.LASF12:
 1567 032e 646F7562 		.ascii	"double\000"
 1567      6C6500
 1568              	.LASF27:
 1569 0335 656E6162 		.ascii	"enabled\000"
 1569      6C656400 
 1570              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
