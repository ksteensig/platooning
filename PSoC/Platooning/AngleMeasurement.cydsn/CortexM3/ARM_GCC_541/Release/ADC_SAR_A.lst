ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_A.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_A_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_SAR_A_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	ADC_SAR_A_Enable, %function
  25              	ADC_SAR_A_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_A.c"
   1:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_A.c **** * File Name: ADC_SAR_A.c
   3:Generated_Source\PSoC5/ADC_SAR_A.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR_A.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_A.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_A.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_A.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_A.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_A.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_A.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_A.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_A.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_A.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_A.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_A.c **** #include "ADC_SAR_A.h"
  20:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  21:Generated_Source\PSoC5/ADC_SAR_A.c **** #if(ADC_SAR_A_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR_A.c ****     #include "ADC_SAR_A_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_A.c **** #endif /* End ADC_SAR_A_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_A.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_A.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_A.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_A.c **** static void ADC_SAR_A_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_A.c **** 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 2


  31:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  32:Generated_Source\PSoC5/ADC_SAR_A.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_A.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_A.c **** uint8 ADC_SAR_A_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_A.c **** volatile int16 ADC_SAR_A_offset;
  37:Generated_Source\PSoC5/ADC_SAR_A.c **** volatile int16 ADC_SAR_A_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_A.c **** volatile int32 ADC_SAR_A_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_A.c **** volatile int16 ADC_SAR_A_shift;
  40:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_Start
  44:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_A.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_A.c **** *  The ADC_SAR_A_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_A.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_A.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_A.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_A.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_A.c **** *  to zero before call of ADC_SAR_A_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Init() and ADC_SAR_A_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_A.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_A.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_A.c **** {
  76:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_A.c ****     if(ADC_SAR_A_initVar == 0u)
  79:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_Init();
  81:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_initVar = 1u;
  82:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_Enable();
  84:Generated_Source\PSoC5/ADC_SAR_A.c **** }
  85:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 3


  88:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_Init
  89:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_SAR_A.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_Start().
  95:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_A.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_A.c **** *  The ADC_SAR_A_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 108:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_A.c ****         CyIntSetPriority(ADC_SAR_A_INTC_NUMBER, ADC_SAR_A_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR_A.c ****         (void)CyIntSetVector(ADC_SAR_A_INTC_NUMBER, &ADC_SAR_A_ISR);
 118:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif   /* End ADC_SAR_A_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CSR1_REG |= ADC_SAR_A_SAR_IRQ_MASK_EN | ADC_SAR_A_SAR_IRQ_MODE_EDGE;
 122:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_A.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SetResolution(ADC_SAR_A_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_offset = 0;
 126:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 127:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_Enable
 131:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_A.c **** {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 145:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_A.c ****     enableInterrupts = CyEnterCriticalSection();
  38              		.loc 1 147 0
  39 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  40              	.LVL0:
 148:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_PWRMGR_SAR_REG |= ADC_SAR_A_ACT_PWR_SAR_EN;
  41              		.loc 1 150 0
  42 0006 204A     		ldr	r2, .L2
 147:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  43              		.loc 1 147 0
  44 0008 0446     		mov	r4, r0
  45              	.LVL1:
  46              		.loc 1 150 0
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 151:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_A.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_STBY_PWRMGR_SAR_REG |= ADC_SAR_A_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_PWRMGR_CLK_REG |= ADC_SAR_A_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_STBY_PWRMGR_CLK_REG |= ADC_SAR_A_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_A.c ****     tmpReg = ADC_SAR_A_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/ADC_SAR_A.c ****     tmpReg |= ADC_SAR_A_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if((ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_A.c ****         (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_A.c ****         tmpReg &= (uint8)~ADC_SAR_A_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_A.c ****         tmpReg |= ADC_SAR_A_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR_A.c ****         #if(ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_A.c ****             ADC_SAR_A_SAR_CSR6_REG = ADC_SAR_A_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_A.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_A.c ****             ADC_SAR_A_SAR_CSR6_REG = ADC_SAR_A_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_A.c ****         #endif /* ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else  /* Reference goes through internal buffer */
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 5


 181:Generated_Source\PSoC5/ADC_SAR_A.c ****         #if(ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_A.c ****             ADC_SAR_A_SAR_CSR6_REG = ADC_SAR_A_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_SAR_A.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_A.c ****             ADC_SAR_A_SAR_CSR6_REG = ADC_SAR_A_INT_BYPASS_EXT_VREF; /* S2 */
  48              		.loc 1 184 0
  49 000c 0425     		movs	r5, #4
 150:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  50              		.loc 1 150 0
  51 000e 43F00203 		orr	r3, r3, #2
  52 0012 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  53              		.loc 1 153 0
  54 0014 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 185:Generated_Source\PSoC5/ADC_SAR_A.c ****         #endif /* ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_SAR_CSR5_REG &= (uint8)~ADC_SAR_A_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_SAR_CSR5_REG |= ADC_SAR_A_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* ADC_SAR_A_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_A.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_SAR_CSR5_REG |= ADC_SAR_A_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_SAR_CSR5_REG &= (uint8)~ADC_SAR_A_SAR_SEL_CSEL_DFT_CHAR;
 203:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* ADC_SAR_A_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_A_DEFAULT_POWER << ADC_SAR_A_SAR_POWER_SHIFT)
 207:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_A_DEFAULT_REFERENCE != ADC_SAR_A__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_A.c ****         | ADC_SAR_A_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_A.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_DEFAULT_CONV_MODE != ADC_SAR_A__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR_A.c ****         | ADC_SAR_A_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_A.c ****         | ADC_SAR_A_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* ADC_SAR_A_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_A.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_TR0_REG = ADC_SAR_A_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CLK_REG |= ADC_SAR_A_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_A.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
  55              		.loc 1 223 0
  56 0016 0A20     		movs	r0, #10
 153:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  57              		.loc 1 153 0
  58 0018 43F00203 		orr	r3, r3, #2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 6


  59 001c 1374     		strb	r3, [r2, #16]
 157:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_STBY_PWRMGR_CLK_REG |= ADC_SAR_A_STBY_PWR_CLK_EN;
  60              		.loc 1 157 0
  61 001e 12F80A3C 		ldrb	r3, [r2, #-10]	@ zero_extendqisi2
  62 0022 43F00203 		orr	r3, r3, #2
  63 0026 02F80A3C 		strb	r3, [r2, #-10]
 158:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_INTERNAL_CLK */
  64              		.loc 1 158 0
  65 002a 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
  66 002c 43F00203 		orr	r3, r3, #2
  67 0030 9371     		strb	r3, [r2, #6]
 162:Generated_Source\PSoC5/ADC_SAR_A.c ****     tmpReg |= ADC_SAR_A_SAR_EN_BUF_VCM_EN;
  68              		.loc 1 162 0
  69 0032 02F5AB52 		add	r2, r2, #5472
  70 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  71              	.LVL2:
 169:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__EXT_REF */
  72              		.loc 1 169 0
  73 0038 43F00303 		orr	r3, r3, #3
  74              	.LVL3:
 171:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  75              		.loc 1 171 0
  76 003c 1370     		strb	r3, [r2]
 184:Generated_Source\PSoC5/ADC_SAR_A.c ****         #endif /* ADC_SAR_A_DEFAULT_REFERENCE == ADC_SAR_A__INT_REF_NOT_BYPASSED */
  77              		.loc 1 184 0
  78 003e 134B     		ldr	r3, .L2+4
  79              	.LVL4:
  80 0040 1D70     		strb	r5, [r3]
  81              	.LVL5:
 190:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
  82              		.loc 1 190 0
  83 0042 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
  84 0046 02F0BF02 		and	r2, r2, #191
  85 004a 03F8012C 		strb	r2, [r3, #-1]
 200:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else /* for <500ksps */
  86              		.loc 1 200 0
  87 004e 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
  88 0052 42F00302 		orr	r2, r2, #3
  89 0056 03F8012C 		strb	r2, [r3, #-1]
 206:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
  90              		.loc 1 206 0
  91 005a 0822     		movs	r2, #8
  92 005c 03F8062C 		strb	r2, [r3, #-6]
 218:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  93              		.loc 1 218 0
  94 0060 A3F59753 		sub	r3, r3, #4832
  95 0064 0222     		movs	r2, #2
  96 0066 183B     		subs	r3, r3, #24
  97 0068 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/ADC_SAR_A.c **** 
  98              		.loc 1 221 0
  99 006a 094A     		ldr	r2, .L2+8
 100 006c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 101 006e 43F00803 		orr	r3, r3, #8
 102 0072 1370     		strb	r3, [r2]
 103              		.loc 1 223 0
 104 0074 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 7


 105              	.LVL6:
 224:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_A.c ****         CyIntClearPending(ADC_SAR_A_INTC_NUMBER);
 106              		.loc 1 227 0
 107 0078 064B     		ldr	r3, .L2+12
 228:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif   /* End ADC_SAR_A_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_A.c ****     CyExitCriticalSection(enableInterrupts);
 108              		.loc 1 230 0
 109 007a 2046     		mov	r0, r4
 227:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif   /* End ADC_SAR_A_IRQ_REMOVE */
 110              		.loc 1 227 0
 111 007c 1D60     		str	r5, [r3]
 231:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 112              		.loc 1 231 0
 113 007e BDE83840 		pop	{r3, r4, r5, lr}
 114              		.cfi_restore 14
 115              		.cfi_restore 5
 116              		.cfi_restore 4
 117              		.cfi_restore 3
 118              		.cfi_def_cfa_offset 0
 119              	.LVL7:
 230:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 120              		.loc 1 230 0
 121 0082 FFF7FEBF 		b	CyExitCriticalSection
 122              	.LVL8:
 123              	.L3:
 124 0086 00BF     		.align	2
 125              	.L2:
 126 0088 AB430040 		.word	1073759147
 127 008c 0E590040 		.word	1073764622
 128 0090 2F5B0040 		.word	1073765167
 129 0094 80E200E0 		.word	-536812928
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	ADC_SAR_A_Enable, .-ADC_SAR_A_Enable
 133              		.section	.text.ADC_SAR_A_Stop,"ax",%progbits
 134              		.align	1
 135              		.global	ADC_SAR_A_Stop
 136              		.thumb
 137              		.thumb_func
 138              		.type	ADC_SAR_A_Stop, %function
 139              	ADC_SAR_A_Stop:
 140              	.LFB3:
 232:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_Stop
 236:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 8


 243:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 247:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 141              		.loc 1 249 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 250:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_A.c ****     enableInterrupts = CyEnterCriticalSection();
 149              		.loc 1 251 0
 150 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 151              	.LVL9:
 252:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CSR0_REG &= (uint8)~ADC_SAR_A_SAR_SOF_START_CONV;
 152              		.loc 1 254 0
 153 0006 0F4A     		ldr	r2, .L5
 154 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 155 000a 03F0FE03 		and	r3, r3, #254
 156 000e 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_A_ACT_PWR_SAR_EN;
 157              		.loc 1 256 0
 158 0010 A2F5AA52 		sub	r2, r2, #5440
 159 0014 1D3A     		subs	r2, r2, #29
 160 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 161 0018 03F0FD03 		and	r3, r3, #253
 162 001c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_A_STBY_PWR_SAR_EN;
 163              		.loc 1 258 0
 164 001e 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 165 0020 03F0FD03 		and	r3, r3, #253
 166 0024 1374     		strb	r3, [r2, #16]
 259:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 260:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(ADC_SAR_A_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_A_ACT_PWR_CLK_EN;
 167              		.loc 1 262 0
 168 0026 12F80A3C 		ldrb	r3, [r2, #-10]	@ zero_extendqisi2
 169 002a 03F0FD03 		and	r3, r3, #253
 170 002e 02F80A3C 		strb	r3, [r2, #-10]
 263:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_A_STBY_PWR_CLK_EN;
 171              		.loc 1 263 0
 172 0032 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 173 0034 03F0FD03 		and	r3, r3, #253
 174 0038 9371     		strb	r3, [r2, #6]
 264:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_A.c **** 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 9


 266:Generated_Source\PSoC5/ADC_SAR_A.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 175              		.loc 1 268 0
 176 003a BDE80840 		pop	{r3, lr}
 177              		.cfi_restore 14
 178              		.cfi_restore 3
 179              		.cfi_def_cfa_offset 0
 266:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 180              		.loc 1 266 0
 181 003e FFF7FEBF 		b	CyExitCriticalSection
 182              	.LVL10:
 183              	.L6:
 184 0042 00BF     		.align	2
 185              	.L5:
 186 0044 08590040 		.word	1073764616
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	ADC_SAR_A_Stop, .-ADC_SAR_A_Stop
 190              		.section	.text.ADC_SAR_A_SetPower,"ax",%progbits
 191              		.align	1
 192              		.global	ADC_SAR_A_SetPower
 193              		.thumb
 194              		.thumb_func
 195              		.type	ADC_SAR_A_SetPower, %function
 196              	ADC_SAR_A_SetPower:
 197              	.LFB4:
 269:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_A.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_A.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_A.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_A.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_A.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_A.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 198              		.loc 1 291 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              	.LVL11:
 292:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 tmpReg;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 10


 293:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_A.c ****     power &= ADC_SAR_A_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 297:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_A.c ****     tmpReg = ADC_SAR_A_SAR_CSR0_REG & (uint8)~ADC_SAR_A_SAR_POWER_MASK;
 204              		.loc 1 298 0
 205 0000 044A     		ldr	r2, .L8
 206 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 207 0004 03F03F03 		and	r3, r3, #63
 208              	.LVL12:
 299:Generated_Source\PSoC5/ADC_SAR_A.c ****     tmpReg |= (uint8)(power << ADC_SAR_A_SAR_POWER_SHIFT);
 209              		.loc 1 299 0
 210 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 211              	.LVL13:
 212 000c C0B2     		uxtb	r0, r0
 213              	.LVL14:
 300:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CSR0_REG = tmpReg;
 214              		.loc 1 300 0
 215 000e 1070     		strb	r0, [r2]
 216 0010 7047     		bx	lr
 217              	.L9:
 218 0012 00BF     		.align	2
 219              	.L8:
 220 0014 08590040 		.word	1073764616
 221              		.cfi_endproc
 222              	.LFE4:
 223              		.size	ADC_SAR_A_SetPower, .-ADC_SAR_A_SetPower
 224              		.section	.text.ADC_SAR_A_SetResolution,"ax",%progbits
 225              		.align	1
 226              		.global	ADC_SAR_A_SetResolution
 227              		.thumb
 228              		.thumb_func
 229              		.type	ADC_SAR_A_SetResolution, %function
 230              	ADC_SAR_A_SetResolution:
 231              	.LFB5:
 301:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 302:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_A.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_A.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_A.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR_A.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 317:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_A.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_A.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 11


 322:Generated_Source\PSoC5/ADC_SAR_A.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_A.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_A.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR_A.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_A.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_A.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_A.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_A.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_A.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_A.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_A.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_A.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 232              		.loc 1 341 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL15:
 342:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_A.c ****     switch (resolution)
 238              		.loc 1 345 0
 239 0000 0828     		cmp	r0, #8
 240 0002 04D0     		beq	.L12
 241 0004 0A28     		cmp	r0, #10
 346:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_A.c ****         case (uint8)ADC_SAR_A__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR_A.c ****             tmpReg = ADC_SAR_A_SAR_RESOLUTION_12BIT | ADC_SAR_A_SAR_SAMPLE_WIDTH;
 242              		.loc 1 348 0
 243 0006 0CBF     		ite	eq
 244 0008 8423     		moveq	r3, #132
 245 000a C423     		movne	r3, #196
 246 000c 00E0     		b	.L13
 247              	.L12:
 248              	.LVL16:
 349:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 350:Generated_Source\PSoC5/ADC_SAR_A.c ****         case (uint8)ADC_SAR_A__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_A.c ****             tmpReg = ADC_SAR_A_SAR_RESOLUTION_10BIT | ADC_SAR_A_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 353:Generated_Source\PSoC5/ADC_SAR_A.c ****         case (uint8)ADC_SAR_A__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_A.c ****             tmpReg = ADC_SAR_A_SAR_RESOLUTION_8BIT | ADC_SAR_A_SAR_SAMPLE_WIDTH;
 249              		.loc 1 354 0
 250 000e 4423     		movs	r3, #68
 251              	.LVL17:
 252              	.L13:
 253 0010 0838     		subs	r0, r0, #8
 254              	.LVL18:
 355:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 12


 356:Generated_Source\PSoC5/ADC_SAR_A.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_A.c ****             tmpReg = ADC_SAR_A_SAR_RESOLUTION_12BIT | ADC_SAR_A_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/ADC_SAR_A.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_A.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 361:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_SAR_CSR2_REG = tmpReg;
 255              		.loc 1 362 0
 256 0012 0E4A     		ldr	r2, .L18
 257 0014 C0B2     		uxtb	r0, r0
 258 0016 0428     		cmp	r0, #4
 259 0018 1370     		strb	r3, [r2]
 260              	.LVL19:
 261 001a 98BF     		it	ls
 262 001c 0C4B     		ldrls	r3, .L18+4
 263 001e 4FF00002 		mov	r2, #0
 264 0022 98BF     		it	ls
 265 0024 33F91010 		ldrshls	r1, [r3, r0, lsl #1]
 266              	.LBB4:
 267              	.LBB5:
 363:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_A.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_CalcGain(resolution);
 366:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 367:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_A.c **** #if(ADC_SAR_A_DEFAULT_CONV_MODE != ADC_SAR_A__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_A.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Function Name: ADC_SAR_A_StartConvert
 374:Generated_Source\PSoC5/ADC_SAR_A.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  ADC_SAR_A_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 13


 400:Generated_Source\PSoC5/ADC_SAR_A.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_A.c ****     void ADC_SAR_A_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 403:Generated_Source\PSoC5/ADC_SAR_A.c ****         #if(ADC_SAR_A_DEFAULT_CONV_MODE != ADC_SAR_A__FREE_RUNNING)  /* If software triggered mode 
 404:Generated_Source\PSoC5/ADC_SAR_A.c ****             ADC_SAR_A_SAR_CSR0_REG &= (uint8)~ADC_SAR_A_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR_A.c ****         #endif /* End ADC_SAR_A_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_SAR_CSR0_REG |= ADC_SAR_A_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 410:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_A.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Function Name: ADC_SAR_A_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_A.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_A.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_A.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_A.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_A.c ****     void ADC_SAR_A_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 437:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_SAR_CSR0_REG &= (uint8)~ADC_SAR_A_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_A.c ****         #if(ADC_SAR_A_DEFAULT_CONV_MODE != ADC_SAR_A__FREE_RUNNING)  /* If software triggered mode 
 441:Generated_Source\PSoC5/ADC_SAR_A.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_A.c ****             ADC_SAR_A_SAR_CSR0_REG |= ADC_SAR_A_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_A.c ****         #endif /* End ADC_SAR_A_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 446:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_A.c **** #endif /* End ADC_SAR_A_DEFAULT_CONV_MODE != ADC_SAR_A__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_A.c **** *  (blocking) until the conversion completes, depending on the retMode
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 14


 457:Generated_Source\PSoC5/ADC_SAR_A.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_A.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR_A.c **** *   ADC_SAR_A_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_A.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_A.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_A.c **** *   ADC_SAR_A_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_A.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_A.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_A.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_A.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_A.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_A.c **** uint8 ADC_SAR_A_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 477:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_A.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_A.c ****         status = ADC_SAR_A_SAR_CSR1_REG & ADC_SAR_A_SAR_EOF_1;
 482:Generated_Source\PSoC5/ADC_SAR_A.c ****     } while ((status != ADC_SAR_A_SAR_EOF_1) && (retMode == ADC_SAR_A_WAIT_FOR_RESULT));
 483:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_A.c ****     if(status == ADC_SAR_A_SAR_EOF_1)
 485:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_A.c ****         CyDelayUs(1u);
 488:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_A.c ****         CY_GET_REG8(ADC_SAR_A_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_A.c ****     return(status);
 493:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 494:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_A.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_A.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_A.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_shift - used to convert the ADC counts to the 2s
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 15


 514:Generated_Source\PSoC5/ADC_SAR_A.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_A.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_A.c **** int8 ADC_SAR_A_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 522:Generated_Source\PSoC5/ADC_SAR_A.c ****     return( (int8)ADC_SAR_A_SAR_WRK0_REG - (int8)ADC_SAR_A_shift);
 523:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 524:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_A.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_A.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_A.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_A.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_A.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR_A.c **** int16 ADC_SAR_A_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 552:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_A.c ****     res = CY_GET_REG16(ADC_SAR_A_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_A.c ****     return( (int16)res - ADC_SAR_A_shift );
 557:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 558:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Sets the ADC offset, which is used by ADC_SAR_A_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_CountsTo_mVolts(), and ADC_SAR_A_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_A.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_A.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 16


 571:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_A.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_A.c **** *  The ADC_SAR_A_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_A.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Affects the ADC_SAR_A_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_CountsTo_mVolts, ADC_SAR_A_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_A.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 587:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_offset = offset;
 588:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 589:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_A.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_A.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 602:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_A.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_A.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_A.c **** static void ADC_SAR_A_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 613:Generated_Source\PSoC5/ADC_SAR_A.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if(!((ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_A.c ****          (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_A.c ****          (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_A.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_A.c ****     switch (resolution)
 621:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_A.c ****         case (uint8)ADC_SAR_A__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_A.c ****             counts = (int32)ADC_SAR_A_SAR_WRK_MAX_12BIT;
 624:Generated_Source\PSoC5/ADC_SAR_A.c ****             #if(!((ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_A.c ****                 diff_zero = ADC_SAR_A_SAR_DIFF_SHIFT;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 17


 628:Generated_Source\PSoC5/ADC_SAR_A.c ****             #endif /* End ADC_SAR_A_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 630:Generated_Source\PSoC5/ADC_SAR_A.c ****         case (uint8)ADC_SAR_A__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_A.c ****             counts = (int32)ADC_SAR_A_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/ADC_SAR_A.c ****             #if(!((ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_A.c ****                 diff_zero = ADC_SAR_A_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_SAR_A.c ****             #endif /* End ADC_SAR_A_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 638:Generated_Source\PSoC5/ADC_SAR_A.c ****         case (uint8)ADC_SAR_A__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_A.c ****             counts = (int32)ADC_SAR_A_SAR_WRK_MAX_8BIT;
 640:Generated_Source\PSoC5/ADC_SAR_A.c ****             #if(!((ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_A.c ****                 diff_zero = ADC_SAR_A_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR_A.c ****             #endif /* End ADC_SAR_A_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 646:Generated_Source\PSoC5/ADC_SAR_A.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_A.c ****             counts = 0;
 648:Generated_Source\PSoC5/ADC_SAR_A.c ****             #if(!((ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_A.c ****                  (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_A.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_A.c ****             #endif /* End ADC_SAR_A_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_A.c ****             CYASSERT(0u != 0u);
 654:Generated_Source\PSoC5/ADC_SAR_A.c ****             break;
 655:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_countsPerVolt = 0; /* Clear obsolete variable */
 268              		.loc 1 656 0
 269 0028 0A4B     		ldr	r3, .L18+8
 270              	.LBE5:
 271              	.LBE4:
 362:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 272              		.loc 1 362 0
 273 002a 88BF     		it	hi
 274 002c 1146     		movhi	r1, r2
 275              	.LVL20:
 276              	.LBB7:
 277              	.LBB6:
 278              		.loc 1 656 0
 279 002e 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_countsPer10Volt = (((counts * ADC_SAR_A_10MV_COUNTS) +
 659:Generated_Source\PSoC5/ADC_SAR_A.c ****                         ADC_SAR_A_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_A_DEFAULT_REF_VOLTAGE_MV * 2))
 280              		.loc 1 659 0
 281 0030 42F21073 		movw	r3, #10000
 282 0034 4B43     		muls	r3, r1, r3
 283 0036 4FF40061 		mov	r1, #2048
 284              	.LVL21:
 285 003a 03F58063 		add	r3, r3, #1024
 286 003e 93FBF1F3 		sdiv	r3, r3, r1
 658:Generated_Source\PSoC5/ADC_SAR_A.c ****                         ADC_SAR_A_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_A_DEFAULT_REF_VOLTAGE_MV * 2))
 287              		.loc 1 658 0
 288 0042 0549     		ldr	r1, .L18+12
 289 0044 0B60     		str	r3, [r1]
 660:Generated_Source\PSoC5/ADC_SAR_A.c **** 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 18


 661:Generated_Source\PSoC5/ADC_SAR_A.c ****     #if( (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_A.c ****          (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_A.c ****          (ADC_SAR_A_DEFAULT_RANGE == ADC_SAR_A__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_shift = 0;
 290              		.loc 1 664 0
 291 0046 054B     		ldr	r3, .L18+16
 292 0048 1A80     		strh	r2, [r3]	@ movhi
 293 004a 7047     		bx	lr
 294              	.L19:
 295              		.align	2
 296              	.L18:
 297 004c 0A590040 		.word	1073764618
 298 0050 00000000 		.word	.LANCHOR0
 299 0054 00000000 		.word	ADC_SAR_A_countsPerVolt
 300 0058 00000000 		.word	ADC_SAR_A_countsPer10Volt
 301 005c 00000000 		.word	ADC_SAR_A_shift
 302              	.LBE6:
 303              	.LBE7:
 304              		.cfi_endproc
 305              	.LFE5:
 306              		.size	ADC_SAR_A_SetResolution, .-ADC_SAR_A_SetResolution
 307              		.section	.text.ADC_SAR_A_Init,"ax",%progbits
 308              		.align	1
 309              		.global	ADC_SAR_A_Init
 310              		.thumb
 311              		.thumb_func
 312              		.type	ADC_SAR_A_Init, %function
 313              	ADC_SAR_A_Init:
 314              	.LFB1:
 107:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 315              		.loc 1 107 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 08B5     		push	{r3, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
 111:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_INTERNAL_CLK */
 323              		.loc 1 111 0
 324 0002 1020     		movs	r0, #16
 325 0004 FFF7FEFF 		bl	ADC_SAR_A_theACLK_SetModeRegister
 326              	.LVL22:
 116:Generated_Source\PSoC5/ADC_SAR_A.c ****         (void)CyIntSetVector(ADC_SAR_A_INTC_NUMBER, &ADC_SAR_A_ISR);
 327              		.loc 1 116 0
 328 0008 0721     		movs	r1, #7
 329 000a 0220     		movs	r0, #2
 330 000c FFF7FEFF 		bl	CyIntSetPriority
 331              	.LVL23:
 117:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif   /* End ADC_SAR_A_IRQ_REMOVE */
 332              		.loc 1 117 0
 333 0010 0749     		ldr	r1, .L21
 334 0012 0220     		movs	r0, #2
 335 0014 FFF7FEFF 		bl	CyIntSetVector
 336              	.LVL24:
 121:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 337              		.loc 1 121 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 19


 338 0018 064A     		ldr	r2, .L21+4
 124:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_offset = 0;
 339              		.loc 1 124 0
 340 001a 0C20     		movs	r0, #12
 121:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 341              		.loc 1 121 0
 342 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 343 001e 43F00603 		orr	r3, r3, #6
 344 0022 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_offset = 0;
 345              		.loc 1 124 0
 346 0024 FFF7FEFF 		bl	ADC_SAR_A_SetResolution
 347              	.LVL25:
 125:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 348              		.loc 1 125 0
 349 0028 034B     		ldr	r3, .L21+8
 350 002a 0022     		movs	r2, #0
 351 002c 1A80     		strh	r2, [r3]	@ movhi
 352 002e 08BD     		pop	{r3, pc}
 353              	.L22:
 354              		.align	2
 355              	.L21:
 356 0030 00000000 		.word	ADC_SAR_A_ISR
 357 0034 09590040 		.word	1073764617
 358 0038 00000000 		.word	ADC_SAR_A_offset
 359              		.cfi_endproc
 360              	.LFE1:
 361              		.size	ADC_SAR_A_Init, .-ADC_SAR_A_Init
 362              		.section	.text.ADC_SAR_A_Start,"ax",%progbits
 363              		.align	1
 364              		.global	ADC_SAR_A_Start
 365              		.thumb
 366              		.thumb_func
 367              		.type	ADC_SAR_A_Start, %function
 368              	ADC_SAR_A_Start:
 369              	.LFB0:
  75:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 370              		.loc 1 75 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 10B5     		push	{r4, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 378              		.loc 1 78 0
 379 0002 054C     		ldr	r4, .L25
 380 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 381 0006 1BB9     		cbnz	r3, .L24
  80:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_initVar = 1u;
 382              		.loc 1 80 0
 383 0008 FFF7FEFF 		bl	ADC_SAR_A_Init
 384              	.LVL26:
  81:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 385              		.loc 1 81 0
 386 000c 0123     		movs	r3, #1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 20


 387 000e 2370     		strb	r3, [r4]
 388              	.L24:
  84:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 389              		.loc 1 84 0
 390 0010 BDE81040 		pop	{r4, lr}
 391              		.cfi_restore 14
 392              		.cfi_restore 4
 393              		.cfi_def_cfa_offset 0
  83:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 394              		.loc 1 83 0
 395 0014 FFF7FEBF 		b	ADC_SAR_A_Enable
 396              	.LVL27:
 397              	.L26:
 398              		.align	2
 399              	.L25:
 400 0018 00000000 		.word	.LANCHOR1
 401              		.cfi_endproc
 402              	.LFE0:
 403              		.size	ADC_SAR_A_Start, .-ADC_SAR_A_Start
 404              		.section	.text.ADC_SAR_A_StartConvert,"ax",%progbits
 405              		.align	1
 406              		.global	ADC_SAR_A_StartConvert
 407              		.thumb
 408              		.thumb_func
 409              		.type	ADC_SAR_A_StartConvert, %function
 410              	ADC_SAR_A_StartConvert:
 411              	.LFB6:
 402:Generated_Source\PSoC5/ADC_SAR_A.c ****         #if(ADC_SAR_A_DEFAULT_CONV_MODE != ADC_SAR_A__FREE_RUNNING)  /* If software triggered mode 
 412              		.loc 1 402 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 408:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 417              		.loc 1 408 0
 418 0000 024A     		ldr	r2, .L28
 419 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 420 0004 43F00103 		orr	r3, r3, #1
 421 0008 1370     		strb	r3, [r2]
 422 000a 7047     		bx	lr
 423              	.L29:
 424              		.align	2
 425              	.L28:
 426 000c 08590040 		.word	1073764616
 427              		.cfi_endproc
 428              	.LFE6:
 429              		.size	ADC_SAR_A_StartConvert, .-ADC_SAR_A_StartConvert
 430              		.section	.text.ADC_SAR_A_StopConvert,"ax",%progbits
 431              		.align	1
 432              		.global	ADC_SAR_A_StopConvert
 433              		.thumb
 434              		.thumb_func
 435              		.type	ADC_SAR_A_StopConvert, %function
 436              	ADC_SAR_A_StopConvert:
 437              	.LFB7:
 436:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Stop all conversions */
 438              		.loc 1 436 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 21


 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 438:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 443              		.loc 1 438 0
 444 0000 024A     		ldr	r2, .L31
 445 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 446 0004 03F0FE03 		and	r3, r3, #254
 447 0008 1370     		strb	r3, [r2]
 448 000a 7047     		bx	lr
 449              	.L32:
 450              		.align	2
 451              	.L31:
 452 000c 08590040 		.word	1073764616
 453              		.cfi_endproc
 454              	.LFE7:
 455              		.size	ADC_SAR_A_StopConvert, .-ADC_SAR_A_StopConvert
 456              		.section	.text.ADC_SAR_A_IsEndConversion,"ax",%progbits
 457              		.align	1
 458              		.global	ADC_SAR_A_IsEndConversion
 459              		.thumb
 460              		.thumb_func
 461              		.type	ADC_SAR_A_IsEndConversion, %function
 462              	ADC_SAR_A_IsEndConversion:
 463              	.LFB8:
 476:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint8 status;
 464              		.loc 1 476 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              	.LVL28:
 469 0000 10B5     		push	{r4, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 14, -4
 481:Generated_Source\PSoC5/ADC_SAR_A.c ****     } while ((status != ADC_SAR_A_SAR_EOF_1) && (retMode == ADC_SAR_A_WAIT_FOR_RESULT));
 473              		.loc 1 481 0
 474 0002 084B     		ldr	r3, .L40
 475              	.L35:
 481:Generated_Source\PSoC5/ADC_SAR_A.c ****     } while ((status != ADC_SAR_A_SAR_EOF_1) && (retMode == ADC_SAR_A_WAIT_FOR_RESULT));
 476              		.loc 1 481 0 is_stmt 0 discriminator 2
 477 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 478              	.LVL29:
 482:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* If convertion complete, wait until EOF bit released */
 479              		.loc 1 482 0 is_stmt 1 discriminator 2
 480 0006 14F00104 		ands	r4, r4, #1
 481              	.LVL30:
 482 000a 03D1     		bne	.L34
 482:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* If convertion complete, wait until EOF bit released */
 483              		.loc 1 482 0 is_stmt 0 discriminator 1
 484 000c 0028     		cmp	r0, #0
 485 000e F9D0     		beq	.L35
 486 0010 0024     		movs	r4, #0
 487 0012 04E0     		b	.L39
 488              	.L34:
 487:Generated_Source\PSoC5/ADC_SAR_A.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 22


 489              		.loc 1 487 0 is_stmt 1
 490 0014 2046     		mov	r0, r4
 491              	.LVL31:
 492 0016 FFF7FEFF 		bl	CyDelayUs
 493              	.LVL32:
 489:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 494              		.loc 1 489 0
 495 001a 024B     		ldr	r3, .L40
 496 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497              	.L39:
 493:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 498              		.loc 1 493 0
 499 001e 2046     		mov	r0, r4
 500 0020 10BD     		pop	{r4, pc}
 501              	.L41:
 502 0022 00BF     		.align	2
 503              	.L40:
 504 0024 09590040 		.word	1073764617
 505              		.cfi_endproc
 506              	.LFE8:
 507              		.size	ADC_SAR_A_IsEndConversion, .-ADC_SAR_A_IsEndConversion
 508              		.section	.text.ADC_SAR_A_GetResult8,"ax",%progbits
 509              		.align	1
 510              		.global	ADC_SAR_A_GetResult8
 511              		.thumb
 512              		.thumb_func
 513              		.type	ADC_SAR_A_GetResult8, %function
 514              	ADC_SAR_A_GetResult8:
 515              	.LFB9:
 521:Generated_Source\PSoC5/ADC_SAR_A.c ****     return( (int8)ADC_SAR_A_SAR_WRK0_REG - (int8)ADC_SAR_A_shift);
 516              		.loc 1 521 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 522:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 521              		.loc 1 522 0
 522 0000 034A     		ldr	r2, .L43
 523 0002 044B     		ldr	r3, .L43+4
 524 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 525 0006 1088     		ldrh	r0, [r2]
 526 0008 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 527              		.loc 1 523 0
 528 000a 40B2     		sxtb	r0, r0
 529 000c 7047     		bx	lr
 530              	.L44:
 531 000e 00BF     		.align	2
 532              	.L43:
 533 0010 00000000 		.word	ADC_SAR_A_shift
 534 0014 A25B0040 		.word	1073765282
 535              		.cfi_endproc
 536              	.LFE9:
 537              		.size	ADC_SAR_A_GetResult8, .-ADC_SAR_A_GetResult8
 538              		.section	.text.ADC_SAR_A_GetResult16,"ax",%progbits
 539              		.align	1
 540              		.global	ADC_SAR_A_GetResult16
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 23


 541              		.thumb
 542              		.thumb_func
 543              		.type	ADC_SAR_A_GetResult16, %function
 544              	ADC_SAR_A_GetResult16:
 545              	.LFB10:
 551:Generated_Source\PSoC5/ADC_SAR_A.c ****     uint16 res;
 546              		.loc 1 551 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 556:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 551              		.loc 1 556 0
 552 0000 034A     		ldr	r2, .L46
 554:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 553              		.loc 1 554 0
 554 0002 044B     		ldr	r3, .L46+4
 555 0004 1B88     		ldrh	r3, [r3]
 556              	.LVL33:
 556:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 557              		.loc 1 556 0
 558 0006 1088     		ldrh	r0, [r2]
 559 0008 181A     		subs	r0, r3, r0
 557:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 560              		.loc 1 557 0
 561 000a 00B2     		sxth	r0, r0
 562 000c 7047     		bx	lr
 563              	.L47:
 564 000e 00BF     		.align	2
 565              	.L46:
 566 0010 00000000 		.word	ADC_SAR_A_shift
 567 0014 A25B0040 		.word	1073765282
 568              		.cfi_endproc
 569              	.LFE10:
 570              		.size	ADC_SAR_A_GetResult16, .-ADC_SAR_A_GetResult16
 571              		.section	.text.ADC_SAR_A_SetOffset,"ax",%progbits
 572              		.align	1
 573              		.global	ADC_SAR_A_SetOffset
 574              		.thumb
 575              		.thumb_func
 576              		.type	ADC_SAR_A_SetOffset, %function
 577              	ADC_SAR_A_SetOffset:
 578              	.LFB11:
 586:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_offset = offset;
 579              		.loc 1 586 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL34:
 587:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 585              		.loc 1 587 0
 586 0000 014B     		ldr	r3, .L49
 587 0002 1880     		strh	r0, [r3]	@ movhi
 588 0004 7047     		bx	lr
 589              	.L50:
 590 0006 00BF     		.align	2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 24


 591              	.L49:
 592 0008 00000000 		.word	ADC_SAR_A_offset
 593              		.cfi_endproc
 594              	.LFE11:
 595              		.size	ADC_SAR_A_SetOffset, .-ADC_SAR_A_SetOffset
 596              		.section	.text.ADC_SAR_A_SetGain,"ax",%progbits
 597              		.align	1
 598              		.global	ADC_SAR_A_SetGain
 599              		.thumb
 600              		.thumb_func
 601              		.type	ADC_SAR_A_SetGain, %function
 602              	ADC_SAR_A_SetGain:
 603              	.LFB13:
 665:Generated_Source\PSoC5/ADC_SAR_A.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_A.c ****         ADC_SAR_A_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_A.c ****     #endif /* End ADC_SAR_A_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 669:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_A.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_A.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_A.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 687:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_A.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 604              		.loc 1 693 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609              	.LVL35:
 694:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_countsPer10Volt = (int32)adcGain * 10;
 610              		.loc 1 694 0
 611 0000 0A23     		movs	r3, #10
 612 0002 5843     		muls	r0, r3, r0
 613              	.LVL36:
 614 0004 014B     		ldr	r3, .L52
 615 0006 1860     		str	r0, [r3]
 616 0008 7047     		bx	lr
 617              	.L53:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 25


 618 000a 00BF     		.align	2
 619              	.L52:
 620 000c 00000000 		.word	ADC_SAR_A_countsPer10Volt
 621              		.cfi_endproc
 622              	.LFE13:
 623              		.size	ADC_SAR_A_SetGain, .-ADC_SAR_A_SetGain
 624              		.section	.text.ADC_SAR_A_SetScaledGain,"ax",%progbits
 625              		.align	1
 626              		.global	ADC_SAR_A_SetScaledGain
 627              		.thumb
 628              		.thumb_func
 629              		.type	ADC_SAR_A_SetScaledGain, %function
 630              	ADC_SAR_A_SetScaledGain:
 631              	.LFB14:
 695:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 696:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 698:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR_A.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_A.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_A.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_A.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 714:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR_A.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_A.c **** void ADC_SAR_A_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 632              		.loc 1 720 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637              	.LVL37:
 721:Generated_Source\PSoC5/ADC_SAR_A.c ****     ADC_SAR_A_countsPer10Volt = adcGain;
 638              		.loc 1 721 0
 639 0000 014B     		ldr	r3, .L55
 640 0002 1860     		str	r0, [r3]
 641 0004 7047     		bx	lr
 642              	.L56:
 643 0006 00BF     		.align	2
 644              	.L55:
 645 0008 00000000 		.word	ADC_SAR_A_countsPer10Volt
 646              		.cfi_endproc
 647              	.LFE14:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 26


 648              		.size	ADC_SAR_A_SetScaledGain, .-ADC_SAR_A_SetScaledGain
 649              		.section	.text.ADC_SAR_A_CountsTo_mVolts,"ax",%progbits
 650              		.align	1
 651              		.global	ADC_SAR_A_CountsTo_mVolts
 652              		.thumb
 653              		.thumb_func
 654              		.type	ADC_SAR_A_CountsTo_mVolts, %function
 655              	ADC_SAR_A_CountsTo_mVolts:
 656              	.LFB15:
 722:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 723:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 729:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_A.c **** int16 ADC_SAR_A_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 657              		.loc 1 744 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662              	.LVL38:
 745:Generated_Source\PSoC5/ADC_SAR_A.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_A.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_A.c ****     if(ADC_SAR_A_countsPerVolt != 0)
 663              		.loc 1 748 0
 664 0000 0E4A     		ldr	r2, .L62
 665 0002 1388     		ldrh	r3, [r2]
 666 0004 1BB2     		sxth	r3, r3
 667 0006 23B1     		cbz	r3, .L58
 749:Generated_Source\PSoC5/ADC_SAR_A.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_A.c ****         countsPer10Volt = (int32)ADC_SAR_A_countsPerVolt * 10;
 668              		.loc 1 750 0
 669 0008 1188     		ldrh	r1, [r2]
 670 000a 0A23     		movs	r3, #10
 671 000c 09B2     		sxth	r1, r1
 672 000e 5943     		muls	r1, r3, r1
 673              	.LVL39:
 674 0010 01E0     		b	.L59
 675              	.LVL40:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 27


 676              	.L58:
 751:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_A.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 754:Generated_Source\PSoC5/ADC_SAR_A.c ****         countsPer10Volt = ADC_SAR_A_countsPer10Volt;
 677              		.loc 1 754 0
 678 0012 0B4B     		ldr	r3, .L62+4
 679 0014 1968     		ldr	r1, [r3]
 680              	.LVL41:
 681              	.L59:
 755:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR_A.c ****     adcCounts -= ADC_SAR_A_offset;
 682              		.loc 1 758 0
 683 0016 0B4B     		ldr	r3, .L62+8
 684 0018 1B88     		ldrh	r3, [r3]
 685 001a C01A     		subs	r0, r0, r3
 686              	.LVL42:
 759:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_A.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_A_10MV_COUNTS ) + ( (adcCounts > 0) ?
 687              		.loc 1 760 0
 688 001c 42F21073 		movw	r3, #10000
 758:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Convert to millivolts with rounding */
 689              		.loc 1 758 0
 690 0020 00B2     		sxth	r0, r0
 691              	.LVL43:
 692              		.loc 1 760 0
 693 0022 03FB00F2 		mul	r2, r3, r0
 694 0026 0223     		movs	r3, #2
 761:Generated_Source\PSoC5/ADC_SAR_A.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 695              		.loc 1 761 0
 696 0028 91FBF3F3 		sdiv	r3, r1, r3
 697 002c 0028     		cmp	r0, #0
 698 002e D8BF     		it	le
 699 0030 5B42     		rsble	r3, r3, #0
 700              	.LVL44:
 762:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_A.c ****     return( mVolts );
 701              		.loc 1 763 0
 702 0032 1344     		add	r3, r3, r2
 703              	.LVL45:
 704 0034 93FBF1F0 		sdiv	r0, r3, r1
 705              	.LVL46:
 764:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 706              		.loc 1 764 0
 707 0038 00B2     		sxth	r0, r0
 708 003a 7047     		bx	lr
 709              	.L63:
 710              		.align	2
 711              	.L62:
 712 003c 00000000 		.word	ADC_SAR_A_countsPerVolt
 713 0040 00000000 		.word	ADC_SAR_A_countsPer10Volt
 714 0044 00000000 		.word	ADC_SAR_A_offset
 715              		.cfi_endproc
 716              	.LFE15:
 717              		.size	ADC_SAR_A_CountsTo_mVolts, .-ADC_SAR_A_CountsTo_mVolts
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 28


 718              		.global	__aeabi_ldivmod
 719              		.section	.text.ADC_SAR_A_CountsTo_uVolts,"ax",%progbits
 720              		.align	1
 721              		.global	ADC_SAR_A_CountsTo_uVolts
 722              		.thumb
 723              		.thumb_func
 724              		.type	ADC_SAR_A_CountsTo_uVolts, %function
 725              	ADC_SAR_A_CountsTo_uVolts:
 726              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 780:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_A.c **** int32 ADC_SAR_A_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 727              		.loc 1 786 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL47:
 787:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_A.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_A.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_A.c ****     if(ADC_SAR_A_countsPerVolt != 0)
 732              		.loc 1 791 0
 733 0000 0C4A     		ldr	r2, .L67
 786:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 734              		.loc 1 786 0
 735 0002 38B5     		push	{r3, r4, r5, lr}
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 3, -16
 738              		.cfi_offset 4, -12
 739              		.cfi_offset 5, -8
 740              		.cfi_offset 14, -4
 741              		.loc 1 791 0
 742 0004 1388     		ldrh	r3, [r2]
 743 0006 1BB2     		sxth	r3, r3
 744 0008 23B1     		cbz	r3, .L65
 792:Generated_Source\PSoC5/ADC_SAR_A.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_A.c ****         countsPer10Volt = (int32)ADC_SAR_A_countsPerVolt * 10;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 29


 745              		.loc 1 793 0
 746 000a 1288     		ldrh	r2, [r2]
 747 000c 0A23     		movs	r3, #10
 748 000e 12B2     		sxth	r2, r2
 749 0010 5A43     		muls	r2, r3, r2
 750              	.LVL48:
 751 0012 01E0     		b	.L66
 752              	.LVL49:
 753              	.L65:
 794:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_A.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_A.c ****         countsPer10Volt = ADC_SAR_A_countsPer10Volt;
 754              		.loc 1 797 0
 755 0014 084B     		ldr	r3, .L67+4
 756 0016 1A68     		ldr	r2, [r3]
 757              	.LVL50:
 758              	.L66:
 798:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 800:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_A.c ****     adcCounts -= ADC_SAR_A_offset;
 759              		.loc 1 801 0
 760 0018 084B     		ldr	r3, .L67+8
 761 001a 1C88     		ldrh	r4, [r3]
 802:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_A.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_A.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_A.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_A_10UV_COUNTS ) / countsPer10Volt);
 806:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_A.c ****     return((int32) uVolts );
 762              		.loc 1 807 0
 763 001c 084B     		ldr	r3, .L67+12
 801:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 764              		.loc 1 801 0
 765 001e 041B     		subs	r4, r0, r4
 766              	.LVL51:
 767              		.loc 1 807 0
 768 0020 24B2     		sxth	r4, r4
 769 0022 A4FB0301 		umull	r0, r1, r4, r3
 770 0026 E517     		asrs	r5, r4, #31
 771 0028 03FB0511 		mla	r1, r3, r5, r1
 772 002c D317     		asrs	r3, r2, #31
 773 002e FFF7FEFF 		bl	__aeabi_ldivmod
 774              	.LVL52:
 808:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 775              		.loc 1 808 0
 776 0032 38BD     		pop	{r3, r4, r5, pc}
 777              	.LVL53:
 778              	.L68:
 779              		.align	2
 780              	.L67:
 781 0034 00000000 		.word	ADC_SAR_A_countsPerVolt
 782 0038 00000000 		.word	ADC_SAR_A_countsPer10Volt
 783 003c 00000000 		.word	ADC_SAR_A_offset
 784 0040 80969800 		.word	10000000
 785              		.cfi_endproc
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 30


 786              	.LFE16:
 787              		.size	ADC_SAR_A_CountsTo_uVolts, .-ADC_SAR_A_CountsTo_uVolts
 788              		.global	__aeabi_i2f
 789              		.global	__aeabi_fmul
 790              		.global	__aeabi_fdiv
 791              		.section	.text.ADC_SAR_A_CountsTo_Volts,"ax",%progbits
 792              		.align	1
 793              		.global	ADC_SAR_A_CountsTo_Volts
 794              		.thumb
 795              		.thumb_func
 796              		.type	ADC_SAR_A_CountsTo_Volts, %function
 797              	ADC_SAR_A_CountsTo_Volts:
 798              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_A.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_A.c **** * Function Name: ADC_SAR_A_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_A.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_A.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_A.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_A.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_A.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_A.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_A.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_A.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_A.c **** *  ADC_SAR_A_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_A.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_A.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_A.c **** float32 ADC_SAR_A_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_A.c **** {
 799              		.loc 1 830 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              	.LVL54:
 831:Generated_Source\PSoC5/ADC_SAR_A.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_A.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_A.c ****     if(ADC_SAR_A_countsPerVolt != 0)
 804              		.loc 1 834 0
 805 0000 0E4A     		ldr	r2, .L72
 830:Generated_Source\PSoC5/ADC_SAR_A.c ****     float32 volts;
 806              		.loc 1 830 0
 807 0002 38B5     		push	{r3, r4, r5, lr}
 808              		.cfi_def_cfa_offset 16
 809              		.cfi_offset 3, -16
 810              		.cfi_offset 4, -12
 811              		.cfi_offset 5, -8
 812              		.cfi_offset 14, -4
 813              		.loc 1 834 0
 814 0004 1388     		ldrh	r3, [r2]
 815 0006 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 31


 816 0008 23B1     		cbz	r3, .L70
 835:Generated_Source\PSoC5/ADC_SAR_A.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_A.c ****         countsPer10Volt = (int32)ADC_SAR_A_countsPerVolt * 10;
 817              		.loc 1 836 0
 818 000a 1488     		ldrh	r4, [r2]
 819 000c 0A23     		movs	r3, #10
 820 000e 24B2     		sxth	r4, r4
 821 0010 5C43     		muls	r4, r3, r4
 822              	.LVL55:
 823 0012 01E0     		b	.L71
 824              	.LVL56:
 825              	.L70:
 837:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR_A.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_A.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_A.c ****         countsPer10Volt = ADC_SAR_A_countsPer10Volt;
 826              		.loc 1 840 0
 827 0014 0A4B     		ldr	r3, .L72+4
 828 0016 1C68     		ldr	r4, [r3]
 829              	.LVL57:
 830              	.L71:
 841:Generated_Source\PSoC5/ADC_SAR_A.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_A.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_A.c ****     adcCounts -= ADC_SAR_A_offset;
 831              		.loc 1 844 0
 832 0018 0A4B     		ldr	r3, .L72+8
 833 001a 1B88     		ldrh	r3, [r3]
 834 001c C01A     		subs	r0, r0, r3
 835              	.LVL58:
 845:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 846:Generated_Source\PSoC5/ADC_SAR_A.c ****     volts = ((float32)adcCounts * ADC_SAR_A_10V_COUNTS) / (float32)countsPer10Volt;
 847:Generated_Source\PSoC5/ADC_SAR_A.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_A.c ****     return( volts );
 836              		.loc 1 848 0
 837 001e 00B2     		sxth	r0, r0
 838 0020 FFF7FEFF 		bl	__aeabi_i2f
 839              	.LVL59:
 840 0024 0849     		ldr	r1, .L72+12
 841 0026 FFF7FEFF 		bl	__aeabi_fmul
 842              	.LVL60:
 843 002a 0546     		mov	r5, r0
 844 002c 2046     		mov	r0, r4
 845 002e FFF7FEFF 		bl	__aeabi_i2f
 846              	.LVL61:
 847 0032 0146     		mov	r1, r0
 848 0034 2846     		mov	r0, r5
 849 0036 FFF7FEFF 		bl	__aeabi_fdiv
 850              	.LVL62:
 849:Generated_Source\PSoC5/ADC_SAR_A.c **** }
 851              		.loc 1 849 0
 852 003a 38BD     		pop	{r3, r4, r5, pc}
 853              	.LVL63:
 854              	.L73:
 855              		.align	2
 856              	.L72:
 857 003c 00000000 		.word	ADC_SAR_A_countsPerVolt
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 32


 858 0040 00000000 		.word	ADC_SAR_A_countsPer10Volt
 859 0044 00000000 		.word	ADC_SAR_A_offset
 860 0048 00002041 		.word	1092616192
 861              		.cfi_endproc
 862              	.LFE17:
 863              		.size	ADC_SAR_A_CountsTo_Volts, .-ADC_SAR_A_CountsTo_Volts
 864              		.comm	ADC_SAR_A_shift,2,2
 865              		.comm	ADC_SAR_A_countsPer10Volt,4,4
 866              		.comm	ADC_SAR_A_countsPerVolt,2,2
 867              		.comm	ADC_SAR_A_offset,2,2
 868              		.global	ADC_SAR_A_initVar
 869              		.section	.rodata
 870              		.align	1
 871              		.set	.LANCHOR0,. + 0
 872              		.type	CSWTCH.24, %object
 873              		.size	CSWTCH.24, 10
 874              	CSWTCH.24:
 875 0000 0001     		.short	256
 876 0002 0000     		.short	0
 877 0004 0004     		.short	1024
 878 0006 0000     		.short	0
 879 0008 0010     		.short	4096
 880              		.bss
 881              		.set	.LANCHOR1,. + 0
 882              		.type	ADC_SAR_A_initVar, %object
 883              		.size	ADC_SAR_A_initVar, 1
 884              	ADC_SAR_A_initVar:
 885 0000 00       		.space	1
 886              		.text
 887              	.Letext0:
 888              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 889              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 890              		.file 4 "Generated_Source\\PSoC5\\ADC_SAR_A_theACLK.h"
 891              		.section	.debug_info,"",%progbits
 892              	.Ldebug_info0:
 893 0000 93050000 		.4byte	0x593
 894 0004 0400     		.2byte	0x4
 895 0006 00000000 		.4byte	.Ldebug_abbrev0
 896 000a 04       		.byte	0x4
 897 000b 01       		.uleb128 0x1
 898 000c 7F000000 		.4byte	.LASF65
 899 0010 0C       		.byte	0xc
 900 0011 18040000 		.4byte	.LASF66
 901 0015 3F020000 		.4byte	.LASF67
 902 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 903 001d 00000000 		.4byte	0
 904 0021 00000000 		.4byte	.Ldebug_line0
 905 0025 02       		.uleb128 0x2
 906 0026 08       		.byte	0x8
 907 0027 07       		.byte	0x7
 908 0028 3E000000 		.4byte	.LASF0
 909 002c 02       		.uleb128 0x2
 910 002d 04       		.byte	0x4
 911 002e 04       		.byte	0x4
 912 002f EE020000 		.4byte	.LASF1
 913 0033 02       		.uleb128 0x2
 914 0034 08       		.byte	0x8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 33


 915 0035 05       		.byte	0x5
 916 0036 65000000 		.4byte	.LASF2
 917 003a 03       		.uleb128 0x3
 918 003b 04       		.byte	0x4
 919 003c 05       		.byte	0x5
 920 003d 696E7400 		.ascii	"int\000"
 921 0041 02       		.uleb128 0x2
 922 0042 02       		.byte	0x2
 923 0043 05       		.byte	0x5
 924 0044 BB030000 		.4byte	.LASF3
 925 0048 02       		.uleb128 0x2
 926 0049 04       		.byte	0x4
 927 004a 07       		.byte	0x7
 928 004b BB010000 		.4byte	.LASF4
 929 004f 02       		.uleb128 0x2
 930 0050 08       		.byte	0x8
 931 0051 04       		.byte	0x4
 932 0052 CB020000 		.4byte	.LASF5
 933 0056 02       		.uleb128 0x2
 934 0057 01       		.byte	0x1
 935 0058 06       		.byte	0x6
 936 0059 73000000 		.4byte	.LASF6
 937 005d 02       		.uleb128 0x2
 938 005e 01       		.byte	0x1
 939 005f 08       		.byte	0x8
 940 0060 78030000 		.4byte	.LASF7
 941 0064 02       		.uleb128 0x2
 942 0065 02       		.byte	0x2
 943 0066 07       		.byte	0x7
 944 0067 18020000 		.4byte	.LASF8
 945 006b 02       		.uleb128 0x2
 946 006c 04       		.byte	0x4
 947 006d 05       		.byte	0x5
 948 006e 29010000 		.4byte	.LASF9
 949 0072 02       		.uleb128 0x2
 950 0073 04       		.byte	0x4
 951 0074 07       		.byte	0x7
 952 0075 CF010000 		.4byte	.LASF10
 953 0079 02       		.uleb128 0x2
 954 007a 04       		.byte	0x4
 955 007b 07       		.byte	0x7
 956 007c C2020000 		.4byte	.LASF11
 957 0080 02       		.uleb128 0x2
 958 0081 01       		.byte	0x1
 959 0082 08       		.byte	0x8
 960 0083 D7030000 		.4byte	.LASF12
 961 0087 04       		.uleb128 0x4
 962 0088 38010000 		.4byte	.LASF13
 963 008c 02       		.byte	0x2
 964 008d 9201     		.2byte	0x192
 965 008f 5D000000 		.4byte	0x5d
 966 0093 04       		.uleb128 0x4
 967 0094 12000000 		.4byte	.LASF14
 968 0098 02       		.byte	0x2
 969 0099 9301     		.2byte	0x193
 970 009b 64000000 		.4byte	0x64
 971 009f 04       		.uleb128 0x4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 34


 972 00a0 7B010000 		.4byte	.LASF15
 973 00a4 02       		.byte	0x2
 974 00a5 9401     		.2byte	0x194
 975 00a7 72000000 		.4byte	0x72
 976 00ab 04       		.uleb128 0x4
 977 00ac 2B020000 		.4byte	.LASF16
 978 00b0 02       		.byte	0x2
 979 00b1 9501     		.2byte	0x195
 980 00b3 56000000 		.4byte	0x56
 981 00b7 04       		.uleb128 0x4
 982 00b8 62040000 		.4byte	.LASF17
 983 00bc 02       		.byte	0x2
 984 00bd 9601     		.2byte	0x196
 985 00bf 41000000 		.4byte	0x41
 986 00c3 04       		.uleb128 0x4
 987 00c4 0D010000 		.4byte	.LASF18
 988 00c8 02       		.byte	0x2
 989 00c9 9701     		.2byte	0x197
 990 00cb 6B000000 		.4byte	0x6b
 991 00cf 04       		.uleb128 0x4
 992 00d0 BA020000 		.4byte	.LASF19
 993 00d4 02       		.byte	0x2
 994 00d5 9801     		.2byte	0x198
 995 00d7 2C000000 		.4byte	0x2c
 996 00db 02       		.uleb128 0x2
 997 00dc 08       		.byte	0x8
 998 00dd 04       		.byte	0x4
 999 00de 48010000 		.4byte	.LASF20
 1000 00e2 04       		.uleb128 0x4
 1001 00e3 D7020000 		.4byte	.LASF21
 1002 00e7 02       		.byte	0x2
 1003 00e8 9D01     		.2byte	0x19d
 1004 00ea 33000000 		.4byte	0x33
 1005 00ee 04       		.uleb128 0x4
 1006 00ef 73030000 		.4byte	.LASF22
 1007 00f3 02       		.byte	0x2
 1008 00f4 3C02     		.2byte	0x23c
 1009 00f6 FA000000 		.4byte	0xfa
 1010 00fa 05       		.uleb128 0x5
 1011 00fb 87000000 		.4byte	0x87
 1012 00ff 04       		.uleb128 0x4
 1013 0100 32010000 		.4byte	.LASF23
 1014 0104 02       		.byte	0x2
 1015 0105 3D02     		.2byte	0x23d
 1016 0107 0B010000 		.4byte	0x10b
 1017 010b 05       		.uleb128 0x5
 1018 010c 93000000 		.4byte	0x93
 1019 0110 04       		.uleb128 0x4
 1020 0111 B4020000 		.4byte	.LASF24
 1021 0115 02       		.byte	0x2
 1022 0116 3E02     		.2byte	0x23e
 1023 0118 1C010000 		.4byte	0x11c
 1024 011c 05       		.uleb128 0x5
 1025 011d 9F000000 		.4byte	0x9f
 1026 0121 06       		.uleb128 0x6
 1027 0122 8A020000 		.4byte	.LASF27
 1028 0126 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 35


 1029 0127 8F       		.byte	0x8f
 1030 0128 00000000 		.4byte	.LFB2
 1031 012c 98000000 		.4byte	.LFE2-.LFB2
 1032 0130 01       		.uleb128 0x1
 1033 0131 9C       		.byte	0x9c
 1034 0132 7A010000 		.4byte	0x17a
 1035 0136 07       		.uleb128 0x7
 1036 0137 9E040000 		.4byte	.LASF25
 1037 013b 01       		.byte	0x1
 1038 013c 91       		.byte	0x91
 1039 013d 87000000 		.4byte	0x87
 1040 0141 00000000 		.4byte	.LLST0
 1041 0145 07       		.uleb128 0x7
 1042 0146 4A040000 		.4byte	.LASF26
 1043 014a 01       		.byte	0x1
 1044 014b 92       		.byte	0x92
 1045 014c 87000000 		.4byte	0x87
 1046 0150 2E000000 		.4byte	.LLST1
 1047 0154 08       		.uleb128 0x8
 1048 0155 06000000 		.4byte	.LVL0
 1049 0159 54050000 		.4byte	0x554
 1050 015d 09       		.uleb128 0x9
 1051 015e 78000000 		.4byte	.LVL6
 1052 0162 5F050000 		.4byte	0x55f
 1053 0166 70010000 		.4byte	0x170
 1054 016a 0A       		.uleb128 0xa
 1055 016b 01       		.uleb128 0x1
 1056 016c 50       		.byte	0x50
 1057 016d 01       		.uleb128 0x1
 1058 016e 3A       		.byte	0x3a
 1059 016f 00       		.byte	0
 1060 0170 0B       		.uleb128 0xb
 1061 0171 86000000 		.4byte	.LVL8
 1062 0175 6A050000 		.4byte	0x56a
 1063 0179 00       		.byte	0
 1064 017a 06       		.uleb128 0x6
 1065 017b 30020000 		.4byte	.LASF28
 1066 017f 01       		.byte	0x1
 1067 0180 F8       		.byte	0xf8
 1068 0181 00000000 		.4byte	.LFB3
 1069 0185 48000000 		.4byte	.LFE3-.LFB3
 1070 0189 01       		.uleb128 0x1
 1071 018a 9C       		.byte	0x9c
 1072 018b B1010000 		.4byte	0x1b1
 1073 018f 07       		.uleb128 0x7
 1074 0190 4A040000 		.4byte	.LASF26
 1075 0194 01       		.byte	0x1
 1076 0195 FA       		.byte	0xfa
 1077 0196 87000000 		.4byte	0x87
 1078 019a 41000000 		.4byte	.LLST2
 1079 019e 08       		.uleb128 0x8
 1080 019f 06000000 		.4byte	.LVL9
 1081 01a3 54050000 		.4byte	0x554
 1082 01a7 0B       		.uleb128 0xb
 1083 01a8 42000000 		.4byte	.LVL10
 1084 01ac 6A050000 		.4byte	0x56a
 1085 01b0 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 36


 1086 01b1 0C       		.uleb128 0xc
 1087 01b2 A8030000 		.4byte	.LASF29
 1088 01b6 01       		.byte	0x1
 1089 01b7 2201     		.2byte	0x122
 1090 01b9 00000000 		.4byte	.LFB4
 1091 01bd 18000000 		.4byte	.LFE4-.LFB4
 1092 01c1 01       		.uleb128 0x1
 1093 01c2 9C       		.byte	0x9c
 1094 01c3 E8010000 		.4byte	0x1e8
 1095 01c7 0D       		.uleb128 0xd
 1096 01c8 53030000 		.4byte	.LASF31
 1097 01cc 01       		.byte	0x1
 1098 01cd 2201     		.2byte	0x122
 1099 01cf 87000000 		.4byte	0x87
 1100 01d3 54000000 		.4byte	.LLST3
 1101 01d7 0E       		.uleb128 0xe
 1102 01d8 9E040000 		.4byte	.LASF25
 1103 01dc 01       		.byte	0x1
 1104 01dd 2401     		.2byte	0x124
 1105 01df 87000000 		.4byte	0x87
 1106 01e3 86000000 		.4byte	.LLST4
 1107 01e7 00       		.byte	0
 1108 01e8 0F       		.uleb128 0xf
 1109 01e9 F4030000 		.4byte	.LASF68
 1110 01ed 01       		.byte	0x1
 1111 01ee 6302     		.2byte	0x263
 1112 01f0 01       		.byte	0x1
 1113 01f1 0E020000 		.4byte	0x20e
 1114 01f5 10       		.uleb128 0x10
 1115 01f6 CC030000 		.4byte	.LASF32
 1116 01fa 01       		.byte	0x1
 1117 01fb 6302     		.2byte	0x263
 1118 01fd 87000000 		.4byte	0x87
 1119 0201 11       		.uleb128 0x11
 1120 0202 37000000 		.4byte	.LASF69
 1121 0206 01       		.byte	0x1
 1122 0207 6502     		.2byte	0x265
 1123 0209 C3000000 		.4byte	0xc3
 1124 020d 00       		.byte	0
 1125 020e 0C       		.uleb128 0xc
 1126 020f 3B030000 		.4byte	.LASF30
 1127 0213 01       		.byte	0x1
 1128 0214 5401     		.2byte	0x154
 1129 0216 00000000 		.4byte	.LFB5
 1130 021a 60000000 		.4byte	.LFE5-.LFB5
 1131 021e 01       		.uleb128 0x1
 1132 021f 9C       		.byte	0x9c
 1133 0220 6A020000 		.4byte	0x26a
 1134 0224 0D       		.uleb128 0xd
 1135 0225 CC030000 		.4byte	.LASF32
 1136 0229 01       		.byte	0x1
 1137 022a 5401     		.2byte	0x154
 1138 022c 87000000 		.4byte	0x87
 1139 0230 A4000000 		.4byte	.LLST5
 1140 0234 0E       		.uleb128 0xe
 1141 0235 9E040000 		.4byte	.LASF25
 1142 0239 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 37


 1143 023a 5601     		.2byte	0x156
 1144 023c 87000000 		.4byte	0x87
 1145 0240 C5000000 		.4byte	.LLST6
 1146 0244 12       		.uleb128 0x12
 1147 0245 E8010000 		.4byte	0x1e8
 1148 0249 28000000 		.4byte	.LBB4
 1149 024d 00000000 		.4byte	.Ldebug_ranges0+0
 1150 0251 01       		.byte	0x1
 1151 0252 6D01     		.2byte	0x16d
 1152 0254 13       		.uleb128 0x13
 1153 0255 F5010000 		.4byte	0x1f5
 1154 0259 14       		.uleb128 0x14
 1155 025a 00000000 		.4byte	.Ldebug_ranges0+0
 1156 025e 15       		.uleb128 0x15
 1157 025f 01020000 		.4byte	0x201
 1158 0263 DA000000 		.4byte	.LLST7
 1159 0267 00       		.byte	0
 1160 0268 00       		.byte	0
 1161 0269 00       		.byte	0
 1162 026a 06       		.uleb128 0x6
 1163 026b 3B040000 		.4byte	.LASF33
 1164 026f 01       		.byte	0x1
 1165 0270 6A       		.byte	0x6a
 1166 0271 00000000 		.4byte	.LFB1
 1167 0275 3C000000 		.4byte	.LFE1-.LFB1
 1168 0279 01       		.uleb128 0x1
 1169 027a 9C       		.byte	0x9c
 1170 027b CD020000 		.4byte	0x2cd
 1171 027f 09       		.uleb128 0x9
 1172 0280 08000000 		.4byte	.LVL22
 1173 0284 75050000 		.4byte	0x575
 1174 0288 92020000 		.4byte	0x292
 1175 028c 0A       		.uleb128 0xa
 1176 028d 01       		.uleb128 0x1
 1177 028e 50       		.byte	0x50
 1178 028f 01       		.uleb128 0x1
 1179 0290 40       		.byte	0x40
 1180 0291 00       		.byte	0
 1181 0292 09       		.uleb128 0x9
 1182 0293 10000000 		.4byte	.LVL23
 1183 0297 80050000 		.4byte	0x580
 1184 029b AA020000 		.4byte	0x2aa
 1185 029f 0A       		.uleb128 0xa
 1186 02a0 01       		.uleb128 0x1
 1187 02a1 50       		.byte	0x50
 1188 02a2 01       		.uleb128 0x1
 1189 02a3 32       		.byte	0x32
 1190 02a4 0A       		.uleb128 0xa
 1191 02a5 01       		.uleb128 0x1
 1192 02a6 51       		.byte	0x51
 1193 02a7 01       		.uleb128 0x1
 1194 02a8 37       		.byte	0x37
 1195 02a9 00       		.byte	0
 1196 02aa 09       		.uleb128 0x9
 1197 02ab 18000000 		.4byte	.LVL24
 1198 02af 8B050000 		.4byte	0x58b
 1199 02b3 BD020000 		.4byte	0x2bd
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 38


 1200 02b7 0A       		.uleb128 0xa
 1201 02b8 01       		.uleb128 0x1
 1202 02b9 50       		.byte	0x50
 1203 02ba 01       		.uleb128 0x1
 1204 02bb 32       		.byte	0x32
 1205 02bc 00       		.byte	0
 1206 02bd 16       		.uleb128 0x16
 1207 02be 28000000 		.4byte	.LVL25
 1208 02c2 0E020000 		.4byte	0x20e
 1209 02c6 0A       		.uleb128 0xa
 1210 02c7 01       		.uleb128 0x1
 1211 02c8 50       		.byte	0x50
 1212 02c9 01       		.uleb128 0x1
 1213 02ca 3C       		.byte	0x3c
 1214 02cb 00       		.byte	0
 1215 02cc 00       		.byte	0
 1216 02cd 06       		.uleb128 0x6
 1217 02ce 55000000 		.4byte	.LASF34
 1218 02d2 01       		.byte	0x1
 1219 02d3 4A       		.byte	0x4a
 1220 02d4 00000000 		.4byte	.LFB0
 1221 02d8 1C000000 		.4byte	.LFE0-.LFB0
 1222 02dc 01       		.uleb128 0x1
 1223 02dd 9C       		.byte	0x9c
 1224 02de F5020000 		.4byte	0x2f5
 1225 02e2 08       		.uleb128 0x8
 1226 02e3 0C000000 		.4byte	.LVL26
 1227 02e7 6A020000 		.4byte	0x26a
 1228 02eb 0B       		.uleb128 0xb
 1229 02ec 18000000 		.4byte	.LVL27
 1230 02f0 21010000 		.4byte	0x121
 1231 02f4 00       		.byte	0
 1232 02f5 17       		.uleb128 0x17
 1233 02f6 0E030000 		.4byte	.LASF35
 1234 02fa 01       		.byte	0x1
 1235 02fb 9101     		.2byte	0x191
 1236 02fd 00000000 		.4byte	.LFB6
 1237 0301 10000000 		.4byte	.LFE6-.LFB6
 1238 0305 01       		.uleb128 0x1
 1239 0306 9C       		.byte	0x9c
 1240 0307 17       		.uleb128 0x17
 1241 0308 25030000 		.4byte	.LASF36
 1242 030c 01       		.byte	0x1
 1243 030d B301     		.2byte	0x1b3
 1244 030f 00000000 		.4byte	.LFB7
 1245 0313 10000000 		.4byte	.LFE7-.LFB7
 1246 0317 01       		.uleb128 0x1
 1247 0318 9C       		.byte	0x9c
 1248 0319 18       		.uleb128 0x18
 1249 031a F4020000 		.4byte	.LASF39
 1250 031e 01       		.byte	0x1
 1251 031f DB01     		.2byte	0x1db
 1252 0321 87000000 		.4byte	0x87
 1253 0325 00000000 		.4byte	.LFB8
 1254 0329 28000000 		.4byte	.LFE8-.LFB8
 1255 032d 01       		.uleb128 0x1
 1256 032e 9C       		.byte	0x9c
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 39


 1257 032f 64030000 		.4byte	0x364
 1258 0333 0D       		.uleb128 0xd
 1259 0334 B3010000 		.4byte	.LASF37
 1260 0338 01       		.byte	0x1
 1261 0339 DB01     		.2byte	0x1db
 1262 033b 87000000 		.4byte	0x87
 1263 033f ED000000 		.4byte	.LLST8
 1264 0343 0E       		.uleb128 0xe
 1265 0344 5B040000 		.4byte	.LASF38
 1266 0348 01       		.byte	0x1
 1267 0349 DD01     		.2byte	0x1dd
 1268 034b 87000000 		.4byte	0x87
 1269 034f 0E010000 		.4byte	.LLST9
 1270 0353 16       		.uleb128 0x16
 1271 0354 1A000000 		.4byte	.LVL32
 1272 0358 5F050000 		.4byte	0x55f
 1273 035c 0A       		.uleb128 0xa
 1274 035d 01       		.uleb128 0x1
 1275 035e 50       		.byte	0x50
 1276 035f 02       		.uleb128 0x2
 1277 0360 74       		.byte	0x74
 1278 0361 00       		.sleb128 0
 1279 0362 00       		.byte	0
 1280 0363 00       		.byte	0
 1281 0364 19       		.uleb128 0x19
 1282 0365 78040000 		.4byte	.LASF70
 1283 0369 01       		.byte	0x1
 1284 036a 0802     		.2byte	0x208
 1285 036c AB000000 		.4byte	0xab
 1286 0370 00000000 		.4byte	.LFB9
 1287 0374 18000000 		.4byte	.LFE9-.LFB9
 1288 0378 01       		.uleb128 0x1
 1289 0379 9C       		.byte	0x9c
 1290 037a 18       		.uleb128 0x18
 1291 037b 13010000 		.4byte	.LASF40
 1292 037f 01       		.byte	0x1
 1293 0380 2602     		.2byte	0x226
 1294 0382 B7000000 		.4byte	0xb7
 1295 0386 00000000 		.4byte	.LFB10
 1296 038a 18000000 		.4byte	.LFE10-.LFB10
 1297 038e 01       		.uleb128 0x1
 1298 038f 9C       		.byte	0x9c
 1299 0390 A3030000 		.4byte	0x3a3
 1300 0394 1A       		.uleb128 0x1a
 1301 0395 72657300 		.ascii	"res\000"
 1302 0399 01       		.byte	0x1
 1303 039a 2802     		.2byte	0x228
 1304 039c 93000000 		.4byte	0x93
 1305 03a0 01       		.uleb128 0x1
 1306 03a1 53       		.byte	0x53
 1307 03a2 00       		.byte	0
 1308 03a3 0C       		.uleb128 0xc
 1309 03a4 67010000 		.4byte	.LASF41
 1310 03a8 01       		.byte	0x1
 1311 03a9 4902     		.2byte	0x249
 1312 03ab 00000000 		.4byte	.LFB11
 1313 03af 0C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 40


 1314 03b3 01       		.uleb128 0x1
 1315 03b4 9C       		.byte	0x9c
 1316 03b5 C8030000 		.4byte	0x3c8
 1317 03b9 1B       		.uleb128 0x1b
 1318 03ba 07040000 		.4byte	.LASF42
 1319 03be 01       		.byte	0x1
 1320 03bf 4902     		.2byte	0x249
 1321 03c1 B7000000 		.4byte	0xb7
 1322 03c5 01       		.uleb128 0x1
 1323 03c6 50       		.byte	0x50
 1324 03c7 00       		.byte	0
 1325 03c8 0C       		.uleb128 0xc
 1326 03c9 A1010000 		.4byte	.LASF43
 1327 03cd 01       		.byte	0x1
 1328 03ce B402     		.2byte	0x2b4
 1329 03d0 00000000 		.4byte	.LFB13
 1330 03d4 10000000 		.4byte	.LFE13-.LFB13
 1331 03d8 01       		.uleb128 0x1
 1332 03d9 9C       		.byte	0x9c
 1333 03da EF030000 		.4byte	0x3ef
 1334 03de 0D       		.uleb128 0xd
 1335 03df 19000000 		.4byte	.LASF44
 1336 03e3 01       		.byte	0x1
 1337 03e4 B402     		.2byte	0x2b4
 1338 03e6 B7000000 		.4byte	0xb7
 1339 03ea 25010000 		.4byte	.LLST10
 1340 03ee 00       		.byte	0
 1341 03ef 0C       		.uleb128 0xc
 1342 03f0 DC030000 		.4byte	.LASF45
 1343 03f4 01       		.byte	0x1
 1344 03f5 CF02     		.2byte	0x2cf
 1345 03f7 00000000 		.4byte	.LFB14
 1346 03fb 0C000000 		.4byte	.LFE14-.LFB14
 1347 03ff 01       		.uleb128 0x1
 1348 0400 9C       		.byte	0x9c
 1349 0401 14040000 		.4byte	0x414
 1350 0405 1B       		.uleb128 0x1b
 1351 0406 19000000 		.4byte	.LASF44
 1352 040a 01       		.byte	0x1
 1353 040b CF02     		.2byte	0x2cf
 1354 040d C3000000 		.4byte	0xc3
 1355 0411 01       		.uleb128 0x1
 1356 0412 50       		.byte	0x50
 1357 0413 00       		.byte	0
 1358 0414 18       		.uleb128 0x18
 1359 0415 FE010000 		.4byte	.LASF46
 1360 0419 01       		.byte	0x1
 1361 041a E702     		.2byte	0x2e7
 1362 041c B7000000 		.4byte	0xb7
 1363 0420 00000000 		.4byte	.LFB15
 1364 0424 48000000 		.4byte	.LFE15-.LFB15
 1365 0428 01       		.uleb128 0x1
 1366 0429 9C       		.byte	0x9c
 1367 042a 5F040000 		.4byte	0x45f
 1368 042e 0D       		.uleb128 0xd
 1369 042f 0E040000 		.4byte	.LASF47
 1370 0433 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 41


 1371 0434 E702     		.2byte	0x2e7
 1372 0436 B7000000 		.4byte	0xb7
 1373 043a 46010000 		.4byte	.LLST11
 1374 043e 0E       		.uleb128 0xe
 1375 043f C5030000 		.4byte	.LASF48
 1376 0443 01       		.byte	0x1
 1377 0444 E902     		.2byte	0x2e9
 1378 0446 B7000000 		.4byte	0xb7
 1379 044a 72010000 		.4byte	.LLST12
 1380 044e 0E       		.uleb128 0xe
 1381 044f 82010000 		.4byte	.LASF49
 1382 0453 01       		.byte	0x1
 1383 0454 EA02     		.2byte	0x2ea
 1384 0456 C3000000 		.4byte	0xc3
 1385 045a 8D010000 		.4byte	.LLST13
 1386 045e 00       		.byte	0
 1387 045f 1C       		.uleb128 0x1c
 1388 0460 A5040000 		.4byte	.LASF50
 1389 0464 01       		.byte	0x1
 1390 0465 1103     		.2byte	0x311
 1391 0467 C3000000 		.4byte	0xc3
 1392 046b 00000000 		.4byte	.LFB16
 1393 046f 44000000 		.4byte	.LFE16-.LFB16
 1394 0473 01       		.uleb128 0x1
 1395 0474 9C       		.byte	0x9c
 1396 0475 AA040000 		.4byte	0x4aa
 1397 0479 0D       		.uleb128 0xd
 1398 047a 0E040000 		.4byte	.LASF47
 1399 047e 01       		.byte	0x1
 1400 047f 1103     		.2byte	0x311
 1401 0481 B7000000 		.4byte	0xb7
 1402 0485 AB010000 		.4byte	.LLST14
 1403 0489 0E       		.uleb128 0xe
 1404 048a C8010000 		.4byte	.LASF51
 1405 048e 01       		.byte	0x1
 1406 048f 1403     		.2byte	0x314
 1407 0491 E2000000 		.4byte	0xe2
 1408 0495 C9010000 		.4byte	.LLST15
 1409 0499 0E       		.uleb128 0xe
 1410 049a 82010000 		.4byte	.LASF49
 1411 049e 01       		.byte	0x1
 1412 049f 1503     		.2byte	0x315
 1413 04a1 C3000000 		.4byte	0xc3
 1414 04a5 F5010000 		.4byte	.LLST16
 1415 04a9 00       		.byte	0
 1416 04aa 1C       		.uleb128 0x1c
 1417 04ab 9B020000 		.4byte	.LASF52
 1418 04af 01       		.byte	0x1
 1419 04b0 3D03     		.2byte	0x33d
 1420 04b2 CF000000 		.4byte	0xcf
 1421 04b6 00000000 		.4byte	.LFB17
 1422 04ba 4C000000 		.4byte	.LFE17-.LFB17
 1423 04be 01       		.uleb128 0x1
 1424 04bf 9C       		.byte	0x9c
 1425 04c0 F5040000 		.4byte	0x4f5
 1426 04c4 0D       		.uleb128 0xd
 1427 04c5 0E040000 		.4byte	.LASF47
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 42


 1428 04c9 01       		.byte	0x1
 1429 04ca 3D03     		.2byte	0x33d
 1430 04cc B7000000 		.4byte	0xb7
 1431 04d0 13020000 		.4byte	.LLST17
 1432 04d4 0E       		.uleb128 0xe
 1433 04d5 E1010000 		.4byte	.LASF53
 1434 04d9 01       		.byte	0x1
 1435 04da 3F03     		.2byte	0x33f
 1436 04dc CF000000 		.4byte	0xcf
 1437 04e0 31020000 		.4byte	.LLST18
 1438 04e4 0E       		.uleb128 0xe
 1439 04e5 82010000 		.4byte	.LASF49
 1440 04e9 01       		.byte	0x1
 1441 04ea 4003     		.2byte	0x340
 1442 04ec C3000000 		.4byte	0xc3
 1443 04f0 59020000 		.4byte	.LLST19
 1444 04f4 00       		.byte	0
 1445 04f5 1D       		.uleb128 0x1d
 1446 04f6 00000000 		.4byte	.LASF54
 1447 04fa 01       		.byte	0x1
 1448 04fb 23       		.byte	0x23
 1449 04fc 87000000 		.4byte	0x87
 1450 0500 05       		.uleb128 0x5
 1451 0501 03       		.byte	0x3
 1452 0502 00000000 		.4byte	ADC_SAR_A_initVar
 1453 0506 1D       		.uleb128 0x1d
 1454 0507 8D040000 		.4byte	.LASF55
 1455 050b 01       		.byte	0x1
 1456 050c 24       		.byte	0x24
 1457 050d 17050000 		.4byte	0x517
 1458 0511 05       		.uleb128 0x5
 1459 0512 03       		.byte	0x3
 1460 0513 00000000 		.4byte	ADC_SAR_A_offset
 1461 0517 05       		.uleb128 0x5
 1462 0518 B7000000 		.4byte	0xb7
 1463 051c 1D       		.uleb128 0x1d
 1464 051d 4F010000 		.4byte	.LASF56
 1465 0521 01       		.byte	0x1
 1466 0522 25       		.byte	0x25
 1467 0523 17050000 		.4byte	0x517
 1468 0527 05       		.uleb128 0x5
 1469 0528 03       		.byte	0x3
 1470 0529 00000000 		.4byte	ADC_SAR_A_countsPerVolt
 1471 052d 1D       		.uleb128 0x1d
 1472 052e 59030000 		.4byte	.LASF57
 1473 0532 01       		.byte	0x1
 1474 0533 26       		.byte	0x26
 1475 0534 3E050000 		.4byte	0x53e
 1476 0538 05       		.uleb128 0x5
 1477 0539 03       		.byte	0x3
 1478 053a 00000000 		.4byte	ADC_SAR_A_countsPer10Volt
 1479 053e 05       		.uleb128 0x5
 1480 053f C3000000 		.4byte	0xc3
 1481 0543 1D       		.uleb128 0x1d
 1482 0544 68040000 		.4byte	.LASF58
 1483 0548 01       		.byte	0x1
 1484 0549 27       		.byte	0x27
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 43


 1485 054a 17050000 		.4byte	0x517
 1486 054e 05       		.uleb128 0x5
 1487 054f 03       		.byte	0x3
 1488 0550 00000000 		.4byte	ADC_SAR_A_shift
 1489 0554 1E       		.uleb128 0x1e
 1490 0555 E7010000 		.4byte	.LASF59
 1491 0559 E7010000 		.4byte	.LASF59
 1492 055d 03       		.byte	0x3
 1493 055e 7D       		.byte	0x7d
 1494 055f 1E       		.uleb128 0x1e
 1495 0560 3E010000 		.4byte	.LASF60
 1496 0564 3E010000 		.4byte	.LASF60
 1497 0568 03       		.byte	0x3
 1498 0569 77       		.byte	0x77
 1499 056a 1E       		.uleb128 0x1e
 1500 056b 21000000 		.4byte	.LASF61
 1501 056f 21000000 		.4byte	.LASF61
 1502 0573 03       		.byte	0x3
 1503 0574 7E       		.byte	0x7e
 1504 0575 1E       		.uleb128 0x1e
 1505 0576 86030000 		.4byte	.LASF62
 1506 057a 86030000 		.4byte	.LASF62
 1507 057e 04       		.byte	0x4
 1508 057f 32       		.byte	0x32
 1509 0580 1E       		.uleb128 0x1e
 1510 0581 DD020000 		.4byte	.LASF63
 1511 0585 DD020000 		.4byte	.LASF63
 1512 0589 03       		.byte	0x3
 1513 058a 8B       		.byte	0x8b
 1514 058b 1E       		.uleb128 0x1e
 1515 058c 92010000 		.4byte	.LASF64
 1516 0590 92010000 		.4byte	.LASF64
 1517 0594 03       		.byte	0x3
 1518 0595 88       		.byte	0x88
 1519 0596 00       		.byte	0
 1520              		.section	.debug_abbrev,"",%progbits
 1521              	.Ldebug_abbrev0:
 1522 0000 01       		.uleb128 0x1
 1523 0001 11       		.uleb128 0x11
 1524 0002 01       		.byte	0x1
 1525 0003 25       		.uleb128 0x25
 1526 0004 0E       		.uleb128 0xe
 1527 0005 13       		.uleb128 0x13
 1528 0006 0B       		.uleb128 0xb
 1529 0007 03       		.uleb128 0x3
 1530 0008 0E       		.uleb128 0xe
 1531 0009 1B       		.uleb128 0x1b
 1532 000a 0E       		.uleb128 0xe
 1533 000b 55       		.uleb128 0x55
 1534 000c 17       		.uleb128 0x17
 1535 000d 11       		.uleb128 0x11
 1536 000e 01       		.uleb128 0x1
 1537 000f 10       		.uleb128 0x10
 1538 0010 17       		.uleb128 0x17
 1539 0011 00       		.byte	0
 1540 0012 00       		.byte	0
 1541 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 44


 1542 0014 24       		.uleb128 0x24
 1543 0015 00       		.byte	0
 1544 0016 0B       		.uleb128 0xb
 1545 0017 0B       		.uleb128 0xb
 1546 0018 3E       		.uleb128 0x3e
 1547 0019 0B       		.uleb128 0xb
 1548 001a 03       		.uleb128 0x3
 1549 001b 0E       		.uleb128 0xe
 1550 001c 00       		.byte	0
 1551 001d 00       		.byte	0
 1552 001e 03       		.uleb128 0x3
 1553 001f 24       		.uleb128 0x24
 1554 0020 00       		.byte	0
 1555 0021 0B       		.uleb128 0xb
 1556 0022 0B       		.uleb128 0xb
 1557 0023 3E       		.uleb128 0x3e
 1558 0024 0B       		.uleb128 0xb
 1559 0025 03       		.uleb128 0x3
 1560 0026 08       		.uleb128 0x8
 1561 0027 00       		.byte	0
 1562 0028 00       		.byte	0
 1563 0029 04       		.uleb128 0x4
 1564 002a 16       		.uleb128 0x16
 1565 002b 00       		.byte	0
 1566 002c 03       		.uleb128 0x3
 1567 002d 0E       		.uleb128 0xe
 1568 002e 3A       		.uleb128 0x3a
 1569 002f 0B       		.uleb128 0xb
 1570 0030 3B       		.uleb128 0x3b
 1571 0031 05       		.uleb128 0x5
 1572 0032 49       		.uleb128 0x49
 1573 0033 13       		.uleb128 0x13
 1574 0034 00       		.byte	0
 1575 0035 00       		.byte	0
 1576 0036 05       		.uleb128 0x5
 1577 0037 35       		.uleb128 0x35
 1578 0038 00       		.byte	0
 1579 0039 49       		.uleb128 0x49
 1580 003a 13       		.uleb128 0x13
 1581 003b 00       		.byte	0
 1582 003c 00       		.byte	0
 1583 003d 06       		.uleb128 0x6
 1584 003e 2E       		.uleb128 0x2e
 1585 003f 01       		.byte	0x1
 1586 0040 3F       		.uleb128 0x3f
 1587 0041 19       		.uleb128 0x19
 1588 0042 03       		.uleb128 0x3
 1589 0043 0E       		.uleb128 0xe
 1590 0044 3A       		.uleb128 0x3a
 1591 0045 0B       		.uleb128 0xb
 1592 0046 3B       		.uleb128 0x3b
 1593 0047 0B       		.uleb128 0xb
 1594 0048 27       		.uleb128 0x27
 1595 0049 19       		.uleb128 0x19
 1596 004a 11       		.uleb128 0x11
 1597 004b 01       		.uleb128 0x1
 1598 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 45


 1599 004d 06       		.uleb128 0x6
 1600 004e 40       		.uleb128 0x40
 1601 004f 18       		.uleb128 0x18
 1602 0050 9742     		.uleb128 0x2117
 1603 0052 19       		.uleb128 0x19
 1604 0053 01       		.uleb128 0x1
 1605 0054 13       		.uleb128 0x13
 1606 0055 00       		.byte	0
 1607 0056 00       		.byte	0
 1608 0057 07       		.uleb128 0x7
 1609 0058 34       		.uleb128 0x34
 1610 0059 00       		.byte	0
 1611 005a 03       		.uleb128 0x3
 1612 005b 0E       		.uleb128 0xe
 1613 005c 3A       		.uleb128 0x3a
 1614 005d 0B       		.uleb128 0xb
 1615 005e 3B       		.uleb128 0x3b
 1616 005f 0B       		.uleb128 0xb
 1617 0060 49       		.uleb128 0x49
 1618 0061 13       		.uleb128 0x13
 1619 0062 02       		.uleb128 0x2
 1620 0063 17       		.uleb128 0x17
 1621 0064 00       		.byte	0
 1622 0065 00       		.byte	0
 1623 0066 08       		.uleb128 0x8
 1624 0067 898201   		.uleb128 0x4109
 1625 006a 00       		.byte	0
 1626 006b 11       		.uleb128 0x11
 1627 006c 01       		.uleb128 0x1
 1628 006d 31       		.uleb128 0x31
 1629 006e 13       		.uleb128 0x13
 1630 006f 00       		.byte	0
 1631 0070 00       		.byte	0
 1632 0071 09       		.uleb128 0x9
 1633 0072 898201   		.uleb128 0x4109
 1634 0075 01       		.byte	0x1
 1635 0076 11       		.uleb128 0x11
 1636 0077 01       		.uleb128 0x1
 1637 0078 31       		.uleb128 0x31
 1638 0079 13       		.uleb128 0x13
 1639 007a 01       		.uleb128 0x1
 1640 007b 13       		.uleb128 0x13
 1641 007c 00       		.byte	0
 1642 007d 00       		.byte	0
 1643 007e 0A       		.uleb128 0xa
 1644 007f 8A8201   		.uleb128 0x410a
 1645 0082 00       		.byte	0
 1646 0083 02       		.uleb128 0x2
 1647 0084 18       		.uleb128 0x18
 1648 0085 9142     		.uleb128 0x2111
 1649 0087 18       		.uleb128 0x18
 1650 0088 00       		.byte	0
 1651 0089 00       		.byte	0
 1652 008a 0B       		.uleb128 0xb
 1653 008b 898201   		.uleb128 0x4109
 1654 008e 00       		.byte	0
 1655 008f 11       		.uleb128 0x11
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 46


 1656 0090 01       		.uleb128 0x1
 1657 0091 9542     		.uleb128 0x2115
 1658 0093 19       		.uleb128 0x19
 1659 0094 31       		.uleb128 0x31
 1660 0095 13       		.uleb128 0x13
 1661 0096 00       		.byte	0
 1662 0097 00       		.byte	0
 1663 0098 0C       		.uleb128 0xc
 1664 0099 2E       		.uleb128 0x2e
 1665 009a 01       		.byte	0x1
 1666 009b 3F       		.uleb128 0x3f
 1667 009c 19       		.uleb128 0x19
 1668 009d 03       		.uleb128 0x3
 1669 009e 0E       		.uleb128 0xe
 1670 009f 3A       		.uleb128 0x3a
 1671 00a0 0B       		.uleb128 0xb
 1672 00a1 3B       		.uleb128 0x3b
 1673 00a2 05       		.uleb128 0x5
 1674 00a3 27       		.uleb128 0x27
 1675 00a4 19       		.uleb128 0x19
 1676 00a5 11       		.uleb128 0x11
 1677 00a6 01       		.uleb128 0x1
 1678 00a7 12       		.uleb128 0x12
 1679 00a8 06       		.uleb128 0x6
 1680 00a9 40       		.uleb128 0x40
 1681 00aa 18       		.uleb128 0x18
 1682 00ab 9742     		.uleb128 0x2117
 1683 00ad 19       		.uleb128 0x19
 1684 00ae 01       		.uleb128 0x1
 1685 00af 13       		.uleb128 0x13
 1686 00b0 00       		.byte	0
 1687 00b1 00       		.byte	0
 1688 00b2 0D       		.uleb128 0xd
 1689 00b3 05       		.uleb128 0x5
 1690 00b4 00       		.byte	0
 1691 00b5 03       		.uleb128 0x3
 1692 00b6 0E       		.uleb128 0xe
 1693 00b7 3A       		.uleb128 0x3a
 1694 00b8 0B       		.uleb128 0xb
 1695 00b9 3B       		.uleb128 0x3b
 1696 00ba 05       		.uleb128 0x5
 1697 00bb 49       		.uleb128 0x49
 1698 00bc 13       		.uleb128 0x13
 1699 00bd 02       		.uleb128 0x2
 1700 00be 17       		.uleb128 0x17
 1701 00bf 00       		.byte	0
 1702 00c0 00       		.byte	0
 1703 00c1 0E       		.uleb128 0xe
 1704 00c2 34       		.uleb128 0x34
 1705 00c3 00       		.byte	0
 1706 00c4 03       		.uleb128 0x3
 1707 00c5 0E       		.uleb128 0xe
 1708 00c6 3A       		.uleb128 0x3a
 1709 00c7 0B       		.uleb128 0xb
 1710 00c8 3B       		.uleb128 0x3b
 1711 00c9 05       		.uleb128 0x5
 1712 00ca 49       		.uleb128 0x49
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 47


 1713 00cb 13       		.uleb128 0x13
 1714 00cc 02       		.uleb128 0x2
 1715 00cd 17       		.uleb128 0x17
 1716 00ce 00       		.byte	0
 1717 00cf 00       		.byte	0
 1718 00d0 0F       		.uleb128 0xf
 1719 00d1 2E       		.uleb128 0x2e
 1720 00d2 01       		.byte	0x1
 1721 00d3 03       		.uleb128 0x3
 1722 00d4 0E       		.uleb128 0xe
 1723 00d5 3A       		.uleb128 0x3a
 1724 00d6 0B       		.uleb128 0xb
 1725 00d7 3B       		.uleb128 0x3b
 1726 00d8 05       		.uleb128 0x5
 1727 00d9 27       		.uleb128 0x27
 1728 00da 19       		.uleb128 0x19
 1729 00db 20       		.uleb128 0x20
 1730 00dc 0B       		.uleb128 0xb
 1731 00dd 01       		.uleb128 0x1
 1732 00de 13       		.uleb128 0x13
 1733 00df 00       		.byte	0
 1734 00e0 00       		.byte	0
 1735 00e1 10       		.uleb128 0x10
 1736 00e2 05       		.uleb128 0x5
 1737 00e3 00       		.byte	0
 1738 00e4 03       		.uleb128 0x3
 1739 00e5 0E       		.uleb128 0xe
 1740 00e6 3A       		.uleb128 0x3a
 1741 00e7 0B       		.uleb128 0xb
 1742 00e8 3B       		.uleb128 0x3b
 1743 00e9 05       		.uleb128 0x5
 1744 00ea 49       		.uleb128 0x49
 1745 00eb 13       		.uleb128 0x13
 1746 00ec 00       		.byte	0
 1747 00ed 00       		.byte	0
 1748 00ee 11       		.uleb128 0x11
 1749 00ef 34       		.uleb128 0x34
 1750 00f0 00       		.byte	0
 1751 00f1 03       		.uleb128 0x3
 1752 00f2 0E       		.uleb128 0xe
 1753 00f3 3A       		.uleb128 0x3a
 1754 00f4 0B       		.uleb128 0xb
 1755 00f5 3B       		.uleb128 0x3b
 1756 00f6 05       		.uleb128 0x5
 1757 00f7 49       		.uleb128 0x49
 1758 00f8 13       		.uleb128 0x13
 1759 00f9 00       		.byte	0
 1760 00fa 00       		.byte	0
 1761 00fb 12       		.uleb128 0x12
 1762 00fc 1D       		.uleb128 0x1d
 1763 00fd 01       		.byte	0x1
 1764 00fe 31       		.uleb128 0x31
 1765 00ff 13       		.uleb128 0x13
 1766 0100 52       		.uleb128 0x52
 1767 0101 01       		.uleb128 0x1
 1768 0102 55       		.uleb128 0x55
 1769 0103 17       		.uleb128 0x17
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 48


 1770 0104 58       		.uleb128 0x58
 1771 0105 0B       		.uleb128 0xb
 1772 0106 59       		.uleb128 0x59
 1773 0107 05       		.uleb128 0x5
 1774 0108 00       		.byte	0
 1775 0109 00       		.byte	0
 1776 010a 13       		.uleb128 0x13
 1777 010b 05       		.uleb128 0x5
 1778 010c 00       		.byte	0
 1779 010d 31       		.uleb128 0x31
 1780 010e 13       		.uleb128 0x13
 1781 010f 00       		.byte	0
 1782 0110 00       		.byte	0
 1783 0111 14       		.uleb128 0x14
 1784 0112 0B       		.uleb128 0xb
 1785 0113 01       		.byte	0x1
 1786 0114 55       		.uleb128 0x55
 1787 0115 17       		.uleb128 0x17
 1788 0116 00       		.byte	0
 1789 0117 00       		.byte	0
 1790 0118 15       		.uleb128 0x15
 1791 0119 34       		.uleb128 0x34
 1792 011a 00       		.byte	0
 1793 011b 31       		.uleb128 0x31
 1794 011c 13       		.uleb128 0x13
 1795 011d 02       		.uleb128 0x2
 1796 011e 17       		.uleb128 0x17
 1797 011f 00       		.byte	0
 1798 0120 00       		.byte	0
 1799 0121 16       		.uleb128 0x16
 1800 0122 898201   		.uleb128 0x4109
 1801 0125 01       		.byte	0x1
 1802 0126 11       		.uleb128 0x11
 1803 0127 01       		.uleb128 0x1
 1804 0128 31       		.uleb128 0x31
 1805 0129 13       		.uleb128 0x13
 1806 012a 00       		.byte	0
 1807 012b 00       		.byte	0
 1808 012c 17       		.uleb128 0x17
 1809 012d 2E       		.uleb128 0x2e
 1810 012e 00       		.byte	0
 1811 012f 3F       		.uleb128 0x3f
 1812 0130 19       		.uleb128 0x19
 1813 0131 03       		.uleb128 0x3
 1814 0132 0E       		.uleb128 0xe
 1815 0133 3A       		.uleb128 0x3a
 1816 0134 0B       		.uleb128 0xb
 1817 0135 3B       		.uleb128 0x3b
 1818 0136 05       		.uleb128 0x5
 1819 0137 27       		.uleb128 0x27
 1820 0138 19       		.uleb128 0x19
 1821 0139 11       		.uleb128 0x11
 1822 013a 01       		.uleb128 0x1
 1823 013b 12       		.uleb128 0x12
 1824 013c 06       		.uleb128 0x6
 1825 013d 40       		.uleb128 0x40
 1826 013e 18       		.uleb128 0x18
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 49


 1827 013f 9742     		.uleb128 0x2117
 1828 0141 19       		.uleb128 0x19
 1829 0142 00       		.byte	0
 1830 0143 00       		.byte	0
 1831 0144 18       		.uleb128 0x18
 1832 0145 2E       		.uleb128 0x2e
 1833 0146 01       		.byte	0x1
 1834 0147 3F       		.uleb128 0x3f
 1835 0148 19       		.uleb128 0x19
 1836 0149 03       		.uleb128 0x3
 1837 014a 0E       		.uleb128 0xe
 1838 014b 3A       		.uleb128 0x3a
 1839 014c 0B       		.uleb128 0xb
 1840 014d 3B       		.uleb128 0x3b
 1841 014e 05       		.uleb128 0x5
 1842 014f 27       		.uleb128 0x27
 1843 0150 19       		.uleb128 0x19
 1844 0151 49       		.uleb128 0x49
 1845 0152 13       		.uleb128 0x13
 1846 0153 11       		.uleb128 0x11
 1847 0154 01       		.uleb128 0x1
 1848 0155 12       		.uleb128 0x12
 1849 0156 06       		.uleb128 0x6
 1850 0157 40       		.uleb128 0x40
 1851 0158 18       		.uleb128 0x18
 1852 0159 9742     		.uleb128 0x2117
 1853 015b 19       		.uleb128 0x19
 1854 015c 01       		.uleb128 0x1
 1855 015d 13       		.uleb128 0x13
 1856 015e 00       		.byte	0
 1857 015f 00       		.byte	0
 1858 0160 19       		.uleb128 0x19
 1859 0161 2E       		.uleb128 0x2e
 1860 0162 00       		.byte	0
 1861 0163 3F       		.uleb128 0x3f
 1862 0164 19       		.uleb128 0x19
 1863 0165 03       		.uleb128 0x3
 1864 0166 0E       		.uleb128 0xe
 1865 0167 3A       		.uleb128 0x3a
 1866 0168 0B       		.uleb128 0xb
 1867 0169 3B       		.uleb128 0x3b
 1868 016a 05       		.uleb128 0x5
 1869 016b 27       		.uleb128 0x27
 1870 016c 19       		.uleb128 0x19
 1871 016d 49       		.uleb128 0x49
 1872 016e 13       		.uleb128 0x13
 1873 016f 11       		.uleb128 0x11
 1874 0170 01       		.uleb128 0x1
 1875 0171 12       		.uleb128 0x12
 1876 0172 06       		.uleb128 0x6
 1877 0173 40       		.uleb128 0x40
 1878 0174 18       		.uleb128 0x18
 1879 0175 9742     		.uleb128 0x2117
 1880 0177 19       		.uleb128 0x19
 1881 0178 00       		.byte	0
 1882 0179 00       		.byte	0
 1883 017a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 50


 1884 017b 34       		.uleb128 0x34
 1885 017c 00       		.byte	0
 1886 017d 03       		.uleb128 0x3
 1887 017e 08       		.uleb128 0x8
 1888 017f 3A       		.uleb128 0x3a
 1889 0180 0B       		.uleb128 0xb
 1890 0181 3B       		.uleb128 0x3b
 1891 0182 05       		.uleb128 0x5
 1892 0183 49       		.uleb128 0x49
 1893 0184 13       		.uleb128 0x13
 1894 0185 02       		.uleb128 0x2
 1895 0186 18       		.uleb128 0x18
 1896 0187 00       		.byte	0
 1897 0188 00       		.byte	0
 1898 0189 1B       		.uleb128 0x1b
 1899 018a 05       		.uleb128 0x5
 1900 018b 00       		.byte	0
 1901 018c 03       		.uleb128 0x3
 1902 018d 0E       		.uleb128 0xe
 1903 018e 3A       		.uleb128 0x3a
 1904 018f 0B       		.uleb128 0xb
 1905 0190 3B       		.uleb128 0x3b
 1906 0191 05       		.uleb128 0x5
 1907 0192 49       		.uleb128 0x49
 1908 0193 13       		.uleb128 0x13
 1909 0194 02       		.uleb128 0x2
 1910 0195 18       		.uleb128 0x18
 1911 0196 00       		.byte	0
 1912 0197 00       		.byte	0
 1913 0198 1C       		.uleb128 0x1c
 1914 0199 2E       		.uleb128 0x2e
 1915 019a 01       		.byte	0x1
 1916 019b 3F       		.uleb128 0x3f
 1917 019c 19       		.uleb128 0x19
 1918 019d 03       		.uleb128 0x3
 1919 019e 0E       		.uleb128 0xe
 1920 019f 3A       		.uleb128 0x3a
 1921 01a0 0B       		.uleb128 0xb
 1922 01a1 3B       		.uleb128 0x3b
 1923 01a2 05       		.uleb128 0x5
 1924 01a3 27       		.uleb128 0x27
 1925 01a4 19       		.uleb128 0x19
 1926 01a5 49       		.uleb128 0x49
 1927 01a6 13       		.uleb128 0x13
 1928 01a7 11       		.uleb128 0x11
 1929 01a8 01       		.uleb128 0x1
 1930 01a9 12       		.uleb128 0x12
 1931 01aa 06       		.uleb128 0x6
 1932 01ab 40       		.uleb128 0x40
 1933 01ac 18       		.uleb128 0x18
 1934 01ad 9642     		.uleb128 0x2116
 1935 01af 19       		.uleb128 0x19
 1936 01b0 01       		.uleb128 0x1
 1937 01b1 13       		.uleb128 0x13
 1938 01b2 00       		.byte	0
 1939 01b3 00       		.byte	0
 1940 01b4 1D       		.uleb128 0x1d
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 51


 1941 01b5 34       		.uleb128 0x34
 1942 01b6 00       		.byte	0
 1943 01b7 03       		.uleb128 0x3
 1944 01b8 0E       		.uleb128 0xe
 1945 01b9 3A       		.uleb128 0x3a
 1946 01ba 0B       		.uleb128 0xb
 1947 01bb 3B       		.uleb128 0x3b
 1948 01bc 0B       		.uleb128 0xb
 1949 01bd 49       		.uleb128 0x49
 1950 01be 13       		.uleb128 0x13
 1951 01bf 3F       		.uleb128 0x3f
 1952 01c0 19       		.uleb128 0x19
 1953 01c1 02       		.uleb128 0x2
 1954 01c2 18       		.uleb128 0x18
 1955 01c3 00       		.byte	0
 1956 01c4 00       		.byte	0
 1957 01c5 1E       		.uleb128 0x1e
 1958 01c6 2E       		.uleb128 0x2e
 1959 01c7 00       		.byte	0
 1960 01c8 3F       		.uleb128 0x3f
 1961 01c9 19       		.uleb128 0x19
 1962 01ca 3C       		.uleb128 0x3c
 1963 01cb 19       		.uleb128 0x19
 1964 01cc 6E       		.uleb128 0x6e
 1965 01cd 0E       		.uleb128 0xe
 1966 01ce 03       		.uleb128 0x3
 1967 01cf 0E       		.uleb128 0xe
 1968 01d0 3A       		.uleb128 0x3a
 1969 01d1 0B       		.uleb128 0xb
 1970 01d2 3B       		.uleb128 0x3b
 1971 01d3 0B       		.uleb128 0xb
 1972 01d4 00       		.byte	0
 1973 01d5 00       		.byte	0
 1974 01d6 00       		.byte	0
 1975              		.section	.debug_loc,"",%progbits
 1976              	.Ldebug_loc0:
 1977              	.LLST0:
 1978 0000 38000000 		.4byte	.LVL2
 1979 0004 3C000000 		.4byte	.LVL3
 1980 0008 0500     		.2byte	0x5
 1981 000a 73       		.byte	0x73
 1982 000b 00       		.sleb128 0
 1983 000c 32       		.byte	0x32
 1984 000d 21       		.byte	0x21
 1985 000e 9F       		.byte	0x9f
 1986 000f 3C000000 		.4byte	.LVL3
 1987 0013 40000000 		.4byte	.LVL4
 1988 0017 0100     		.2byte	0x1
 1989 0019 53       		.byte	0x53
 1990 001a 40000000 		.4byte	.LVL4
 1991 001e 42000000 		.4byte	.LVL5
 1992 0022 0200     		.2byte	0x2
 1993 0024 72       		.byte	0x72
 1994 0025 00       		.sleb128 0
 1995 0026 00000000 		.4byte	0
 1996 002a 00000000 		.4byte	0
 1997              	.LLST1:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 52


 1998 002e 0A000000 		.4byte	.LVL1
 1999 0032 82000000 		.4byte	.LVL7
 2000 0036 0100     		.2byte	0x1
 2001 0038 54       		.byte	0x54
 2002 0039 00000000 		.4byte	0
 2003 003d 00000000 		.4byte	0
 2004              	.LLST2:
 2005 0041 06000000 		.4byte	.LVL9
 2006 0045 41000000 		.4byte	.LVL10-1
 2007 0049 0100     		.2byte	0x1
 2008 004b 50       		.byte	0x50
 2009 004c 00000000 		.4byte	0
 2010 0050 00000000 		.4byte	0
 2011              	.LLST3:
 2012 0054 00000000 		.4byte	.LVL11
 2013 0058 00000000 		.4byte	.LVL11
 2014 005c 0100     		.2byte	0x1
 2015 005e 50       		.byte	0x50
 2016 005f 00000000 		.4byte	.LVL11
 2017 0063 0C000000 		.4byte	.LVL13
 2018 0067 0500     		.2byte	0x5
 2019 0069 70       		.byte	0x70
 2020 006a 00       		.sleb128 0
 2021 006b 33       		.byte	0x33
 2022 006c 1A       		.byte	0x1a
 2023 006d 9F       		.byte	0x9f
 2024 006e 0C000000 		.4byte	.LVL13
 2025 0072 18000000 		.4byte	.LFE4
 2026 0076 0600     		.2byte	0x6
 2027 0078 F3       		.byte	0xf3
 2028 0079 01       		.uleb128 0x1
 2029 007a 50       		.byte	0x50
 2030 007b 33       		.byte	0x33
 2031 007c 1A       		.byte	0x1a
 2032 007d 9F       		.byte	0x9f
 2033 007e 00000000 		.4byte	0
 2034 0082 00000000 		.4byte	0
 2035              	.LLST4:
 2036 0086 08000000 		.4byte	.LVL12
 2037 008a 0E000000 		.4byte	.LVL14
 2038 008e 0100     		.2byte	0x1
 2039 0090 53       		.byte	0x53
 2040 0091 0E000000 		.4byte	.LVL14
 2041 0095 18000000 		.4byte	.LFE4
 2042 0099 0100     		.2byte	0x1
 2043 009b 50       		.byte	0x50
 2044 009c 00000000 		.4byte	0
 2045 00a0 00000000 		.4byte	0
 2046              	.LLST5:
 2047 00a4 00000000 		.4byte	.LVL15
 2048 00a8 12000000 		.4byte	.LVL18
 2049 00ac 0100     		.2byte	0x1
 2050 00ae 50       		.byte	0x50
 2051 00af 12000000 		.4byte	.LVL18
 2052 00b3 60000000 		.4byte	.LFE5
 2053 00b7 0400     		.2byte	0x4
 2054 00b9 F3       		.byte	0xf3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 53


 2055 00ba 01       		.uleb128 0x1
 2056 00bb 50       		.byte	0x50
 2057 00bc 9F       		.byte	0x9f
 2058 00bd 00000000 		.4byte	0
 2059 00c1 00000000 		.4byte	0
 2060              	.LLST6:
 2061 00c5 0E000000 		.4byte	.LVL16
 2062 00c9 10000000 		.4byte	.LVL17
 2063 00cd 0300     		.2byte	0x3
 2064 00cf 08       		.byte	0x8
 2065 00d0 44       		.byte	0x44
 2066 00d1 9F       		.byte	0x9f
 2067 00d2 00000000 		.4byte	0
 2068 00d6 00000000 		.4byte	0
 2069              	.LLST7:
 2070 00da 2E000000 		.4byte	.LVL20
 2071 00de 3A000000 		.4byte	.LVL21
 2072 00e2 0100     		.2byte	0x1
 2073 00e4 51       		.byte	0x51
 2074 00e5 00000000 		.4byte	0
 2075 00e9 00000000 		.4byte	0
 2076              	.LLST8:
 2077 00ed 00000000 		.4byte	.LVL28
 2078 00f1 16000000 		.4byte	.LVL31
 2079 00f5 0100     		.2byte	0x1
 2080 00f7 50       		.byte	0x50
 2081 00f8 16000000 		.4byte	.LVL31
 2082 00fc 28000000 		.4byte	.LFE8
 2083 0100 0400     		.2byte	0x4
 2084 0102 F3       		.byte	0xf3
 2085 0103 01       		.uleb128 0x1
 2086 0104 50       		.byte	0x50
 2087 0105 9F       		.byte	0x9f
 2088 0106 00000000 		.4byte	0
 2089 010a 00000000 		.4byte	0
 2090              	.LLST9:
 2091 010e 06000000 		.4byte	.LVL29
 2092 0112 0A000000 		.4byte	.LVL30
 2093 0116 0500     		.2byte	0x5
 2094 0118 74       		.byte	0x74
 2095 0119 00       		.sleb128 0
 2096 011a 31       		.byte	0x31
 2097 011b 1A       		.byte	0x1a
 2098 011c 9F       		.byte	0x9f
 2099 011d 00000000 		.4byte	0
 2100 0121 00000000 		.4byte	0
 2101              	.LLST10:
 2102 0125 00000000 		.4byte	.LVL35
 2103 0129 04000000 		.4byte	.LVL36
 2104 012d 0100     		.2byte	0x1
 2105 012f 50       		.byte	0x50
 2106 0130 04000000 		.4byte	.LVL36
 2107 0134 10000000 		.4byte	.LFE13
 2108 0138 0400     		.2byte	0x4
 2109 013a F3       		.byte	0xf3
 2110 013b 01       		.uleb128 0x1
 2111 013c 50       		.byte	0x50
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 54


 2112 013d 9F       		.byte	0x9f
 2113 013e 00000000 		.4byte	0
 2114 0142 00000000 		.4byte	0
 2115              	.LLST11:
 2116 0146 00000000 		.4byte	.LVL38
 2117 014a 1C000000 		.4byte	.LVL42
 2118 014e 0100     		.2byte	0x1
 2119 0150 50       		.byte	0x50
 2120 0151 1C000000 		.4byte	.LVL42
 2121 0155 22000000 		.4byte	.LVL43
 2122 0159 0400     		.2byte	0x4
 2123 015b F3       		.byte	0xf3
 2124 015c 01       		.uleb128 0x1
 2125 015d 50       		.byte	0x50
 2126 015e 9F       		.byte	0x9f
 2127 015f 22000000 		.4byte	.LVL43
 2128 0163 38000000 		.4byte	.LVL46
 2129 0167 0100     		.2byte	0x1
 2130 0169 50       		.byte	0x50
 2131 016a 00000000 		.4byte	0
 2132 016e 00000000 		.4byte	0
 2133              	.LLST12:
 2134 0172 32000000 		.4byte	.LVL44
 2135 0176 34000000 		.4byte	.LVL45
 2136 017a 0900     		.2byte	0x9
 2137 017c 73       		.byte	0x73
 2138 017d 00       		.sleb128 0
 2139 017e 72       		.byte	0x72
 2140 017f 00       		.sleb128 0
 2141 0180 22       		.byte	0x22
 2142 0181 71       		.byte	0x71
 2143 0182 00       		.sleb128 0
 2144 0183 1B       		.byte	0x1b
 2145 0184 9F       		.byte	0x9f
 2146 0185 00000000 		.4byte	0
 2147 0189 00000000 		.4byte	0
 2148              	.LLST13:
 2149 018d 10000000 		.4byte	.LVL39
 2150 0191 12000000 		.4byte	.LVL40
 2151 0195 0100     		.2byte	0x1
 2152 0197 51       		.byte	0x51
 2153 0198 16000000 		.4byte	.LVL41
 2154 019c 48000000 		.4byte	.LFE15
 2155 01a0 0100     		.2byte	0x1
 2156 01a2 51       		.byte	0x51
 2157 01a3 00000000 		.4byte	0
 2158 01a7 00000000 		.4byte	0
 2159              	.LLST14:
 2160 01ab 00000000 		.4byte	.LVL47
 2161 01af 20000000 		.4byte	.LVL51
 2162 01b3 0100     		.2byte	0x1
 2163 01b5 50       		.byte	0x50
 2164 01b6 20000000 		.4byte	.LVL51
 2165 01ba 34000000 		.4byte	.LVL53
 2166 01be 0100     		.2byte	0x1
 2167 01c0 54       		.byte	0x54
 2168 01c1 00000000 		.4byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 55


 2169 01c5 00000000 		.4byte	0
 2170              	.LLST15:
 2171 01c9 20000000 		.4byte	.LVL51
 2172 01cd 31000000 		.4byte	.LVL52-1
 2173 01d1 1A00     		.2byte	0x1a
 2174 01d3 74       		.byte	0x74
 2175 01d4 00       		.sleb128 0
 2176 01d5 F7       		.byte	0xf7
 2177 01d6 41       		.uleb128 0x41
 2178 01d7 F7       		.byte	0xf7
 2179 01d8 25       		.uleb128 0x25
 2180 01d9 0C       		.byte	0xc
 2181 01da 80969800 		.4byte	0x989680
 2182 01de F7       		.byte	0xf7
 2183 01df 25       		.uleb128 0x25
 2184 01e0 1E       		.byte	0x1e
 2185 01e1 F7       		.byte	0xf7
 2186 01e2 33       		.uleb128 0x33
 2187 01e3 72       		.byte	0x72
 2188 01e4 00       		.sleb128 0
 2189 01e5 F7       		.byte	0xf7
 2190 01e6 3A       		.uleb128 0x3a
 2191 01e7 F7       		.byte	0xf7
 2192 01e8 33       		.uleb128 0x33
 2193 01e9 1B       		.byte	0x1b
 2194 01ea F7       		.byte	0xf7
 2195 01eb 25       		.uleb128 0x25
 2196 01ec 9F       		.byte	0x9f
 2197 01ed 00000000 		.4byte	0
 2198 01f1 00000000 		.4byte	0
 2199              	.LLST16:
 2200 01f5 12000000 		.4byte	.LVL48
 2201 01f9 14000000 		.4byte	.LVL49
 2202 01fd 0100     		.2byte	0x1
 2203 01ff 52       		.byte	0x52
 2204 0200 18000000 		.4byte	.LVL50
 2205 0204 31000000 		.4byte	.LVL52-1
 2206 0208 0100     		.2byte	0x1
 2207 020a 52       		.byte	0x52
 2208 020b 00000000 		.4byte	0
 2209 020f 00000000 		.4byte	0
 2210              	.LLST17:
 2211 0213 00000000 		.4byte	.LVL54
 2212 0217 1E000000 		.4byte	.LVL58
 2213 021b 0100     		.2byte	0x1
 2214 021d 50       		.byte	0x50
 2215 021e 1E000000 		.4byte	.LVL58
 2216 0222 23000000 		.4byte	.LVL59-1
 2217 0226 0100     		.2byte	0x1
 2218 0228 50       		.byte	0x50
 2219 0229 00000000 		.4byte	0
 2220 022d 00000000 		.4byte	0
 2221              	.LLST18:
 2222 0231 1E000000 		.4byte	.LVL58
 2223 0235 23000000 		.4byte	.LVL59-1
 2224 0239 1600     		.2byte	0x16
 2225 023b 70       		.byte	0x70
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 56


 2226 023c 00       		.sleb128 0
 2227 023d F7       		.byte	0xf7
 2228 023e 41       		.uleb128 0x41
 2229 023f F7       		.byte	0xf7
 2230 0240 2C       		.uleb128 0x2c
 2231 0241 F4       		.byte	0xf4
 2232 0242 2C       		.uleb128 0x2c
 2233 0243 04       		.byte	0x4
 2234 0244 00002041 		.4byte	0x41200000
 2235 0248 1E       		.byte	0x1e
 2236 0249 74       		.byte	0x74
 2237 024a 00       		.sleb128 0
 2238 024b F7       		.byte	0xf7
 2239 024c 3A       		.uleb128 0x3a
 2240 024d F7       		.byte	0xf7
 2241 024e 2C       		.uleb128 0x2c
 2242 024f 1B       		.byte	0x1b
 2243 0250 9F       		.byte	0x9f
 2244 0251 00000000 		.4byte	0
 2245 0255 00000000 		.4byte	0
 2246              	.LLST19:
 2247 0259 12000000 		.4byte	.LVL55
 2248 025d 14000000 		.4byte	.LVL56
 2249 0261 0100     		.2byte	0x1
 2250 0263 54       		.byte	0x54
 2251 0264 18000000 		.4byte	.LVL57
 2252 0268 3C000000 		.4byte	.LVL63
 2253 026c 0100     		.2byte	0x1
 2254 026e 54       		.byte	0x54
 2255 026f 00000000 		.4byte	0
 2256 0273 00000000 		.4byte	0
 2257              		.section	.debug_aranges,"",%progbits
 2258 0000 9C000000 		.4byte	0x9c
 2259 0004 0200     		.2byte	0x2
 2260 0006 00000000 		.4byte	.Ldebug_info0
 2261 000a 04       		.byte	0x4
 2262 000b 00       		.byte	0
 2263 000c 0000     		.2byte	0
 2264 000e 0000     		.2byte	0
 2265 0010 00000000 		.4byte	.LFB2
 2266 0014 98000000 		.4byte	.LFE2-.LFB2
 2267 0018 00000000 		.4byte	.LFB3
 2268 001c 48000000 		.4byte	.LFE3-.LFB3
 2269 0020 00000000 		.4byte	.LFB4
 2270 0024 18000000 		.4byte	.LFE4-.LFB4
 2271 0028 00000000 		.4byte	.LFB5
 2272 002c 60000000 		.4byte	.LFE5-.LFB5
 2273 0030 00000000 		.4byte	.LFB1
 2274 0034 3C000000 		.4byte	.LFE1-.LFB1
 2275 0038 00000000 		.4byte	.LFB0
 2276 003c 1C000000 		.4byte	.LFE0-.LFB0
 2277 0040 00000000 		.4byte	.LFB6
 2278 0044 10000000 		.4byte	.LFE6-.LFB6
 2279 0048 00000000 		.4byte	.LFB7
 2280 004c 10000000 		.4byte	.LFE7-.LFB7
 2281 0050 00000000 		.4byte	.LFB8
 2282 0054 28000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 57


 2283 0058 00000000 		.4byte	.LFB9
 2284 005c 18000000 		.4byte	.LFE9-.LFB9
 2285 0060 00000000 		.4byte	.LFB10
 2286 0064 18000000 		.4byte	.LFE10-.LFB10
 2287 0068 00000000 		.4byte	.LFB11
 2288 006c 0C000000 		.4byte	.LFE11-.LFB11
 2289 0070 00000000 		.4byte	.LFB13
 2290 0074 10000000 		.4byte	.LFE13-.LFB13
 2291 0078 00000000 		.4byte	.LFB14
 2292 007c 0C000000 		.4byte	.LFE14-.LFB14
 2293 0080 00000000 		.4byte	.LFB15
 2294 0084 48000000 		.4byte	.LFE15-.LFB15
 2295 0088 00000000 		.4byte	.LFB16
 2296 008c 44000000 		.4byte	.LFE16-.LFB16
 2297 0090 00000000 		.4byte	.LFB17
 2298 0094 4C000000 		.4byte	.LFE17-.LFB17
 2299 0098 00000000 		.4byte	0
 2300 009c 00000000 		.4byte	0
 2301              		.section	.debug_ranges,"",%progbits
 2302              	.Ldebug_ranges0:
 2303 0000 28000000 		.4byte	.LBB4
 2304 0004 2A000000 		.4byte	.LBE4
 2305 0008 2E000000 		.4byte	.LBB7
 2306 000c 60000000 		.4byte	.LBE7
 2307 0010 00000000 		.4byte	0
 2308 0014 00000000 		.4byte	0
 2309 0018 00000000 		.4byte	.LFB2
 2310 001c 98000000 		.4byte	.LFE2
 2311 0020 00000000 		.4byte	.LFB3
 2312 0024 48000000 		.4byte	.LFE3
 2313 0028 00000000 		.4byte	.LFB4
 2314 002c 18000000 		.4byte	.LFE4
 2315 0030 00000000 		.4byte	.LFB5
 2316 0034 60000000 		.4byte	.LFE5
 2317 0038 00000000 		.4byte	.LFB1
 2318 003c 3C000000 		.4byte	.LFE1
 2319 0040 00000000 		.4byte	.LFB0
 2320 0044 1C000000 		.4byte	.LFE0
 2321 0048 00000000 		.4byte	.LFB6
 2322 004c 10000000 		.4byte	.LFE6
 2323 0050 00000000 		.4byte	.LFB7
 2324 0054 10000000 		.4byte	.LFE7
 2325 0058 00000000 		.4byte	.LFB8
 2326 005c 28000000 		.4byte	.LFE8
 2327 0060 00000000 		.4byte	.LFB9
 2328 0064 18000000 		.4byte	.LFE9
 2329 0068 00000000 		.4byte	.LFB10
 2330 006c 18000000 		.4byte	.LFE10
 2331 0070 00000000 		.4byte	.LFB11
 2332 0074 0C000000 		.4byte	.LFE11
 2333 0078 00000000 		.4byte	.LFB13
 2334 007c 10000000 		.4byte	.LFE13
 2335 0080 00000000 		.4byte	.LFB14
 2336 0084 0C000000 		.4byte	.LFE14
 2337 0088 00000000 		.4byte	.LFB15
 2338 008c 48000000 		.4byte	.LFE15
 2339 0090 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 58


 2340 0094 44000000 		.4byte	.LFE16
 2341 0098 00000000 		.4byte	.LFB17
 2342 009c 4C000000 		.4byte	.LFE17
 2343 00a0 00000000 		.4byte	0
 2344 00a4 00000000 		.4byte	0
 2345              		.section	.debug_line,"",%progbits
 2346              	.Ldebug_line0:
 2347 0000 13020000 		.section	.debug_str,"MS",%progbits,1
 2347      02006800 
 2347      00000201 
 2347      FB0E0D00 
 2347      01010101 
 2348              	.LASF54:
 2349 0000 4144435F 		.ascii	"ADC_SAR_A_initVar\000"
 2349      5341525F 
 2349      415F696E 
 2349      69745661 
 2349      7200
 2350              	.LASF14:
 2351 0012 75696E74 		.ascii	"uint16\000"
 2351      313600
 2352              	.LASF44:
 2353 0019 61646347 		.ascii	"adcGain\000"
 2353      61696E00 
 2354              	.LASF61:
 2355 0021 43794578 		.ascii	"CyExitCriticalSection\000"
 2355      69744372 
 2355      69746963 
 2355      616C5365 
 2355      6374696F 
 2356              	.LASF69:
 2357 0037 636F756E 		.ascii	"counts\000"
 2357      747300
 2358              	.LASF0:
 2359 003e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2359      206C6F6E 
 2359      6720756E 
 2359      7369676E 
 2359      65642069 
 2360              	.LASF34:
 2361 0055 4144435F 		.ascii	"ADC_SAR_A_Start\000"
 2361      5341525F 
 2361      415F5374 
 2361      61727400 
 2362              	.LASF2:
 2363 0065 6C6F6E67 		.ascii	"long long int\000"
 2363      206C6F6E 
 2363      6720696E 
 2363      7400
 2364              	.LASF6:
 2365 0073 7369676E 		.ascii	"signed char\000"
 2365      65642063 
 2365      68617200 
 2366              	.LASF65:
 2367 007f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2367      43313120 
 2367      352E342E 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 59


 2367      31203230 
 2367      31363036 
 2368 00b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2368      20726576 
 2368      6973696F 
 2368      6E203233 
 2368      37373135 
 2369 00e5 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2369      66756E63 
 2369      74696F6E 
 2369      2D736563 
 2369      74696F6E 
 2370              	.LASF18:
 2371 010d 696E7433 		.ascii	"int32\000"
 2371      3200
 2372              	.LASF40:
 2373 0113 4144435F 		.ascii	"ADC_SAR_A_GetResult16\000"
 2373      5341525F 
 2373      415F4765 
 2373      74526573 
 2373      756C7431 
 2374              	.LASF9:
 2375 0129 6C6F6E67 		.ascii	"long int\000"
 2375      20696E74 
 2375      00
 2376              	.LASF23:
 2377 0132 72656731 		.ascii	"reg16\000"
 2377      3600
 2378              	.LASF13:
 2379 0138 75696E74 		.ascii	"uint8\000"
 2379      3800
 2380              	.LASF60:
 2381 013e 43794465 		.ascii	"CyDelayUs\000"
 2381      6C617955 
 2381      7300
 2382              	.LASF20:
 2383 0148 646F7562 		.ascii	"double\000"
 2383      6C6500
 2384              	.LASF56:
 2385 014f 4144435F 		.ascii	"ADC_SAR_A_countsPerVolt\000"
 2385      5341525F 
 2385      415F636F 
 2385      756E7473 
 2385      50657256 
 2386              	.LASF41:
 2387 0167 4144435F 		.ascii	"ADC_SAR_A_SetOffset\000"
 2387      5341525F 
 2387      415F5365 
 2387      744F6666 
 2387      73657400 
 2388              	.LASF15:
 2389 017b 75696E74 		.ascii	"uint32\000"
 2389      333200
 2390              	.LASF49:
 2391 0182 636F756E 		.ascii	"countsPer10Volt\000"
 2391      74735065 
 2391      72313056 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 60


 2391      6F6C7400 
 2392              	.LASF64:
 2393 0192 4379496E 		.ascii	"CyIntSetVector\000"
 2393      74536574 
 2393      56656374 
 2393      6F7200
 2394              	.LASF43:
 2395 01a1 4144435F 		.ascii	"ADC_SAR_A_SetGain\000"
 2395      5341525F 
 2395      415F5365 
 2395      74476169 
 2395      6E00
 2396              	.LASF37:
 2397 01b3 7265744D 		.ascii	"retMode\000"
 2397      6F646500 
 2398              	.LASF4:
 2399 01bb 756E7369 		.ascii	"unsigned int\000"
 2399      676E6564 
 2399      20696E74 
 2399      00
 2400              	.LASF51:
 2401 01c8 75566F6C 		.ascii	"uVolts\000"
 2401      747300
 2402              	.LASF10:
 2403 01cf 6C6F6E67 		.ascii	"long unsigned int\000"
 2403      20756E73 
 2403      69676E65 
 2403      6420696E 
 2403      7400
 2404              	.LASF53:
 2405 01e1 766F6C74 		.ascii	"volts\000"
 2405      7300
 2406              	.LASF59:
 2407 01e7 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2407      74657243 
 2407      72697469 
 2407      63616C53 
 2407      65637469 
 2408              	.LASF46:
 2409 01fe 4144435F 		.ascii	"ADC_SAR_A_CountsTo_mVolts\000"
 2409      5341525F 
 2409      415F436F 
 2409      756E7473 
 2409      546F5F6D 
 2410              	.LASF8:
 2411 0218 73686F72 		.ascii	"short unsigned int\000"
 2411      7420756E 
 2411      7369676E 
 2411      65642069 
 2411      6E7400
 2412              	.LASF16:
 2413 022b 696E7438 		.ascii	"int8\000"
 2413      00
 2414              	.LASF28:
 2415 0230 4144435F 		.ascii	"ADC_SAR_A_Stop\000"
 2415      5341525F 
 2415      415F5374 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 61


 2415      6F7000
 2416              	.LASF67:
 2417 023f 433A5C55 		.ascii	"C:\\Users\\rens_\\Documents\\platooning\\PSoC\\Plat"
 2417      73657273 
 2417      5C72656E 
 2417      735F5C44 
 2417      6F63756D 
 2418 026c 6F6F6E69 		.ascii	"ooning\\AngleMeasurement.cydsn\000"
 2418      6E675C41 
 2418      6E676C65 
 2418      4D656173 
 2418      7572656D 
 2419              	.LASF27:
 2420 028a 4144435F 		.ascii	"ADC_SAR_A_Enable\000"
 2420      5341525F 
 2420      415F456E 
 2420      61626C65 
 2420      00
 2421              	.LASF52:
 2422 029b 4144435F 		.ascii	"ADC_SAR_A_CountsTo_Volts\000"
 2422      5341525F 
 2422      415F436F 
 2422      756E7473 
 2422      546F5F56 
 2423              	.LASF24:
 2424 02b4 72656733 		.ascii	"reg32\000"
 2424      3200
 2425              	.LASF19:
 2426 02ba 666C6F61 		.ascii	"float32\000"
 2426      74333200 
 2427              	.LASF11:
 2428 02c2 73697A65 		.ascii	"sizetype\000"
 2428      74797065 
 2428      00
 2429              	.LASF5:
 2430 02cb 6C6F6E67 		.ascii	"long double\000"
 2430      20646F75 
 2430      626C6500 
 2431              	.LASF21:
 2432 02d7 696E7436 		.ascii	"int64\000"
 2432      3400
 2433              	.LASF63:
 2434 02dd 4379496E 		.ascii	"CyIntSetPriority\000"
 2434      74536574 
 2434      5072696F 
 2434      72697479 
 2434      00
 2435              	.LASF1:
 2436 02ee 666C6F61 		.ascii	"float\000"
 2436      7400
 2437              	.LASF39:
 2438 02f4 4144435F 		.ascii	"ADC_SAR_A_IsEndConversion\000"
 2438      5341525F 
 2438      415F4973 
 2438      456E6443 
 2438      6F6E7665 
 2439              	.LASF35:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 62


 2440 030e 4144435F 		.ascii	"ADC_SAR_A_StartConvert\000"
 2440      5341525F 
 2440      415F5374 
 2440      61727443 
 2440      6F6E7665 
 2441              	.LASF36:
 2442 0325 4144435F 		.ascii	"ADC_SAR_A_StopConvert\000"
 2442      5341525F 
 2442      415F5374 
 2442      6F70436F 
 2442      6E766572 
 2443              	.LASF30:
 2444 033b 4144435F 		.ascii	"ADC_SAR_A_SetResolution\000"
 2444      5341525F 
 2444      415F5365 
 2444      74526573 
 2444      6F6C7574 
 2445              	.LASF31:
 2446 0353 706F7765 		.ascii	"power\000"
 2446      7200
 2447              	.LASF57:
 2448 0359 4144435F 		.ascii	"ADC_SAR_A_countsPer10Volt\000"
 2448      5341525F 
 2448      415F636F 
 2448      756E7473 
 2448      50657231 
 2449              	.LASF22:
 2450 0373 72656738 		.ascii	"reg8\000"
 2450      00
 2451              	.LASF7:
 2452 0378 756E7369 		.ascii	"unsigned char\000"
 2452      676E6564 
 2452      20636861 
 2452      7200
 2453              	.LASF62:
 2454 0386 4144435F 		.ascii	"ADC_SAR_A_theACLK_SetModeRegister\000"
 2454      5341525F 
 2454      415F7468 
 2454      6541434C 
 2454      4B5F5365 
 2455              	.LASF29:
 2456 03a8 4144435F 		.ascii	"ADC_SAR_A_SetPower\000"
 2456      5341525F 
 2456      415F5365 
 2456      74506F77 
 2456      657200
 2457              	.LASF3:
 2458 03bb 73686F72 		.ascii	"short int\000"
 2458      7420696E 
 2458      7400
 2459              	.LASF48:
 2460 03c5 6D566F6C 		.ascii	"mVolts\000"
 2460      747300
 2461              	.LASF32:
 2462 03cc 7265736F 		.ascii	"resolution\000"
 2462      6C757469 
 2462      6F6E00
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 63


 2463              	.LASF12:
 2464 03d7 63686172 		.ascii	"char\000"
 2464      00
 2465              	.LASF45:
 2466 03dc 4144435F 		.ascii	"ADC_SAR_A_SetScaledGain\000"
 2466      5341525F 
 2466      415F5365 
 2466      74536361 
 2466      6C656447 
 2467              	.LASF68:
 2468 03f4 4144435F 		.ascii	"ADC_SAR_A_CalcGain\000"
 2468      5341525F 
 2468      415F4361 
 2468      6C634761 
 2468      696E00
 2469              	.LASF42:
 2470 0407 6F666673 		.ascii	"offset\000"
 2470      657400
 2471              	.LASF47:
 2472 040e 61646343 		.ascii	"adcCounts\000"
 2472      6F756E74 
 2472      7300
 2473              	.LASF66:
 2474 0418 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_A.c\000"
 2474      72617465 
 2474      645F536F 
 2474      75726365 
 2474      5C50536F 
 2475              	.LASF33:
 2476 043b 4144435F 		.ascii	"ADC_SAR_A_Init\000"
 2476      5341525F 
 2476      415F496E 
 2476      697400
 2477              	.LASF26:
 2478 044a 656E6162 		.ascii	"enableInterrupts\000"
 2478      6C65496E 
 2478      74657272 
 2478      75707473 
 2478      00
 2479              	.LASF38:
 2480 045b 73746174 		.ascii	"status\000"
 2480      757300
 2481              	.LASF17:
 2482 0462 696E7431 		.ascii	"int16\000"
 2482      3600
 2483              	.LASF58:
 2484 0468 4144435F 		.ascii	"ADC_SAR_A_shift\000"
 2484      5341525F 
 2484      415F7368 
 2484      69667400 
 2485              	.LASF70:
 2486 0478 4144435F 		.ascii	"ADC_SAR_A_GetResult8\000"
 2486      5341525F 
 2486      415F4765 
 2486      74526573 
 2486      756C7438 
 2487              	.LASF55:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccdKKj8a.s 			page 64


 2488 048d 4144435F 		.ascii	"ADC_SAR_A_offset\000"
 2488      5341525F 
 2488      415F6F66 
 2488      66736574 
 2488      00
 2489              	.LASF25:
 2490 049e 746D7052 		.ascii	"tmpReg\000"
 2490      656700
 2491              	.LASF50:
 2492 04a5 4144435F 		.ascii	"ADC_SAR_A_CountsTo_uVolts\000"
 2492      5341525F 
 2492      415F436F 
 2492      756E7473 
 2492      546F5F75 
 2493              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
