ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_A_theACLK.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_A_theACLK_Start,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_SAR_A_theACLK_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	ADC_SAR_A_theACLK_Start, %function
  25              	ADC_SAR_A_theACLK_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_A_theACLK.c"
   1:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * File Name: ADC_SAR_A_theACLK.c
   3:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Version 2.20
   4:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Description:
   6:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
   8:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Note:
   9:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  10:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
  11:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  17:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #include "ADC_SAR_A_theACLK.h"
  19:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  20:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  27:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  29:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  30:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 2


  31:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_Start
  32:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
  33:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  34:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
  35:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  38:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
  39:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
  40:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  41:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
  42:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
  43:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  44:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_Start(void) 
  46:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  47:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_CLKEN |= ADC_SAR_A_theACLK_CLKEN_MASK;
  33              		.loc 1 48 0
  34 0000 044A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00203 		orr	r3, r3, #2
  37 0008 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 	ADC_SAR_A_theACLK_CLKSTBY |= ADC_SAR_A_theACLK_CLKSTBY_MASK;
  38              		.loc 1 49 0
  39 000a 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
  40 000c 43F00203 		orr	r3, r3, #2
  41 0010 1374     		strb	r3, [r2, #16]
  42 0012 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0014 A1430040 		.word	1073759137
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	ADC_SAR_A_theACLK_Start, .-ADC_SAR_A_theACLK_Start
  50              		.section	.text.ADC_SAR_A_theACLK_Stop,"ax",%progbits
  51              		.align	1
  52              		.global	ADC_SAR_A_theACLK_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	ADC_SAR_A_theACLK_Stop, %function
  56              	ADC_SAR_A_theACLK_Stop:
  57              	.LFB1:
  50:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
  51:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  52:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  53:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_Stop
  55:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
  56:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  57:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 3


  58:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  64:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
  65:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
  66:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  67:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
  68:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
  69:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  70:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_Stop(void) 
  72:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_CLKEN &= (uint8)(~ADC_SAR_A_theACLK_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 044A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66 0004 03F0FD03 		and	r3, r3, #253
  67 0008 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 	ADC_SAR_A_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_A_theACLK_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
  70 000c 03F0FD03 		and	r3, r3, #253
  71 0010 1374     		strb	r3, [r2, #16]
  72 0012 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 0014 A1430040 		.word	1073759137
  77              		.cfi_endproc
  78              	.LFE1:
  79              		.size	ADC_SAR_A_theACLK_Stop, .-ADC_SAR_A_theACLK_Stop
  80              		.section	.text.ADC_SAR_A_theACLK_StopBlock,"ax",%progbits
  81              		.align	1
  82              		.global	ADC_SAR_A_theACLK_StopBlock
  83              		.thumb
  84              		.thumb_func
  85              		.type	ADC_SAR_A_theACLK_StopBlock, %function
  86              	ADC_SAR_A_theACLK_StopBlock:
  87              	.LFB2:
  76:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
  77:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  78:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  79:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  81:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
  82:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
  83:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_StopBlock
  84:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 4


  85:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  86:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
  87:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  93:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
  94:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
  95:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
  97:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
  98:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 100:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_StopBlock(void) 
 101:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
  88              		.loc 1 101 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 102:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     if ((ADC_SAR_A_theACLK_CLKEN & ADC_SAR_A_theACLK_CLKEN_MASK) != 0u)
  96              		.loc 1 102 0
  97 0002 154B     		ldr	r3, .L15
  98 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  99 0006 9207     		lsls	r2, r2, #30
 100 0008 25D5     		bpl	.L7
 101              	.LBB10:
 103:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 104:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 107:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_LD = 0u;
 108:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if defined(ADC_SAR_A_theACLK__CFG3)
 111:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_A_theACLK_CLKEN_MASK;
 102              		.loc 1 111 0
 103 000a 1448     		ldr	r0, .L15+4
 107:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 104              		.loc 1 107 0
 105 000c 144A     		ldr	r2, .L15+8
 106 000e 0021     		movs	r1, #0
 107              		.loc 1 111 0
 108 0010 0224     		movs	r4, #2
 107:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 109              		.loc 1 107 0
 110 0012 1170     		strb	r1, [r2]
 111              		.loc 1 111 0
 112 0014 0470     		strb	r4, [r0]
 112:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 113              		.loc 1 112 0
 114 0016 00F8041C 		strb	r1, [r0, #-4]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 5


 113:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #else
 114:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_DMASK = ADC_SAR_A_theACLK_CLKEN_MASK;
 115:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_AMASK = 0x00u;
 116:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* ADC_SAR_A_theACLK__CFG3 */
 117:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 118:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 115              		.loc 1 119 0
 116 001a 10F80C1C 		ldrb	r1, [r0, #-12]	@ zero_extendqisi2
 120:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 121:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_A_theACLK_DIV_PTR);
 122:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 117              		.loc 1 122 0
 118 001e 04F14024 		add	r4, r4, #1073758208
 119:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 119              		.loc 1 119 0
 120 0022 01F07F01 		and	r1, r1, #127
 121 0026 00F80C1C 		strb	r1, [r0, #-12]
 121:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 122              		.loc 1 121 0
 123 002a 0E49     		ldr	r1, .L15+12
 124 002c 0888     		ldrh	r0, [r1]
 125 002e 80B2     		uxth	r0, r0
 126              	.LVL0:
 127              		.loc 1 122 0
 128 0030 2080     		strh	r0, [r4]	@ movhi
 123:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 129              		.loc 1 123 0
 130 0032 0724     		movs	r4, #7
 131 0034 1470     		strb	r4, [r2]
 132              	.L9:
 124:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 125:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 133              		.loc 1 126 0 discriminator 1
 134 0036 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 135 0038 14F00104 		ands	r4, r4, #1
 136 003c FBD1     		bne	.L9
 127:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_CLKEN &= (uint8)(~ADC_SAR_A_theACLK_CLKEN_MASK);
 137              		.loc 1 130 0
 138 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 139 0040 02F0FD02 		and	r2, r2, #253
 140 0044 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_A_theACLK_CLKSTBY_MASK);
 141              		.loc 1 131 0
 142 0046 084A     		ldr	r2, .L15+16
 143 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 144 004a 03F0FD03 		and	r3, r3, #253
 145 004e 1370     		strb	r3, [r2]
 132:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 133:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CLK_DIST_LD = 0x00u;
 146              		.loc 1 135 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 6


 147 0050 034B     		ldr	r3, .L15+8
 148 0052 1C70     		strb	r4, [r3]
 136:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         CY_SET_REG16(ADC_SAR_A_theACLK_DIV_PTR, oldDivider);
 149              		.loc 1 136 0
 150 0054 0880     		strh	r0, [r1]	@ movhi
 151              	.LVL1:
 152              	.L7:
 153 0056 10BD     		pop	{r4, pc}
 154              	.L16:
 155              		.align	2
 156              	.L15:
 157 0058 A1430040 		.word	1073759137
 158 005c 14400040 		.word	1073758228
 159 0060 01400040 		.word	1073758209
 160 0064 04410040 		.word	1073758468
 161 0068 B1430040 		.word	1073759153
 162              	.LBE10:
 163              		.cfi_endproc
 164              	.LFE2:
 165              		.size	ADC_SAR_A_theACLK_StopBlock, .-ADC_SAR_A_theACLK_StopBlock
 166              		.section	.text.ADC_SAR_A_theACLK_StandbyPower,"ax",%progbits
 167              		.align	1
 168              		.global	ADC_SAR_A_theACLK_StandbyPower
 169              		.thumb
 170              		.thumb_func
 171              		.type	ADC_SAR_A_theACLK_StandbyPower, %function
 172              	ADC_SAR_A_theACLK_StandbyPower:
 173              	.LFB3:
 137:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 139:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 140:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 142:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 143:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_StandbyPower
 145:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 146:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 147:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 148:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 150:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 151:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 153:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 154:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 155:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 156:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 174              		.loc 1 158 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179              	.LVL2:
 180 0000 044B     		ldr	r3, .L21
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 7


 159:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     if(state == 0u)
 160:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 161:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_A_theACLK_CLKSTBY_MASK);
 181              		.loc 1 161 0
 182 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 159:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     if(state == 0u)
 183              		.loc 1 159 0
 184 0004 10B9     		cbnz	r0, .L18
 185              		.loc 1 161 0
 186 0006 02F0FD02 		and	r2, r2, #253
 187 000a 01E0     		b	.L20
 188              	.L18:
 162:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 163:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     else
 164:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 165:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_CLKSTBY |= ADC_SAR_A_theACLK_CLKSTBY_MASK;
 189              		.loc 1 165 0
 190 000c 42F00202 		orr	r2, r2, #2
 191              	.L20:
 192 0010 1A70     		strb	r2, [r3]
 193 0012 7047     		bx	lr
 194              	.L22:
 195              		.align	2
 196              	.L21:
 197 0014 B1430040 		.word	1073759153
 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	ADC_SAR_A_theACLK_StandbyPower, .-ADC_SAR_A_theACLK_StandbyPower
 201              		.section	.text.ADC_SAR_A_theACLK_SetDividerRegister,"ax",%progbits
 202              		.align	1
 203              		.global	ADC_SAR_A_theACLK_SetDividerRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	ADC_SAR_A_theACLK_SetDividerRegister, %function
 207              	ADC_SAR_A_theACLK_SetDividerRegister:
 208              	.LFB4:
 166:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 167:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 168:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 169:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 170:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_SetDividerRegister
 172:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 173:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 174:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 175:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 180:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 181:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   zero, the new divide value will take effect at the end of the current clock
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 8


 187:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   cycle.
 188:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 189:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 190:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 191:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 192:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 193:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                                 
 195:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 209              		.loc 1 195 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              	.LVL3:
 214 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 215              		.cfi_def_cfa_offset 24
 216              		.cfi_offset 4, -24
 217              		.cfi_offset 5, -20
 218              		.cfi_offset 6, -16
 219              		.cfi_offset 7, -12
 220              		.cfi_offset 8, -8
 221              		.cfi_offset 14, -4
 222              	.LBB11:
 223              	.LBB12:
 196:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 198:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     uint8 currSrc = ADC_SAR_A_theACLK_GetSourceRegister();
 199:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     uint16 oldDivider = ADC_SAR_A_theACLK_GetDividerRegister();
 200:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 201:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     if (clkDivider != oldDivider)
 202:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 203:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         enabled = ADC_SAR_A_theACLK_CLKEN & ADC_SAR_A_theACLK_CLKEN_MASK;
 204:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         {
 207:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             if (oldDivider == 0u)
 209:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
 210:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CY_SET_REG16(ADC_SAR_A_theACLK_DIV_PTR, clkDivider);
 214:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 ADC_SAR_A_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 216:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             else
 217:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
 218:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 ADC_SAR_A_theACLK_MOD_SRC |= CYCLK_SSS;
 221:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CY_SET_REG16(ADC_SAR_A_theACLK_DIV_PTR, clkDivider);
 222:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 223:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         }
 224:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         else
 225:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         {
 226:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 			
 227:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             if (enabled != 0u)
 228:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 9


 229:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 230:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 231:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if defined(ADC_SAR_A_theACLK__CFG3)
 233:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_A_theACLK_CLKEN_MASK;
 234:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 235:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #else
 236:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_DMASK = ADC_SAR_A_theACLK_CLKEN_MASK;
 237:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_AMASK = 0x00u;
 238:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* ADC_SAR_A_theACLK__CFG3 */
 239:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 242:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 if (((ADC_SAR_A_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 {
 245:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 249:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     ADC_SAR_A_theACLK_CLKEN &= (uint8)(~ADC_SAR_A_theACLK_CLKEN_MASK);
 254:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 255:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 258:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 }
 260:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 261:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 262:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             if ((ADC_SAR_A_theACLK_CLKEN & ADC_SAR_A_theACLK_CLKEN_MASK) != 0u)
 264:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
 265:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 271:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             else
 272:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
 273:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CY_SET_REG16(ADC_SAR_A_theACLK_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 				ADC_SAR_A_theACLK_CLKEN |= enabled;
 276:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 277:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         }
 278:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 279:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 280:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 281:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 282:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_GetDividerRegister
 284:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 285:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 10


 286:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 287:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 290:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 291:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 292:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 293:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 296:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** uint16 ADC_SAR_A_theACLK_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return CY_GET_REG16(ADC_SAR_A_theACLK_DIV_PTR);
 300:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 301:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 302:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_SetModeRegister
 305:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 306:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 307:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 308:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 313:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 314:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 value.
 319:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 322:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 source clock.
 323:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 328:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 329:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 330:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 331:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 334:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_A_theACLK_MODE_MASK;
 335:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 336:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 337:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 338:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_ClearModeRegister
 340:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 341:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 342:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 11


 343:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 348:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 349:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 value.
 354:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 source clock.
 358:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 363:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 364:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 365:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 366:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 369:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_A_theACLK_MODE_MA
 370:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 371:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 373:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_GetModeRegister
 375:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 376:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 377:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 378:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 380:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 381:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 382:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 383:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 384:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 387:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** uint8 ADC_SAR_A_theACLK_GetModeRegister(void) 
 389:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 390:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return ADC_SAR_A_theACLK_MOD_SRC & (uint8)(ADC_SAR_A_theACLK_MODE_MASK);
 391:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 392:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 393:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 394:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_SetSourceRegister
 396:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 397:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 398:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 399:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Sets the input source of the clock. The clock must be disabled before
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 12


 400:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 402:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 403:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   following input sources:
 405:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_XTALM
 408:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 415:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 416:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 417:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 418:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 421:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     uint16 currDiv = ADC_SAR_A_theACLK_GetDividerRegister();
 422:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     uint8 oldSrc = ADC_SAR_A_theACLK_GetSourceRegister();
 423:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 424:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 427:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC |= CYCLK_SSS;
 430:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC =
 431:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (ADC_SAR_A_theACLK_MOD_SRC & (uint8)(~ADC_SAR_A_theACLK_SRC_SEL_MSK)) | clkSource;
 432:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 433:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 436:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC =
 439:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (ADC_SAR_A_theACLK_MOD_SRC & (uint8)(~ADC_SAR_A_theACLK_SRC_SEL_MSK)) | clkSource;
 440:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 442:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     else
 443:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 444:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC =
 445:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (ADC_SAR_A_theACLK_MOD_SRC & (uint8)(~ADC_SAR_A_theACLK_SRC_SEL_MSK)) | clkSource;
 446:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 447:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 448:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_GetSourceRegister
 452:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 13


 457:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 458:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 459:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 460:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 461:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 463:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** uint8 ADC_SAR_A_theACLK_GetSourceRegister(void) 
 465:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 466:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return ADC_SAR_A_theACLK_MOD_SRC & ADC_SAR_A_theACLK_SRC_SEL_MSK;
 224              		.loc 1 466 0
 225 0004 304C     		ldr	r4, .L44
 226              	.LBE12:
 227              	.LBE11:
 228              	.LBB15:
 229              	.LBB16:
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 230              		.loc 1 299 0
 231 0006 314E     		ldr	r6, .L44+4
 232              	.LBE16:
 233              	.LBE15:
 234              	.LBB19:
 235              	.LBB13:
 236              		.loc 1 466 0
 237 0008 94F800C0 		ldrb	ip, [r4]	@ zero_extendqisi2
 238              	.LBE13:
 239              	.LBE19:
 240              	.LBB20:
 241              	.LBB17:
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 242              		.loc 1 299 0
 243 000c 3588     		ldrh	r5, [r6]
 244              	.LBE17:
 245              	.LBE20:
 246              	.LBB21:
 247              	.LBB14:
 248              		.loc 1 466 0
 249 000e 0CF0070C 		and	ip, ip, #7
 250              	.LBE14:
 251              	.LBE21:
 252              	.LBB22:
 253              	.LBB18:
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 254              		.loc 1 299 0
 255 0012 ADB2     		uxth	r5, r5
 256              	.LBE18:
 257              	.LBE22:
 201:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 258              		.loc 1 201 0
 259 0014 A842     		cmp	r0, r5
 260 0016 A646     		mov	lr, r4
 261 0018 3746     		mov	r7, r6
 262 001a 53D0     		beq	.L23
 203:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 263              		.loc 1 203 0
 264 001c 2C4B     		ldr	r3, .L44+8
 265 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 14


 266 0020 D2B2     		uxtb	r2, r2
 267              	.LVL4:
 205:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         {
 268              		.loc 1 205 0
 269 0022 BCF1000F 		cmp	ip, #0
 270 0026 0FD1     		bne	.L26
 205:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         {
 271              		.loc 1 205 0 is_stmt 0 discriminator 1
 272 0028 3DB1     		cbz	r5, .L27
 205:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         {
 273              		.loc 1 205 0 discriminator 2
 274 002a 68B9     		cbnz	r0, .L26
 220:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CY_SET_REG16(ADC_SAR_A_theACLK_DIV_PTR, clkDivider);
 275              		.loc 1 220 0 is_stmt 1
 276 002c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 277 002e 43F04003 		orr	r3, r3, #64
 278 0032 2370     		strb	r3, [r4]
 221:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 279              		.loc 1 221 0
 280 0034 3080     		strh	r0, [r6]	@ movhi
 281 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 282              	.L27:
 213:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 ADC_SAR_A_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 283              		.loc 1 213 0
 284 003a 3080     		strh	r0, [r6]	@ movhi
 214:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 285              		.loc 1 214 0
 286 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 287 003e 03F0BF03 		and	r3, r3, #191
 288 0042 2370     		strb	r3, [r4]
 289 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 290              	.L26:
 203:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 291              		.loc 1 203 0
 292 0048 02F00202 		and	r2, r2, #2
 293              	.LVL5:
 227:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
 294              		.loc 1 227 0
 295 004c 02F0FF06 		and	r6, r2, #255
 296 0050 1AB3     		cbz	r2, .L30
 233:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 297              		.loc 1 233 0
 298 0052 DFF888C0 		ldr	ip, .L44+20
 229:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 299              		.loc 1 229 0
 300 0056 1F4A     		ldr	r2, .L44+12
 301 0058 0024     		movs	r4, #0
 233:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 302              		.loc 1 233 0
 303 005a 4FF00208 		mov	r8, #2
 229:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 304              		.loc 1 229 0
 305 005e 1470     		strb	r4, [r2]
 233:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 306              		.loc 1 233 0
 307 0060 8CF80080 		strb	r8, [ip]
 234:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #else
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 15


 308              		.loc 1 234 0
 309 0064 0CF8044C 		strb	r4, [ip, #-4]
 240:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 310              		.loc 1 240 0
 311 0068 1CF80C4C 		ldrb	r4, [ip, #-12]	@ zero_extendqisi2
 312 006c 04F07F04 		and	r4, r4, #127
 313 0070 0CF80C4C 		strb	r4, [ip, #-12]
 243:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 {
 314              		.loc 1 243 0
 315 0074 9EF80040 		ldrb	r4, [lr]	@ zero_extendqisi2
 316 0078 2407     		lsls	r4, r4, #28
 317 007a 00D5     		bpl	.L31
 243:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 {
 318              		.loc 1 243 0 is_stmt 0 discriminator 1
 319 007c 68B9     		cbnz	r0, .L30
 320              	.L31:
 246:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 321              		.loc 1 246 0 is_stmt 1
 322 007e 164C     		ldr	r4, .L44+16
 323 0080 2580     		strh	r5, [r4]	@ movhi
 247:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 324              		.loc 1 247 0
 325 0082 0724     		movs	r4, #7
 326 0084 1470     		strb	r4, [r2]
 327              	.L33:
 250:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 328              		.loc 1 250 0 discriminator 1
 329 0086 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 330 0088 14F00104 		ands	r4, r4, #1
 331 008c FBD1     		bne	.L33
 253:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 332              		.loc 1 253 0
 333 008e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 334 0090 02F0FD02 		and	r2, r2, #253
 335 0094 1A70     		strb	r2, [r3]
 257:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 336              		.loc 1 257 0
 337 0096 0F4A     		ldr	r2, .L44+12
 338 0098 1470     		strb	r4, [r2]
 339              	.L30:
 263:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             {
 340              		.loc 1 263 0
 341 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 342 009c 0C4A     		ldr	r2, .L44+8
 343 009e 9C07     		lsls	r4, r3, #30
 344 00a0 0CD5     		bpl	.L34
 266:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 345              		.loc 1 266 0
 346 00a2 0D4B     		ldr	r3, .L44+16
 268:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 347              		.loc 1 268 0
 348 00a4 0029     		cmp	r1, #0
 266:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 349              		.loc 1 266 0
 350 00a6 1880     		strh	r0, [r3]	@ movhi
 268:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 351              		.loc 1 268 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 16


 352 00a8 14BF     		ite	ne
 353 00aa 0322     		movne	r2, #3
 354 00ac 0122     		moveq	r2, #1
 355 00ae 013B     		subs	r3, r3, #1
 356 00b0 1A70     		strb	r2, [r3]
 357              	.L36:
 269:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 358              		.loc 1 269 0 discriminator 1
 359 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 360 00b4 D207     		lsls	r2, r2, #31
 361 00b6 FCD4     		bmi	.L36
 362 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 363              	.L34:
 274:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 				ADC_SAR_A_theACLK_CLKEN |= enabled;
 364              		.loc 1 274 0
 365 00bc 3880     		strh	r0, [r7]	@ movhi
 275:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             }
 366              		.loc 1 275 0
 367 00be 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 368 00c0 3343     		orrs	r3, r3, r6
 369 00c2 1370     		strb	r3, [r2]
 370              	.L23:
 371 00c4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 372              	.L45:
 373              		.align	2
 374              	.L44:
 375 00c8 06410040 		.word	1073758470
 376 00cc 04410040 		.word	1073758468
 377 00d0 A1430040 		.word	1073759137
 378 00d4 01400040 		.word	1073758209
 379 00d8 02400040 		.word	1073758210
 380 00dc 14400040 		.word	1073758228
 381              		.cfi_endproc
 382              	.LFE4:
 383              		.size	ADC_SAR_A_theACLK_SetDividerRegister, .-ADC_SAR_A_theACLK_SetDividerRegister
 384              		.section	.text.ADC_SAR_A_theACLK_GetDividerRegister,"ax",%progbits
 385              		.align	1
 386              		.global	ADC_SAR_A_theACLK_GetDividerRegister
 387              		.thumb
 388              		.thumb_func
 389              		.type	ADC_SAR_A_theACLK_GetDividerRegister, %function
 390              	ADC_SAR_A_theACLK_GetDividerRegister:
 391              	.LFB5:
 298:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return CY_GET_REG16(ADC_SAR_A_theACLK_DIV_PTR);
 392              		.loc 1 298 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 397              		.loc 1 299 0
 398 0000 014B     		ldr	r3, .L47
 399 0002 1888     		ldrh	r0, [r3]
 300:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 400              		.loc 1 300 0
 401 0004 80B2     		uxth	r0, r0
 402 0006 7047     		bx	lr
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 17


 403              	.L48:
 404              		.align	2
 405              	.L47:
 406 0008 04410040 		.word	1073758468
 407              		.cfi_endproc
 408              	.LFE5:
 409              		.size	ADC_SAR_A_theACLK_GetDividerRegister, .-ADC_SAR_A_theACLK_GetDividerRegister
 410              		.section	.text.ADC_SAR_A_theACLK_SetModeRegister,"ax",%progbits
 411              		.align	1
 412              		.global	ADC_SAR_A_theACLK_SetModeRegister
 413              		.thumb
 414              		.thumb_func
 415              		.type	ADC_SAR_A_theACLK_SetModeRegister, %function
 416              	ADC_SAR_A_theACLK_SetModeRegister:
 417              	.LFB6:
 333:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_A_theACLK_MODE_MASK;
 418              		.loc 1 333 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423              	.LVL6:
 334:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 424              		.loc 1 334 0
 425 0000 034A     		ldr	r2, .L50
 426 0002 00F0F800 		and	r0, r0, #248
 427              	.LVL7:
 428 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 429 0008 0343     		orrs	r3, r3, r0
 430 000a 1370     		strb	r3, [r2]
 431 000c 7047     		bx	lr
 432              	.L51:
 433 000e 00BF     		.align	2
 434              	.L50:
 435 0010 06410040 		.word	1073758470
 436              		.cfi_endproc
 437              	.LFE6:
 438              		.size	ADC_SAR_A_theACLK_SetModeRegister, .-ADC_SAR_A_theACLK_SetModeRegister
 439              		.section	.text.ADC_SAR_A_theACLK_ClearModeRegister,"ax",%progbits
 440              		.align	1
 441              		.global	ADC_SAR_A_theACLK_ClearModeRegister
 442              		.thumb
 443              		.thumb_func
 444              		.type	ADC_SAR_A_theACLK_ClearModeRegister, %function
 445              	ADC_SAR_A_theACLK_ClearModeRegister:
 446              	.LFB7:
 368:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_A_theACLK_MODE_MA
 447              		.loc 1 368 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452              	.LVL8:
 369:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 453              		.loc 1 369 0
 454 0000 C043     		mvns	r0, r0
 455              	.LVL9:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 18


 456 0002 034B     		ldr	r3, .L53
 457 0004 40F00700 		orr	r0, r0, #7
 458 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 459 000a 1040     		ands	r0, r0, r2
 460 000c 1870     		strb	r0, [r3]
 461 000e 7047     		bx	lr
 462              	.L54:
 463              		.align	2
 464              	.L53:
 465 0010 06410040 		.word	1073758470
 466              		.cfi_endproc
 467              	.LFE7:
 468              		.size	ADC_SAR_A_theACLK_ClearModeRegister, .-ADC_SAR_A_theACLK_ClearModeRegister
 469              		.section	.text.ADC_SAR_A_theACLK_GetModeRegister,"ax",%progbits
 470              		.align	1
 471              		.global	ADC_SAR_A_theACLK_GetModeRegister
 472              		.thumb
 473              		.thumb_func
 474              		.type	ADC_SAR_A_theACLK_GetModeRegister, %function
 475              	ADC_SAR_A_theACLK_GetModeRegister:
 476              	.LFB8:
 389:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return ADC_SAR_A_theACLK_MOD_SRC & (uint8)(ADC_SAR_A_theACLK_MODE_MASK);
 477              		.loc 1 389 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 390:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 482              		.loc 1 390 0
 483 0000 024B     		ldr	r3, .L56
 484 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 485              		.loc 1 391 0
 486 0004 00F0F800 		and	r0, r0, #248
 487 0008 7047     		bx	lr
 488              	.L57:
 489 000a 00BF     		.align	2
 490              	.L56:
 491 000c 06410040 		.word	1073758470
 492              		.cfi_endproc
 493              	.LFE8:
 494              		.size	ADC_SAR_A_theACLK_GetModeRegister, .-ADC_SAR_A_theACLK_GetModeRegister
 495              		.section	.text.ADC_SAR_A_theACLK_SetSourceRegister,"ax",%progbits
 496              		.align	1
 497              		.global	ADC_SAR_A_theACLK_SetSourceRegister
 498              		.thumb
 499              		.thumb_func
 500              		.type	ADC_SAR_A_theACLK_SetSourceRegister, %function
 501              	ADC_SAR_A_theACLK_SetSourceRegister:
 502              	.LFB9:
 420:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     uint16 currDiv = ADC_SAR_A_theACLK_GetDividerRegister();
 503              		.loc 1 420 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508              	.LVL10:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 19


 509              	.LBB23:
 510              	.LBB24:
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 511              		.loc 1 299 0
 512 0000 124B     		ldr	r3, .L66
 513 0002 1A88     		ldrh	r2, [r3]
 514              	.LBE24:
 515              	.LBE23:
 516              	.LBB26:
 517              	.LBB27:
 518              		.loc 1 466 0
 519 0004 0233     		adds	r3, r3, #2
 520 0006 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 521              	.LBE27:
 522              	.LBE26:
 523              	.LBB28:
 524              	.LBB25:
 299:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 525              		.loc 1 299 0
 526 0008 92B2     		uxth	r2, r2
 527              	.LBE25:
 528              	.LBE28:
 424:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 529              		.loc 1 424 0
 530 000a 11F0070F 		tst	r1, #7
 531 000e 1946     		mov	r1, r3
 532 0010 09D0     		beq	.L59
 424:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 533              		.loc 1 424 0 is_stmt 0 discriminator 1
 534 0012 A0B9     		cbnz	r0, .L60
 425:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 535              		.loc 1 425 0 is_stmt 1
 536 0014 9AB9     		cbnz	r2, .L60
 429:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC =
 537              		.loc 1 429 0
 538 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 539 0018 42F04002 		orr	r2, r2, #64
 540 001c 1A70     		strb	r2, [r3]
 431:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 541              		.loc 1 431 0
 542 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (ADC_SAR_A_theACLK_MOD_SRC & (uint8)(~ADC_SAR_A_theACLK_SRC_SEL_MSK)) | clkSource;
 543              		.loc 1 430 0
 544 0020 02F0F802 		and	r2, r2, #248
 545 0024 09E0     		b	.L65
 546              	.L59:
 433:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 547              		.loc 1 433 0 discriminator 1
 548 0026 50B1     		cbz	r0, .L60
 434:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     {
 549              		.loc 1 434 0
 550 0028 4AB9     		cbnz	r2, .L60
 439:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****         ADC_SAR_A_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 551              		.loc 1 439 0
 552 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (ADC_SAR_A_theACLK_MOD_SRC & (uint8)(~ADC_SAR_A_theACLK_SRC_SEL_MSK)) | clkSource;
 553              		.loc 1 438 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 20


 554 002c 02F0F802 		and	r2, r2, #248
 555 0030 1043     		orrs	r0, r0, r2
 556              	.LVL11:
 557 0032 1870     		strb	r0, [r3]
 440:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 558              		.loc 1 440 0
 559 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 560 0036 02F0BF02 		and	r2, r2, #191
 561              	.L65:
 562 003a 1A70     		strb	r2, [r3]
 563 003c 7047     		bx	lr
 564              	.LVL12:
 565              	.L60:
 445:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     }
 566              		.loc 1 445 0
 567 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 444:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****             (ADC_SAR_A_theACLK_MOD_SRC & (uint8)(~ADC_SAR_A_theACLK_SRC_SEL_MSK)) | clkSource;
 568              		.loc 1 444 0
 569 0040 03F0F803 		and	r3, r3, #248
 570 0044 1843     		orrs	r0, r0, r3
 571              	.LVL13:
 572 0046 0870     		strb	r0, [r1]
 573 0048 7047     		bx	lr
 574              	.L67:
 575 004a 00BF     		.align	2
 576              	.L66:
 577 004c 04410040 		.word	1073758468
 578              		.cfi_endproc
 579              	.LFE9:
 580              		.size	ADC_SAR_A_theACLK_SetSourceRegister, .-ADC_SAR_A_theACLK_SetSourceRegister
 581              		.section	.text.ADC_SAR_A_theACLK_GetSourceRegister,"ax",%progbits
 582              		.align	1
 583              		.global	ADC_SAR_A_theACLK_GetSourceRegister
 584              		.thumb
 585              		.thumb_func
 586              		.type	ADC_SAR_A_theACLK_GetSourceRegister, %function
 587              	ADC_SAR_A_theACLK_GetSourceRegister:
 588              	.LFB10:
 465:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return ADC_SAR_A_theACLK_MOD_SRC & ADC_SAR_A_theACLK_SRC_SEL_MSK;
 589              		.loc 1 465 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594              		.loc 1 466 0
 595 0000 024B     		ldr	r3, .L69
 596 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 597              		.loc 1 467 0
 598 0004 00F00700 		and	r0, r0, #7
 599 0008 7047     		bx	lr
 600              	.L70:
 601 000a 00BF     		.align	2
 602              	.L69:
 603 000c 06410040 		.word	1073758470
 604              		.cfi_endproc
 605              	.LFE10:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 21


 606              		.size	ADC_SAR_A_theACLK_GetSourceRegister, .-ADC_SAR_A_theACLK_GetSourceRegister
 607              		.section	.text.ADC_SAR_A_theACLK_SetPhaseRegister,"ax",%progbits
 608              		.align	1
 609              		.global	ADC_SAR_A_theACLK_SetPhaseRegister
 610              		.thumb
 611              		.thumb_func
 612              		.type	ADC_SAR_A_theACLK_SetPhaseRegister, %function
 613              	ADC_SAR_A_theACLK_SetPhaseRegister:
 614              	.LFB11:
 468:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 469:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 470:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** #if defined(ADC_SAR_A_theACLK__CFG3)
 471:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 472:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 473:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 474:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_SetPhaseRegister
 475:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 476:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 477:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 478:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  delay to avoid glitches.
 481:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 482:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 483:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *   produces a 10ns delay.
 487:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 488:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 489:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 490:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 491:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 492:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** void ADC_SAR_A_theACLK_SetPhaseRegister(uint8 clkPhase) 
 493:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 615              		.loc 1 493 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620              	.LVL14:
 494:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     ADC_SAR_A_theACLK_PHASE = clkPhase & ADC_SAR_A_theACLK_PHASE_MASK;
 621              		.loc 1 494 0
 622 0000 024B     		ldr	r3, .L72
 623 0002 00F00F00 		and	r0, r0, #15
 624              	.LVL15:
 625 0006 1870     		strb	r0, [r3]
 626 0008 7047     		bx	lr
 627              	.L73:
 628 000a 00BF     		.align	2
 629              	.L72:
 630 000c 07410040 		.word	1073758471
 631              		.cfi_endproc
 632              	.LFE11:
 633              		.size	ADC_SAR_A_theACLK_SetPhaseRegister, .-ADC_SAR_A_theACLK_SetPhaseRegister
 634              		.section	.text.ADC_SAR_A_theACLK_GetPhaseRegister,"ax",%progbits
 635              		.align	1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 22


 636              		.global	ADC_SAR_A_theACLK_GetPhaseRegister
 637              		.thumb
 638              		.thumb_func
 639              		.type	ADC_SAR_A_theACLK_GetPhaseRegister, %function
 640              	ADC_SAR_A_theACLK_GetPhaseRegister:
 641              	.LFB12:
 495:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 496:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 497:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** 
 498:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** /*******************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Function Name: ADC_SAR_A_theACLK_GetPhase
 500:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** ********************************************************************************
 501:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 502:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Summary:
 503:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  for analog clocks.
 505:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  None
 508:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** * Returns:
 510:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** *******************************************************************************/
 513:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** uint8 ADC_SAR_A_theACLK_GetPhaseRegister(void) 
 514:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** {
 642              		.loc 1 514 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 515:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c ****     return ADC_SAR_A_theACLK_PHASE & ADC_SAR_A_theACLK_PHASE_MASK;
 647              		.loc 1 515 0
 648 0000 024B     		ldr	r3, .L75
 649 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 516:Generated_Source\PSoC5/ADC_SAR_A_theACLK.c **** }
 650              		.loc 1 516 0
 651 0004 00F00F00 		and	r0, r0, #15
 652 0008 7047     		bx	lr
 653              	.L76:
 654 000a 00BF     		.align	2
 655              	.L75:
 656 000c 07410040 		.word	1073758471
 657              		.cfi_endproc
 658              	.LFE12:
 659              		.size	ADC_SAR_A_theACLK_GetPhaseRegister, .-ADC_SAR_A_theACLK_GetPhaseRegister
 660              		.text
 661              	.Letext0:
 662              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 663              		.section	.debug_info,"",%progbits
 664              	.Ldebug_info0:
 665 0000 D6020000 		.4byte	0x2d6
 666 0004 0400     		.2byte	0x4
 667 0006 00000000 		.4byte	.Ldebug_abbrev0
 668 000a 04       		.byte	0x4
 669 000b 01       		.uleb128 0x1
 670 000c 19020000 		.4byte	.LASF40
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 23


 671 0010 0C       		.byte	0xc
 672 0011 BF020000 		.4byte	.LASF41
 673 0015 FE000000 		.4byte	.LASF42
 674 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 675 001d 00000000 		.4byte	0
 676 0021 00000000 		.4byte	.Ldebug_line0
 677 0025 02       		.uleb128 0x2
 678 0026 01       		.byte	0x1
 679 0027 06       		.byte	0x6
 680 0028 E9010000 		.4byte	.LASF0
 681 002c 02       		.uleb128 0x2
 682 002d 01       		.byte	0x1
 683 002e 08       		.byte	0x8
 684 002f CF010000 		.4byte	.LASF1
 685 0033 02       		.uleb128 0x2
 686 0034 02       		.byte	0x2
 687 0035 05       		.byte	0x5
 688 0036 48000000 		.4byte	.LASF2
 689 003a 02       		.uleb128 0x2
 690 003b 02       		.byte	0x2
 691 003c 07       		.byte	0x7
 692 003d A7020000 		.4byte	.LASF3
 693 0041 02       		.uleb128 0x2
 694 0042 04       		.byte	0x4
 695 0043 05       		.byte	0x5
 696 0044 49010000 		.4byte	.LASF4
 697 0048 02       		.uleb128 0x2
 698 0049 04       		.byte	0x4
 699 004a 07       		.byte	0x7
 700 004b 02030000 		.4byte	.LASF5
 701 004f 02       		.uleb128 0x2
 702 0050 08       		.byte	0x8
 703 0051 05       		.byte	0x5
 704 0052 F0000000 		.4byte	.LASF6
 705 0056 02       		.uleb128 0x2
 706 0057 08       		.byte	0x8
 707 0058 07       		.byte	0x7
 708 0059 F5010000 		.4byte	.LASF7
 709 005d 03       		.uleb128 0x3
 710 005e 04       		.byte	0x4
 711 005f 05       		.byte	0x5
 712 0060 696E7400 		.ascii	"int\000"
 713 0064 02       		.uleb128 0x2
 714 0065 04       		.byte	0x4
 715 0066 07       		.byte	0x7
 716 0067 0C020000 		.4byte	.LASF8
 717 006b 04       		.uleb128 0x4
 718 006c BA000000 		.4byte	.LASF9
 719 0070 02       		.byte	0x2
 720 0071 9201     		.2byte	0x192
 721 0073 2C000000 		.4byte	0x2c
 722 0077 04       		.uleb128 0x4
 723 0078 A4000000 		.4byte	.LASF10
 724 007c 02       		.byte	0x2
 725 007d 9301     		.2byte	0x193
 726 007f 3A000000 		.4byte	0x3a
 727 0083 02       		.uleb128 0x2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 24


 728 0084 04       		.byte	0x4
 729 0085 04       		.byte	0x4
 730 0086 EA000000 		.4byte	.LASF11
 731 008a 02       		.uleb128 0x2
 732 008b 08       		.byte	0x8
 733 008c 04       		.byte	0x4
 734 008d 14030000 		.4byte	.LASF12
 735 0091 02       		.uleb128 0x2
 736 0092 01       		.byte	0x1
 737 0093 08       		.byte	0x8
 738 0094 BA020000 		.4byte	.LASF13
 739 0098 04       		.uleb128 0x4
 740 0099 FD020000 		.4byte	.LASF14
 741 009d 02       		.byte	0x2
 742 009e 3C02     		.2byte	0x23c
 743 00a0 A4000000 		.4byte	0xa4
 744 00a4 05       		.uleb128 0x5
 745 00a5 6B000000 		.4byte	0x6b
 746 00a9 04       		.uleb128 0x4
 747 00aa 42000000 		.4byte	.LASF15
 748 00ae 02       		.byte	0x2
 749 00af 3D02     		.2byte	0x23d
 750 00b1 B5000000 		.4byte	0xb5
 751 00b5 05       		.uleb128 0x5
 752 00b6 77000000 		.4byte	0x77
 753 00ba 06       		.uleb128 0x6
 754 00bb AA010000 		.4byte	.LASF16
 755 00bf 01       		.byte	0x1
 756 00c0 2901     		.2byte	0x129
 757 00c2 77000000 		.4byte	0x77
 758 00c6 01       		.byte	0x1
 759 00c7 06       		.uleb128 0x6
 760 00c8 5C000000 		.4byte	.LASF17
 761 00cc 01       		.byte	0x1
 762 00cd D001     		.2byte	0x1d0
 763 00cf 6B000000 		.4byte	0x6b
 764 00d3 01       		.byte	0x1
 765 00d4 07       		.uleb128 0x7
 766 00d5 61030000 		.4byte	.LASF18
 767 00d9 01       		.byte	0x1
 768 00da 2D       		.byte	0x2d
 769 00db 00000000 		.4byte	.LFB0
 770 00df 18000000 		.4byte	.LFE0-.LFB0
 771 00e3 01       		.uleb128 0x1
 772 00e4 9C       		.byte	0x9c
 773 00e5 07       		.uleb128 0x7
 774 00e6 23000000 		.4byte	.LASF19
 775 00ea 01       		.byte	0x1
 776 00eb 47       		.byte	0x47
 777 00ec 00000000 		.4byte	.LFB1
 778 00f0 18000000 		.4byte	.LFE1-.LFB1
 779 00f4 01       		.uleb128 0x1
 780 00f5 9C       		.byte	0x9c
 781 00f6 08       		.uleb128 0x8
 782 00f7 1B030000 		.4byte	.LASF20
 783 00fb 01       		.byte	0x1
 784 00fc 64       		.byte	0x64
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 25


 785 00fd 00000000 		.4byte	.LFB2
 786 0101 6C000000 		.4byte	.LFE2-.LFB2
 787 0105 01       		.uleb128 0x1
 788 0106 9C       		.byte	0x9c
 789 0107 25010000 		.4byte	0x125
 790 010b 09       		.uleb128 0x9
 791 010c 0A000000 		.4byte	.LBB10
 792 0110 62000000 		.4byte	.LBE10-.LBB10
 793 0114 0A       		.uleb128 0xa
 794 0115 F2020000 		.4byte	.LASF26
 795 0119 01       		.byte	0x1
 796 011a 69       		.byte	0x69
 797 011b 77000000 		.4byte	0x77
 798 011f 00000000 		.4byte	.LLST0
 799 0123 00       		.byte	0
 800 0124 00       		.byte	0
 801 0125 08       		.uleb128 0x8
 802 0126 C0000000 		.4byte	.LASF21
 803 012a 01       		.byte	0x1
 804 012b 9D       		.byte	0x9d
 805 012c 00000000 		.4byte	.LFB3
 806 0130 18000000 		.4byte	.LFE3-.LFB3
 807 0134 01       		.uleb128 0x1
 808 0135 9C       		.byte	0x9c
 809 0136 48010000 		.4byte	0x148
 810 013a 0B       		.uleb128 0xb
 811 013b 9B010000 		.4byte	.LASF23
 812 013f 01       		.byte	0x1
 813 0140 9D       		.byte	0x9d
 814 0141 6B000000 		.4byte	0x6b
 815 0145 01       		.uleb128 0x1
 816 0146 50       		.byte	0x50
 817 0147 00       		.byte	0
 818 0148 08       		.uleb128 0x8
 819 0149 76010000 		.4byte	.LASF22
 820 014d 01       		.byte	0x1
 821 014e C1       		.byte	0xc1
 822 014f 00000000 		.4byte	.LFB4
 823 0153 E0000000 		.4byte	.LFE4-.LFB4
 824 0157 01       		.uleb128 0x1
 825 0158 9C       		.byte	0x9c
 826 0159 BB010000 		.4byte	0x1bb
 827 015d 0B       		.uleb128 0xb
 828 015e DF000000 		.4byte	.LASF24
 829 0162 01       		.byte	0x1
 830 0163 C1       		.byte	0xc1
 831 0164 77000000 		.4byte	0x77
 832 0168 01       		.uleb128 0x1
 833 0169 50       		.byte	0x50
 834 016a 0B       		.uleb128 0xb
 835 016b AB000000 		.4byte	.LASF25
 836 016f 01       		.byte	0x1
 837 0170 C1       		.byte	0xc1
 838 0171 6B000000 		.4byte	0x6b
 839 0175 01       		.uleb128 0x1
 840 0176 51       		.byte	0x51
 841 0177 0A       		.uleb128 0xa
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 26


 842 0178 37030000 		.4byte	.LASF27
 843 017c 01       		.byte	0x1
 844 017d C4       		.byte	0xc4
 845 017e 6B000000 		.4byte	0x6b
 846 0182 13000000 		.4byte	.LLST1
 847 0186 0C       		.uleb128 0xc
 848 0187 EA020000 		.4byte	.LASF28
 849 018b 01       		.byte	0x1
 850 018c C6       		.byte	0xc6
 851 018d 6B000000 		.4byte	0x6b
 852 0191 0C       		.uleb128 0xc
 853 0192 F2020000 		.4byte	.LASF26
 854 0196 01       		.byte	0x1
 855 0197 C7       		.byte	0xc7
 856 0198 77000000 		.4byte	0x77
 857 019c 0D       		.uleb128 0xd
 858 019d C7000000 		.4byte	0xc7
 859 01a1 04000000 		.4byte	.LBB11
 860 01a5 00000000 		.4byte	.Ldebug_ranges0+0
 861 01a9 01       		.byte	0x1
 862 01aa C6       		.byte	0xc6
 863 01ab 0D       		.uleb128 0xd
 864 01ac BA000000 		.4byte	0xba
 865 01b0 06000000 		.4byte	.LBB15
 866 01b4 20000000 		.4byte	.Ldebug_ranges0+0x20
 867 01b8 01       		.byte	0x1
 868 01b9 C7       		.byte	0xc7
 869 01ba 00       		.byte	0
 870 01bb 0E       		.uleb128 0xe
 871 01bc BA000000 		.4byte	0xba
 872 01c0 00000000 		.4byte	.LFB5
 873 01c4 0C000000 		.4byte	.LFE5-.LFB5
 874 01c8 01       		.uleb128 0x1
 875 01c9 9C       		.byte	0x9c
 876 01ca 0F       		.uleb128 0xf
 877 01cb 3F030000 		.4byte	.LASF29
 878 01cf 01       		.byte	0x1
 879 01d0 4C01     		.2byte	0x14c
 880 01d2 00000000 		.4byte	.LFB6
 881 01d6 14000000 		.4byte	.LFE6-.LFB6
 882 01da 01       		.uleb128 0x1
 883 01db 9C       		.byte	0x9c
 884 01dc F1010000 		.4byte	0x1f1
 885 01e0 10       		.uleb128 0x10
 886 01e1 DD010000 		.4byte	.LASF30
 887 01e5 01       		.byte	0x1
 888 01e6 4C01     		.2byte	0x14c
 889 01e8 6B000000 		.4byte	0x6b
 890 01ec 2A000000 		.4byte	.LLST2
 891 01f0 00       		.byte	0
 892 01f1 0F       		.uleb128 0xf
 893 01f2 52010000 		.4byte	.LASF31
 894 01f6 01       		.byte	0x1
 895 01f7 6F01     		.2byte	0x16f
 896 01f9 00000000 		.4byte	.LFB7
 897 01fd 14000000 		.4byte	.LFE7-.LFB7
 898 0201 01       		.uleb128 0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 27


 899 0202 9C       		.byte	0x9c
 900 0203 18020000 		.4byte	0x218
 901 0207 10       		.uleb128 0x10
 902 0208 DD010000 		.4byte	.LASF30
 903 020c 01       		.byte	0x1
 904 020d 6F01     		.2byte	0x16f
 905 020f 6B000000 		.4byte	0x6b
 906 0213 4B000000 		.4byte	.LLST3
 907 0217 00       		.byte	0
 908 0218 11       		.uleb128 0x11
 909 0219 9C030000 		.4byte	.LASF38
 910 021d 01       		.byte	0x1
 911 021e 8401     		.2byte	0x184
 912 0220 6B000000 		.4byte	0x6b
 913 0224 00000000 		.4byte	.LFB8
 914 0228 10000000 		.4byte	.LFE8-.LFB8
 915 022c 01       		.uleb128 0x1
 916 022d 9C       		.byte	0x9c
 917 022e 0F       		.uleb128 0xf
 918 022f 80000000 		.4byte	.LASF32
 919 0233 01       		.byte	0x1
 920 0234 A301     		.2byte	0x1a3
 921 0236 00000000 		.4byte	.LFB9
 922 023a 50000000 		.4byte	.LFE9-.LFB9
 923 023e 01       		.uleb128 0x1
 924 023f 9C       		.byte	0x9c
 925 0240 8D020000 		.4byte	0x28d
 926 0244 10       		.uleb128 0x10
 927 0245 52000000 		.4byte	.LASF33
 928 0249 01       		.byte	0x1
 929 024a A301     		.2byte	0x1a3
 930 024c 6B000000 		.4byte	0x6b
 931 0250 6C000000 		.4byte	.LLST4
 932 0254 12       		.uleb128 0x12
 933 0255 3A000000 		.4byte	.LASF34
 934 0259 01       		.byte	0x1
 935 025a A501     		.2byte	0x1a5
 936 025c 77000000 		.4byte	0x77
 937 0260 12       		.uleb128 0x12
 938 0261 B3000000 		.4byte	.LASF35
 939 0265 01       		.byte	0x1
 940 0266 A601     		.2byte	0x1a6
 941 0268 6B000000 		.4byte	0x6b
 942 026c 13       		.uleb128 0x13
 943 026d BA000000 		.4byte	0xba
 944 0271 00000000 		.4byte	.LBB23
 945 0275 40000000 		.4byte	.Ldebug_ranges0+0x40
 946 0279 01       		.byte	0x1
 947 027a A501     		.2byte	0x1a5
 948 027c 14       		.uleb128 0x14
 949 027d C7000000 		.4byte	0xc7
 950 0281 04000000 		.4byte	.LBB26
 951 0285 04000000 		.4byte	.LBE26-.LBB26
 952 0289 01       		.byte	0x1
 953 028a A601     		.2byte	0x1a6
 954 028c 00       		.byte	0
 955 028d 0E       		.uleb128 0xe
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 28


 956 028e C7000000 		.4byte	0xc7
 957 0292 00000000 		.4byte	.LFB10
 958 0296 10000000 		.4byte	.LFE10-.LFB10
 959 029a 01       		.uleb128 0x1
 960 029b 9C       		.byte	0x9c
 961 029c 0F       		.uleb128 0xf
 962 029d 00000000 		.4byte	.LASF36
 963 02a1 01       		.byte	0x1
 964 02a2 EC01     		.2byte	0x1ec
 965 02a4 00000000 		.4byte	.LFB11
 966 02a8 10000000 		.4byte	.LFE11-.LFB11
 967 02ac 01       		.uleb128 0x1
 968 02ad 9C       		.byte	0x9c
 969 02ae C3020000 		.4byte	0x2c3
 970 02b2 10       		.uleb128 0x10
 971 02b3 A1010000 		.4byte	.LASF37
 972 02b7 01       		.byte	0x1
 973 02b8 EC01     		.2byte	0x1ec
 974 02ba 6B000000 		.4byte	0x6b
 975 02be A6000000 		.4byte	.LLST5
 976 02c2 00       		.byte	0
 977 02c3 11       		.uleb128 0x11
 978 02c4 79030000 		.4byte	.LASF39
 979 02c8 01       		.byte	0x1
 980 02c9 0102     		.2byte	0x201
 981 02cb 6B000000 		.4byte	0x6b
 982 02cf 00000000 		.4byte	.LFB12
 983 02d3 10000000 		.4byte	.LFE12-.LFB12
 984 02d7 01       		.uleb128 0x1
 985 02d8 9C       		.byte	0x9c
 986 02d9 00       		.byte	0
 987              		.section	.debug_abbrev,"",%progbits
 988              	.Ldebug_abbrev0:
 989 0000 01       		.uleb128 0x1
 990 0001 11       		.uleb128 0x11
 991 0002 01       		.byte	0x1
 992 0003 25       		.uleb128 0x25
 993 0004 0E       		.uleb128 0xe
 994 0005 13       		.uleb128 0x13
 995 0006 0B       		.uleb128 0xb
 996 0007 03       		.uleb128 0x3
 997 0008 0E       		.uleb128 0xe
 998 0009 1B       		.uleb128 0x1b
 999 000a 0E       		.uleb128 0xe
 1000 000b 55       		.uleb128 0x55
 1001 000c 17       		.uleb128 0x17
 1002 000d 11       		.uleb128 0x11
 1003 000e 01       		.uleb128 0x1
 1004 000f 10       		.uleb128 0x10
 1005 0010 17       		.uleb128 0x17
 1006 0011 00       		.byte	0
 1007 0012 00       		.byte	0
 1008 0013 02       		.uleb128 0x2
 1009 0014 24       		.uleb128 0x24
 1010 0015 00       		.byte	0
 1011 0016 0B       		.uleb128 0xb
 1012 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 29


 1013 0018 3E       		.uleb128 0x3e
 1014 0019 0B       		.uleb128 0xb
 1015 001a 03       		.uleb128 0x3
 1016 001b 0E       		.uleb128 0xe
 1017 001c 00       		.byte	0
 1018 001d 00       		.byte	0
 1019 001e 03       		.uleb128 0x3
 1020 001f 24       		.uleb128 0x24
 1021 0020 00       		.byte	0
 1022 0021 0B       		.uleb128 0xb
 1023 0022 0B       		.uleb128 0xb
 1024 0023 3E       		.uleb128 0x3e
 1025 0024 0B       		.uleb128 0xb
 1026 0025 03       		.uleb128 0x3
 1027 0026 08       		.uleb128 0x8
 1028 0027 00       		.byte	0
 1029 0028 00       		.byte	0
 1030 0029 04       		.uleb128 0x4
 1031 002a 16       		.uleb128 0x16
 1032 002b 00       		.byte	0
 1033 002c 03       		.uleb128 0x3
 1034 002d 0E       		.uleb128 0xe
 1035 002e 3A       		.uleb128 0x3a
 1036 002f 0B       		.uleb128 0xb
 1037 0030 3B       		.uleb128 0x3b
 1038 0031 05       		.uleb128 0x5
 1039 0032 49       		.uleb128 0x49
 1040 0033 13       		.uleb128 0x13
 1041 0034 00       		.byte	0
 1042 0035 00       		.byte	0
 1043 0036 05       		.uleb128 0x5
 1044 0037 35       		.uleb128 0x35
 1045 0038 00       		.byte	0
 1046 0039 49       		.uleb128 0x49
 1047 003a 13       		.uleb128 0x13
 1048 003b 00       		.byte	0
 1049 003c 00       		.byte	0
 1050 003d 06       		.uleb128 0x6
 1051 003e 2E       		.uleb128 0x2e
 1052 003f 00       		.byte	0
 1053 0040 3F       		.uleb128 0x3f
 1054 0041 19       		.uleb128 0x19
 1055 0042 03       		.uleb128 0x3
 1056 0043 0E       		.uleb128 0xe
 1057 0044 3A       		.uleb128 0x3a
 1058 0045 0B       		.uleb128 0xb
 1059 0046 3B       		.uleb128 0x3b
 1060 0047 05       		.uleb128 0x5
 1061 0048 27       		.uleb128 0x27
 1062 0049 19       		.uleb128 0x19
 1063 004a 49       		.uleb128 0x49
 1064 004b 13       		.uleb128 0x13
 1065 004c 20       		.uleb128 0x20
 1066 004d 0B       		.uleb128 0xb
 1067 004e 00       		.byte	0
 1068 004f 00       		.byte	0
 1069 0050 07       		.uleb128 0x7
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 30


 1070 0051 2E       		.uleb128 0x2e
 1071 0052 00       		.byte	0
 1072 0053 3F       		.uleb128 0x3f
 1073 0054 19       		.uleb128 0x19
 1074 0055 03       		.uleb128 0x3
 1075 0056 0E       		.uleb128 0xe
 1076 0057 3A       		.uleb128 0x3a
 1077 0058 0B       		.uleb128 0xb
 1078 0059 3B       		.uleb128 0x3b
 1079 005a 0B       		.uleb128 0xb
 1080 005b 27       		.uleb128 0x27
 1081 005c 19       		.uleb128 0x19
 1082 005d 11       		.uleb128 0x11
 1083 005e 01       		.uleb128 0x1
 1084 005f 12       		.uleb128 0x12
 1085 0060 06       		.uleb128 0x6
 1086 0061 40       		.uleb128 0x40
 1087 0062 18       		.uleb128 0x18
 1088 0063 9742     		.uleb128 0x2117
 1089 0065 19       		.uleb128 0x19
 1090 0066 00       		.byte	0
 1091 0067 00       		.byte	0
 1092 0068 08       		.uleb128 0x8
 1093 0069 2E       		.uleb128 0x2e
 1094 006a 01       		.byte	0x1
 1095 006b 3F       		.uleb128 0x3f
 1096 006c 19       		.uleb128 0x19
 1097 006d 03       		.uleb128 0x3
 1098 006e 0E       		.uleb128 0xe
 1099 006f 3A       		.uleb128 0x3a
 1100 0070 0B       		.uleb128 0xb
 1101 0071 3B       		.uleb128 0x3b
 1102 0072 0B       		.uleb128 0xb
 1103 0073 27       		.uleb128 0x27
 1104 0074 19       		.uleb128 0x19
 1105 0075 11       		.uleb128 0x11
 1106 0076 01       		.uleb128 0x1
 1107 0077 12       		.uleb128 0x12
 1108 0078 06       		.uleb128 0x6
 1109 0079 40       		.uleb128 0x40
 1110 007a 18       		.uleb128 0x18
 1111 007b 9742     		.uleb128 0x2117
 1112 007d 19       		.uleb128 0x19
 1113 007e 01       		.uleb128 0x1
 1114 007f 13       		.uleb128 0x13
 1115 0080 00       		.byte	0
 1116 0081 00       		.byte	0
 1117 0082 09       		.uleb128 0x9
 1118 0083 0B       		.uleb128 0xb
 1119 0084 01       		.byte	0x1
 1120 0085 11       		.uleb128 0x11
 1121 0086 01       		.uleb128 0x1
 1122 0087 12       		.uleb128 0x12
 1123 0088 06       		.uleb128 0x6
 1124 0089 00       		.byte	0
 1125 008a 00       		.byte	0
 1126 008b 0A       		.uleb128 0xa
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 31


 1127 008c 34       		.uleb128 0x34
 1128 008d 00       		.byte	0
 1129 008e 03       		.uleb128 0x3
 1130 008f 0E       		.uleb128 0xe
 1131 0090 3A       		.uleb128 0x3a
 1132 0091 0B       		.uleb128 0xb
 1133 0092 3B       		.uleb128 0x3b
 1134 0093 0B       		.uleb128 0xb
 1135 0094 49       		.uleb128 0x49
 1136 0095 13       		.uleb128 0x13
 1137 0096 02       		.uleb128 0x2
 1138 0097 17       		.uleb128 0x17
 1139 0098 00       		.byte	0
 1140 0099 00       		.byte	0
 1141 009a 0B       		.uleb128 0xb
 1142 009b 05       		.uleb128 0x5
 1143 009c 00       		.byte	0
 1144 009d 03       		.uleb128 0x3
 1145 009e 0E       		.uleb128 0xe
 1146 009f 3A       		.uleb128 0x3a
 1147 00a0 0B       		.uleb128 0xb
 1148 00a1 3B       		.uleb128 0x3b
 1149 00a2 0B       		.uleb128 0xb
 1150 00a3 49       		.uleb128 0x49
 1151 00a4 13       		.uleb128 0x13
 1152 00a5 02       		.uleb128 0x2
 1153 00a6 18       		.uleb128 0x18
 1154 00a7 00       		.byte	0
 1155 00a8 00       		.byte	0
 1156 00a9 0C       		.uleb128 0xc
 1157 00aa 34       		.uleb128 0x34
 1158 00ab 00       		.byte	0
 1159 00ac 03       		.uleb128 0x3
 1160 00ad 0E       		.uleb128 0xe
 1161 00ae 3A       		.uleb128 0x3a
 1162 00af 0B       		.uleb128 0xb
 1163 00b0 3B       		.uleb128 0x3b
 1164 00b1 0B       		.uleb128 0xb
 1165 00b2 49       		.uleb128 0x49
 1166 00b3 13       		.uleb128 0x13
 1167 00b4 00       		.byte	0
 1168 00b5 00       		.byte	0
 1169 00b6 0D       		.uleb128 0xd
 1170 00b7 1D       		.uleb128 0x1d
 1171 00b8 00       		.byte	0
 1172 00b9 31       		.uleb128 0x31
 1173 00ba 13       		.uleb128 0x13
 1174 00bb 52       		.uleb128 0x52
 1175 00bc 01       		.uleb128 0x1
 1176 00bd 55       		.uleb128 0x55
 1177 00be 17       		.uleb128 0x17
 1178 00bf 58       		.uleb128 0x58
 1179 00c0 0B       		.uleb128 0xb
 1180 00c1 59       		.uleb128 0x59
 1181 00c2 0B       		.uleb128 0xb
 1182 00c3 00       		.byte	0
 1183 00c4 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 32


 1184 00c5 0E       		.uleb128 0xe
 1185 00c6 2E       		.uleb128 0x2e
 1186 00c7 00       		.byte	0
 1187 00c8 31       		.uleb128 0x31
 1188 00c9 13       		.uleb128 0x13
 1189 00ca 11       		.uleb128 0x11
 1190 00cb 01       		.uleb128 0x1
 1191 00cc 12       		.uleb128 0x12
 1192 00cd 06       		.uleb128 0x6
 1193 00ce 40       		.uleb128 0x40
 1194 00cf 18       		.uleb128 0x18
 1195 00d0 9742     		.uleb128 0x2117
 1196 00d2 19       		.uleb128 0x19
 1197 00d3 00       		.byte	0
 1198 00d4 00       		.byte	0
 1199 00d5 0F       		.uleb128 0xf
 1200 00d6 2E       		.uleb128 0x2e
 1201 00d7 01       		.byte	0x1
 1202 00d8 3F       		.uleb128 0x3f
 1203 00d9 19       		.uleb128 0x19
 1204 00da 03       		.uleb128 0x3
 1205 00db 0E       		.uleb128 0xe
 1206 00dc 3A       		.uleb128 0x3a
 1207 00dd 0B       		.uleb128 0xb
 1208 00de 3B       		.uleb128 0x3b
 1209 00df 05       		.uleb128 0x5
 1210 00e0 27       		.uleb128 0x27
 1211 00e1 19       		.uleb128 0x19
 1212 00e2 11       		.uleb128 0x11
 1213 00e3 01       		.uleb128 0x1
 1214 00e4 12       		.uleb128 0x12
 1215 00e5 06       		.uleb128 0x6
 1216 00e6 40       		.uleb128 0x40
 1217 00e7 18       		.uleb128 0x18
 1218 00e8 9742     		.uleb128 0x2117
 1219 00ea 19       		.uleb128 0x19
 1220 00eb 01       		.uleb128 0x1
 1221 00ec 13       		.uleb128 0x13
 1222 00ed 00       		.byte	0
 1223 00ee 00       		.byte	0
 1224 00ef 10       		.uleb128 0x10
 1225 00f0 05       		.uleb128 0x5
 1226 00f1 00       		.byte	0
 1227 00f2 03       		.uleb128 0x3
 1228 00f3 0E       		.uleb128 0xe
 1229 00f4 3A       		.uleb128 0x3a
 1230 00f5 0B       		.uleb128 0xb
 1231 00f6 3B       		.uleb128 0x3b
 1232 00f7 05       		.uleb128 0x5
 1233 00f8 49       		.uleb128 0x49
 1234 00f9 13       		.uleb128 0x13
 1235 00fa 02       		.uleb128 0x2
 1236 00fb 17       		.uleb128 0x17
 1237 00fc 00       		.byte	0
 1238 00fd 00       		.byte	0
 1239 00fe 11       		.uleb128 0x11
 1240 00ff 2E       		.uleb128 0x2e
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 33


 1241 0100 00       		.byte	0
 1242 0101 3F       		.uleb128 0x3f
 1243 0102 19       		.uleb128 0x19
 1244 0103 03       		.uleb128 0x3
 1245 0104 0E       		.uleb128 0xe
 1246 0105 3A       		.uleb128 0x3a
 1247 0106 0B       		.uleb128 0xb
 1248 0107 3B       		.uleb128 0x3b
 1249 0108 05       		.uleb128 0x5
 1250 0109 27       		.uleb128 0x27
 1251 010a 19       		.uleb128 0x19
 1252 010b 49       		.uleb128 0x49
 1253 010c 13       		.uleb128 0x13
 1254 010d 11       		.uleb128 0x11
 1255 010e 01       		.uleb128 0x1
 1256 010f 12       		.uleb128 0x12
 1257 0110 06       		.uleb128 0x6
 1258 0111 40       		.uleb128 0x40
 1259 0112 18       		.uleb128 0x18
 1260 0113 9742     		.uleb128 0x2117
 1261 0115 19       		.uleb128 0x19
 1262 0116 00       		.byte	0
 1263 0117 00       		.byte	0
 1264 0118 12       		.uleb128 0x12
 1265 0119 34       		.uleb128 0x34
 1266 011a 00       		.byte	0
 1267 011b 03       		.uleb128 0x3
 1268 011c 0E       		.uleb128 0xe
 1269 011d 3A       		.uleb128 0x3a
 1270 011e 0B       		.uleb128 0xb
 1271 011f 3B       		.uleb128 0x3b
 1272 0120 05       		.uleb128 0x5
 1273 0121 49       		.uleb128 0x49
 1274 0122 13       		.uleb128 0x13
 1275 0123 00       		.byte	0
 1276 0124 00       		.byte	0
 1277 0125 13       		.uleb128 0x13
 1278 0126 1D       		.uleb128 0x1d
 1279 0127 00       		.byte	0
 1280 0128 31       		.uleb128 0x31
 1281 0129 13       		.uleb128 0x13
 1282 012a 52       		.uleb128 0x52
 1283 012b 01       		.uleb128 0x1
 1284 012c 55       		.uleb128 0x55
 1285 012d 17       		.uleb128 0x17
 1286 012e 58       		.uleb128 0x58
 1287 012f 0B       		.uleb128 0xb
 1288 0130 59       		.uleb128 0x59
 1289 0131 05       		.uleb128 0x5
 1290 0132 00       		.byte	0
 1291 0133 00       		.byte	0
 1292 0134 14       		.uleb128 0x14
 1293 0135 1D       		.uleb128 0x1d
 1294 0136 00       		.byte	0
 1295 0137 31       		.uleb128 0x31
 1296 0138 13       		.uleb128 0x13
 1297 0139 11       		.uleb128 0x11
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 34


 1298 013a 01       		.uleb128 0x1
 1299 013b 12       		.uleb128 0x12
 1300 013c 06       		.uleb128 0x6
 1301 013d 58       		.uleb128 0x58
 1302 013e 0B       		.uleb128 0xb
 1303 013f 59       		.uleb128 0x59
 1304 0140 05       		.uleb128 0x5
 1305 0141 00       		.byte	0
 1306 0142 00       		.byte	0
 1307 0143 00       		.byte	0
 1308              		.section	.debug_loc,"",%progbits
 1309              	.Ldebug_loc0:
 1310              	.LLST0:
 1311 0000 30000000 		.4byte	.LVL0
 1312 0004 56000000 		.4byte	.LVL1
 1313 0008 0100     		.2byte	0x1
 1314 000a 50       		.byte	0x50
 1315 000b 00000000 		.4byte	0
 1316 000f 00000000 		.4byte	0
 1317              	.LLST1:
 1318 0013 22000000 		.4byte	.LVL4
 1319 0017 4C000000 		.4byte	.LVL5
 1320 001b 0500     		.2byte	0x5
 1321 001d 72       		.byte	0x72
 1322 001e 00       		.sleb128 0
 1323 001f 32       		.byte	0x32
 1324 0020 1A       		.byte	0x1a
 1325 0021 9F       		.byte	0x9f
 1326 0022 00000000 		.4byte	0
 1327 0026 00000000 		.4byte	0
 1328              	.LLST2:
 1329 002a 00000000 		.4byte	.LVL6
 1330 002e 06000000 		.4byte	.LVL7
 1331 0032 0100     		.2byte	0x1
 1332 0034 50       		.byte	0x50
 1333 0035 06000000 		.4byte	.LVL7
 1334 0039 14000000 		.4byte	.LFE6
 1335 003d 0400     		.2byte	0x4
 1336 003f F3       		.byte	0xf3
 1337 0040 01       		.uleb128 0x1
 1338 0041 50       		.byte	0x50
 1339 0042 9F       		.byte	0x9f
 1340 0043 00000000 		.4byte	0
 1341 0047 00000000 		.4byte	0
 1342              	.LLST3:
 1343 004b 00000000 		.4byte	.LVL8
 1344 004f 02000000 		.4byte	.LVL9
 1345 0053 0100     		.2byte	0x1
 1346 0055 50       		.byte	0x50
 1347 0056 02000000 		.4byte	.LVL9
 1348 005a 14000000 		.4byte	.LFE7
 1349 005e 0400     		.2byte	0x4
 1350 0060 F3       		.byte	0xf3
 1351 0061 01       		.uleb128 0x1
 1352 0062 50       		.byte	0x50
 1353 0063 9F       		.byte	0x9f
 1354 0064 00000000 		.4byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 35


 1355 0068 00000000 		.4byte	0
 1356              	.LLST4:
 1357 006c 00000000 		.4byte	.LVL10
 1358 0070 32000000 		.4byte	.LVL11
 1359 0074 0100     		.2byte	0x1
 1360 0076 50       		.byte	0x50
 1361 0077 32000000 		.4byte	.LVL11
 1362 007b 3E000000 		.4byte	.LVL12
 1363 007f 0400     		.2byte	0x4
 1364 0081 F3       		.byte	0xf3
 1365 0082 01       		.uleb128 0x1
 1366 0083 50       		.byte	0x50
 1367 0084 9F       		.byte	0x9f
 1368 0085 3E000000 		.4byte	.LVL12
 1369 0089 46000000 		.4byte	.LVL13
 1370 008d 0100     		.2byte	0x1
 1371 008f 50       		.byte	0x50
 1372 0090 46000000 		.4byte	.LVL13
 1373 0094 50000000 		.4byte	.LFE9
 1374 0098 0400     		.2byte	0x4
 1375 009a F3       		.byte	0xf3
 1376 009b 01       		.uleb128 0x1
 1377 009c 50       		.byte	0x50
 1378 009d 9F       		.byte	0x9f
 1379 009e 00000000 		.4byte	0
 1380 00a2 00000000 		.4byte	0
 1381              	.LLST5:
 1382 00a6 00000000 		.4byte	.LVL14
 1383 00aa 06000000 		.4byte	.LVL15
 1384 00ae 0100     		.2byte	0x1
 1385 00b0 50       		.byte	0x50
 1386 00b1 06000000 		.4byte	.LVL15
 1387 00b5 10000000 		.4byte	.LFE11
 1388 00b9 0400     		.2byte	0x4
 1389 00bb F3       		.byte	0xf3
 1390 00bc 01       		.uleb128 0x1
 1391 00bd 50       		.byte	0x50
 1392 00be 9F       		.byte	0x9f
 1393 00bf 00000000 		.4byte	0
 1394 00c3 00000000 		.4byte	0
 1395              		.section	.debug_aranges,"",%progbits
 1396 0000 7C000000 		.4byte	0x7c
 1397 0004 0200     		.2byte	0x2
 1398 0006 00000000 		.4byte	.Ldebug_info0
 1399 000a 04       		.byte	0x4
 1400 000b 00       		.byte	0
 1401 000c 0000     		.2byte	0
 1402 000e 0000     		.2byte	0
 1403 0010 00000000 		.4byte	.LFB0
 1404 0014 18000000 		.4byte	.LFE0-.LFB0
 1405 0018 00000000 		.4byte	.LFB1
 1406 001c 18000000 		.4byte	.LFE1-.LFB1
 1407 0020 00000000 		.4byte	.LFB2
 1408 0024 6C000000 		.4byte	.LFE2-.LFB2
 1409 0028 00000000 		.4byte	.LFB3
 1410 002c 18000000 		.4byte	.LFE3-.LFB3
 1411 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 36


 1412 0034 E0000000 		.4byte	.LFE4-.LFB4
 1413 0038 00000000 		.4byte	.LFB5
 1414 003c 0C000000 		.4byte	.LFE5-.LFB5
 1415 0040 00000000 		.4byte	.LFB6
 1416 0044 14000000 		.4byte	.LFE6-.LFB6
 1417 0048 00000000 		.4byte	.LFB7
 1418 004c 14000000 		.4byte	.LFE7-.LFB7
 1419 0050 00000000 		.4byte	.LFB8
 1420 0054 10000000 		.4byte	.LFE8-.LFB8
 1421 0058 00000000 		.4byte	.LFB9
 1422 005c 50000000 		.4byte	.LFE9-.LFB9
 1423 0060 00000000 		.4byte	.LFB10
 1424 0064 10000000 		.4byte	.LFE10-.LFB10
 1425 0068 00000000 		.4byte	.LFB11
 1426 006c 10000000 		.4byte	.LFE11-.LFB11
 1427 0070 00000000 		.4byte	.LFB12
 1428 0074 10000000 		.4byte	.LFE12-.LFB12
 1429 0078 00000000 		.4byte	0
 1430 007c 00000000 		.4byte	0
 1431              		.section	.debug_ranges,"",%progbits
 1432              	.Ldebug_ranges0:
 1433 0000 04000000 		.4byte	.LBB11
 1434 0004 06000000 		.4byte	.LBE11
 1435 0008 08000000 		.4byte	.LBB19
 1436 000c 0C000000 		.4byte	.LBE19
 1437 0010 0E000000 		.4byte	.LBB21
 1438 0014 12000000 		.4byte	.LBE21
 1439 0018 00000000 		.4byte	0
 1440 001c 00000000 		.4byte	0
 1441 0020 06000000 		.4byte	.LBB15
 1442 0024 08000000 		.4byte	.LBE15
 1443 0028 0C000000 		.4byte	.LBB20
 1444 002c 0E000000 		.4byte	.LBE20
 1445 0030 12000000 		.4byte	.LBB22
 1446 0034 14000000 		.4byte	.LBE22
 1447 0038 00000000 		.4byte	0
 1448 003c 00000000 		.4byte	0
 1449 0040 00000000 		.4byte	.LBB23
 1450 0044 04000000 		.4byte	.LBE23
 1451 0048 08000000 		.4byte	.LBB28
 1452 004c 0A000000 		.4byte	.LBE28
 1453 0050 00000000 		.4byte	0
 1454 0054 00000000 		.4byte	0
 1455 0058 00000000 		.4byte	.LFB0
 1456 005c 18000000 		.4byte	.LFE0
 1457 0060 00000000 		.4byte	.LFB1
 1458 0064 18000000 		.4byte	.LFE1
 1459 0068 00000000 		.4byte	.LFB2
 1460 006c 6C000000 		.4byte	.LFE2
 1461 0070 00000000 		.4byte	.LFB3
 1462 0074 18000000 		.4byte	.LFE3
 1463 0078 00000000 		.4byte	.LFB4
 1464 007c E0000000 		.4byte	.LFE4
 1465 0080 00000000 		.4byte	.LFB5
 1466 0084 0C000000 		.4byte	.LFE5
 1467 0088 00000000 		.4byte	.LFB6
 1468 008c 14000000 		.4byte	.LFE6
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 37


 1469 0090 00000000 		.4byte	.LFB7
 1470 0094 14000000 		.4byte	.LFE7
 1471 0098 00000000 		.4byte	.LFB8
 1472 009c 10000000 		.4byte	.LFE8
 1473 00a0 00000000 		.4byte	.LFB9
 1474 00a4 50000000 		.4byte	.LFE9
 1475 00a8 00000000 		.4byte	.LFB10
 1476 00ac 10000000 		.4byte	.LFE10
 1477 00b0 00000000 		.4byte	.LFB11
 1478 00b4 10000000 		.4byte	.LFE11
 1479 00b8 00000000 		.4byte	.LFB12
 1480 00bc 10000000 		.4byte	.LFE12
 1481 00c0 00000000 		.4byte	0
 1482 00c4 00000000 		.4byte	0
 1483              		.section	.debug_line,"",%progbits
 1484              	.Ldebug_line0:
 1485 0000 CF010000 		.section	.debug_str,"MS",%progbits,1
 1485      02004E00 
 1485      00000201 
 1485      FB0E0D00 
 1485      01010101 
 1486              	.LASF36:
 1487 0000 4144435F 		.ascii	"ADC_SAR_A_theACLK_SetPhaseRegister\000"
 1487      5341525F 
 1487      415F7468 
 1487      6541434C 
 1487      4B5F5365 
 1488              	.LASF19:
 1489 0023 4144435F 		.ascii	"ADC_SAR_A_theACLK_Stop\000"
 1489      5341525F 
 1489      415F7468 
 1489      6541434C 
 1489      4B5F5374 
 1490              	.LASF34:
 1491 003a 63757272 		.ascii	"currDiv\000"
 1491      44697600 
 1492              	.LASF15:
 1493 0042 72656731 		.ascii	"reg16\000"
 1493      3600
 1494              	.LASF2:
 1495 0048 73686F72 		.ascii	"short int\000"
 1495      7420696E 
 1495      7400
 1496              	.LASF33:
 1497 0052 636C6B53 		.ascii	"clkSource\000"
 1497      6F757263 
 1497      6500
 1498              	.LASF17:
 1499 005c 4144435F 		.ascii	"ADC_SAR_A_theACLK_GetSourceRegister\000"
 1499      5341525F 
 1499      415F7468 
 1499      6541434C 
 1499      4B5F4765 
 1500              	.LASF32:
 1501 0080 4144435F 		.ascii	"ADC_SAR_A_theACLK_SetSourceRegister\000"
 1501      5341525F 
 1501      415F7468 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 38


 1501      6541434C 
 1501      4B5F5365 
 1502              	.LASF10:
 1503 00a4 75696E74 		.ascii	"uint16\000"
 1503      313600
 1504              	.LASF25:
 1505 00ab 72657374 		.ascii	"restart\000"
 1505      61727400 
 1506              	.LASF35:
 1507 00b3 6F6C6453 		.ascii	"oldSrc\000"
 1507      726300
 1508              	.LASF9:
 1509 00ba 75696E74 		.ascii	"uint8\000"
 1509      3800
 1510              	.LASF21:
 1511 00c0 4144435F 		.ascii	"ADC_SAR_A_theACLK_StandbyPower\000"
 1511      5341525F 
 1511      415F7468 
 1511      6541434C 
 1511      4B5F5374 
 1512              	.LASF24:
 1513 00df 636C6B44 		.ascii	"clkDivider\000"
 1513      69766964 
 1513      657200
 1514              	.LASF11:
 1515 00ea 666C6F61 		.ascii	"float\000"
 1515      7400
 1516              	.LASF6:
 1517 00f0 6C6F6E67 		.ascii	"long long int\000"
 1517      206C6F6E 
 1517      6720696E 
 1517      7400
 1518              	.LASF42:
 1519 00fe 433A5C55 		.ascii	"C:\\Users\\rens_\\Documents\\platooning\\PSoC\\Plat"
 1519      73657273 
 1519      5C72656E 
 1519      735F5C44 
 1519      6F63756D 
 1520 012b 6F6F6E69 		.ascii	"ooning\\AngleMeasurement.cydsn\000"
 1520      6E675C41 
 1520      6E676C65 
 1520      4D656173 
 1520      7572656D 
 1521              	.LASF4:
 1522 0149 6C6F6E67 		.ascii	"long int\000"
 1522      20696E74 
 1522      00
 1523              	.LASF31:
 1524 0152 4144435F 		.ascii	"ADC_SAR_A_theACLK_ClearModeRegister\000"
 1524      5341525F 
 1524      415F7468 
 1524      6541434C 
 1524      4B5F436C 
 1525              	.LASF22:
 1526 0176 4144435F 		.ascii	"ADC_SAR_A_theACLK_SetDividerRegister\000"
 1526      5341525F 
 1526      415F7468 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 39


 1526      6541434C 
 1526      4B5F5365 
 1527              	.LASF23:
 1528 019b 73746174 		.ascii	"state\000"
 1528      6500
 1529              	.LASF37:
 1530 01a1 636C6B50 		.ascii	"clkPhase\000"
 1530      68617365 
 1530      00
 1531              	.LASF16:
 1532 01aa 4144435F 		.ascii	"ADC_SAR_A_theACLK_GetDividerRegister\000"
 1532      5341525F 
 1532      415F7468 
 1532      6541434C 
 1532      4B5F4765 
 1533              	.LASF1:
 1534 01cf 756E7369 		.ascii	"unsigned char\000"
 1534      676E6564 
 1534      20636861 
 1534      7200
 1535              	.LASF30:
 1536 01dd 6D6F6465 		.ascii	"modeBitMask\000"
 1536      4269744D 
 1536      61736B00 
 1537              	.LASF0:
 1538 01e9 7369676E 		.ascii	"signed char\000"
 1538      65642063 
 1538      68617200 
 1539              	.LASF7:
 1540 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1540      206C6F6E 
 1540      6720756E 
 1540      7369676E 
 1540      65642069 
 1541              	.LASF8:
 1542 020c 756E7369 		.ascii	"unsigned int\000"
 1542      676E6564 
 1542      20696E74 
 1542      00
 1543              	.LASF40:
 1544 0219 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1544      43313120 
 1544      352E342E 
 1544      31203230 
 1544      31363036 
 1545 024c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1545      20726576 
 1545      6973696F 
 1545      6E203233 
 1545      37373135 
 1546 027f 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1546      66756E63 
 1546      74696F6E 
 1546      2D736563 
 1546      74696F6E 
 1547              	.LASF3:
 1548 02a7 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 40


 1548      7420756E 
 1548      7369676E 
 1548      65642069 
 1548      6E7400
 1549              	.LASF13:
 1550 02ba 63686172 		.ascii	"char\000"
 1550      00
 1551              	.LASF41:
 1552 02bf 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_A_theACLK.c\000"
 1552      72617465 
 1552      645F536F 
 1552      75726365 
 1552      5C50536F 
 1553              	.LASF28:
 1554 02ea 63757272 		.ascii	"currSrc\000"
 1554      53726300 
 1555              	.LASF26:
 1556 02f2 6F6C6444 		.ascii	"oldDivider\000"
 1556      69766964 
 1556      657200
 1557              	.LASF14:
 1558 02fd 72656738 		.ascii	"reg8\000"
 1558      00
 1559              	.LASF5:
 1560 0302 6C6F6E67 		.ascii	"long unsigned int\000"
 1560      20756E73 
 1560      69676E65 
 1560      6420696E 
 1560      7400
 1561              	.LASF12:
 1562 0314 646F7562 		.ascii	"double\000"
 1562      6C6500
 1563              	.LASF20:
 1564 031b 4144435F 		.ascii	"ADC_SAR_A_theACLK_StopBlock\000"
 1564      5341525F 
 1564      415F7468 
 1564      6541434C 
 1564      4B5F5374 
 1565              	.LASF27:
 1566 0337 656E6162 		.ascii	"enabled\000"
 1566      6C656400 
 1567              	.LASF29:
 1568 033f 4144435F 		.ascii	"ADC_SAR_A_theACLK_SetModeRegister\000"
 1568      5341525F 
 1568      415F7468 
 1568      6541434C 
 1568      4B5F5365 
 1569              	.LASF18:
 1570 0361 4144435F 		.ascii	"ADC_SAR_A_theACLK_Start\000"
 1570      5341525F 
 1570      415F7468 
 1570      6541434C 
 1570      4B5F5374 
 1571              	.LASF39:
 1572 0379 4144435F 		.ascii	"ADC_SAR_A_theACLK_GetPhaseRegister\000"
 1572      5341525F 
 1572      415F7468 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\cchkXtNG.s 			page 41


 1572      6541434C 
 1572      4B5F4765 
 1573              	.LASF38:
 1574 039c 4144435F 		.ascii	"ADC_SAR_A_theACLK_GetModeRegister\000"
 1574      5341525F 
 1574      415F7468 
 1574      6541434C 
 1574      4B5F4765 
 1575              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
