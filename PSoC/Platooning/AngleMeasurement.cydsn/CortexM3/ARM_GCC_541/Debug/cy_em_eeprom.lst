ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_em_eeprom.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_Em_EEPROM_Init,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_Em_EEPROM_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	Cy_Em_EEPROM_Init, %function
  25              	Cy_Em_EEPROM_Init:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\cy_em_eeprom.c"
   1:Generated_Source\PSoC5/cy_em_eeprom.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/cy_em_eeprom.c **** * \file cy_em_eeprom.c
   3:Generated_Source\PSoC5/cy_em_eeprom.c **** * \version 2.0
   4:Generated_Source\PSoC5/cy_em_eeprom.c **** *
   5:Generated_Source\PSoC5/cy_em_eeprom.c **** * \brief
   6:Generated_Source\PSoC5/cy_em_eeprom.c **** *  This file provides source code of the API for the Emulated EEPROM library.
   7:Generated_Source\PSoC5/cy_em_eeprom.c **** *  The Emulated EEPROM API allows creating of an emulated EEPROM in flash that
   8:Generated_Source\PSoC5/cy_em_eeprom.c **** *  has the ability to do wear leveling and restore corrupted data from a
   9:Generated_Source\PSoC5/cy_em_eeprom.c **** *  redundant copy.
  10:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  11:Generated_Source\PSoC5/cy_em_eeprom.c **** ********************************************************************************
  12:Generated_Source\PSoC5/cy_em_eeprom.c **** * \copyright
  13:Generated_Source\PSoC5/cy_em_eeprom.c **** * Copyright 2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/cy_em_eeprom.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC5/cy_em_eeprom.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC5/cy_em_eeprom.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  19:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  20:Generated_Source\PSoC5/cy_em_eeprom.c **** #include "cytypes.h"
  21:Generated_Source\PSoC5/cy_em_eeprom.c **** #include <string.h>
  22:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  23:Generated_Source\PSoC5/cy_em_eeprom.c **** #if (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6)
  24:Generated_Source\PSoC5/cy_em_eeprom.c ****     #include "em_eeprom/cy_em_eeprom.h"
  25:Generated_Source\PSoC5/cy_em_eeprom.c **** #else
  26:Generated_Source\PSoC5/cy_em_eeprom.c ****     #include "cy_em_eeprom.h"
  27:Generated_Source\PSoC5/cy_em_eeprom.c **** #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6) */
  28:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  29:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  30:Generated_Source\PSoC5/cy_em_eeprom.c **** #if defined(__cplusplus)
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 2


  31:Generated_Source\PSoC5/cy_em_eeprom.c **** extern "C" {
  32:Generated_Source\PSoC5/cy_em_eeprom.c **** #endif
  33:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  34:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  35:Generated_Source\PSoC5/cy_em_eeprom.c **** /***************************************
  36:Generated_Source\PSoC5/cy_em_eeprom.c **** * Private Function Prototypes
  37:Generated_Source\PSoC5/cy_em_eeprom.c **** ***************************************/
  38:Generated_Source\PSoC5/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context);
  39:Generated_Source\PSoC5/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context);
  40:Generated_Source\PSoC5/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len);
  41:Generated_Source\PSoC5/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
  42:Generated_Source\PSoC5/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
  43:Generated_Source\PSoC5/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
  44:Generated_Source\PSoC5/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context);
  45:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config);
  46:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr, uint32 *rowData, cy_stc_eeprom_context_t *
  47:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr, uint32 ramBuffAddr, cy_stc_eeprom_context_
  48:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
  49:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 uint32 dstAddr,
  50:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 uint32 rowOffset,
  51:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 uint32 numBytes,
  52:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context);
  53:Generated_Source\PSoC5/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, uint32 *endAddr, uint32 *offset, uint32 rowNum, uint3
  54:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context);
  55:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  56:Generated_Source\PSoC5/cy_em_eeprom.c **** /**
  57:Generated_Source\PSoC5/cy_em_eeprom.c **** * \addtogroup group_em_eeprom_functions
  58:Generated_Source\PSoC5/cy_em_eeprom.c **** * \{
  59:Generated_Source\PSoC5/cy_em_eeprom.c **** */
  60:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  61:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
  62:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Init
  63:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
  64:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  65:Generated_Source\PSoC5/cy_em_eeprom.c **** * Initializes the Emulated EEPROM library by filling the context structure. 
  66:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  67:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param config
  68:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
  69:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  70:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
  71:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure to be filled by the function.
  72:Generated_Source\PSoC5/cy_em_eeprom.c **** * \ref cy_stc_eeprom_context_t.
  73:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  74:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
  75:Generated_Source\PSoC5/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
  76:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  77:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
  78:Generated_Source\PSoC5/cy_em_eeprom.c **** * The context structure should not be modified by the user after it is filled
  79:Generated_Source\PSoC5/cy_em_eeprom.c **** * with this function. Modification of context structure may cause the 
  80:Generated_Source\PSoC5/cy_em_eeprom.c **** * unexpected behavior of the Cy_Em_EEPROM API functions which rely on it.
  81:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  82:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
  83:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
  84:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
  85:Generated_Source\PSoC5/cy_em_eeprom.c **** * datasheet.
  86:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  87:Generated_Source\PSoC5/cy_em_eeprom.c **** * \sideeffect 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 3


  88:Generated_Source\PSoC5/cy_em_eeprom.c **** * If the "Redundant Copy" option is used, the function performs a number of 
  89:Generated_Source\PSoC5/cy_em_eeprom.c **** * write operations to the EEPROM to initialize flash rows checksums. Therefore,
  90:Generated_Source\PSoC5/cy_em_eeprom.c **** * Cy_Em_EEPROM_NumWrites(), when it is called right after Cy_Em_EEPROM_Init(), 
  91:Generated_Source\PSoC5/cy_em_eeprom.c **** * will return a non-zero value that identifies the number of writes performed 
  92:Generated_Source\PSoC5/cy_em_eeprom.c **** * by Cy_Em_EEPROM_Init().
  93:Generated_Source\PSoC5/cy_em_eeprom.c **** *
  94:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
  95:Generated_Source\PSoC5/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Init(cy_stc_eeprom_config_t* config, cy_stc_eeprom_context_t 
  96:Generated_Source\PSoC5/cy_em_eeprom.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  41 0008 3960     		str	r1, [r7]
  97:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
  42              		.loc 1 97 0
  43 000a 0123     		movs	r3, #1
  44 000c FB73     		strb	r3, [r7, #15]
  98:Generated_Source\PSoC5/cy_em_eeprom.c **** 
  99:Generated_Source\PSoC5/cy_em_eeprom.c ****     if((NULL != context) && (NULL != config) && (NULL != ((uint32 *)config->userFlashStartAddr)) &&
  45              		.loc 1 99 0
  46 000e 3B68     		ldr	r3, [r7]
  47 0010 002B     		cmp	r3, #0
  48 0012 5FD0     		beq	.L2
  49              		.loc 1 99 0 is_stmt 0 discriminator 1
  50 0014 7B68     		ldr	r3, [r7, #4]
  51 0016 002B     		cmp	r3, #0
  52 0018 5CD0     		beq	.L2
  53              		.loc 1 99 0 discriminator 2
  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c DB68     		ldr	r3, [r3, #12]
  56 001e 002B     		cmp	r3, #0
  57 0020 58D0     		beq	.L2
 100:Generated_Source\PSoC5/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  58              		.loc 1 100 0 is_stmt 1 discriminator 3
  59 0022 7B68     		ldr	r3, [r7, #4]
  60 0024 5B68     		ldr	r3, [r3, #4]
  99:Generated_Source\PSoC5/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  61              		.loc 1 99 0 discriminator 3
  62 0026 0A2B     		cmp	r3, #10
  63 0028 54D8     		bhi	.L2
  64              		.loc 1 100 0
  65 002a 7B68     		ldr	r3, [r7, #4]
  66 002c 1B68     		ldr	r3, [r3]
  67 002e 002B     		cmp	r3, #0
  68 0030 50D0     		beq	.L2
 101:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 102:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = CheckRanges(config);
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 4


  69              		.loc 1 102 0
  70 0032 7868     		ldr	r0, [r7, #4]
  71 0034 FFF7FEFF 		bl	CheckRanges
  72 0038 0346     		mov	r3, r0
  73 003a FB73     		strb	r3, [r7, #15]
 103:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 104:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
  74              		.loc 1 104 0
  75 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  76 003e 002B     		cmp	r3, #0
  77 0040 48D1     		bne	.L2
 105:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 106:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Copy the user config structure fields into context */
 107:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->eepromSize = config->eepromSize;
  78              		.loc 1 107 0
  79 0042 7B68     		ldr	r3, [r7, #4]
  80 0044 1A68     		ldr	r2, [r3]
  81 0046 3B68     		ldr	r3, [r7]
  82 0048 DA60     		str	r2, [r3, #12]
 108:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->wearLevelingFactor = config->wearLevelingFactor;
  83              		.loc 1 108 0
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 5A68     		ldr	r2, [r3, #4]
  86 004e 3B68     		ldr	r3, [r7]
  87 0050 1A61     		str	r2, [r3, #16]
 109:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->redundantCopy = config->redundantCopy;
  88              		.loc 1 109 0
  89 0052 7B68     		ldr	r3, [r7, #4]
  90 0054 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
  91 0056 3B68     		ldr	r3, [r7]
  92 0058 1A75     		strb	r2, [r3, #20]
 110:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->blockingWrite = config->blockingWrite;
  93              		.loc 1 110 0
  94 005a 7B68     		ldr	r3, [r7, #4]
  95 005c 5A7A     		ldrb	r2, [r3, #9]	@ zero_extendqisi2
  96 005e 3B68     		ldr	r3, [r7]
  97 0060 5A75     		strb	r2, [r3, #21]
 111:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->userFlashStartAddr = config->userFlashStartAddr;
  98              		.loc 1 111 0
  99 0062 7B68     		ldr	r3, [r7, #4]
 100 0064 DA68     		ldr	r2, [r3, #12]
 101 0066 3B68     		ldr	r3, [r7]
 102 0068 9A61     		str	r2, [r3, #24]
 112:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Store frequently used data for internal use */
 113:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->numberOfRows = CY_EM_EEPROM_GET_NUM_ROWS_IN_EEPROM(config->eepromSize);
 103              		.loc 1 113 0
 104 006a 7B68     		ldr	r3, [r7, #4]
 105 006c 1B68     		ldr	r3, [r3]
 106 006e DA09     		lsrs	r2, r3, #7
 107 0070 7B68     		ldr	r3, [r7, #4]
 108 0072 1B68     		ldr	r3, [r3]
 109 0074 03F07F03 		and	r3, r3, #127
 110 0078 002B     		cmp	r3, #0
 111 007a 01D0     		beq	.L3
 112              		.loc 1 113 0 is_stmt 0 discriminator 1
 113 007c 0123     		movs	r3, #1
 114 007e 00E0     		b	.L4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 5


 115              	.L3:
 116              		.loc 1 113 0 discriminator 2
 117 0080 0023     		movs	r3, #0
 118              	.L4:
 119              		.loc 1 113 0 discriminator 4
 120 0082 1A44     		add	r2, r2, r3
 121 0084 3B68     		ldr	r3, [r7]
 122 0086 5A60     		str	r2, [r3, #4]
 114:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 123              		.loc 1 114 0 is_stmt 1 discriminator 4
 124 0088 3B68     		ldr	r3, [r7]
 125 008a 5B68     		ldr	r3, [r3, #4]
 126 008c 7A68     		ldr	r2, [r7, #4]
 127 008e 5268     		ldr	r2, [r2, #4]
 128 0090 02FB03F3 		mul	r3, r2, r3
 129 0094 1A02     		lsls	r2, r3, #8
 115:Generated_Source\PSoC5/cy_em_eeprom.c ****                     config->userFlashStartAddr);
 130              		.loc 1 115 0 discriminator 4
 131 0096 7B68     		ldr	r3, [r7, #4]
 132 0098 DB68     		ldr	r3, [r3, #12]
 114:Generated_Source\PSoC5/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 133              		.loc 1 114 0 discriminator 4
 134 009a 1A44     		add	r2, r2, r3
 135 009c 3B68     		ldr	r3, [r7]
 136 009e 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Find last written EEPROM row and store it for quick access */
 117:Generated_Source\PSoC5/cy_em_eeprom.c ****             FindLastWrittenRow(&context->lastWrRowAddr, context);
 137              		.loc 1 117 0 discriminator 4
 138 00a0 3B68     		ldr	r3, [r7]
 139 00a2 0833     		adds	r3, r3, #8
 140 00a4 3968     		ldr	r1, [r7]
 141 00a6 1846     		mov	r0, r3
 142 00a8 FFF7FEFF 		bl	FindLastWrittenRow
 118:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 119:Generated_Source\PSoC5/cy_em_eeprom.c ****             if((0u == CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr)) && (0u != context->redundan
 143              		.loc 1 119 0 discriminator 4
 144 00ac 3B68     		ldr	r3, [r7]
 145 00ae 9B68     		ldr	r3, [r3, #8]
 146 00b0 1B68     		ldr	r3, [r3]
 147 00b2 002B     		cmp	r3, #0
 148 00b4 0ED1     		bne	.L2
 149              		.loc 1 119 0 is_stmt 0 discriminator 1
 150 00b6 3B68     		ldr	r3, [r7]
 151 00b8 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 152 00ba 002B     		cmp	r3, #0
 153 00bc 0AD0     		beq	.L2
 120:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 121:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Call the function only after device reprogramming in case
 122:Generated_Source\PSoC5/cy_em_eeprom.c ****                 * if redundant copy is enabled.
 123:Generated_Source\PSoC5/cy_em_eeprom.c ****                 */
 124:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = FillChecksum(context);
 154              		.loc 1 124 0 is_stmt 1
 155 00be 3868     		ldr	r0, [r7]
 156 00c0 FFF7FEFF 		bl	FillChecksum
 157 00c4 0346     		mov	r3, r0
 158 00c6 FB73     		strb	r3, [r7, #15]
 125:Generated_Source\PSoC5/cy_em_eeprom.c ****                 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 6


 126:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Update the last written EEPROM row for Cy_Em_EEPROM_NumWrites() */
 127:Generated_Source\PSoC5/cy_em_eeprom.c ****                 FindLastWrittenRow(&context->lastWrRowAddr, context);
 159              		.loc 1 127 0
 160 00c8 3B68     		ldr	r3, [r7]
 161 00ca 0833     		adds	r3, r3, #8
 162 00cc 3968     		ldr	r1, [r7]
 163 00ce 1846     		mov	r0, r3
 164 00d0 FFF7FEFF 		bl	FindLastWrittenRow
 165              	.L2:
 128:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 129:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 130:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 131:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 132:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 166              		.loc 1 132 0
 167 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 133:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 168              		.loc 1 133 0
 169 00d6 1846     		mov	r0, r3
 170 00d8 1037     		adds	r7, r7, #16
 171              		.cfi_def_cfa_offset 8
 172 00da BD46     		mov	sp, r7
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 00dc 80BD     		pop	{r7, pc}
 176              		.cfi_endproc
 177              	.LFE0:
 178              		.size	Cy_Em_EEPROM_Init, .-Cy_Em_EEPROM_Init
 179 00de 00BF     		.section	.text.Cy_Em_EEPROM_Read,"ax",%progbits
 180              		.align	2
 181              		.global	Cy_Em_EEPROM_Read
 182              		.thumb
 183              		.thumb_func
 184              		.type	Cy_Em_EEPROM_Read, %function
 185              	Cy_Em_EEPROM_Read:
 186              	.LFB1:
 134:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 135:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 136:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 137:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Read
 138:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 139:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 140:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function takes the logical EEPROM address, converts it to the actual
 141:Generated_Source\PSoC5/cy_em_eeprom.c **** * physical address where the data is stored and returns the data to the user.
 142:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 143:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param addr
 144:Generated_Source\PSoC5/cy_em_eeprom.c **** * The logical start address in EEPROM to start reading data from.
 145:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 146:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param eepromData
 147:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to a user array to write data to.
 148:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 149:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param size
 150:Generated_Source\PSoC5/cy_em_eeprom.c **** * The amount of data to read.
 151:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 152:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 153:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 154:Generated_Source\PSoC5/cy_em_eeprom.c **** *
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 7


 155:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 156:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 157:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 158:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
 159:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
 160:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 161:Generated_Source\PSoC5/cy_em_eeprom.c **** * datasheet.
 162:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 163:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
 164:Generated_Source\PSoC5/cy_em_eeprom.c **** * In case if redundant copy option is enabled the function may perform writes
 165:Generated_Source\PSoC5/cy_em_eeprom.c **** * to EEPROM. This is done in case if the data in the EEPPROM is corrupted and
 166:Generated_Source\PSoC5/cy_em_eeprom.c **** * the data in redundant copy is valid based on CRC-8 data integrity check.
 167:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 168:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 169:Generated_Source\PSoC5/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Read(uint32 addr, 
 170:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         void * eepromData, 
 171:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         uint32 size,
 172:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 173:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 187              		.loc 1 173 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 96
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 9AB0     		sub	sp, sp, #104
 196              		.cfi_def_cfa_offset 112
 197 0004 02AF     		add	r7, sp, #8
 198              		.cfi_def_cfa 7, 104
 199 0006 F860     		str	r0, [r7, #12]
 200 0008 B960     		str	r1, [r7, #8]
 201 000a 7A60     		str	r2, [r7, #4]
 202 000c 3B60     		str	r3, [r7]
 174:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 203              		.loc 1 174 0
 204 000e 0123     		movs	r3, #1
 205 0010 87F85F30 		strb	r3, [r7, #95]
 175:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 i;
 176:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 numBytesToRead;
 177:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 curEepromBaseAddr;
 178:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 curRowOffset;
 179:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 startRowAddr;
 180:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 actEepromRowNum;
 181:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 curRdEepromRowNum = 0u;
 206              		.loc 1 181 0
 207 0014 0023     		movs	r3, #0
 208 0016 FB64     		str	r3, [r7, #76]
 182:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 dataStartEepromRowNum = 0u;
 209              		.loc 1 182 0
 210 0018 0023     		movs	r3, #0
 211 001a BB64     		str	r3, [r7, #72]
 183:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 212              		.loc 1 183 0
 213 001c BB68     		ldr	r3, [r7, #8]
 214 001e 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 8


 184:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 185:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Validate input parameters */
 186:Generated_Source\PSoC5/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 215              		.loc 1 186 0
 216 0020 7B68     		ldr	r3, [r7, #4]
 217 0022 002B     		cmp	r3, #0
 218 0024 00F06B81 		beq	.L7
 219              		.loc 1 186 0 is_stmt 0 discriminator 1
 220 0028 FA68     		ldr	r2, [r7, #12]
 221 002a 7B68     		ldr	r3, [r7, #4]
 222 002c 1A44     		add	r2, r2, r3
 223 002e 3B68     		ldr	r3, [r7]
 224 0030 DB68     		ldr	r3, [r3, #12]
 225 0032 9A42     		cmp	r2, r3
 226 0034 00F26381 		bhi	.L7
 227              		.loc 1 186 0 discriminator 2
 228 0038 BB68     		ldr	r3, [r7, #8]
 229 003a 002B     		cmp	r3, #0
 230 003c 00F05F81 		beq	.L7
 231              	.LBB2:
 187:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 188:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 rdAddr = addr;
 232              		.loc 1 188 0 is_stmt 1
 233 0040 FB68     		ldr	r3, [r7, #12]
 234 0042 3B64     		str	r3, [r7, #64]
 189:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 rdSize = size;
 235              		.loc 1 189 0
 236 0044 7B68     		ldr	r3, [r7, #4]
 237 0046 FB63     		str	r3, [r7, #60]
 190:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Get the sequence number of the last written row */
 191:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr);
 238              		.loc 1 191 0
 239 0048 3B68     		ldr	r3, [r7]
 240 004a 9B68     		ldr	r3, [r3, #8]
 241 004c 1B68     		ldr	r3, [r3]
 242 004e 7B63     		str	r3, [r7, #52]
 192:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 updateAddrFlag = 0u;
 243              		.loc 1 192 0
 244 0050 0023     		movs	r3, #0
 245 0052 BB63     		str	r3, [r7, #56]
 193:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 194:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Calculate the number of the row read operations. Currently this only concerns
 195:Generated_Source\PSoC5/cy_em_eeprom.c ****         * the reads from the EEPROM data locations.
 196:Generated_Source\PSoC5/cy_em_eeprom.c ****         */
 197:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 numRowReads = ((((rdAddr + rdSize) - 1u) / CY_EM_EEPROM_EEPROM_DATA_LEN) -
 246              		.loc 1 197 0
 247 0054 3A6C     		ldr	r2, [r7, #64]
 248 0056 FB6B     		ldr	r3, [r7, #60]
 249 0058 1344     		add	r3, r3, r2
 250 005a 013B     		subs	r3, r3, #1
 251 005c DA09     		lsrs	r2, r3, #7
 198:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 252              		.loc 1 198 0
 253 005e 3B6C     		ldr	r3, [r7, #64]
 254 0060 DB09     		lsrs	r3, r3, #7
 197:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 255              		.loc 1 197 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 9


 256 0062 D31A     		subs	r3, r2, r3
 257 0064 0133     		adds	r3, r3, #1
 258 0066 3B63     		str	r3, [r7, #48]
 199:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 200:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Get the address of the first row of the currently active EEPROM sector. If
 201:Generated_Source\PSoC5/cy_em_eeprom.c ****         * no wear leveling is used - the EEPROM has only one sector, so use the base
 202:Generated_Source\PSoC5/cy_em_eeprom.c ****         * addr stored in "context->userFlashStartAddr".
 203:Generated_Source\PSoC5/cy_em_eeprom.c ****         */
 204:Generated_Source\PSoC5/cy_em_eeprom.c ****         curEepromBaseAddr = (((context->lastWrRowAddr - context->userFlashStartAddr) /
 259              		.loc 1 204 0
 260 0068 3B68     		ldr	r3, [r7]
 261 006a 9A68     		ldr	r2, [r3, #8]
 262 006c 3B68     		ldr	r3, [r7]
 263 006e 9B69     		ldr	r3, [r3, #24]
 264 0070 D21A     		subs	r2, r2, r3
 205:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 265              		.loc 1 205 0
 266 0072 3B68     		ldr	r3, [r7]
 267 0074 5B68     		ldr	r3, [r3, #4]
 268 0076 1B02     		lsls	r3, r3, #8
 204:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 269              		.loc 1 204 0
 270 0078 B2FBF3F3 		udiv	r3, r2, r3
 206:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) +
 271              		.loc 1 206 0
 272 007c 3A68     		ldr	r2, [r7]
 273 007e 5268     		ldr	r2, [r2, #4]
 205:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 274              		.loc 1 205 0
 275 0080 02FB03F3 		mul	r3, r2, r3
 276 0084 1A02     		lsls	r2, r3, #8
 207:Generated_Source\PSoC5/cy_em_eeprom.c ****                                context->userFlashStartAddr;
 277              		.loc 1 207 0
 278 0086 3B68     		ldr	r3, [r7]
 279 0088 9B69     		ldr	r3, [r3, #24]
 204:Generated_Source\PSoC5/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 280              		.loc 1 204 0
 281 008a 1344     		add	r3, r3, r2
 282 008c FB62     		str	r3, [r7, #44]
 208:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 209:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Find the number of the row that contains the start address of the data */
 210:Generated_Source\PSoC5/cy_em_eeprom.c ****         for(i = 0u; i < context->numberOfRows; i++)
 283              		.loc 1 210 0
 284 008e 0023     		movs	r3, #0
 285 0090 BB65     		str	r3, [r7, #88]
 286 0092 18E0     		b	.L8
 287              	.L13:
 211:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 212:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(rdAddr, i))
 288              		.loc 1 212 0
 289 0094 BB6D     		ldr	r3, [r7, #88]
 290 0096 DA01     		lsls	r2, r3, #7
 291 0098 3B6C     		ldr	r3, [r7, #64]
 292 009a 9A42     		cmp	r2, r3
 293 009c 08D8     		bhi	.L9
 294              		.loc 1 212 0 is_stmt 0 discriminator 1
 295 009e BB6D     		ldr	r3, [r7, #88]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 10


 296 00a0 0133     		adds	r3, r3, #1
 297 00a2 DB01     		lsls	r3, r3, #7
 298 00a4 5A1E     		subs	r2, r3, #1
 299 00a6 3B6C     		ldr	r3, [r7, #64]
 300 00a8 9A42     		cmp	r2, r3
 301 00aa 01D3     		bcc	.L9
 302              		.loc 1 212 0 discriminator 3
 303 00ac 0123     		movs	r3, #1
 304 00ae 00E0     		b	.L10
 305              	.L9:
 306              		.loc 1 212 0 discriminator 4
 307 00b0 0023     		movs	r3, #0
 308              	.L10:
 309              		.loc 1 212 0 discriminator 6
 310 00b2 002B     		cmp	r3, #0
 311 00b4 04D0     		beq	.L11
 213:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 214:Generated_Source\PSoC5/cy_em_eeprom.c ****                 dataStartEepromRowNum = i;
 312              		.loc 1 214 0 is_stmt 1
 313 00b6 BB6D     		ldr	r3, [r7, #88]
 314 00b8 BB64     		str	r3, [r7, #72]
 215:Generated_Source\PSoC5/cy_em_eeprom.c ****                 curRdEepromRowNum = dataStartEepromRowNum;
 315              		.loc 1 215 0
 316 00ba BB6C     		ldr	r3, [r7, #72]
 317 00bc FB64     		str	r3, [r7, #76]
 216:Generated_Source\PSoC5/cy_em_eeprom.c ****                 break;
 318              		.loc 1 216 0
 319 00be 07E0     		b	.L12
 320              	.L11:
 210:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 321              		.loc 1 210 0 discriminator 2
 322 00c0 BB6D     		ldr	r3, [r7, #88]
 323 00c2 0133     		adds	r3, r3, #1
 324 00c4 BB65     		str	r3, [r7, #88]
 325              	.L8:
 210:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 326              		.loc 1 210 0 is_stmt 0 discriminator 1
 327 00c6 3B68     		ldr	r3, [r7]
 328 00c8 5A68     		ldr	r2, [r3, #4]
 329 00ca BB6D     		ldr	r3, [r7, #88]
 330 00cc 9A42     		cmp	r2, r3
 331 00ce E1D8     		bhi	.L13
 332              	.L12:
 217:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 218:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 219:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 220:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Find the row number of the last written row */
 221:Generated_Source\PSoC5/cy_em_eeprom.c ****         actEepromRowNum = (context->lastWrRowAddr - curEepromBaseAddr) / CY_EM_EEPROM_FLASH_SIZEOF_
 333              		.loc 1 221 0 is_stmt 1
 334 00d0 3B68     		ldr	r3, [r7]
 335 00d2 9A68     		ldr	r2, [r3, #8]
 336 00d4 FB6A     		ldr	r3, [r7, #44]
 337 00d6 D31A     		subs	r3, r2, r3
 338 00d8 1B0A     		lsrs	r3, r3, #8
 339 00da BB62     		str	r3, [r7, #40]
 222:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 223:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Check if wear leveling is used */
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 11


 224:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 340              		.loc 1 224 0
 341 00dc 3B68     		ldr	r3, [r7]
 342 00de 1B69     		ldr	r3, [r3, #16]
 343 00e0 012B     		cmp	r3, #1
 344 00e2 12D9     		bls	.L14
 345              	.LBB3:
 225:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 226:Generated_Source\PSoC5/cy_em_eeprom.c ****             uint32 dataEndEepromRowNum = dataStartEepromRowNum + (numRowReads - 1u);
 346              		.loc 1 226 0
 347 00e4 3A6B     		ldr	r2, [r7, #48]
 348 00e6 BB6C     		ldr	r3, [r7, #72]
 349 00e8 1344     		add	r3, r3, r2
 350 00ea 013B     		subs	r3, r3, #1
 351 00ec 7B62     		str	r3, [r7, #36]
 227:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 228:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Check if the future validation of the read address is required. */
 229:Generated_Source\PSoC5/cy_em_eeprom.c ****             updateAddrFlag = (dataStartEepromRowNum > actEepromRowNum) ? 1u :
 352              		.loc 1 229 0
 353 00ee BA6C     		ldr	r2, [r7, #72]
 354 00f0 BB6A     		ldr	r3, [r7, #40]
 355 00f2 9A42     		cmp	r2, r3
 356 00f4 07D8     		bhi	.L15
 357              		.loc 1 229 0 is_stmt 0 discriminator 1
 358 00f6 7A6A     		ldr	r2, [r7, #36]
 359 00f8 BB6A     		ldr	r3, [r7, #40]
 360 00fa 9A42     		cmp	r2, r3
 361 00fc 01D9     		bls	.L16
 362              		.loc 1 229 0 discriminator 3
 363 00fe 0123     		movs	r3, #1
 364 0100 02E0     		b	.L18
 365              	.L16:
 366              		.loc 1 229 0 discriminator 4
 367 0102 0023     		movs	r3, #0
 368 0104 00E0     		b	.L18
 369              	.L15:
 370              		.loc 1 229 0 discriminator 2
 371 0106 0123     		movs	r3, #1
 372              	.L18:
 373              		.loc 1 229 0 discriminator 8
 374 0108 BB63     		str	r3, [r7, #56]
 375              	.L14:
 376              	.LBE3:
 230:Generated_Source\PSoC5/cy_em_eeprom.c ****                               ((dataEndEepromRowNum > actEepromRowNum) ? 1u : 0u);
 231:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 232:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 233:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Copy data from the EEPROM data locations to the user buffer */
 234:Generated_Source\PSoC5/cy_em_eeprom.c ****         for(i = 0u; i < numRowReads; i++)
 377              		.loc 1 234 0 is_stmt 1
 378 010a 0023     		movs	r3, #0
 379 010c BB65     		str	r3, [r7, #88]
 380 010e 63E0     		b	.L19
 381              	.L26:
 235:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 236:Generated_Source\PSoC5/cy_em_eeprom.c ****             startRowAddr = curEepromBaseAddr + (curRdEepromRowNum * CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 382              		.loc 1 236 0
 383 0110 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 12


 384 0112 1A02     		lsls	r2, r3, #8
 385 0114 FB6A     		ldr	r3, [r7, #44]
 386 0116 1344     		add	r3, r3, r2
 387 0118 3B65     		str	r3, [r7, #80]
 237:Generated_Source\PSoC5/cy_em_eeprom.c ****             curRowOffset = CY_EM_EEPROM_EEPROM_DATA_LEN + (rdAddr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 388              		.loc 1 237 0
 389 011a 3B6C     		ldr	r3, [r7, #64]
 390 011c 03F07F03 		and	r3, r3, #127
 391 0120 8033     		adds	r3, r3, #128
 392 0122 3B62     		str	r3, [r7, #32]
 238:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 239:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Check if there are more reads pending and update the number of the
 240:Generated_Source\PSoC5/cy_em_eeprom.c ****             * remaining bytes to read respectively.
 241:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 242:Generated_Source\PSoC5/cy_em_eeprom.c ****             if((i + 1u) < numRowReads)
 393              		.loc 1 242 0
 394 0124 BB6D     		ldr	r3, [r7, #88]
 395 0126 5A1C     		adds	r2, r3, #1
 396 0128 3B6B     		ldr	r3, [r7, #48]
 397 012a 9A42     		cmp	r2, r3
 398 012c 06D2     		bcs	.L20
 243:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 244:Generated_Source\PSoC5/cy_em_eeprom.c ****                 numBytesToRead = CY_EM_EEPROM_EEPROM_DATA_LEN - (rdAddr % CY_EM_EEPROM_EEPROM_DATA_
 399              		.loc 1 244 0
 400 012e 3B6C     		ldr	r3, [r7, #64]
 401 0130 03F07F03 		and	r3, r3, #127
 402 0134 C3F18003 		rsb	r3, r3, #128
 403 0138 7B65     		str	r3, [r7, #84]
 404 013a 01E0     		b	.L21
 405              	.L20:
 245:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 246:Generated_Source\PSoC5/cy_em_eeprom.c ****             else
 247:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 248:Generated_Source\PSoC5/cy_em_eeprom.c ****                 numBytesToRead = rdSize;
 406              		.loc 1 248 0
 407 013c FB6B     		ldr	r3, [r7, #60]
 408 013e 7B65     		str	r3, [r7, #84]
 409              	.L21:
 249:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 250:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 251:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Check if the read address needs to be updated to point to the correct
 252:Generated_Source\PSoC5/cy_em_eeprom.c ****             * EEPROM sector.
 253:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 254:Generated_Source\PSoC5/cy_em_eeprom.c ****             if((0u != updateAddrFlag) && (curRdEepromRowNum > actEepromRowNum))
 410              		.loc 1 254 0
 411 0140 BB6B     		ldr	r3, [r7, #56]
 412 0142 002B     		cmp	r3, #0
 413 0144 17D0     		beq	.L22
 414              		.loc 1 254 0 is_stmt 0 discriminator 1
 415 0146 FA6C     		ldr	r2, [r7, #76]
 416 0148 BB6A     		ldr	r3, [r7, #40]
 417 014a 9A42     		cmp	r2, r3
 418 014c 13D9     		bls	.L22
 255:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 256:Generated_Source\PSoC5/cy_em_eeprom.c ****                 startRowAddr -= context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 419              		.loc 1 256 0 is_stmt 1
 420 014e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 13


 421 0150 5B68     		ldr	r3, [r3, #4]
 422 0152 1B02     		lsls	r3, r3, #8
 423 0154 3A6D     		ldr	r2, [r7, #80]
 424 0156 D31A     		subs	r3, r2, r3
 425 0158 3B65     		str	r3, [r7, #80]
 257:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 258:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(startRowAddr < context->userFlashStartAddr)
 426              		.loc 1 258 0
 427 015a 3B68     		ldr	r3, [r7]
 428 015c 9A69     		ldr	r2, [r3, #24]
 429 015e 3B6D     		ldr	r3, [r7, #80]
 430 0160 9A42     		cmp	r2, r3
 431 0162 08D9     		bls	.L22
 259:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 260:Generated_Source\PSoC5/cy_em_eeprom.c ****                     startRowAddr = context->wlEndAddr -
 432              		.loc 1 260 0
 433 0164 3B68     		ldr	r3, [r7]
 434 0166 1A68     		ldr	r2, [r3]
 261:Generated_Source\PSoC5/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
 435              		.loc 1 261 0
 436 0168 3B68     		ldr	r3, [r7]
 437 016a 5968     		ldr	r1, [r3, #4]
 438 016c FB6C     		ldr	r3, [r7, #76]
 439 016e CB1A     		subs	r3, r1, r3
 440 0170 1B02     		lsls	r3, r3, #8
 260:Generated_Source\PSoC5/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
 441              		.loc 1 260 0
 442 0172 D31A     		subs	r3, r2, r3
 443 0174 3B65     		str	r3, [r7, #80]
 444              	.L22:
 262:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 263:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 264:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 265:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(0u != context->redundantCopy)
 445              		.loc 1 265 0
 446 0176 3B68     		ldr	r3, [r7]
 447 0178 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 448 017a 002B     		cmp	r3, #0
 449 017c 0FD0     		beq	.L23
 266:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 267:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 268:Generated_Source\PSoC5/cy_em_eeprom.c ****                 * the corresponding row in redundant copy, otherwise return failure.
 269:Generated_Source\PSoC5/cy_em_eeprom.c ****                 */
 270:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = CheckCrcAndCopy(startRowAddr, eeData, curRowOffset, numBytesToRead, context);
 450              		.loc 1 270 0
 451 017e 3B68     		ldr	r3, [r7]
 452 0180 0093     		str	r3, [sp]
 453 0182 7B6D     		ldr	r3, [r7, #84]
 454 0184 3A6A     		ldr	r2, [r7, #32]
 455 0186 796C     		ldr	r1, [r7, #68]
 456 0188 386D     		ldr	r0, [r7, #80]
 457 018a FFF7FEFF 		bl	CheckCrcAndCopy
 458 018e 0346     		mov	r3, r0
 459 0190 87F85F30 		strb	r3, [r7, #95]
 271:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 272:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(CY_EM_EEPROM_SUCCESS != ret)
 460              		.loc 1 272 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 14


 461 0194 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 462 0198 002B     		cmp	r3, #0
 463 019a 0BD0     		beq	.L24
 273:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 274:Generated_Source\PSoC5/cy_em_eeprom.c ****                     break;
 464              		.loc 1 274 0
 465 019c 20E0     		b	.L25
 466              	.L23:
 275:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 276:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 277:Generated_Source\PSoC5/cy_em_eeprom.c ****             else
 278:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 279:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Copy the data to the user buffer */
 280:Generated_Source\PSoC5/cy_em_eeprom.c ****                 (void)memcpy((void *)(eeData),
 467              		.loc 1 280 0
 468 019e 786C     		ldr	r0, [r7, #68]
 281:Generated_Source\PSoC5/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 469              		.loc 1 281 0
 470 01a0 3A6D     		ldr	r2, [r7, #80]
 471 01a2 3B6A     		ldr	r3, [r7, #32]
 472 01a4 1344     		add	r3, r3, r2
 280:Generated_Source\PSoC5/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 473              		.loc 1 280 0
 474 01a6 7A6D     		ldr	r2, [r7, #84]
 475 01a8 1946     		mov	r1, r3
 476 01aa FFF7FEFF 		bl	memcpy
 282:Generated_Source\PSoC5/cy_em_eeprom.c ****                              numBytesToRead);
 283:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 284:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Indicate success to be able to execute next code block */
 285:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
 477              		.loc 1 285 0
 478 01ae 0023     		movs	r3, #0
 479 01b0 87F85F30 		strb	r3, [r7, #95]
 480              	.L24:
 286:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 287:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 288:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Update variables anticipated in the read operation */
 289:Generated_Source\PSoC5/cy_em_eeprom.c ****             rdAddr += numBytesToRead;
 481              		.loc 1 289 0 discriminator 2
 482 01b4 3A6C     		ldr	r2, [r7, #64]
 483 01b6 7B6D     		ldr	r3, [r7, #84]
 484 01b8 1344     		add	r3, r3, r2
 485 01ba 3B64     		str	r3, [r7, #64]
 290:Generated_Source\PSoC5/cy_em_eeprom.c ****             rdSize -= numBytesToRead;
 486              		.loc 1 290 0 discriminator 2
 487 01bc FA6B     		ldr	r2, [r7, #60]
 488 01be 7B6D     		ldr	r3, [r7, #84]
 489 01c0 D31A     		subs	r3, r2, r3
 490 01c2 FB63     		str	r3, [r7, #60]
 291:Generated_Source\PSoC5/cy_em_eeprom.c ****             eeData += numBytesToRead;
 491              		.loc 1 291 0 discriminator 2
 492 01c4 7A6C     		ldr	r2, [r7, #68]
 493 01c6 7B6D     		ldr	r3, [r7, #84]
 494 01c8 1344     		add	r3, r3, r2
 495 01ca 7B64     		str	r3, [r7, #68]
 292:Generated_Source\PSoC5/cy_em_eeprom.c ****             curRdEepromRowNum++;
 496              		.loc 1 292 0 discriminator 2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 15


 497 01cc FB6C     		ldr	r3, [r7, #76]
 498 01ce 0133     		adds	r3, r3, #1
 499 01d0 FB64     		str	r3, [r7, #76]
 234:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 500              		.loc 1 234 0 discriminator 2
 501 01d2 BB6D     		ldr	r3, [r7, #88]
 502 01d4 0133     		adds	r3, r3, #1
 503 01d6 BB65     		str	r3, [r7, #88]
 504              	.L19:
 234:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 505              		.loc 1 234 0 is_stmt 0 discriminator 1
 506 01d8 BA6D     		ldr	r2, [r7, #88]
 507 01da 3B6B     		ldr	r3, [r7, #48]
 508 01dc 9A42     		cmp	r2, r3
 509 01de 97D3     		bcc	.L26
 510              	.L25:
 293:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 294:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 295:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* This code block will copy the latest data from the EEPROM headers into the
 296:Generated_Source\PSoC5/cy_em_eeprom.c ****         * user buffer. The data previously copied into the user buffer may be updated
 297:Generated_Source\PSoC5/cy_em_eeprom.c ****         * as the EEPROM headers contain more recent data. 
 298:Generated_Source\PSoC5/cy_em_eeprom.c ****         * The code block is executed when two following conditions are true:
 299:Generated_Source\PSoC5/cy_em_eeprom.c ****         *  1) The reads from "historic" data locations were successful;
 300:Generated_Source\PSoC5/cy_em_eeprom.c ****         *  2) The user performed at least one write operation to Em_EEPROM (0u !=
 301:Generated_Source\PSoC5/cy_em_eeprom.c ****         *     seqNum).        
 302:Generated_Source\PSoC5/cy_em_eeprom.c ****         */
 303:Generated_Source\PSoC5/cy_em_eeprom.c ****         if((CY_EM_EEPROM_SUCCESS == ret) && (0u != seqNum))
 511              		.loc 1 303 0 is_stmt 1
 512 01e0 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 513 01e4 002B     		cmp	r3, #0
 514 01e6 40F08A80 		bne	.L7
 515              		.loc 1 303 0 is_stmt 0 discriminator 1
 516 01ea 7B6B     		ldr	r3, [r7, #52]
 517 01ec 002B     		cmp	r3, #0
 518 01ee 00F08680 		beq	.L7
 304:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 305:Generated_Source\PSoC5/cy_em_eeprom.c ****             numRowReads = (context->numberOfRows <= seqNum) ? (context->numberOfRows) : (seqNum);
 519              		.loc 1 305 0 is_stmt 1
 520 01f2 3B68     		ldr	r3, [r7]
 521 01f4 5A68     		ldr	r2, [r3, #4]
 522 01f6 7B6B     		ldr	r3, [r7, #52]
 523 01f8 9342     		cmp	r3, r2
 524 01fa 28BF     		it	cs
 525 01fc 1346     		movcs	r3, r2
 526 01fe 3B63     		str	r3, [r7, #48]
 306:Generated_Source\PSoC5/cy_em_eeprom.c ****             numRowReads--;
 527              		.loc 1 306 0
 528 0200 3B6B     		ldr	r3, [r7, #48]
 529 0202 013B     		subs	r3, r3, #1
 530 0204 3B63     		str	r3, [r7, #48]
 307:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 308:Generated_Source\PSoC5/cy_em_eeprom.c ****             for(i = (seqNum - numRowReads); i <= seqNum; i++)
 531              		.loc 1 308 0
 532 0206 7A6B     		ldr	r2, [r7, #52]
 533 0208 3B6B     		ldr	r3, [r7, #48]
 534 020a D31A     		subs	r3, r2, r3
 535 020c BB65     		str	r3, [r7, #88]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 16


 536 020e 72E0     		b	.L27
 537              	.L36:
 309:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 310:Generated_Source\PSoC5/cy_em_eeprom.c ****                 startRowAddr = GetRowAddrBySeqNum(i, context);
 538              		.loc 1 310 0
 539 0210 3968     		ldr	r1, [r7]
 540 0212 B86D     		ldr	r0, [r7, #88]
 541 0214 FFF7FEFF 		bl	GetRowAddrBySeqNum
 542 0218 3865     		str	r0, [r7, #80]
 311:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 312:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if (0u != startRowAddr)
 543              		.loc 1 312 0
 544 021a 3B6D     		ldr	r3, [r7, #80]
 545 021c 002B     		cmp	r3, #0
 546 021e 67D0     		beq	.L28
 547              	.LBB4:
 313:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 314:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* The following variables are introduced to increase code readability. */
 315:Generated_Source\PSoC5/cy_em_eeprom.c ****                     uint32 startAddr  = *(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFFSET)
 548              		.loc 1 315 0
 549 0220 3B6D     		ldr	r3, [r7, #80]
 550 0222 0433     		adds	r3, r3, #4
 551 0224 1B68     		ldr	r3, [r3]
 552 0226 FB61     		str	r3, [r7, #28]
 316:Generated_Source\PSoC5/cy_em_eeprom.c ****                     uint32 endAddr    = startAddr + (*(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER
 553              		.loc 1 316 0
 554 0228 3B6D     		ldr	r3, [r7, #80]
 555 022a 0833     		adds	r3, r3, #8
 556 022c 1A68     		ldr	r2, [r3]
 557 022e FB69     		ldr	r3, [r7, #28]
 558 0230 1344     		add	r3, r3, r2
 559 0232 BB61     		str	r3, [r7, #24]
 317:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 318:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* Check if the current row EEPROM header contains the data requested for read 
 319:Generated_Source\PSoC5/cy_em_eeprom.c ****                     if(0u != CY_EM_EEPROM_IS_ADDRESES_CROSSING(startAddr, endAddr, addr, addr + siz
 560              		.loc 1 319 0
 561 0234 FA69     		ldr	r2, [r7, #28]
 562 0236 FB68     		ldr	r3, [r7, #12]
 563 0238 9A42     		cmp	r2, r3
 564 023a 09D9     		bls	.L29
 565              		.loc 1 319 0 is_stmt 0 discriminator 1
 566 023c FA68     		ldr	r2, [r7, #12]
 567 023e 7B68     		ldr	r3, [r7, #4]
 568 0240 1A44     		add	r2, r2, r3
 569 0242 FB69     		ldr	r3, [r7, #28]
 570 0244 9A42     		cmp	r2, r3
 571 0246 8CBF     		ite	hi
 572 0248 0123     		movhi	r3, #1
 573 024a 0023     		movls	r3, #0
 574 024c DBB2     		uxtb	r3, r3
 575 024e 06E0     		b	.L30
 576              	.L29:
 577              		.loc 1 319 0 discriminator 2
 578 0250 FA68     		ldr	r2, [r7, #12]
 579 0252 BB69     		ldr	r3, [r7, #24]
 580 0254 9A42     		cmp	r2, r3
 581 0256 34BF     		ite	cc
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 17


 582 0258 0123     		movcc	r3, #1
 583 025a 0023     		movcs	r3, #0
 584 025c DBB2     		uxtb	r3, r3
 585              	.L30:
 586              		.loc 1 319 0 discriminator 4
 587 025e 002B     		cmp	r3, #0
 588 0260 46D0     		beq	.L28
 589              	.LBB5:
 320:Generated_Source\PSoC5/cy_em_eeprom.c ****                     {
 321:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 srcOffset = (startAddr > addr) ? (0u) : (addr - startAddr);
 590              		.loc 1 321 0 is_stmt 1
 591 0262 FA69     		ldr	r2, [r7, #28]
 592 0264 FB68     		ldr	r3, [r7, #12]
 593 0266 9A42     		cmp	r2, r3
 594 0268 03D8     		bhi	.L31
 595              		.loc 1 321 0 is_stmt 0 discriminator 1
 596 026a FA68     		ldr	r2, [r7, #12]
 597 026c FB69     		ldr	r3, [r7, #28]
 598 026e D31A     		subs	r3, r2, r3
 599 0270 00E0     		b	.L32
 600              	.L31:
 601              		.loc 1 321 0 discriminator 2
 602 0272 0023     		movs	r3, #0
 603              	.L32:
 604              		.loc 1 321 0 discriminator 4
 605 0274 7B61     		str	r3, [r7, #20]
 322:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 dstOffset = (startAddr > addr) ? (startAddr - addr): (0u);
 606              		.loc 1 322 0 is_stmt 1 discriminator 4
 607 0276 FA69     		ldr	r2, [r7, #28]
 608 0278 FB68     		ldr	r3, [r7, #12]
 609 027a 9A42     		cmp	r2, r3
 610 027c 03D9     		bls	.L33
 611              		.loc 1 322 0 is_stmt 0 discriminator 1
 612 027e FA69     		ldr	r2, [r7, #28]
 613 0280 FB68     		ldr	r3, [r7, #12]
 614 0282 D31A     		subs	r3, r2, r3
 615 0284 00E0     		b	.L34
 616              	.L33:
 617              		.loc 1 322 0 discriminator 2
 618 0286 0023     		movs	r3, #0
 619              	.L34:
 620              		.loc 1 322 0 discriminator 4
 621 0288 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC5/cy_em_eeprom.c ****                         rdAddr = (startAddr > addr) ? (startAddr) : (addr);
 622              		.loc 1 323 0 is_stmt 1 discriminator 4
 623 028a FA68     		ldr	r2, [r7, #12]
 624 028c FB69     		ldr	r3, [r7, #28]
 625 028e 9342     		cmp	r3, r2
 626 0290 38BF     		it	cc
 627 0292 1346     		movcc	r3, r2
 628 0294 3B64     		str	r3, [r7, #64]
 324:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 325:Generated_Source\PSoC5/cy_em_eeprom.c ****                         srcOffset += CY_EM_EEPROM_HEADER_DATA_OFFSET;
 629              		.loc 1 325 0 discriminator 4
 630 0296 7B69     		ldr	r3, [r7, #20]
 631 0298 0C33     		adds	r3, r3, #12
 632 029a 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 18


 326:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 327:Generated_Source\PSoC5/cy_em_eeprom.c ****                         /* Calculate the number of bytes to be read from the current row's EEPROM h
 328:Generated_Source\PSoC5/cy_em_eeprom.c ****                         numBytesToRead = ((endAddr < (addr + size)) ? endAddr : (addr + size)) - rd
 633              		.loc 1 328 0 discriminator 4
 634 029c FA68     		ldr	r2, [r7, #12]
 635 029e 7B68     		ldr	r3, [r7, #4]
 636 02a0 1A44     		add	r2, r2, r3
 637 02a2 BB69     		ldr	r3, [r7, #24]
 638 02a4 9A42     		cmp	r2, r3
 639 02a6 28BF     		it	cs
 640 02a8 1A46     		movcs	r2, r3
 641 02aa 3B6C     		ldr	r3, [r7, #64]
 642 02ac D31A     		subs	r3, r2, r3
 643 02ae 7B65     		str	r3, [r7, #84]
 329:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 330:Generated_Source\PSoC5/cy_em_eeprom.c ****                         /* Calculate the offset in the user buffer from which the data will be upda
 331:Generated_Source\PSoC5/cy_em_eeprom.c ****                         eeData = ((uint32)eepromData) + dstOffset;
 644              		.loc 1 331 0 discriminator 4
 645 02b0 BA68     		ldr	r2, [r7, #8]
 646 02b2 3B69     		ldr	r3, [r7, #16]
 647 02b4 1344     		add	r3, r3, r2
 648 02b6 7B64     		str	r3, [r7, #68]
 332:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 333:Generated_Source\PSoC5/cy_em_eeprom.c ****                         /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 334:Generated_Source\PSoC5/cy_em_eeprom.c ****                         * corresponding row in redundant copy, otherwise return failure. Copy the d
 335:Generated_Source\PSoC5/cy_em_eeprom.c ****                         * from the recent EEPROM headers to the user buffer. This will overwrite th
 336:Generated_Source\PSoC5/cy_em_eeprom.c ****                         * data copied form EEPROM data locations as the data in EEPROM headers is n
 337:Generated_Source\PSoC5/cy_em_eeprom.c ****                         */
 338:Generated_Source\PSoC5/cy_em_eeprom.c ****                         if(0u != context->redundantCopy)
 649              		.loc 1 338 0 discriminator 4
 650 02b8 3B68     		ldr	r3, [r7]
 651 02ba 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 652 02bc 002B     		cmp	r3, #0
 653 02be 0FD0     		beq	.L35
 339:Generated_Source\PSoC5/cy_em_eeprom.c ****                         {
 340:Generated_Source\PSoC5/cy_em_eeprom.c ****                             ret = CheckCrcAndCopy(startRowAddr, eeData, srcOffset, numBytesToRead, 
 654              		.loc 1 340 0
 655 02c0 3B68     		ldr	r3, [r7]
 656 02c2 0093     		str	r3, [sp]
 657 02c4 7B6D     		ldr	r3, [r7, #84]
 658 02c6 7A69     		ldr	r2, [r7, #20]
 659 02c8 796C     		ldr	r1, [r7, #68]
 660 02ca 386D     		ldr	r0, [r7, #80]
 661 02cc FFF7FEFF 		bl	CheckCrcAndCopy
 662 02d0 0346     		mov	r3, r0
 663 02d2 87F85F30 		strb	r3, [r7, #95]
 341:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 342:Generated_Source\PSoC5/cy_em_eeprom.c ****                             if(CY_EM_EEPROM_SUCCESS != ret)
 664              		.loc 1 342 0
 665 02d6 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 666 02da 002B     		cmp	r3, #0
 667 02dc 08D0     		beq	.L28
 343:Generated_Source\PSoC5/cy_em_eeprom.c ****                             {
 344:Generated_Source\PSoC5/cy_em_eeprom.c ****                                 break;
 668              		.loc 1 344 0
 669 02de 0EE0     		b	.L7
 670              	.L35:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 19


 345:Generated_Source\PSoC5/cy_em_eeprom.c ****                             }
 346:Generated_Source\PSoC5/cy_em_eeprom.c ****                         }
 347:Generated_Source\PSoC5/cy_em_eeprom.c ****                         else
 348:Generated_Source\PSoC5/cy_em_eeprom.c ****                         {
 349:Generated_Source\PSoC5/cy_em_eeprom.c ****                             (void)memcpy((void *)(eeData), (void *)(startRowAddr + srcOffset), numB
 671              		.loc 1 349 0
 672 02e0 786C     		ldr	r0, [r7, #68]
 673 02e2 3A6D     		ldr	r2, [r7, #80]
 674 02e4 7B69     		ldr	r3, [r7, #20]
 675 02e6 1344     		add	r3, r3, r2
 676 02e8 7A6D     		ldr	r2, [r7, #84]
 677 02ea 1946     		mov	r1, r3
 678 02ec FFF7FEFF 		bl	memcpy
 679              	.L28:
 680              	.LBE5:
 681              	.LBE4:
 308:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 682              		.loc 1 308 0 discriminator 2
 683 02f0 BB6D     		ldr	r3, [r7, #88]
 684 02f2 0133     		adds	r3, r3, #1
 685 02f4 BB65     		str	r3, [r7, #88]
 686              	.L27:
 308:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 687              		.loc 1 308 0 is_stmt 0 discriminator 1
 688 02f6 BA6D     		ldr	r2, [r7, #88]
 689 02f8 7B6B     		ldr	r3, [r7, #52]
 690 02fa 9A42     		cmp	r2, r3
 691 02fc 88D9     		bls	.L36
 692              	.L7:
 693              	.LBE2:
 350:Generated_Source\PSoC5/cy_em_eeprom.c ****                         }
 351:Generated_Source\PSoC5/cy_em_eeprom.c ****                     }
 352:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 353:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 354:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 355:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 356:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 357:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 694              		.loc 1 357 0 is_stmt 1
 695 02fe 97F85F30 		ldrb	r3, [r7, #95]	@ zero_extendqisi2
 358:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 696              		.loc 1 358 0
 697 0302 1846     		mov	r0, r3
 698 0304 6037     		adds	r7, r7, #96
 699              		.cfi_def_cfa_offset 8
 700 0306 BD46     		mov	sp, r7
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0308 80BD     		pop	{r7, pc}
 704              		.cfi_endproc
 705              	.LFE1:
 706              		.size	Cy_Em_EEPROM_Read, .-Cy_Em_EEPROM_Read
 707 030a 00BF     		.section	.text.Cy_Em_EEPROM_Write,"ax",%progbits
 708              		.align	2
 709              		.global	Cy_Em_EEPROM_Write
 710              		.thumb
 711              		.thumb_func
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 20


 712              		.type	Cy_Em_EEPROM_Write, %function
 713              	Cy_Em_EEPROM_Write:
 714              	.LFB2:
 359:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 360:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 361:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 362:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Write
 363:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 364:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 365:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function takes the logical EEPROM address and converts it to the actual
 366:Generated_Source\PSoC5/cy_em_eeprom.c **** * physical address and writes data there. If wear leveling is implemented, the
 367:Generated_Source\PSoC5/cy_em_eeprom.c **** * writing process will use the wear leveling techniques. This is a blocking
 368:Generated_Source\PSoC5/cy_em_eeprom.c **** * function and it does not return until the write operation is completed. The
 369:Generated_Source\PSoC5/cy_em_eeprom.c **** * user firmware should not enter Hibernate mode until write is completed. The
 370:Generated_Source\PSoC5/cy_em_eeprom.c **** * write operation is allowed in Sleep and Deep-Sleep modes. During the flash
 371:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation, the device should not be reset, including the XRES pin, a software
 372:Generated_Source\PSoC5/cy_em_eeprom.c **** * reset, and watchdog reset sources. Also, low-voltage detect circuits should
 373:Generated_Source\PSoC5/cy_em_eeprom.c **** * be configured to generate an interrupt instead of a reset. Otherwise, portions
 374:Generated_Source\PSoC5/cy_em_eeprom.c **** * of flash may undergo unexpected changes.
 375:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 376:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param addr
 377:Generated_Source\PSoC5/cy_em_eeprom.c **** * The logical start address in EEPROM to start writing data from.
 378:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 379:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param eepromData
 380:Generated_Source\PSoC5/cy_em_eeprom.c **** * Data to write to EEPROM.
 381:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 382:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param size
 383:Generated_Source\PSoC5/cy_em_eeprom.c **** * The amount of data to write to EEPROM.
 384:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 385:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 386:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 387:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 388:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 389:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 390:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 391:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
 392:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform write
 393:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 394:Generated_Source\PSoC5/cy_em_eeprom.c **** * datasheet.
 395:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 396:Generated_Source\PSoC5/cy_em_eeprom.c **** * \sideeffect
 397:Generated_Source\PSoC5/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 398:Generated_Source\PSoC5/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 399:Generated_Source\PSoC5/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 400:Generated_Source\PSoC5/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 401:Generated_Source\PSoC5/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 402:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 403:Generated_Source\PSoC5/cy_em_eeprom.c **** * \sideeffect
 404:Generated_Source\PSoC5/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 405:Generated_Source\PSoC5/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 406:Generated_Source\PSoC5/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 407:Generated_Source\PSoC5/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM write is not completed.
 408:Generated_Source\PSoC5/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 409:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 410:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 411:Generated_Source\PSoC5/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Write(uint32 addr,
 412:Generated_Source\PSoC5/cy_em_eeprom.c ****                                             void * eepromData,
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 21


 413:Generated_Source\PSoC5/cy_em_eeprom.c ****                                             uint32 size,
 414:Generated_Source\PSoC5/cy_em_eeprom.c ****                                             cy_stc_eeprom_context_t * context)
 415:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 715              		.loc 1 415 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 336
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719 0000 90B5     		push	{r4, r7, lr}
 720              		.cfi_def_cfa_offset 12
 721              		.cfi_offset 4, -12
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 D7B0     		sub	sp, sp, #348
 725              		.cfi_def_cfa_offset 360
 726 0004 02AF     		add	r7, sp, #8
 727              		.cfi_def_cfa 7, 352
 728 0006 07F10C04 		add	r4, r7, #12
 729 000a 2060     		str	r0, [r4]
 730 000c 07F10800 		add	r0, r7, #8
 731 0010 0160     		str	r1, [r0]
 732 0012 391D     		adds	r1, r7, #4
 733 0014 0A60     		str	r2, [r1]
 734 0016 3A46     		mov	r2, r7
 735 0018 1360     		str	r3, [r2]
 416:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 736              		.loc 1 416 0
 737 001a 0123     		movs	r3, #1
 738 001c 87F84F31 		strb	r3, [r7, #335]
 417:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 i;
 418:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 wrCnt;
 419:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 actEmEepromRowNum;
 420:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
 421:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 startAddr = 0u;
 739              		.loc 1 421 0
 740 0020 07F12003 		add	r3, r7, #32
 741 0024 0022     		movs	r2, #0
 742 0026 1A60     		str	r2, [r3]
 422:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 endAddr = 0u;
 743              		.loc 1 422 0
 744 0028 07F11C03 		add	r3, r7, #28
 745 002c 0022     		movs	r2, #0
 746 002e 1A60     		str	r2, [r3]
 423:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 tmpRowAddr;
 424:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 747              		.loc 1 424 0
 748 0030 3B46     		mov	r3, r7
 749 0032 1B68     		ldr	r3, [r3]
 750 0034 9A68     		ldr	r2, [r3, #8]
 751 0036 07F11803 		add	r3, r7, #24
 752 003a 1A60     		str	r2, [r3]
 425:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 426:Generated_Source\PSoC5/cy_em_eeprom.c ****     void * tmpData;
 427:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 753              		.loc 1 427 0
 754 003c 07F10803 		add	r3, r7, #8
 755 0040 1B68     		ldr	r3, [r3]
 756 0042 C7F83C31 		str	r3, [r7, #316]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 22


 428:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 429:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Check if the EEPROM data does not exceed the EEPROM capacity */
 430:Generated_Source\PSoC5/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 757              		.loc 1 430 0
 758 0046 3B1D     		adds	r3, r7, #4
 759 0048 1B68     		ldr	r3, [r3]
 760 004a 002B     		cmp	r3, #0
 761 004c 00F07481 		beq	.L39
 762              		.loc 1 430 0 is_stmt 0 discriminator 1
 763 0050 07F10C02 		add	r2, r7, #12
 764 0054 3B1D     		adds	r3, r7, #4
 765 0056 1268     		ldr	r2, [r2]
 766 0058 1B68     		ldr	r3, [r3]
 767 005a 1A44     		add	r2, r2, r3
 768 005c 3B46     		mov	r3, r7
 769 005e 1B68     		ldr	r3, [r3]
 770 0060 DB68     		ldr	r3, [r3, #12]
 771 0062 9A42     		cmp	r2, r3
 772 0064 00F26881 		bhi	.L39
 773              		.loc 1 430 0 discriminator 2
 774 0068 07F10803 		add	r3, r7, #8
 775 006c 1B68     		ldr	r3, [r3]
 776 006e 002B     		cmp	r3, #0
 777 0070 00F06281 		beq	.L39
 778              	.LBB6:
 431:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 432:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 numWrites = ((size - 1u) / CY_EM_EEPROM_HEADER_DATA_LEN) + 1u;
 779              		.loc 1 432 0 is_stmt 1
 780 0074 3B1D     		adds	r3, r7, #4
 781 0076 1B68     		ldr	r3, [r3]
 782 0078 013B     		subs	r3, r3, #1
 783 007a 1B09     		lsrs	r3, r3, #4
 784 007c B24A     		ldr	r2, .L61
 785 007e A2FB0323 		umull	r2, r3, r2, r3
 786 0082 0133     		adds	r3, r3, #1
 787 0084 C7F83431 		str	r3, [r7, #308]
 433:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 eeHeaderDataOffset = 0u;
 788              		.loc 1 433 0
 789 0088 07F11003 		add	r3, r7, #16
 790 008c 0022     		movs	r2, #0
 791 008e 1A60     		str	r2, [r3]
 434:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 435:Generated_Source\PSoC5/cy_em_eeprom.c ****         for(wrCnt = 0u; wrCnt < numWrites; wrCnt++)
 792              		.loc 1 435 0
 793 0090 0023     		movs	r3, #0
 794 0092 C7F84431 		str	r3, [r7, #324]
 795 0096 46E1     		b	.L40
 796              	.L58:
 797              	.LBB7:
 436:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 437:Generated_Source\PSoC5/cy_em_eeprom.c ****             uint32 skipOperation = 0u;
 798              		.loc 1 437 0
 799 0098 0023     		movs	r3, #0
 800 009a C7F83831 		str	r3, [r7, #312]
 438:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Get the sequence number of the last written row */
 439:Generated_Source\PSoC5/cy_em_eeprom.c ****             uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 801              		.loc 1 439 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 23


 802 009e 07F11803 		add	r3, r7, #24
 803 00a2 1B68     		ldr	r3, [r3]
 804 00a4 1B68     		ldr	r3, [r3]
 805 00a6 C7F83031 		str	r3, [r7, #304]
 440:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 441:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Get the address of the row to be written. The "emEepromRowAddr" may be
 442:Generated_Source\PSoC5/cy_em_eeprom.c ****             * updated with the proper address (if wear leveling is used). The
 443:Generated_Source\PSoC5/cy_em_eeprom.c ****             * "emEepromRowRdAddr" will point to the row address from which the historic
 444:Generated_Source\PSoC5/cy_em_eeprom.c ****             * data will be read into the RAM buffer.
 445:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 446:Generated_Source\PSoC5/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 806              		.loc 1 446 0
 807 00aa 3B46     		mov	r3, r7
 808 00ac 07F11402 		add	r2, r7, #20
 809 00b0 07F11801 		add	r1, r7, #24
 810 00b4 1B68     		ldr	r3, [r3]
 811 00b6 D7F83001 		ldr	r0, [r7, #304]
 812 00ba FFF7FEFF 		bl	GetNextRowToWrite
 447:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 448:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Clear the RAM buffer so to not put junk into flash */
 449:Generated_Source\PSoC5/cy_em_eeprom.c ****             (void)memset(writeRamBuffer, 0, CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 813              		.loc 1 449 0
 814 00be 07F12403 		add	r3, r7, #36
 815 00c2 4FF48072 		mov	r2, #256
 816 00c6 0021     		movs	r1, #0
 817 00c8 1846     		mov	r0, r3
 818 00ca FFF7FEFF 		bl	memset
 450:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 451:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Fill the EM_EEPROM header info for the row in the RAM buffer */
 452:Generated_Source\PSoC5/cy_em_eeprom.c ****             seqNum++;
 819              		.loc 1 452 0
 820 00ce D7F83031 		ldr	r3, [r7, #304]
 821 00d2 0133     		adds	r3, r3, #1
 822 00d4 C7F83031 		str	r3, [r7, #304]
 453:Generated_Source\PSoC5/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 823              		.loc 1 453 0
 824 00d8 07F12403 		add	r3, r7, #36
 825 00dc D7F83021 		ldr	r2, [r7, #304]
 826 00e0 1A60     		str	r2, [r3]
 454:Generated_Source\PSoC5/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_ADDR_OFFSET_U32] = addr;
 827              		.loc 1 454 0
 828 00e2 07F12403 		add	r3, r7, #36
 829 00e6 07F10C02 		add	r2, r7, #12
 830 00ea 1268     		ldr	r2, [r2]
 831 00ec 5A60     		str	r2, [r3, #4]
 455:Generated_Source\PSoC5/cy_em_eeprom.c ****             tmpData = (void *) eeData;
 832              		.loc 1 455 0
 833 00ee D7F83C31 		ldr	r3, [r7, #316]
 834 00f2 C7F82C31 		str	r3, [r7, #300]
 456:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 457:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Check if this is the last row to write */
 458:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(wrCnt == (numWrites - 1u))
 835              		.loc 1 458 0
 836 00f6 D7F83431 		ldr	r3, [r7, #308]
 837 00fa 5A1E     		subs	r2, r3, #1
 838 00fc D7F84431 		ldr	r3, [r7, #324]
 839 0100 9A42     		cmp	r2, r3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 24


 840 0102 05D1     		bne	.L41
 459:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 460:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Fill in the remaining size value to the EEPROM header. */
 461:Generated_Source\PSoC5/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = size;
 841              		.loc 1 461 0
 842 0104 07F12403 		add	r3, r7, #36
 843 0108 3A1D     		adds	r2, r7, #4
 844 010a 1268     		ldr	r2, [r2]
 845 010c 9A60     		str	r2, [r3, #8]
 846 010e 14E0     		b	.L42
 847              	.L41:
 462:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 463:Generated_Source\PSoC5/cy_em_eeprom.c ****             else
 464:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 465:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* This is not the last row to write in the current EEPROM write operation.
 466:Generated_Source\PSoC5/cy_em_eeprom.c ****                 * Write the maximum possible data size to the EEPROM header. Update the
 467:Generated_Source\PSoC5/cy_em_eeprom.c ****                 * size, eeData and addr respectively.
 468:Generated_Source\PSoC5/cy_em_eeprom.c ****                 */
 469:Generated_Source\PSoC5/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = CY_EM_EEPROM_HEADER_DATA_LEN;
 848              		.loc 1 469 0
 849 0110 07F12403 		add	r3, r7, #36
 850 0114 7022     		movs	r2, #112
 851 0116 9A60     		str	r2, [r3, #8]
 470:Generated_Source\PSoC5/cy_em_eeprom.c ****                 size -= CY_EM_EEPROM_HEADER_DATA_LEN;
 852              		.loc 1 470 0
 853 0118 3B1D     		adds	r3, r7, #4
 854 011a 3A1D     		adds	r2, r7, #4
 855 011c 1268     		ldr	r2, [r2]
 856 011e 703A     		subs	r2, r2, #112
 857 0120 1A60     		str	r2, [r3]
 471:Generated_Source\PSoC5/cy_em_eeprom.c ****                 addr += CY_EM_EEPROM_HEADER_DATA_LEN;
 858              		.loc 1 471 0
 859 0122 07F10C03 		add	r3, r7, #12
 860 0126 07F10C02 		add	r2, r7, #12
 861 012a 1268     		ldr	r2, [r2]
 862 012c 7032     		adds	r2, r2, #112
 863 012e 1A60     		str	r2, [r3]
 472:Generated_Source\PSoC5/cy_em_eeprom.c ****                 eeData += CY_EM_EEPROM_HEADER_DATA_LEN;
 864              		.loc 1 472 0
 865 0130 D7F83C31 		ldr	r3, [r7, #316]
 866 0134 7033     		adds	r3, r3, #112
 867 0136 C7F83C31 		str	r3, [r7, #316]
 868              	.L42:
 473:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 474:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 475:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Write the data to the EEPROM header */
 476:Generated_Source\PSoC5/cy_em_eeprom.c ****             (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_HEADER_DATA_OFFSET_U32],
 477:Generated_Source\PSoC5/cy_em_eeprom.c ****                          tmpData,
 478:Generated_Source\PSoC5/cy_em_eeprom.c ****                          writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32]);
 869              		.loc 1 478 0
 870 013a 07F12403 		add	r3, r7, #36
 871 013e 9A68     		ldr	r2, [r3, #8]
 476:Generated_Source\PSoC5/cy_em_eeprom.c ****                          tmpData,
 872              		.loc 1 476 0
 873 0140 07F12403 		add	r3, r7, #36
 874 0144 0C33     		adds	r3, r3, #12
 875 0146 D7F82C11 		ldr	r1, [r7, #300]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 25


 876 014a 1846     		mov	r0, r3
 877 014c FFF7FEFF 		bl	memcpy
 479:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 480:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(emEepromRowRdAddr != 0UL)
 878              		.loc 1 480 0
 879 0150 07F11403 		add	r3, r7, #20
 880 0154 1B68     		ldr	r3, [r3]
 881 0156 002B     		cmp	r3, #0
 882 0158 0BD0     		beq	.L43
 481:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 482:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Copy the EEPROM historic data for this row from flash to RAM */
 483:Generated_Source\PSoC5/cy_em_eeprom.c ****                 (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 484:Generated_Source\PSoC5/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 883              		.loc 1 484 0
 884 015a 07F11403 		add	r3, r7, #20
 885 015e 1B68     		ldr	r3, [r3]
 886 0160 8033     		adds	r3, r3, #128
 483:Generated_Source\PSoC5/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 887              		.loc 1 483 0
 888 0162 1946     		mov	r1, r3
 889 0164 07F12403 		add	r3, r7, #36
 890 0168 8033     		adds	r3, r3, #128
 891 016a 8022     		movs	r2, #128
 892 016c 1846     		mov	r0, r3
 893 016e FFF7FEFF 		bl	memcpy
 894              	.L43:
 485:Generated_Source\PSoC5/cy_em_eeprom.c ****                              CY_EM_EEPROM_EEPROM_DATA_LEN);
 486:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 487:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 488:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Check if there is data for this location in other EEPROM headers:
 489:Generated_Source\PSoC5/cy_em_eeprom.c ****             * find out the row with the lowest possible sequence number which
 490:Generated_Source\PSoC5/cy_em_eeprom.c ****             * may contain the data for the current row.
 491:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 492:Generated_Source\PSoC5/cy_em_eeprom.c ****             i = (seqNum > context->numberOfRows) ? ((seqNum - (context->numberOfRows)) + 1u) : 1u;
 895              		.loc 1 492 0
 896 0172 3B46     		mov	r3, r7
 897 0174 1B68     		ldr	r3, [r3]
 898 0176 5A68     		ldr	r2, [r3, #4]
 899 0178 D7F83031 		ldr	r3, [r7, #304]
 900 017c 9A42     		cmp	r2, r3
 901 017e 07D2     		bcs	.L44
 902              		.loc 1 492 0 is_stmt 0 discriminator 1
 903 0180 3B46     		mov	r3, r7
 904 0182 1B68     		ldr	r3, [r3]
 905 0184 5B68     		ldr	r3, [r3, #4]
 906 0186 D7F83021 		ldr	r2, [r7, #304]
 907 018a D31A     		subs	r3, r2, r3
 908 018c 0133     		adds	r3, r3, #1
 909 018e 00E0     		b	.L45
 910              	.L44:
 911              		.loc 1 492 0 discriminator 2
 912 0190 0123     		movs	r3, #1
 913              	.L45:
 914              		.loc 1 492 0 discriminator 4
 915 0192 C7F84831 		str	r3, [r7, #328]
 493:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 494:Generated_Source\PSoC5/cy_em_eeprom.c ****             for(; i <= seqNum; i++)
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 26


 916              		.loc 1 494 0 is_stmt 1 discriminator 4
 917 0196 7EE0     		b	.L46
 918              	.L53:
 495:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 496:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(i == seqNum)
 919              		.loc 1 496 0
 920 0198 D7F84821 		ldr	r2, [r7, #328]
 921 019c D7F83031 		ldr	r3, [r7, #304]
 922 01a0 9A42     		cmp	r2, r3
 923 01a2 04D1     		bne	.L47
 497:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 498:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* The code reached the row that is about to be written. Analyze the recently
 499:Generated_Source\PSoC5/cy_em_eeprom.c ****                     * created EEPROM header (stored in the RAM buffer currently): if it contains
 500:Generated_Source\PSoC5/cy_em_eeprom.c ****                     * the data for EEPROM data locations in the row that is about to be written.
 501:Generated_Source\PSoC5/cy_em_eeprom.c ****                     */
 502:Generated_Source\PSoC5/cy_em_eeprom.c ****                     tmpRowAddr = (uint32) writeRamBuffer;
 924              		.loc 1 502 0
 925 01a4 07F12403 		add	r3, r7, #36
 926 01a8 C7F84031 		str	r3, [r7, #320]
 927 01ac 07E0     		b	.L48
 928              	.L47:
 503:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 504:Generated_Source\PSoC5/cy_em_eeprom.c ****                 else
 505:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 506:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* Retrieve the address of the previously written row by its sequence number.
 507:Generated_Source\PSoC5/cy_em_eeprom.c ****                     * The pointer will be used to get data from the respective EEPROM header.
 508:Generated_Source\PSoC5/cy_em_eeprom.c ****                     */
 509:Generated_Source\PSoC5/cy_em_eeprom.c ****                     tmpRowAddr = GetRowAddrBySeqNum(i, context);
 929              		.loc 1 509 0
 930 01ae 3B46     		mov	r3, r7
 931 01b0 1968     		ldr	r1, [r3]
 932 01b2 D7F84801 		ldr	r0, [r7, #328]
 933 01b6 FFF7FEFF 		bl	GetRowAddrBySeqNum
 934 01ba C7F84001 		str	r0, [r7, #320]
 935              	.L48:
 510:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 511:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 512:Generated_Source\PSoC5/cy_em_eeprom.c ****                 actEmEepromRowNum = CY_EM_EEPROM_GET_ACT_ROW_NUM_FROM_ADDR(emEepromRowAddr,
 936              		.loc 1 512 0
 937 01be 07F11803 		add	r3, r7, #24
 938 01c2 1A68     		ldr	r2, [r3]
 939 01c4 3B46     		mov	r3, r7
 940 01c6 1B68     		ldr	r3, [r3]
 941 01c8 9B69     		ldr	r3, [r3, #24]
 942 01ca D31A     		subs	r3, r2, r3
 943 01cc 1B0A     		lsrs	r3, r3, #8
 944 01ce 3A46     		mov	r2, r7
 945 01d0 1268     		ldr	r2, [r2]
 946 01d2 5268     		ldr	r2, [r2, #4]
 947 01d4 B3FBF2F1 		udiv	r1, r3, r2
 948 01d8 02FB01F2 		mul	r2, r2, r1
 949 01dc 9B1A     		subs	r3, r3, r2
 950 01de C7F82831 		str	r3, [r7, #296]
 513:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                                            context->numberOfRows,
 514:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                                            context->userFlashStartA
 515:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(0UL != tmpRowAddr)
 951              		.loc 1 515 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 27


 952 01e2 D7F84031 		ldr	r3, [r7, #320]
 953 01e6 002B     		cmp	r3, #0
 954 01e8 17D0     		beq	.L49
 516:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 517:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* Calculate the required addressed for the later EEPROM historic data update *
 518:Generated_Source\PSoC5/cy_em_eeprom.c ****                     skipOperation = GetAddresses(
 519:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               &startAddr,
 520:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               &endAddr,
 521:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               &eeHeaderDataOffset,
 522:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               actEmEepromRowNum,
 523:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFF
 955              		.loc 1 523 0
 956 01ea D7F84031 		ldr	r3, [r7, #320]
 957 01ee 0433     		adds	r3, r3, #4
 518:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               &startAddr,
 958              		.loc 1 518 0
 959 01f0 1B68     		ldr	r3, [r3]
 524:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_LEN_OFFS
 960              		.loc 1 524 0
 961 01f2 D7F84021 		ldr	r2, [r7, #320]
 962 01f6 0832     		adds	r2, r2, #8
 518:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               &startAddr,
 963              		.loc 1 518 0
 964 01f8 1268     		ldr	r2, [r2]
 965 01fa 07F11004 		add	r4, r7, #16
 966 01fe 07F11C01 		add	r1, r7, #28
 967 0202 07F12000 		add	r0, r7, #32
 968 0206 0192     		str	r2, [sp, #4]
 969 0208 0093     		str	r3, [sp]
 970 020a D7F82831 		ldr	r3, [r7, #296]
 971 020e 2246     		mov	r2, r4
 972 0210 FFF7FEFF 		bl	GetAddresses
 973 0214 C7F83801 		str	r0, [r7, #312]
 974 0218 04E0     		b	.L50
 975              	.L49:
 525:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 526:Generated_Source\PSoC5/cy_em_eeprom.c ****                 else
 527:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 528:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* Skip writes to the RAM buffer */
 529:Generated_Source\PSoC5/cy_em_eeprom.c ****                     skipOperation++;
 976              		.loc 1 529 0
 977 021a D7F83831 		ldr	r3, [r7, #312]
 978 021e 0133     		adds	r3, r3, #1
 979 0220 C7F83831 		str	r3, [r7, #312]
 980              	.L50:
 530:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 531:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 532:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Write data to the RAM buffer */
 533:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(0u == skipOperation)
 981              		.loc 1 533 0
 982 0224 D7F83831 		ldr	r3, [r7, #312]
 983 0228 002B     		cmp	r3, #0
 984 022a 1ED1     		bne	.L51
 985              	.LBB8:
 534:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 535:Generated_Source\PSoC5/cy_em_eeprom.c ****                     uint32 dataAddr = ((uint32)((uint8 *)&writeRamBuffer)) + startAddr;
 986              		.loc 1 535 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 28


 987 022c 07F12402 		add	r2, r7, #36
 988 0230 07F12003 		add	r3, r7, #32
 989 0234 1B68     		ldr	r3, [r3]
 990 0236 1344     		add	r3, r3, r2
 991 0238 C7F82431 		str	r3, [r7, #292]
 536:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 537:Generated_Source\PSoC5/cy_em_eeprom.c ****                     /* Update the address to point to the EEPROM header data and not to
 538:Generated_Source\PSoC5/cy_em_eeprom.c ****                     * the start of the row.
 539:Generated_Source\PSoC5/cy_em_eeprom.c ****                     */
 540:Generated_Source\PSoC5/cy_em_eeprom.c ****                     tmpRowAddr = tmpRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSET + eeHeaderDataOffset;
 992              		.loc 1 540 0
 993 023c 07F11003 		add	r3, r7, #16
 994 0240 1A68     		ldr	r2, [r3]
 995 0242 D7F84031 		ldr	r3, [r7, #320]
 996 0246 1344     		add	r3, r3, r2
 997 0248 0C33     		adds	r3, r3, #12
 998 024a C7F84031 		str	r3, [r7, #320]
 541:Generated_Source\PSoC5/cy_em_eeprom.c ****                     (void)memcpy((void *)(dataAddr), (void *)(tmpRowAddr), endAddr - startAddr);
 999              		.loc 1 541 0
 1000 024e D7F82401 		ldr	r0, [r7, #292]
 1001 0252 D7F84011 		ldr	r1, [r7, #320]
 1002 0256 07F11C03 		add	r3, r7, #28
 1003 025a 1A68     		ldr	r2, [r3]
 1004 025c 07F12003 		add	r3, r7, #32
 1005 0260 1B68     		ldr	r3, [r3]
 1006 0262 D31A     		subs	r3, r2, r3
 1007 0264 1A46     		mov	r2, r3
 1008 0266 FFF7FEFF 		bl	memcpy
 1009              	.L51:
 1010              	.LBE8:
 542:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 543:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 544:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Calculate the checksum if redundant copy is enabled */
 545:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(0u != context->redundantCopy)
 1011              		.loc 1 545 0
 1012 026a 3B46     		mov	r3, r7
 1013 026c 1B68     		ldr	r3, [r3]
 1014 026e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1015 0270 002B     		cmp	r3, #0
 1016 0272 0BD0     		beq	.L52
 546:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
 547:Generated_Source\PSoC5/cy_em_eeprom.c ****                     writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 548:Generated_Source\PSoC5/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1017              		.loc 1 548 0
 1018 0274 07F12403 		add	r3, r7, #36
 1019 0278 8033     		adds	r3, r3, #128
 1020 027a 8021     		movs	r1, #128
 1021 027c 1846     		mov	r0, r3
 1022 027e FFF7FEFF 		bl	CalcChecksum
 1023 0282 0346     		mov	r3, r0
 547:Generated_Source\PSoC5/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1024              		.loc 1 547 0
 1025 0284 1A46     		mov	r2, r3
 1026 0286 07F12403 		add	r3, r7, #36
 1027 028a DA67     		str	r2, [r3, #124]
 1028              	.L52:
 494:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 29


 1029              		.loc 1 494 0
 1030 028c D7F84831 		ldr	r3, [r7, #328]
 1031 0290 0133     		adds	r3, r3, #1
 1032 0292 C7F84831 		str	r3, [r7, #328]
 1033              	.L46:
 494:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 1034              		.loc 1 494 0 is_stmt 0 discriminator 1
 1035 0296 D7F84821 		ldr	r2, [r7, #328]
 1036 029a D7F83031 		ldr	r3, [r7, #304]
 1037 029e 9A42     		cmp	r2, r3
 1038 02a0 7FF67AAF 		bls	.L53
 549:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 550:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
 551:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 552:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 553:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Write the data to the specified flash row */
 554:Generated_Source\PSoC5/cy_em_eeprom.c ****             ret = WriteRow(emEepromRowAddr, writeRamBuffer, context);
 1039              		.loc 1 554 0 is_stmt 1
 1040 02a4 07F11803 		add	r3, r7, #24
 1041 02a8 1868     		ldr	r0, [r3]
 1042 02aa 3B46     		mov	r3, r7
 1043 02ac 07F12401 		add	r1, r7, #36
 1044 02b0 1A68     		ldr	r2, [r3]
 1045 02b2 FFF7FEFF 		bl	WriteRow
 1046 02b6 0346     		mov	r3, r0
 1047 02b8 87F84F31 		strb	r3, [r7, #335]
 555:Generated_Source\PSoC5/cy_em_eeprom.c ****             tmpRowAddr = emEepromRowAddr;
 1048              		.loc 1 555 0
 1049 02bc 07F11803 		add	r3, r7, #24
 1050 02c0 1B68     		ldr	r3, [r3]
 1051 02c2 C7F84031 		str	r3, [r7, #320]
 556:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 557:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Check if redundant copy is used */
 558:Generated_Source\PSoC5/cy_em_eeprom.c ****             if((0u != context->redundantCopy) && (CY_EM_EEPROM_SUCCESS == ret))
 1052              		.loc 1 558 0
 1053 02c6 3B46     		mov	r3, r7
 1054 02c8 1B68     		ldr	r3, [r3]
 1055 02ca 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1056 02cc 002B     		cmp	r3, #0
 1057 02ce 1BD0     		beq	.L54
 1058              		.loc 1 558 0 is_stmt 0 discriminator 1
 1059 02d0 97F84F31 		ldrb	r3, [r7, #335]	@ zero_extendqisi2
 1060 02d4 002B     		cmp	r3, #0
 1061 02d6 17D1     		bne	.L54
 559:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 560:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Update the row address to point to the row in the redundant EEPROM's copy */
 561:Generated_Source\PSoC5/cy_em_eeprom.c ****                 tmpRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1062              		.loc 1 561 0 is_stmt 1
 1063 02d8 07F11803 		add	r3, r7, #24
 1064 02dc 1A68     		ldr	r2, [r3]
 1065 02de 3B46     		mov	r3, r7
 1066 02e0 1B68     		ldr	r3, [r3]
 1067 02e2 9B69     		ldr	r3, [r3, #24]
 1068 02e4 D21A     		subs	r2, r2, r3
 1069 02e6 3B46     		mov	r3, r7
 1070 02e8 1B68     		ldr	r3, [r3]
 1071 02ea 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 30


 1072 02ec 1344     		add	r3, r3, r2
 1073 02ee C7F84031 		str	r3, [r7, #320]
 562:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 563:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Write the data to the specified flash row */
 564:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 1074              		.loc 1 564 0
 1075 02f2 3B46     		mov	r3, r7
 1076 02f4 07F12401 		add	r1, r7, #36
 1077 02f8 1A68     		ldr	r2, [r3]
 1078 02fa D7F84001 		ldr	r0, [r7, #320]
 1079 02fe FFF7FEFF 		bl	WriteRow
 1080 0302 0346     		mov	r3, r0
 1081 0304 87F84F31 		strb	r3, [r7, #335]
 1082              	.L54:
 565:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 566:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 567:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 1083              		.loc 1 567 0
 1084 0308 97F84F31 		ldrb	r3, [r7, #335]	@ zero_extendqisi2
 1085 030c 002B     		cmp	r3, #0
 1086 030e 12D1     		bne	.L60
 568:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 569:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Store last written row address only when EEPROM and redundant
 570:Generated_Source\PSoC5/cy_em_eeprom.c ****                 * copy writes were successful.
 571:Generated_Source\PSoC5/cy_em_eeprom.c ****                 */
 572:Generated_Source\PSoC5/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromRowAddr;
 1087              		.loc 1 572 0
 1088 0310 07F11803 		add	r3, r7, #24
 1089 0314 1A68     		ldr	r2, [r3]
 1090 0316 3B46     		mov	r3, r7
 1091 0318 1B68     		ldr	r3, [r3]
 1092 031a 9A60     		str	r2, [r3, #8]
 1093              	.LBE7:
 435:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 1094              		.loc 1 435 0
 1095 031c D7F84431 		ldr	r3, [r7, #324]
 1096 0320 0133     		adds	r3, r3, #1
 1097 0322 C7F84431 		str	r3, [r7, #324]
 1098              	.L40:
 435:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 1099              		.loc 1 435 0 is_stmt 0 discriminator 1
 1100 0326 D7F84421 		ldr	r2, [r7, #324]
 1101 032a D7F83431 		ldr	r3, [r7, #308]
 1102 032e 9A42     		cmp	r2, r3
 1103 0330 FFF4B2AE 		bcc	.L58
 1104 0334 00E0     		b	.L39
 1105              	.L60:
 1106              	.LBB9:
 573:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 574:Generated_Source\PSoC5/cy_em_eeprom.c ****             else
 575:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 576:Generated_Source\PSoC5/cy_em_eeprom.c ****                 break;
 1107              		.loc 1 576 0 is_stmt 1
 1108 0336 00BF     		nop
 1109              	.L39:
 1110              	.LBE9:
 1111              	.LBE6:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 31


 577:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 578:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 579:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 580:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 1112              		.loc 1 580 0
 1113 0338 97F84F31 		ldrb	r3, [r7, #335]	@ zero_extendqisi2
 581:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1114              		.loc 1 581 0
 1115 033c 1846     		mov	r0, r3
 1116 033e 07F5AA77 		add	r7, r7, #340
 1117              		.cfi_def_cfa_offset 12
 1118 0342 BD46     		mov	sp, r7
 1119              		.cfi_def_cfa_register 13
 1120              		@ sp needed
 1121 0344 90BD     		pop	{r4, r7, pc}
 1122              	.L62:
 1123 0346 00BF     		.align	2
 1124              	.L61:
 1125 0348 26499224 		.word	613566758
 1126              		.cfi_endproc
 1127              	.LFE2:
 1128              		.size	Cy_Em_EEPROM_Write, .-Cy_Em_EEPROM_Write
 1129              		.section	.text.Cy_Em_EEPROM_Erase,"ax",%progbits
 1130              		.align	2
 1131              		.global	Cy_Em_EEPROM_Erase
 1132              		.thumb
 1133              		.thumb_func
 1134              		.type	Cy_Em_EEPROM_Erase, %function
 1135              	Cy_Em_EEPROM_Erase:
 1136              	.LFB3:
 582:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 583:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 584:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 585:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Erase
 586:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 587:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 588:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function erases the entire contents of the EEPROM. Erased values are all
 589:Generated_Source\PSoC5/cy_em_eeprom.c **** * zeros. This is a blocking function and it does not return until the write
 590:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation is completed. The user firmware should not enter Hibernate mode until
 591:Generated_Source\PSoC5/cy_em_eeprom.c **** * erase is completed. The erase operation is allowed in Sleep and Deep-Sleep modes.
 592:Generated_Source\PSoC5/cy_em_eeprom.c **** * During the flash operation, the device should not be reset, including the
 593:Generated_Source\PSoC5/cy_em_eeprom.c **** * XRES pin, a software reset, and watchdog reset sources. Also, low-voltage
 594:Generated_Source\PSoC5/cy_em_eeprom.c **** * detect circuits should be configured to generate an interrupt instead of a
 595:Generated_Source\PSoC5/cy_em_eeprom.c **** * reset. Otherwise, portions of flash may undergo unexpected changes.
 596:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 597:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 598:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 599:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 600:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 601:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 602:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 603:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
 604:Generated_Source\PSoC5/cy_em_eeprom.c **** * For all non PSoC 6 devices the erase operation is performed by clearing
 605:Generated_Source\PSoC5/cy_em_eeprom.c **** * the EEPROM data using flash write. This affects the flash durability.
 606:Generated_Source\PSoC5/cy_em_eeprom.c **** * So it is recommended to use this function in utmost case to prolongate
 607:Generated_Source\PSoC5/cy_em_eeprom.c **** * flash life.
 608:Generated_Source\PSoC5/cy_em_eeprom.c **** *
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 32


 609:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
 610:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform erase
 611:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 612:Generated_Source\PSoC5/cy_em_eeprom.c **** * datasheet.
 613:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 614:Generated_Source\PSoC5/cy_em_eeprom.c **** * \sideeffect
 615:Generated_Source\PSoC5/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 616:Generated_Source\PSoC5/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 617:Generated_Source\PSoC5/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 618:Generated_Source\PSoC5/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 619:Generated_Source\PSoC5/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 620:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 621:Generated_Source\PSoC5/cy_em_eeprom.c **** * \sideeffect
 622:Generated_Source\PSoC5/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 623:Generated_Source\PSoC5/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 624:Generated_Source\PSoC5/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 625:Generated_Source\PSoC5/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM erase is not completed.
 626:Generated_Source\PSoC5/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 627:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 628:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 629:Generated_Source\PSoC5/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Erase(cy_stc_eeprom_context_t * context)
 630:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1137              		.loc 1 630 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 288
 1140              		@ frame_needed = 1, uses_anonymous_args = 0
 1141 0000 80B5     		push	{r7, lr}
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 C8B0     		sub	sp, sp, #288
 1146              		.cfi_def_cfa_offset 296
 1147 0004 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 1149 0006 3B1D     		adds	r3, r7, #4
 1150 0008 1860     		str	r0, [r3]
 631:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 i;
 632:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 seqNum;
 633:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 1151              		.loc 1 633 0
 1152 000a 3B1D     		adds	r3, r7, #4
 1153 000c 1B68     		ldr	r3, [r3]
 1154 000e 9B68     		ldr	r3, [r3, #8]
 1155 0010 C7F80C31 		str	r3, [r7, #268]
 634:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 635:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1156              		.loc 1 635 0
 1157 0014 0423     		movs	r3, #4
 1158 0016 87F81B31 		strb	r3, [r7, #283]
 636:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV] = {0u};
 1159              		.loc 1 636 0
 1160 001a 07F10803 		add	r3, r7, #8
 1161 001e 1846     		mov	r0, r3
 1162 0020 4FF48073 		mov	r3, #256
 1163 0024 1A46     		mov	r2, r3
 1164 0026 0021     		movs	r1, #0
 1165 0028 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 33


 637:Generated_Source\PSoC5/cy_em_eeprom.c **** #if (CY_PSOC6)
 638:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromStoredRowAddr = context->lastWrRowAddr;
 639:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 storedSeqNum;
 640:Generated_Source\PSoC5/cy_em_eeprom.c **** #endif /* (!CY_PSOC6) */
 641:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 642:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Get the sequence number of the last written row */
 643:Generated_Source\PSoC5/cy_em_eeprom.c ****     seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1166              		.loc 1 643 0
 1167 002c D7F80C31 		ldr	r3, [r7, #268]
 1168 0030 1B68     		ldr	r3, [r3]
 1169 0032 C7F81431 		str	r3, [r7, #276]
 644:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 645:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* If there were no writes to EEPROM - nothing to erase */
 646:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(0u != seqNum)
 1170              		.loc 1 646 0
 1171 0036 D7F81431 		ldr	r3, [r7, #276]
 1172 003a 002B     		cmp	r3, #0
 1173 003c 4DD0     		beq	.L64
 1174              	.LBB10:
 647:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 648:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Calculate the number of row erase operations required */
 649:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 numWrites = context->numberOfRows * context->wearLevelingFactor;
 1175              		.loc 1 649 0
 1176 003e 3B1D     		adds	r3, r7, #4
 1177 0040 1B68     		ldr	r3, [r3]
 1178 0042 5B68     		ldr	r3, [r3, #4]
 1179 0044 3A1D     		adds	r2, r7, #4
 1180 0046 1268     		ldr	r2, [r2]
 1181 0048 1269     		ldr	r2, [r2, #16]
 1182 004a 02FB03F3 		mul	r3, r2, r3
 1183 004e C7F81031 		str	r3, [r7, #272]
 650:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 651:Generated_Source\PSoC5/cy_em_eeprom.c ****     #if (CY_PSOC6)
 652:Generated_Source\PSoC5/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &emEepromStoredRowAddr, &emEepromRowRdAddr, context);
 653:Generated_Source\PSoC5/cy_em_eeprom.c ****         storedSeqNum = seqNum + 1u;
 654:Generated_Source\PSoC5/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 655:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 656:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(0u != context->redundantCopy)
 1184              		.loc 1 656 0
 1185 0052 3B1D     		adds	r3, r7, #4
 1186 0054 1B68     		ldr	r3, [r3]
 1187 0056 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1188 0058 002B     		cmp	r3, #0
 1189 005a 0BD0     		beq	.L65
 657:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 658:Generated_Source\PSoC5/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 659:Generated_Source\PSoC5/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1190              		.loc 1 659 0
 1191 005c 07F10803 		add	r3, r7, #8
 1192 0060 8033     		adds	r3, r3, #128
 1193 0062 8021     		movs	r1, #128
 1194 0064 1846     		mov	r0, r3
 1195 0066 FFF7FEFF 		bl	CalcChecksum
 1196 006a 0346     		mov	r3, r0
 658:Generated_Source\PSoC5/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1197              		.loc 1 658 0
 1198 006c 1A46     		mov	r2, r3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 34


 1199 006e 07F10803 		add	r3, r7, #8
 1200 0072 DA67     		str	r2, [r3, #124]
 1201              	.L65:
 660:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 661:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 662:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 663:Generated_Source\PSoC5/cy_em_eeprom.c ****         for(i = 0u; i < numWrites; i++)
 1202              		.loc 1 663 0
 1203 0074 0023     		movs	r3, #0
 1204 0076 C7F81C31 		str	r3, [r7, #284]
 1205 007a 28E0     		b	.L66
 1206              	.L67:
 664:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 665:Generated_Source\PSoC5/cy_em_eeprom.c ****         #if (CY_PSOC6)
 666:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* For PSoC 6 the erase operation moves backwards. From last written row
 667:Generated_Source\PSoC5/cy_em_eeprom.c ****             * identified by "seqNum" down to "seqNum" - "numWrites". If "emEepromRowAddr"
 668:Generated_Source\PSoC5/cy_em_eeprom.c ****             * is zero this means that the row identified by "seqNum" was previously 
 669:Generated_Source\PSoC5/cy_em_eeprom.c ****             * erased.
 670:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 671:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(0u != emEepromRowAddr)
 672:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 673:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 674:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 675:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 676:Generated_Source\PSoC5/cy_em_eeprom.c ****             seqNum--;
 677:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 678:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(0u == seqNum)
 679:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 680:Generated_Source\PSoC5/cy_em_eeprom.c ****                 /* Exit the loop as there is no more row is EEPROM to be erased */
 681:Generated_Source\PSoC5/cy_em_eeprom.c ****                 break;
 682:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 683:Generated_Source\PSoC5/cy_em_eeprom.c ****             emEepromRowAddr = GetRowAddrBySeqNum(seqNum, context);
 684:Generated_Source\PSoC5/cy_em_eeprom.c ****         #else
 685:Generated_Source\PSoC5/cy_em_eeprom.c ****             seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1207              		.loc 1 685 0 discriminator 3
 1208 007c D7F80C31 		ldr	r3, [r7, #268]
 1209 0080 1B68     		ldr	r3, [r3]
 1210 0082 C7F81431 		str	r3, [r7, #276]
 686:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Get the address of the row to be erased. "emEepromRowAddr" may be updated
 687:Generated_Source\PSoC5/cy_em_eeprom.c ****             * with the proper address (if wear leveling is used).
 688:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 689:Generated_Source\PSoC5/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 1211              		.loc 1 689 0 discriminator 3
 1212 0086 3B1D     		adds	r3, r7, #4
 1213 0088 07F58472 		add	r2, r7, #264
 1214 008c 07F58671 		add	r1, r7, #268
 1215 0090 1B68     		ldr	r3, [r3]
 1216 0092 D7F81401 		ldr	r0, [r7, #276]
 1217 0096 FFF7FEFF 		bl	GetNextRowToWrite
 690:Generated_Source\PSoC5/cy_em_eeprom.c ****             seqNum++;
 1218              		.loc 1 690 0 discriminator 3
 1219 009a D7F81431 		ldr	r3, [r7, #276]
 1220 009e 0133     		adds	r3, r3, #1
 1221 00a0 C7F81431 		str	r3, [r7, #276]
 691:Generated_Source\PSoC5/cy_em_eeprom.c ****             writeRamBuffer[0u] = seqNum;
 1222              		.loc 1 691 0 discriminator 3
 1223 00a4 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 35


 1224 00a8 D7F81421 		ldr	r2, [r7, #276]
 1225 00ac 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/cy_em_eeprom.c ****             ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 1226              		.loc 1 692 0 discriminator 3
 1227 00ae D7F80C01 		ldr	r0, [r7, #268]
 1228 00b2 07F10801 		add	r1, r7, #8
 1229 00b6 3B1D     		adds	r3, r7, #4
 1230 00b8 1A68     		ldr	r2, [r3]
 1231 00ba FFF7FEFF 		bl	EraseRow
 1232 00be 0346     		mov	r3, r0
 1233 00c0 87F81B31 		strb	r3, [r7, #283]
 663:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 1234              		.loc 1 663 0 discriminator 3
 1235 00c4 D7F81C31 		ldr	r3, [r7, #284]
 1236 00c8 0133     		adds	r3, r3, #1
 1237 00ca C7F81C31 		str	r3, [r7, #284]
 1238              	.L66:
 663:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 1239              		.loc 1 663 0 is_stmt 0 discriminator 1
 1240 00ce D7F81C21 		ldr	r2, [r7, #284]
 1241 00d2 D7F81031 		ldr	r3, [r7, #272]
 1242 00d6 9A42     		cmp	r2, r3
 1243 00d8 D0D3     		bcc	.L67
 1244              	.L64:
 1245              	.LBE10:
 693:Generated_Source\PSoC5/cy_em_eeprom.c ****         #endif /* (CY_PSOC6) */
 694:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 695:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 696:Generated_Source\PSoC5/cy_em_eeprom.c ****     #if (CY_PSOC6)
 697:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 698:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 699:Generated_Source\PSoC5/cy_em_eeprom.c ****             writeRamBuffer[0u] = storedSeqNum;
 700:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 701:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Write the previously stored sequence number to the flash row which would be
 702:Generated_Source\PSoC5/cy_em_eeprom.c ****             * written next if the erase wouldn't happen. In this case the write to
 703:Generated_Source\PSoC5/cy_em_eeprom.c ****             * redundant copy can be skipped as it does not add any value.
 704:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 705:Generated_Source\PSoC5/cy_em_eeprom.c ****             ret = WriteRow(emEepromStoredRowAddr, writeRamBuffer, context);
 706:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 707:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 708:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 709:Generated_Source\PSoC5/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromStoredRowAddr;
 710:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 711:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 712:Generated_Source\PSoC5/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 713:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 714:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 715:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 1246              		.loc 1 715 0 is_stmt 1
 1247 00da 97F81B31 		ldrb	r3, [r7, #283]	@ zero_extendqisi2
 716:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1248              		.loc 1 716 0
 1249 00de 1846     		mov	r0, r3
 1250 00e0 07F59077 		add	r7, r7, #288
 1251              		.cfi_def_cfa_offset 8
 1252 00e4 BD46     		mov	sp, r7
 1253              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 36


 1254              		@ sp needed
 1255 00e6 80BD     		pop	{r7, pc}
 1256              		.cfi_endproc
 1257              	.LFE3:
 1258              		.size	Cy_Em_EEPROM_Erase, .-Cy_Em_EEPROM_Erase
 1259              		.section	.text.Cy_Em_EEPROM_NumWrites,"ax",%progbits
 1260              		.align	2
 1261              		.global	Cy_Em_EEPROM_NumWrites
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	Cy_Em_EEPROM_NumWrites, %function
 1265              	Cy_Em_EEPROM_NumWrites:
 1266              	.LFB4:
 717:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 718:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 719:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 720:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_NumWrites
 721:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 722:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 723:Generated_Source\PSoC5/cy_em_eeprom.c **** * Returns the number of the EEPROM writes completed so far.
 724:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 725:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 726:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 727:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 728:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 729:Generated_Source\PSoC5/cy_em_eeprom.c **** * The number of writes performed to the EEPROM.
 730:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 731:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 732:Generated_Source\PSoC5/cy_em_eeprom.c **** uint32 Cy_Em_EEPROM_NumWrites(cy_stc_eeprom_context_t * context)
 733:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1267              		.loc 1 733 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 8
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 1272 0000 80B4     		push	{r7}
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 7, -4
 1275 0002 83B0     		sub	sp, sp, #12
 1276              		.cfi_def_cfa_offset 16
 1277 0004 00AF     		add	r7, sp, #0
 1278              		.cfi_def_cfa_register 7
 1279 0006 7860     		str	r0, [r7, #4]
 734:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr));
 1280              		.loc 1 734 0
 1281 0008 7B68     		ldr	r3, [r7, #4]
 1282 000a 9B68     		ldr	r3, [r3, #8]
 1283 000c 1B68     		ldr	r3, [r3]
 735:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1284              		.loc 1 735 0
 1285 000e 1846     		mov	r0, r3
 1286 0010 0C37     		adds	r7, r7, #12
 1287              		.cfi_def_cfa_offset 4
 1288 0012 BD46     		mov	sp, r7
 1289              		.cfi_def_cfa_register 13
 1290              		@ sp needed
 1291 0014 80BC     		pop	{r7}
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 37


 1292              		.cfi_restore 7
 1293              		.cfi_def_cfa_offset 0
 1294 0016 7047     		bx	lr
 1295              		.cfi_endproc
 1296              	.LFE4:
 1297              		.size	Cy_Em_EEPROM_NumWrites, .-Cy_Em_EEPROM_NumWrites
 1298              		.section	.text.FindLastWrittenRow,"ax",%progbits
 1299              		.align	2
 1300              		.thumb
 1301              		.thumb_func
 1302              		.type	FindLastWrittenRow, %function
 1303              	FindLastWrittenRow:
 1304              	.LFB5:
 736:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 737:Generated_Source\PSoC5/cy_em_eeprom.c **** /** \} */
 738:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 739:Generated_Source\PSoC5/cy_em_eeprom.c **** /** \cond INTERNAL */
 740:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 741:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 742:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 743:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: FindLastWrittenRow
 744:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 745:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 746:Generated_Source\PSoC5/cy_em_eeprom.c **** * Performs a search of the last written row address of the EEPROM associated
 747:Generated_Source\PSoC5/cy_em_eeprom.c **** * with the context structure. If there were no writes to the EEPROM the
 748:Generated_Source\PSoC5/cy_em_eeprom.c **** * function returns the start address of the EEPROM. The row address is returned
 749:Generated_Source\PSoC5/cy_em_eeprom.c **** * in the input parameter.
 750:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 751:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param lastWrRowPtr
 752:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to a memory where the last written row will be returned.
 753:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 754:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 755:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 756:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 757:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 758:Generated_Source\PSoC5/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context)
 759:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1305              		.loc 1 759 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 24
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310 0000 80B4     		push	{r7}
 1311              		.cfi_def_cfa_offset 4
 1312              		.cfi_offset 7, -4
 1313 0002 87B0     		sub	sp, sp, #28
 1314              		.cfi_def_cfa_offset 32
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
 1318 0008 3960     		str	r1, [r7]
 760:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 seqNum = 0u;
 1319              		.loc 1 760 0
 1320 000a 0023     		movs	r3, #0
 1321 000c BB60     		str	r3, [r7, #8]
 761:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 prevSeqNum = 0u;
 1322              		.loc 1 761 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 38


 1323 000e 0023     		movs	r3, #0
 1324 0010 7B61     		str	r3, [r7, #20]
 762:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 numRows;
 763:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1325              		.loc 1 763 0
 1326 0012 3B68     		ldr	r3, [r7]
 1327 0014 9B69     		ldr	r3, [r3, #24]
 1328 0016 FB60     		str	r3, [r7, #12]
 764:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 765:Generated_Source\PSoC5/cy_em_eeprom.c ****     *lastWrRowPtr = emEepromAddr;
 1329              		.loc 1 765 0
 1330 0018 7B68     		ldr	r3, [r7, #4]
 1331 001a FA68     		ldr	r2, [r7, #12]
 1332 001c 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 767:Generated_Source\PSoC5/cy_em_eeprom.c ****     for(numRows = 0u; numRows < (context->numberOfRows * context->wearLevelingFactor); numRows++)
 1333              		.loc 1 767 0
 1334 001e 0023     		movs	r3, #0
 1335 0020 3B61     		str	r3, [r7, #16]
 1336 0022 15E0     		b	.L72
 1337              	.L74:
 768:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 769:Generated_Source\PSoC5/cy_em_eeprom.c ****         seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr);
 1338              		.loc 1 769 0
 1339 0024 FB68     		ldr	r3, [r7, #12]
 1340 0026 1B68     		ldr	r3, [r3]
 1341 0028 BB60     		str	r3, [r7, #8]
 770:Generated_Source\PSoC5/cy_em_eeprom.c ****         if((0u != seqNum) && (seqNum > prevSeqNum))
 1342              		.loc 1 770 0
 1343 002a BB68     		ldr	r3, [r7, #8]
 1344 002c 002B     		cmp	r3, #0
 1345 002e 08D0     		beq	.L73
 1346              		.loc 1 770 0 is_stmt 0 discriminator 1
 1347 0030 BA68     		ldr	r2, [r7, #8]
 1348 0032 7B69     		ldr	r3, [r7, #20]
 1349 0034 9A42     		cmp	r2, r3
 1350 0036 04D9     		bls	.L73
 771:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 772:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Some record in EEPROM was found. Store found sequence
 773:Generated_Source\PSoC5/cy_em_eeprom.c ****             * number and row address.
 774:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 775:Generated_Source\PSoC5/cy_em_eeprom.c ****             prevSeqNum = seqNum;
 1351              		.loc 1 775 0 is_stmt 1
 1352 0038 BB68     		ldr	r3, [r7, #8]
 1353 003a 7B61     		str	r3, [r7, #20]
 776:Generated_Source\PSoC5/cy_em_eeprom.c ****             *lastWrRowPtr = emEepromAddr;
 1354              		.loc 1 776 0
 1355 003c 7B68     		ldr	r3, [r7, #4]
 1356 003e FA68     		ldr	r2, [r7, #12]
 1357 0040 1A60     		str	r2, [r3]
 1358              	.L73:
 777:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 778:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 779:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Switch to the next row */
 780:Generated_Source\PSoC5/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1359              		.loc 1 780 0 discriminator 2
 1360 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 39


 1361 0044 03F58073 		add	r3, r3, #256
 1362 0048 FB60     		str	r3, [r7, #12]
 767:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 1363              		.loc 1 767 0 discriminator 2
 1364 004a 3B69     		ldr	r3, [r7, #16]
 1365 004c 0133     		adds	r3, r3, #1
 1366 004e 3B61     		str	r3, [r7, #16]
 1367              	.L72:
 767:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 1368              		.loc 1 767 0 is_stmt 0 discriminator 1
 1369 0050 3B68     		ldr	r3, [r7]
 1370 0052 5B68     		ldr	r3, [r3, #4]
 1371 0054 3A68     		ldr	r2, [r7]
 1372 0056 1269     		ldr	r2, [r2, #16]
 1373 0058 02FB03F2 		mul	r2, r2, r3
 1374 005c 3B69     		ldr	r3, [r7, #16]
 1375 005e 9A42     		cmp	r2, r3
 1376 0060 E0D8     		bhi	.L74
 781:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 782:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1377              		.loc 1 782 0 is_stmt 1
 1378 0062 00BF     		nop
 1379 0064 1C37     		adds	r7, r7, #28
 1380              		.cfi_def_cfa_offset 4
 1381 0066 BD46     		mov	sp, r7
 1382              		.cfi_def_cfa_register 13
 1383              		@ sp needed
 1384 0068 80BC     		pop	{r7}
 1385              		.cfi_restore 7
 1386              		.cfi_def_cfa_offset 0
 1387 006a 7047     		bx	lr
 1388              		.cfi_endproc
 1389              	.LFE5:
 1390              		.size	FindLastWrittenRow, .-FindLastWrittenRow
 1391              		.section	.text.GetRowAddrBySeqNum,"ax",%progbits
 1392              		.align	2
 1393              		.thumb
 1394              		.thumb_func
 1395              		.type	GetRowAddrBySeqNum, %function
 1396              	GetRowAddrBySeqNum:
 1397              	.LFB6:
 783:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 784:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 785:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 786:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: GetRowAddrBySeqNum
 787:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 788:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 789:Generated_Source\PSoC5/cy_em_eeprom.c **** * Returns the address of the row in EEPROM using its sequence number.
 790:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 791:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param seqNum
 792:Generated_Source\PSoC5/cy_em_eeprom.c **** * The sequence number of the row.
 793:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 794:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 795:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
 796:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 797:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 798:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the row or zero if the row with the sequence number was not
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 40


 799:Generated_Source\PSoC5/cy_em_eeprom.c **** * found.
 800:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 801:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 802:Generated_Source\PSoC5/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context)
 803:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1398              		.loc 1 803 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 16
 1401              		@ frame_needed = 1, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 1403 0000 80B4     		push	{r7}
 1404              		.cfi_def_cfa_offset 4
 1405              		.cfi_offset 7, -4
 1406 0002 85B0     		sub	sp, sp, #20
 1407              		.cfi_def_cfa_offset 24
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 1410 0006 7860     		str	r0, [r7, #4]
 1411 0008 3960     		str	r1, [r7]
 804:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1412              		.loc 1 804 0
 1413 000a 3B68     		ldr	r3, [r7]
 1414 000c 9B69     		ldr	r3, [r3, #24]
 1415 000e FB60     		str	r3, [r7, #12]
 805:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 806:Generated_Source\PSoC5/cy_em_eeprom.c ****     while(CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr) != seqNum)
 1416              		.loc 1 806 0
 1417 0010 0BE0     		b	.L76
 1418              	.L78:
 807:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 808:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Switch to the next row */
 809:Generated_Source\PSoC5/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1419              		.loc 1 809 0
 1420 0012 FB68     		ldr	r3, [r7, #12]
 1421 0014 03F58073 		add	r3, r3, #256
 1422 0018 FB60     		str	r3, [r7, #12]
 810:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 811:Generated_Source\PSoC5/cy_em_eeprom.c ****         if (CY_EM_EEPROM_ADDR_IN_RANGE !=
 812:Generated_Source\PSoC5/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1423              		.loc 1 812 0
 1424 001a 3B68     		ldr	r3, [r7]
 1425 001c 1A68     		ldr	r2, [r3]
 811:Generated_Source\PSoC5/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1426              		.loc 1 811 0
 1427 001e FB68     		ldr	r3, [r7, #12]
 1428 0020 9A42     		cmp	r2, r3
 1429 0022 02D8     		bhi	.L76
 813:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 814:Generated_Source\PSoC5/cy_em_eeprom.c ****             emEepromAddr = 0u;
 1430              		.loc 1 814 0
 1431 0024 0023     		movs	r3, #0
 1432 0026 FB60     		str	r3, [r7, #12]
 815:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Exit the loop as we reached the end of EEPROM */
 816:Generated_Source\PSoC5/cy_em_eeprom.c ****             break;
 1433              		.loc 1 816 0
 1434 0028 04E0     		b	.L77
 1435              	.L76:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 41


 806:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 1436              		.loc 1 806 0
 1437 002a FB68     		ldr	r3, [r7, #12]
 1438 002c 1A68     		ldr	r2, [r3]
 1439 002e 7B68     		ldr	r3, [r7, #4]
 1440 0030 9A42     		cmp	r2, r3
 1441 0032 EED1     		bne	.L78
 1442              	.L77:
 817:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 818:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 819:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 820:Generated_Source\PSoC5/cy_em_eeprom.c ****     return (emEepromAddr);
 1443              		.loc 1 820 0
 1444 0034 FB68     		ldr	r3, [r7, #12]
 821:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1445              		.loc 1 821 0
 1446 0036 1846     		mov	r0, r3
 1447 0038 1437     		adds	r7, r7, #20
 1448              		.cfi_def_cfa_offset 4
 1449 003a BD46     		mov	sp, r7
 1450              		.cfi_def_cfa_register 13
 1451              		@ sp needed
 1452 003c 80BC     		pop	{r7}
 1453              		.cfi_restore 7
 1454              		.cfi_def_cfa_offset 0
 1455 003e 7047     		bx	lr
 1456              		.cfi_endproc
 1457              	.LFE6:
 1458              		.size	GetRowAddrBySeqNum, .-GetRowAddrBySeqNum
 1459              		.section	.text.GetNextRowToWrite,"ax",%progbits
 1460              		.align	2
 1461              		.thumb
 1462              		.thumb_func
 1463              		.type	GetNextRowToWrite, %function
 1464              	GetNextRowToWrite:
 1465              	.LFB7:
 822:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 823:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 824:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 825:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: GetNextRowToWrite
 826:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 827:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 828:Generated_Source\PSoC5/cy_em_eeprom.c **** * Performs a range check of the row that should be written and updates the
 829:Generated_Source\PSoC5/cy_em_eeprom.c **** * address to the row respectively. The similar actions are done for the read
 830:Generated_Source\PSoC5/cy_em_eeprom.c **** * address.
 831:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 832:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param seqNum
 833:Generated_Source\PSoC5/cy_em_eeprom.c **** * The sequence number of the last written row.
 834:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 835:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowToWrPtr
 836:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the last written row (input). The address of the row to be 
 837:Generated_Source\PSoC5/cy_em_eeprom.c **** * written (output).
 838:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 839:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowToRdPtr
 840:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the row from which the data should be read into the RAM buffer
 841:Generated_Source\PSoC5/cy_em_eeprom.c **** * in a later write operation. Out parameter.
 842:Generated_Source\PSoC5/cy_em_eeprom.c **** *
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 42


 843:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 844:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 845:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 846:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 847:Generated_Source\PSoC5/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
 848:Generated_Source\PSoC5/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
 849:Generated_Source\PSoC5/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
 850:Generated_Source\PSoC5/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context)
 851:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1466              		.loc 1 851 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 16
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471 0000 80B4     		push	{r7}
 1472              		.cfi_def_cfa_offset 4
 1473              		.cfi_offset 7, -4
 1474 0002 85B0     		sub	sp, sp, #20
 1475              		.cfi_def_cfa_offset 24
 1476 0004 00AF     		add	r7, sp, #0
 1477              		.cfi_def_cfa_register 7
 1478 0006 F860     		str	r0, [r7, #12]
 1479 0008 B960     		str	r1, [r7, #8]
 1480 000a 7A60     		str	r2, [r7, #4]
 1481 000c 3B60     		str	r3, [r7]
 852:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Switch to the next row to be written if the current sequence number is
 853:Generated_Source\PSoC5/cy_em_eeprom.c ****     * not zero.
 854:Generated_Source\PSoC5/cy_em_eeprom.c ****     */
 855:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(0u != seqNum)
 1482              		.loc 1 855 0
 1483 000e FB68     		ldr	r3, [r7, #12]
 1484 0010 002B     		cmp	r3, #0
 1485 0012 05D0     		beq	.L81
 856:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 857:Generated_Source\PSoC5/cy_em_eeprom.c ****         *rowToWrPtr = (*rowToWrPtr + CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 1486              		.loc 1 857 0
 1487 0014 BB68     		ldr	r3, [r7, #8]
 1488 0016 1B68     		ldr	r3, [r3]
 1489 0018 03F58072 		add	r2, r3, #256
 1490 001c BB68     		ldr	r3, [r7, #8]
 1491 001e 1A60     		str	r2, [r3]
 1492              	.L81:
 858:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 859:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 860:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* If the resulting row address is out of EEPROM, then switch to the base
 861:Generated_Source\PSoC5/cy_em_eeprom.c ****     * EEPROM address (Row#0).
 862:Generated_Source\PSoC5/cy_em_eeprom.c ****     */
 863:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(CY_EM_EEPROM_ADDR_IN_RANGE !=
 864:Generated_Source\PSoC5/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1493              		.loc 1 864 0
 1494 0020 BB68     		ldr	r3, [r7, #8]
 1495 0022 1A68     		ldr	r2, [r3]
 1496 0024 3B68     		ldr	r3, [r7]
 1497 0026 1B68     		ldr	r3, [r3]
 863:Generated_Source\PSoC5/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1498              		.loc 1 863 0
 1499 0028 9A42     		cmp	r2, r3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 43


 1500 002a 03D3     		bcc	.L82
 865:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 866:Generated_Source\PSoC5/cy_em_eeprom.c ****         *rowToWrPtr = context->userFlashStartAddr;
 1501              		.loc 1 866 0
 1502 002c 3B68     		ldr	r3, [r7]
 1503 002e 9A69     		ldr	r2, [r3, #24]
 1504 0030 BB68     		ldr	r3, [r7, #8]
 1505 0032 1A60     		str	r2, [r3]
 1506              	.L82:
 867:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 868:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 869:Generated_Source\PSoC5/cy_em_eeprom.c ****     *rowToRdPtr = 0u;
 1507              		.loc 1 869 0
 1508 0034 7B68     		ldr	r3, [r7, #4]
 1509 0036 0022     		movs	r2, #0
 1510 0038 1A60     		str	r2, [r3]
 870:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 871:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Check if the sequence number is larger than the number of rows in the EEPROM.
 872:Generated_Source\PSoC5/cy_em_eeprom.c ****     * If not, do not update the row read address because there is no historic
 873:Generated_Source\PSoC5/cy_em_eeprom.c ****     * data to be read.
 874:Generated_Source\PSoC5/cy_em_eeprom.c ****     */
 875:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(context->numberOfRows <= seqNum)
 1511              		.loc 1 875 0
 1512 003a 3B68     		ldr	r3, [r7]
 1513 003c 5A68     		ldr	r2, [r3, #4]
 1514 003e FB68     		ldr	r3, [r7, #12]
 1515 0040 9A42     		cmp	r2, r3
 1516 0042 31D8     		bhi	.L87
 876:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 877:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Check if wear leveling is used in EEPROM */
 878:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 1517              		.loc 1 878 0
 1518 0044 3B68     		ldr	r3, [r7]
 1519 0046 1B69     		ldr	r3, [r3, #16]
 1520 0048 012B     		cmp	r3, #1
 1521 004a 29D9     		bls	.L84
 879:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 880:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* The read row address should be taken from an EEPROM copy that became
 881:Generated_Source\PSoC5/cy_em_eeprom.c ****             * inactive recently. This condition check handles that.
 882:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 883:Generated_Source\PSoC5/cy_em_eeprom.c ****             if((*rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)) <
 1522              		.loc 1 883 0
 1523 004c BB68     		ldr	r3, [r7, #8]
 1524 004e 1A68     		ldr	r2, [r3]
 1525 0050 3B68     		ldr	r3, [r7]
 1526 0052 5B68     		ldr	r3, [r3, #4]
 1527 0054 1B02     		lsls	r3, r3, #8
 1528 0056 D21A     		subs	r2, r2, r3
 884:Generated_Source\PSoC5/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1529              		.loc 1 884 0
 1530 0058 3B68     		ldr	r3, [r7]
 1531 005a 9B69     		ldr	r3, [r3, #24]
 883:Generated_Source\PSoC5/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1532              		.loc 1 883 0
 1533 005c 9A42     		cmp	r2, r3
 1534 005e 16D2     		bcs	.L85
 885:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 44


 886:Generated_Source\PSoC5/cy_em_eeprom.c ****                 *rowToRdPtr = context->userFlashStartAddr +
 1535              		.loc 1 886 0
 1536 0060 3B68     		ldr	r3, [r7]
 1537 0062 9A69     		ldr	r2, [r3, #24]
 887:Generated_Source\PSoC5/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1538              		.loc 1 887 0
 1539 0064 3B68     		ldr	r3, [r7]
 1540 0066 5968     		ldr	r1, [r3, #4]
 1541 0068 3B68     		ldr	r3, [r7]
 1542 006a 1B69     		ldr	r3, [r3, #16]
 1543 006c 03F1FF13 		add	r3, r3, #16711935
 1544 0070 03F57F43 		add	r3, r3, #65280
 1545 0074 03FB01F3 		mul	r3, r3, r1
 1546 0078 1B02     		lsls	r3, r3, #8
 886:Generated_Source\PSoC5/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1547              		.loc 1 886 0
 1548 007a 1A44     		add	r2, r2, r3
 888:Generated_Source\PSoC5/cy_em_eeprom.c ****                         CY_EM_EEPROM_FLASH_SIZEOF_ROW) + (*rowToWrPtr - context->userFlashStartAddr
 1549              		.loc 1 888 0
 1550 007c BB68     		ldr	r3, [r7, #8]
 1551 007e 1968     		ldr	r1, [r3]
 1552 0080 3B68     		ldr	r3, [r7]
 1553 0082 9B69     		ldr	r3, [r3, #24]
 1554 0084 CB1A     		subs	r3, r1, r3
 1555 0086 1A44     		add	r2, r2, r3
 886:Generated_Source\PSoC5/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1556              		.loc 1 886 0
 1557 0088 7B68     		ldr	r3, [r7, #4]
 1558 008a 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 890:Generated_Source\PSoC5/cy_em_eeprom.c ****             else
 891:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
 892:Generated_Source\PSoC5/cy_em_eeprom.c ****                 *rowToRdPtr = *rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)
 893:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 894:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 895:Generated_Source\PSoC5/cy_em_eeprom.c ****         else
 896:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 897:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* If no wear leveling, always read from the same flash row that
 898:Generated_Source\PSoC5/cy_em_eeprom.c ****             * should be written.
 899:Generated_Source\PSoC5/cy_em_eeprom.c ****             */
 900:Generated_Source\PSoC5/cy_em_eeprom.c ****             *rowToRdPtr = *rowToWrPtr;
 901:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 902:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 903:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1559              		.loc 1 903 0
 1560 008c 0CE0     		b	.L87
 1561              	.L85:
 892:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
 1562              		.loc 1 892 0
 1563 008e BB68     		ldr	r3, [r7, #8]
 1564 0090 1A68     		ldr	r2, [r3]
 1565 0092 3B68     		ldr	r3, [r7]
 1566 0094 5B68     		ldr	r3, [r3, #4]
 1567 0096 1B02     		lsls	r3, r3, #8
 1568 0098 D21A     		subs	r2, r2, r3
 1569 009a 7B68     		ldr	r3, [r7, #4]
 1570 009c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 45


 1571              		.loc 1 903 0
 1572 009e 03E0     		b	.L87
 1573              	.L84:
 900:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 1574              		.loc 1 900 0
 1575 00a0 BB68     		ldr	r3, [r7, #8]
 1576 00a2 1A68     		ldr	r2, [r3]
 1577 00a4 7B68     		ldr	r3, [r7, #4]
 1578 00a6 1A60     		str	r2, [r3]
 1579              	.L87:
 1580              		.loc 1 903 0
 1581 00a8 00BF     		nop
 1582 00aa 1437     		adds	r7, r7, #20
 1583              		.cfi_def_cfa_offset 4
 1584 00ac BD46     		mov	sp, r7
 1585              		.cfi_def_cfa_register 13
 1586              		@ sp needed
 1587 00ae 80BC     		pop	{r7}
 1588              		.cfi_restore 7
 1589              		.cfi_def_cfa_offset 0
 1590 00b0 7047     		bx	lr
 1591              		.cfi_endproc
 1592              	.LFE7:
 1593              		.size	GetNextRowToWrite, .-GetNextRowToWrite
 1594 00b2 00BF     		.section	.text.CalcChecksum,"ax",%progbits
 1595              		.align	2
 1596              		.thumb
 1597              		.thumb_func
 1598              		.type	CalcChecksum, %function
 1599              	CalcChecksum:
 1600              	.LFB8:
 904:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 905:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 906:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 907:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: CalcChecksum
 908:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 909:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 910:Generated_Source\PSoC5/cy_em_eeprom.c **** * Implements CRC-8 that is used in checksum calculation for the redundant copy
 911:Generated_Source\PSoC5/cy_em_eeprom.c **** * algorithm.
 912:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 913:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowData
 914:Generated_Source\PSoC5/cy_em_eeprom.c **** * The row data to be used to calculate the checksum.
 915:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 916:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param len
 917:Generated_Source\PSoC5/cy_em_eeprom.c **** * The length of rowData.
 918:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 919:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 920:Generated_Source\PSoC5/cy_em_eeprom.c **** * The calculated value of CRC-8.
 921:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 922:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 923:Generated_Source\PSoC5/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len)
 924:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1601              		.loc 1 924 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 16
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605              		@ link register save eliminated.
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 46


 1606 0000 80B4     		push	{r7}
 1607              		.cfi_def_cfa_offset 4
 1608              		.cfi_offset 7, -4
 1609 0002 85B0     		sub	sp, sp, #20
 1610              		.cfi_def_cfa_offset 24
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
 1614 0008 3960     		str	r1, [r7]
 925:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint8 crc = CY_EM_EEPROM_CRC8_SEED;
 1615              		.loc 1 925 0
 1616 000a FF23     		movs	r3, #255
 1617 000c FB73     		strb	r3, [r7, #15]
 926:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint8 i;
 927:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint16 cnt = 0u;
 1618              		.loc 1 927 0
 1619 000e 0023     		movs	r3, #0
 1620 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 928:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 929:Generated_Source\PSoC5/cy_em_eeprom.c ****     while(cnt != len)
 1621              		.loc 1 929 0
 1622 0012 21E0     		b	.L89
 1623              	.L94:
 930:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 931:Generated_Source\PSoC5/cy_em_eeprom.c ****         crc ^= rowData[cnt];
 1624              		.loc 1 931 0
 1625 0014 BB89     		ldrh	r3, [r7, #12]
 1626 0016 7A68     		ldr	r2, [r7, #4]
 1627 0018 1344     		add	r3, r3, r2
 1628 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1629 001c FB7B     		ldrb	r3, [r7, #15]
 1630 001e 5340     		eors	r3, r3, r2
 1631 0020 FB73     		strb	r3, [r7, #15]
 932:Generated_Source\PSoC5/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1632              		.loc 1 932 0
 1633 0022 0023     		movs	r3, #0
 1634 0024 BB73     		strb	r3, [r7, #14]
 1635 0026 11E0     		b	.L90
 1636              	.L93:
 933:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
 934:Generated_Source\PSoC5/cy_em_eeprom.c ****             crc = CY_EM_EEPROM_CALCULATE_CRC8(crc);
 1637              		.loc 1 934 0
 1638 0028 97F90F30 		ldrsb	r3, [r7, #15]
 1639 002c 002B     		cmp	r3, #0
 1640 002e 06DA     		bge	.L91
 1641              		.loc 1 934 0 is_stmt 0 discriminator 1
 1642 0030 FB7B     		ldrb	r3, [r7, #15]
 1643 0032 5B00     		lsls	r3, r3, #1
 1644 0034 DBB2     		uxtb	r3, r3
 1645 0036 83F03103 		eor	r3, r3, #49
 1646 003a DBB2     		uxtb	r3, r3
 1647 003c 02E0     		b	.L92
 1648              	.L91:
 1649              		.loc 1 934 0 discriminator 2
 1650 003e FB7B     		ldrb	r3, [r7, #15]
 1651 0040 5B00     		lsls	r3, r3, #1
 1652 0042 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 47


 1653              	.L92:
 1654              		.loc 1 934 0 discriminator 4
 1655 0044 FB73     		strb	r3, [r7, #15]
 932:Generated_Source\PSoC5/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1656              		.loc 1 932 0 is_stmt 1 discriminator 4
 1657 0046 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1658 0048 0133     		adds	r3, r3, #1
 1659 004a BB73     		strb	r3, [r7, #14]
 1660              	.L90:
 932:Generated_Source\PSoC5/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1661              		.loc 1 932 0 is_stmt 0 discriminator 2
 1662 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1663 004e 072B     		cmp	r3, #7
 1664 0050 EAD9     		bls	.L93
 935:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
 936:Generated_Source\PSoC5/cy_em_eeprom.c ****         cnt++;
 1665              		.loc 1 936 0 is_stmt 1
 1666 0052 BB89     		ldrh	r3, [r7, #12]
 1667 0054 0133     		adds	r3, r3, #1
 1668 0056 BB81     		strh	r3, [r7, #12]	@ movhi
 1669              	.L89:
 929:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 1670              		.loc 1 929 0
 1671 0058 BA89     		ldrh	r2, [r7, #12]
 1672 005a 3B68     		ldr	r3, [r7]
 1673 005c 9A42     		cmp	r2, r3
 1674 005e D9D1     		bne	.L94
 937:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 938:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 939:Generated_Source\PSoC5/cy_em_eeprom.c ****     return (crc);
 1675              		.loc 1 939 0
 1676 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 940:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1677              		.loc 1 940 0
 1678 0062 1846     		mov	r0, r3
 1679 0064 1437     		adds	r7, r7, #20
 1680              		.cfi_def_cfa_offset 4
 1681 0066 BD46     		mov	sp, r7
 1682              		.cfi_def_cfa_register 13
 1683              		@ sp needed
 1684 0068 80BC     		pop	{r7}
 1685              		.cfi_restore 7
 1686              		.cfi_def_cfa_offset 0
 1687 006a 7047     		bx	lr
 1688              		.cfi_endproc
 1689              	.LFE8:
 1690              		.size	CalcChecksum, .-CalcChecksum
 1691              		.section	.text.CheckRanges,"ax",%progbits
 1692              		.align	2
 1693              		.thumb
 1694              		.thumb_func
 1695              		.type	CheckRanges, %function
 1696              	CheckRanges:
 1697              	.LFB9:
 941:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 942:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 943:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 48


 944:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: CheckRanges
 945:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 946:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 947:Generated_Source\PSoC5/cy_em_eeprom.c **** * Checks if the EEPROM of the requested size can be placed in flash.
 948:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 949:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param config
 950:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
 951:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 952:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 953:Generated_Source\PSoC5/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 954:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 955:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 956:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config)
 957:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1698              		.loc 1 957 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 24
 1701              		@ frame_needed = 1, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
 1703 0000 80B4     		push	{r7}
 1704              		.cfi_def_cfa_offset 4
 1705              		.cfi_offset 7, -4
 1706 0002 87B0     		sub	sp, sp, #28
 1707              		.cfi_def_cfa_offset 32
 1708 0004 00AF     		add	r7, sp, #0
 1709              		.cfi_def_cfa_register 7
 1710 0006 7860     		str	r0, [r7, #4]
 958:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_DATA;
 1711              		.loc 1 958 0
 1712 0008 0323     		movs	r3, #3
 1713 000a FB75     		strb	r3, [r7, #23]
 959:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 startAddr = config->userFlashStartAddr;
 1714              		.loc 1 959 0
 1715 000c 7B68     		ldr	r3, [r7, #4]
 1716 000e DB68     		ldr	r3, [r3, #12]
 1717 0010 3B61     		str	r3, [r7, #16]
 960:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 endAddr = startAddr + CY_EM_EEPROM_GET_PHYSICAL_SIZE(config->eepromSize,
 1718              		.loc 1 960 0
 1719 0012 7B68     		ldr	r3, [r7, #4]
 1720 0014 1B68     		ldr	r3, [r3]
 1721 0016 DA09     		lsrs	r2, r3, #7
 1722 0018 7B68     		ldr	r3, [r7, #4]
 1723 001a 1B68     		ldr	r3, [r3]
 1724 001c 03F07F03 		and	r3, r3, #127
 1725 0020 002B     		cmp	r3, #0
 1726 0022 01D0     		beq	.L97
 1727              		.loc 1 960 0 is_stmt 0 discriminator 1
 1728 0024 0123     		movs	r3, #1
 1729 0026 00E0     		b	.L98
 1730              	.L97:
 1731              		.loc 1 960 0 discriminator 2
 1732 0028 0023     		movs	r3, #0
 1733              	.L98:
 1734              		.loc 1 960 0 discriminator 4
 1735 002a 1344     		add	r3, r3, r2
 1736 002c 7A68     		ldr	r2, [r7, #4]
 1737 002e 5268     		ldr	r2, [r2, #4]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 49


 1738 0030 02FB03F3 		mul	r3, r2, r3
 1739 0034 7A68     		ldr	r2, [r7, #4]
 1740 0036 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 1741 0038 0132     		adds	r2, r2, #1
 1742 003a 02FB03F3 		mul	r3, r2, r3
 1743 003e 1A02     		lsls	r2, r3, #8
 1744 0040 3B69     		ldr	r3, [r7, #16]
 1745 0042 1344     		add	r3, r3, r2
 1746 0044 FB60     		str	r3, [r7, #12]
 961:Generated_Source\PSoC5/cy_em_eeprom.c ****             config->wearLevelingFactor, config->redundantCopy);
 962:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 963:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Range check if there is enough flash for EEPROM */
 964:Generated_Source\PSoC5/cy_em_eeprom.c ****     if (CY_EM_EEPROM_IS_IN_FLASH_RANGE(startAddr, endAddr))
 1747              		.loc 1 964 0 is_stmt 1 discriminator 4
 1748 0046 3B69     		ldr	r3, [r7, #16]
 1749 0048 002B     		cmp	r3, #0
 1750 004a 05D0     		beq	.L99
 1751              		.loc 1 964 0 is_stmt 0 discriminator 1
 1752 004c FB68     		ldr	r3, [r7, #12]
 1753 004e B3F5802F 		cmp	r3, #262144
 1754 0052 01D8     		bhi	.L99
 965:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 966:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 1755              		.loc 1 966 0 is_stmt 1
 1756 0054 0023     		movs	r3, #0
 1757 0056 FB75     		strb	r3, [r7, #23]
 1758              	.L99:
 967:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
 968:Generated_Source\PSoC5/cy_em_eeprom.c ****     return (ret);
 1759              		.loc 1 968 0
 1760 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 969:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1761              		.loc 1 969 0
 1762 005a 1846     		mov	r0, r3
 1763 005c 1C37     		adds	r7, r7, #28
 1764              		.cfi_def_cfa_offset 4
 1765 005e BD46     		mov	sp, r7
 1766              		.cfi_def_cfa_register 13
 1767              		@ sp needed
 1768 0060 80BC     		pop	{r7}
 1769              		.cfi_restore 7
 1770              		.cfi_def_cfa_offset 0
 1771 0062 7047     		bx	lr
 1772              		.cfi_endproc
 1773              	.LFE9:
 1774              		.size	CheckRanges, .-CheckRanges
 1775              		.section	.text.WriteRow,"ax",%progbits
 1776              		.align	2
 1777              		.thumb
 1778              		.thumb_func
 1779              		.type	WriteRow, %function
 1780              	WriteRow:
 1781              	.LFB10:
 970:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 971:Generated_Source\PSoC5/cy_em_eeprom.c **** 
 972:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
 973:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: WriteRow
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 50


 974:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
 975:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 976:Generated_Source\PSoC5/cy_em_eeprom.c **** * Writes one flash row starting from the specified row address.
 977:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 978:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowAdd
 979:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the flash row.
 980:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 981:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowData
 982:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the data to be written to the row.
 983:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 984:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
 985:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 986:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 987:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
 988:Generated_Source\PSoC5/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 989:Generated_Source\PSoC5/cy_em_eeprom.c **** *
 990:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
 991:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr,
 992:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         uint32 *rowData,
 993:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 994:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1782              		.loc 1 994 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 32
 1785              		@ frame_needed = 1, uses_anonymous_args = 0
 1786 0000 80B5     		push	{r7, lr}
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 7, -8
 1789              		.cfi_offset 14, -4
 1790 0002 88B0     		sub	sp, sp, #32
 1791              		.cfi_def_cfa_offset 40
 1792 0004 00AF     		add	r7, sp, #0
 1793              		.cfi_def_cfa_register 7
 1794 0006 F860     		str	r0, [r7, #12]
 1795 0008 B960     		str	r1, [r7, #8]
 1796 000a 7A60     		str	r2, [r7, #4]
 995:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1797              		.loc 1 995 0
 1798 000c 0423     		movs	r3, #4
 1799 000e FB77     		strb	r3, [r7, #31]
 996:Generated_Source\PSoC5/cy_em_eeprom.c **** #if (!CY_PSOC6)
 997:Generated_Source\PSoC5/cy_em_eeprom.c ****     cystatus rc;
 998:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 rowId;
 999:Generated_Source\PSoC5/cy_em_eeprom.c ****     #if ((CY_PSOC3) || (CY_PSOC5))
1000:Generated_Source\PSoC5/cy_em_eeprom.c ****         uint32 arrayId;
1001:Generated_Source\PSoC5/cy_em_eeprom.c ****     #endif /* (CY_PSOC3) */
1002:Generated_Source\PSoC5/cy_em_eeprom.c ****     
1003:Generated_Source\PSoC5/cy_em_eeprom.c ****     #if (CY_PSOC3)
1004:Generated_Source\PSoC5/cy_em_eeprom.c ****         rowAddr &= CY_EM_EEPROM_CODE_ADDR_MASK;
1005:Generated_Source\PSoC5/cy_em_eeprom.c ****         context = context;      /* To avoid compiler warning generation */
1006:Generated_Source\PSoC5/cy_em_eeprom.c ****     #else
1007:Generated_Source\PSoC5/cy_em_eeprom.c ****         (void)context;          /* To avoid compiler warning generation */
1008:Generated_Source\PSoC5/cy_em_eeprom.c ****     #endif /* ((CY_PSOC3) */
1009:Generated_Source\PSoC5/cy_em_eeprom.c ****     
1010:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* For non-PSoC 6 devices, the Array ID and Row ID needed to write the row */
1011:Generated_Source\PSoC5/cy_em_eeprom.c ****     rowId = (rowAddr / CY_EM_EEPROM_FLASH_SIZEOF_ROW) % CY_EM_EEPROM_ROWS_IN_ARRAY;
 1800              		.loc 1 1011 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 51


 1801 0010 FB68     		ldr	r3, [r7, #12]
 1802 0012 1B0A     		lsrs	r3, r3, #8
 1803 0014 DBB2     		uxtb	r3, r3
 1804 0016 BB61     		str	r3, [r7, #24]
1012:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1013:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Write the flash row */
1014:Generated_Source\PSoC5/cy_em_eeprom.c ****     #if (CY_PSOC4)
1015:Generated_Source\PSoC5/cy_em_eeprom.c ****         rc = CySysFlashWriteRow(rowId, (uint8 *)rowData);
1016:Generated_Source\PSoC5/cy_em_eeprom.c ****     #else
1017:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1018:Generated_Source\PSoC5/cy_em_eeprom.c ****         #ifndef CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT
1019:Generated_Source\PSoC5/cy_em_eeprom.c ****             (void)CySetTemp();
 1805              		.loc 1 1019 0
 1806 0018 FFF7FEFF 		bl	CySetTemp
1020:Generated_Source\PSoC5/cy_em_eeprom.c ****         #endif /* (CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT) */
1021:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1022:Generated_Source\PSoC5/cy_em_eeprom.c ****         arrayId = rowAddr / CY_FLASH_SIZEOF_ARRAY;
 1807              		.loc 1 1022 0
 1808 001c FB68     		ldr	r3, [r7, #12]
 1809 001e 1B0C     		lsrs	r3, r3, #16
 1810 0020 7B61     		str	r3, [r7, #20]
1023:Generated_Source\PSoC5/cy_em_eeprom.c ****         rc = CyWriteRowData((uint8)arrayId, (uint16)rowId, (uint8 *)rowData);
 1811              		.loc 1 1023 0
 1812 0022 7B69     		ldr	r3, [r7, #20]
 1813 0024 DBB2     		uxtb	r3, r3
 1814 0026 BA69     		ldr	r2, [r7, #24]
 1815 0028 91B2     		uxth	r1, r2
 1816 002a BA68     		ldr	r2, [r7, #8]
 1817 002c 1846     		mov	r0, r3
 1818 002e FFF7FEFF 		bl	CyWriteRowData
 1819 0032 3861     		str	r0, [r7, #16]
1024:Generated_Source\PSoC5/cy_em_eeprom.c ****         
1025:Generated_Source\PSoC5/cy_em_eeprom.c ****         #if (CY_PSOC5)
1026:Generated_Source\PSoC5/cy_em_eeprom.c ****             CyFlushCache();
 1820              		.loc 1 1026 0
 1821 0034 FFF7FEFF 		bl	CyFlushCache
1027:Generated_Source\PSoC5/cy_em_eeprom.c ****         #endif /* (CY_PSOC5) */
1028:Generated_Source\PSoC5/cy_em_eeprom.c ****     #endif /* (CY_PSOC4) */
1029:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1030:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(CYRET_SUCCESS == rc)
 1822              		.loc 1 1030 0
 1823 0038 3B69     		ldr	r3, [r7, #16]
 1824 003a 002B     		cmp	r3, #0
 1825 003c 01D1     		bne	.L102
1031:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1032:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 1826              		.loc 1 1032 0
 1827 003e 0023     		movs	r3, #0
 1828 0040 FB77     		strb	r3, [r7, #31]
 1829              	.L102:
1033:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1034:Generated_Source\PSoC5/cy_em_eeprom.c **** #else /* PSoC 6 */
1035:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(0u != context->blockingWrite)
1036:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1037:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Do blocking write */
1038:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(CY_FLASH_DRV_SUCCESS == Cy_Flash_WriteRow(rowAddr, (const uint32 *)rowData))
1039:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 52


1040:Generated_Source\PSoC5/cy_em_eeprom.c ****             ret = CY_EM_EEPROM_SUCCESS;
1041:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1042:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1043:Generated_Source\PSoC5/cy_em_eeprom.c ****     else
1044:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1045:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Initiate write */
1046:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartWrite(rowAddr, (const uint32 *)rowData))
1047:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1048:Generated_Source\PSoC5/cy_em_eeprom.c ****             uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1049:Generated_Source\PSoC5/cy_em_eeprom.c ****             cy_en_flashdrv_status_t rc;
1050:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1051:Generated_Source\PSoC5/cy_em_eeprom.c ****             do
1052:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
1053:Generated_Source\PSoC5/cy_em_eeprom.c ****                 CyDelay(1u);                         /* Wait 1ms */
1054:Generated_Source\PSoC5/cy_em_eeprom.c ****                 rc = Cy_Flash_IsWriteComplete();     /* Check if write completed */
1055:Generated_Source\PSoC5/cy_em_eeprom.c ****                 countMs--;
1056:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
1057:Generated_Source\PSoC5/cy_em_eeprom.c ****             while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1058:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1059:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == rc)
1060:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
1061:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1062:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
1063:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1064:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1065:Generated_Source\PSoC5/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1066:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1067:Generated_Source\PSoC5/cy_em_eeprom.c ****     return (ret);
 1830              		.loc 1 1067 0
 1831 0042 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
1068:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1832              		.loc 1 1068 0
 1833 0044 1846     		mov	r0, r3
 1834 0046 2037     		adds	r7, r7, #32
 1835              		.cfi_def_cfa_offset 8
 1836 0048 BD46     		mov	sp, r7
 1837              		.cfi_def_cfa_register 13
 1838              		@ sp needed
 1839 004a 80BD     		pop	{r7, pc}
 1840              		.cfi_endproc
 1841              	.LFE10:
 1842              		.size	WriteRow, .-WriteRow
 1843              		.section	.text.EraseRow,"ax",%progbits
 1844              		.align	2
 1845              		.thumb
 1846              		.thumb_func
 1847              		.type	EraseRow, %function
 1848              	EraseRow:
 1849              	.LFB11:
1069:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1070:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1071:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
1072:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: EraseRow
1073:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
1074:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1075:Generated_Source\PSoC5/cy_em_eeprom.c **** * Erases one flash row starting from the specified row address. If the redundant
1076:Generated_Source\PSoC5/cy_em_eeprom.c **** * copy option is enabled the corresponding row in the redundant copy will also
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 53


1077:Generated_Source\PSoC5/cy_em_eeprom.c **** * be erased.
1078:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1079:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowAdd
1080:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the flash row.
1081:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1082:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param ramBuffAddr
1083:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the RAM buffer that contains zeroed data (used only for
1084:Generated_Source\PSoC5/cy_em_eeprom.c **** * non-PSoC 6 devices).
1085:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1086:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
1087:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1088:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1089:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
1090:Generated_Source\PSoC5/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1091:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1092:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
1093:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr,
1094:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         uint32 ramBuffAddr,
1095:Generated_Source\PSoC5/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
1096:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1850              		.loc 1 1096 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 24
 1853              		@ frame_needed = 1, uses_anonymous_args = 0
 1854 0000 80B5     		push	{r7, lr}
 1855              		.cfi_def_cfa_offset 8
 1856              		.cfi_offset 7, -8
 1857              		.cfi_offset 14, -4
 1858 0002 86B0     		sub	sp, sp, #24
 1859              		.cfi_def_cfa_offset 32
 1860 0004 00AF     		add	r7, sp, #0
 1861              		.cfi_def_cfa_register 7
 1862 0006 F860     		str	r0, [r7, #12]
 1863 0008 B960     		str	r1, [r7, #8]
 1864 000a 7A60     		str	r2, [r7, #4]
1097:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 emEepromRowAddr = rowAddr;
 1865              		.loc 1 1097 0
 1866 000c FB68     		ldr	r3, [r7, #12]
 1867 000e 3B61     		str	r3, [r7, #16]
1098:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1868              		.loc 1 1098 0
 1869 0010 0423     		movs	r3, #4
 1870 0012 FB75     		strb	r3, [r7, #23]
1099:Generated_Source\PSoC5/cy_em_eeprom.c **** #if (CY_PSOC6)
1100:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 i = 1u;
1101:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1102:Generated_Source\PSoC5/cy_em_eeprom.c ****     (void)ramBuffAddr; /* To avoid compiler warning */
1103:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1104:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(0u != context->redundantCopy)
1105:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1106:Generated_Source\PSoC5/cy_em_eeprom.c ****         i++;
1107:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1108:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1109:Generated_Source\PSoC5/cy_em_eeprom.c ****     do
1110:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1111:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(0u != context->blockingWrite)
1112:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 54


1113:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Erase the flash row */
1114:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == Cy_Flash_EraseRow(emEepromRowAddr))
1115:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
1116:Generated_Source\PSoC5/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1117:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
1118:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1119:Generated_Source\PSoC5/cy_em_eeprom.c ****         else
1120:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1121:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Initiate erase */
1122:Generated_Source\PSoC5/cy_em_eeprom.c ****             if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartErase(emEepromRowAddr))
1123:Generated_Source\PSoC5/cy_em_eeprom.c ****             {
1124:Generated_Source\PSoC5/cy_em_eeprom.c ****                 uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1125:Generated_Source\PSoC5/cy_em_eeprom.c ****                 cy_en_flashdrv_status_t rc;
1126:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1127:Generated_Source\PSoC5/cy_em_eeprom.c ****                 do
1128:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
1129:Generated_Source\PSoC5/cy_em_eeprom.c ****                     CyDelay(1u);                         /* Wait 1ms */
1130:Generated_Source\PSoC5/cy_em_eeprom.c ****                     rc = Cy_Flash_IsWriteComplete();     /* Check if erase completed */
1131:Generated_Source\PSoC5/cy_em_eeprom.c ****                     countMs--;
1132:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
1133:Generated_Source\PSoC5/cy_em_eeprom.c ****                 while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1134:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1135:Generated_Source\PSoC5/cy_em_eeprom.c ****                 if(CY_FLASH_DRV_SUCCESS == rc)
1136:Generated_Source\PSoC5/cy_em_eeprom.c ****                 {
1137:Generated_Source\PSoC5/cy_em_eeprom.c ****                     ret = CY_EM_EEPROM_SUCCESS;
1138:Generated_Source\PSoC5/cy_em_eeprom.c ****                 }
1139:Generated_Source\PSoC5/cy_em_eeprom.c ****             }
1140:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1141:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1142:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
1143:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1144:Generated_Source\PSoC5/cy_em_eeprom.c ****             /* Update the address to point to the redundant copy row */
1145:Generated_Source\PSoC5/cy_em_eeprom.c ****             emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
1146:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1147:Generated_Source\PSoC5/cy_em_eeprom.c ****         else
1148:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1149:Generated_Source\PSoC5/cy_em_eeprom.c ****             break;
1150:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1151:Generated_Source\PSoC5/cy_em_eeprom.c ****         i--;
1152:Generated_Source\PSoC5/cy_em_eeprom.c ****     } while (0u != i);
1153:Generated_Source\PSoC5/cy_em_eeprom.c **** #else
1154:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Write the data to the specified flash row */
1155:Generated_Source\PSoC5/cy_em_eeprom.c ****     ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 1871              		.loc 1 1155 0
 1872 0014 BB68     		ldr	r3, [r7, #8]
 1873 0016 7A68     		ldr	r2, [r7, #4]
 1874 0018 1946     		mov	r1, r3
 1875 001a 3869     		ldr	r0, [r7, #16]
 1876 001c FFF7FEFF 		bl	WriteRow
 1877 0020 0346     		mov	r3, r0
 1878 0022 FB75     		strb	r3, [r7, #23]
1156:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1157:Generated_Source\PSoC5/cy_em_eeprom.c ****     if((CY_EM_EEPROM_SUCCESS == ret) && (0u != context->redundantCopy))
 1879              		.loc 1 1157 0
 1880 0024 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1881 0026 002B     		cmp	r3, #0
 1882 0028 13D1     		bne	.L105
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 55


 1883              		.loc 1 1157 0 is_stmt 0 discriminator 1
 1884 002a 7B68     		ldr	r3, [r7, #4]
 1885 002c 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1886 002e 002B     		cmp	r3, #0
 1887 0030 0FD0     		beq	.L105
1158:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1159:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Update the address to point to the redundant copy row */
1160:Generated_Source\PSoC5/cy_em_eeprom.c ****         emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1888              		.loc 1 1160 0 is_stmt 1
 1889 0032 7B68     		ldr	r3, [r7, #4]
 1890 0034 9B69     		ldr	r3, [r3, #24]
 1891 0036 3A69     		ldr	r2, [r7, #16]
 1892 0038 D21A     		subs	r2, r2, r3
 1893 003a 7B68     		ldr	r3, [r7, #4]
 1894 003c 1B68     		ldr	r3, [r3]
 1895 003e 1344     		add	r3, r3, r2
 1896 0040 3B61     		str	r3, [r7, #16]
1161:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 1897              		.loc 1 1161 0
 1898 0042 BB68     		ldr	r3, [r7, #8]
 1899 0044 7A68     		ldr	r2, [r7, #4]
 1900 0046 1946     		mov	r1, r3
 1901 0048 3869     		ldr	r0, [r7, #16]
 1902 004a FFF7FEFF 		bl	WriteRow
 1903 004e 0346     		mov	r3, r0
 1904 0050 FB75     		strb	r3, [r7, #23]
 1905              	.L105:
1162:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1163:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1164:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(CY_EM_EEPROM_SUCCESS == ret)
 1906              		.loc 1 1164 0
 1907 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1908 0054 002B     		cmp	r3, #0
 1909 0056 02D1     		bne	.L106
1165:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1166:Generated_Source\PSoC5/cy_em_eeprom.c ****         context->lastWrRowAddr = rowAddr;
 1910              		.loc 1 1166 0
 1911 0058 7B68     		ldr	r3, [r7, #4]
 1912 005a FA68     		ldr	r2, [r7, #12]
 1913 005c 9A60     		str	r2, [r3, #8]
 1914              	.L106:
1167:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1168:Generated_Source\PSoC5/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1169:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1170:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 1915              		.loc 1 1170 0
 1916 005e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1171:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 1917              		.loc 1 1171 0
 1918 0060 1846     		mov	r0, r3
 1919 0062 1837     		adds	r7, r7, #24
 1920              		.cfi_def_cfa_offset 8
 1921 0064 BD46     		mov	sp, r7
 1922              		.cfi_def_cfa_register 13
 1923              		@ sp needed
 1924 0066 80BD     		pop	{r7, pc}
 1925              		.cfi_endproc
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 56


 1926              	.LFE11:
 1927              		.size	EraseRow, .-EraseRow
 1928              		.section	.text.CheckCrcAndCopy,"ax",%progbits
 1929              		.align	2
 1930              		.thumb
 1931              		.thumb_func
 1932              		.type	CheckCrcAndCopy, %function
 1933              	CheckCrcAndCopy:
 1934              	.LFB12:
1172:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1173:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1174:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
1175:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: CheckCrcAndCopy
1176:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
1177:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1178:Generated_Source\PSoC5/cy_em_eeprom.c **** * Checks the checksum of the specific row in EEPROM. If the CRC matches - copies
1179:Generated_Source\PSoC5/cy_em_eeprom.c **** * the data to the "datAddr" from EEPROM. f the CRC does not match checks the
1180:Generated_Source\PSoC5/cy_em_eeprom.c **** * CRC of the corresponding row in the EEPROM's redundant copy. If the CRC
1181:Generated_Source\PSoC5/cy_em_eeprom.c **** * matches - copies the data to the "datAddr" from EEPROM redundant copy. If the
1182:Generated_Source\PSoC5/cy_em_eeprom.c **** * CRC of the redundant copy does not match - returns bad checksum.
1183:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1184:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param startAddr
1185:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address that points to the start of the specified row.
1186:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1187:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param datAddr
1188:Generated_Source\PSoC5/cy_em_eeprom.c **** * The start address of where the row data will be copied if the CRC check
1189:Generated_Source\PSoC5/cy_em_eeprom.c **** * will succeed.
1190:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1191:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowOffset
1192:Generated_Source\PSoC5/cy_em_eeprom.c **** * The offset in the row from which the data should be copied.
1193:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1194:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param numBytes
1195:Generated_Source\PSoC5/cy_em_eeprom.c **** * The number of bytes to be copied.
1196:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1197:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
1198:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1199:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1200:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
1201:Generated_Source\PSoC5/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1202:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1203:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
1204:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1205:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1206:Generated_Source\PSoC5/cy_em_eeprom.c **** * datasheet.
1207:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1208:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
1209:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
1210:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 uint32 dstAddr,
1211:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 uint32 rowOffset,
1212:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 uint32 numBytes,
1213:Generated_Source\PSoC5/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context)
1214:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 1935              		.loc 1 1214 0
 1936              		.cfi_startproc
 1937              		@ args = 4, pretend = 0, frame = 280
 1938              		@ frame_needed = 1, uses_anonymous_args = 0
 1939 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 57


 1940              		.cfi_def_cfa_offset 12
 1941              		.cfi_offset 4, -12
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 C7B0     		sub	sp, sp, #284
 1945              		.cfi_def_cfa_offset 296
 1946 0004 00AF     		add	r7, sp, #0
 1947              		.cfi_def_cfa_register 7
 1948 0006 07F10C04 		add	r4, r7, #12
 1949 000a 2060     		str	r0, [r4]
 1950 000c 07F10800 		add	r0, r7, #8
 1951 0010 0160     		str	r1, [r0]
 1952 0012 391D     		adds	r1, r7, #4
 1953 0014 0A60     		str	r2, [r1]
 1954 0016 3A46     		mov	r2, r7
 1955 0018 1360     		str	r3, [r2]
1215:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret;
1216:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1217:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1218:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Calculate the row address in the EEPROM's redundant copy */
1219:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 rcStartRowAddr = (startAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1956              		.loc 1 1219 0
 1957 001a D7F82831 		ldr	r3, [r7, #296]
 1958 001e 9B69     		ldr	r3, [r3, #24]
 1959 0020 07F10C02 		add	r2, r7, #12
 1960 0024 1268     		ldr	r2, [r2]
 1961 0026 D21A     		subs	r2, r2, r3
 1962 0028 D7F82831 		ldr	r3, [r7, #296]
 1963 002c 1B68     		ldr	r3, [r3]
 1964 002e 1344     		add	r3, r3, r2
 1965 0030 C7F81031 		str	r3, [r7, #272]
1220:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1221:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM */
1222:Generated_Source\PSoC5/cy_em_eeprom.c ****     if((*(uint32 *)(startAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 1966              		.loc 1 1222 0
 1967 0034 07F10C03 		add	r3, r7, #12
 1968 0038 1B68     		ldr	r3, [r3]
 1969 003a 7C33     		adds	r3, r3, #124
 1970 003c 1C68     		ldr	r4, [r3]
1223:Generated_Source\PSoC5/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 1971              		.loc 1 1223 0
 1972 003e 07F10C03 		add	r3, r7, #12
 1973 0042 1B68     		ldr	r3, [r3]
 1974 0044 8033     		adds	r3, r3, #128
 1975 0046 8021     		movs	r1, #128
 1976 0048 1846     		mov	r0, r3
 1977 004a FFF7FEFF 		bl	CalcChecksum
 1978 004e 0346     		mov	r3, r0
1222:Generated_Source\PSoC5/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 1979              		.loc 1 1222 0
 1980 0050 9C42     		cmp	r4, r3
 1981 0052 11D1     		bne	.L109
1224:Generated_Source\PSoC5/cy_em_eeprom.c ****             CY_EM_EEPROM_EEPROM_DATA_LEN)))
1225:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1226:Generated_Source\PSoC5/cy_em_eeprom.c ****         (void)memcpy((void *)(dstAddr), (void *)(startAddr + rowOffset), numBytes);
 1982              		.loc 1 1226 0
 1983 0054 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 58


 1984 0058 1868     		ldr	r0, [r3]
 1985 005a 07F10C02 		add	r2, r7, #12
 1986 005e 3B1D     		adds	r3, r7, #4
 1987 0060 1268     		ldr	r2, [r2]
 1988 0062 1B68     		ldr	r3, [r3]
 1989 0064 1344     		add	r3, r3, r2
 1990 0066 1946     		mov	r1, r3
 1991 0068 3B46     		mov	r3, r7
 1992 006a 1A68     		ldr	r2, [r3]
 1993 006c FFF7FEFF 		bl	memcpy
1227:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1228:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 1994              		.loc 1 1228 0
 1995 0070 0023     		movs	r3, #0
 1996 0072 87F81731 		strb	r3, [r7, #279]
 1997 0076 37E0     		b	.L110
 1998              	.L109:
1229:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1230:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM's redundant copy */
1231:Generated_Source\PSoC5/cy_em_eeprom.c ****     else if((*(uint32 *)(rcStartRowAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 1999              		.loc 1 1231 0
 2000 0078 D7F81031 		ldr	r3, [r7, #272]
 2001 007c 7C33     		adds	r3, r3, #124
 2002 007e 1C68     		ldr	r4, [r3]
1232:Generated_Source\PSoC5/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2003              		.loc 1 1232 0
 2004 0080 D7F81031 		ldr	r3, [r7, #272]
 2005 0084 8033     		adds	r3, r3, #128
 2006 0086 8021     		movs	r1, #128
 2007 0088 1846     		mov	r0, r3
 2008 008a FFF7FEFF 		bl	CalcChecksum
 2009 008e 0346     		mov	r3, r0
1231:Generated_Source\PSoC5/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2010              		.loc 1 1231 0
 2011 0090 9C42     		cmp	r4, r3
 2012 0092 26D1     		bne	.L111
1233:Generated_Source\PSoC5/cy_em_eeprom.c ****                 CY_EM_EEPROM_EEPROM_DATA_LEN)))
1234:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1235:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Copy the redundant copy row to RAM buffer to avoid read while write (RWW)
1236:Generated_Source\PSoC5/cy_em_eeprom.c ****         * flash exception. The RWW occurs while trying to write and read the data from
1237:Generated_Source\PSoC5/cy_em_eeprom.c ****         * same flash macro.
1238:Generated_Source\PSoC5/cy_em_eeprom.c ****         */
1239:Generated_Source\PSoC5/cy_em_eeprom.c ****         (void)memcpy((void *)(writeRamBuffer), (void *)(rcStartRowAddr), CY_EM_EEPROM_FLASH_SIZEOF_
 2013              		.loc 1 1239 0
 2014 0094 D7F81011 		ldr	r1, [r7, #272]
 2015 0098 07F11003 		add	r3, r7, #16
 2016 009c 4FF48072 		mov	r2, #256
 2017 00a0 1846     		mov	r0, r3
 2018 00a2 FFF7FEFF 		bl	memcpy
1240:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1241:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Restore bad row data from the RAM buffer */
1242:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = WriteRow(startAddr, (uint32 *)writeRamBuffer, context);
 2019              		.loc 1 1242 0
 2020 00a6 07F11001 		add	r1, r7, #16
 2021 00aa 07F10C03 		add	r3, r7, #12
 2022 00ae D7F82821 		ldr	r2, [r7, #296]
 2023 00b2 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 59


 2024 00b4 FFF7FEFF 		bl	WriteRow
 2025 00b8 0346     		mov	r3, r0
 2026 00ba 87F81731 		strb	r3, [r7, #279]
1243:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1244:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 2027              		.loc 1 1244 0
 2028 00be 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 2029 00c2 002B     		cmp	r3, #0
 2030 00c4 10D1     		bne	.L110
1245:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1246:Generated_Source\PSoC5/cy_em_eeprom.c ****             (void)memcpy((void *)(dstAddr), (void *)(writeRamBuffer + rowOffset), numBytes);
 2031              		.loc 1 1246 0
 2032 00c6 07F10803 		add	r3, r7, #8
 2033 00ca 1868     		ldr	r0, [r3]
 2034 00cc 3B1D     		adds	r3, r7, #4
 2035 00ce 1B68     		ldr	r3, [r3]
 2036 00d0 9B00     		lsls	r3, r3, #2
 2037 00d2 07F11002 		add	r2, r7, #16
 2038 00d6 D118     		adds	r1, r2, r3
 2039 00d8 3B46     		mov	r3, r7
 2040 00da 1A68     		ldr	r2, [r3]
 2041 00dc FFF7FEFF 		bl	memcpy
 2042 00e0 02E0     		b	.L110
 2043              	.L111:
1247:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1248:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1249:Generated_Source\PSoC5/cy_em_eeprom.c ****     else
1250:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1251:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_BAD_CHECKSUM;
 2044              		.loc 1 1251 0
 2045 00e2 0223     		movs	r3, #2
 2046 00e4 87F81731 		strb	r3, [r7, #279]
 2047              	.L110:
1252:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1253:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1254:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 2048              		.loc 1 1254 0
 2049 00e8 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
1255:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 2050              		.loc 1 1255 0
 2051 00ec 1846     		mov	r0, r3
 2052 00ee 07F58E77 		add	r7, r7, #284
 2053              		.cfi_def_cfa_offset 12
 2054 00f2 BD46     		mov	sp, r7
 2055              		.cfi_def_cfa_register 13
 2056              		@ sp needed
 2057 00f4 90BD     		pop	{r4, r7, pc}
 2058              		.cfi_endproc
 2059              	.LFE12:
 2060              		.size	CheckCrcAndCopy, .-CheckCrcAndCopy
 2061 00f6 00BF     		.section	.text.GetAddresses,"ax",%progbits
 2062              		.align	2
 2063              		.thumb
 2064              		.thumb_func
 2065              		.type	GetAddresses, %function
 2066              	GetAddresses:
 2067              	.LFB13:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 60


1256:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1257:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1258:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
1259:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: GetAddresses
1260:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
1261:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1262:Generated_Source\PSoC5/cy_em_eeprom.c **** * Calculates the start and end address of the row's EEPROM data to be updated.
1263:Generated_Source\PSoC5/cy_em_eeprom.c **** * The start and end are not absolute addresses but a relative addresses in a
1264:Generated_Source\PSoC5/cy_em_eeprom.c **** * flash row.
1265:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1266:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param startAddr
1267:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer the address where the EEPROM data start address will be returned.
1268:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1269:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param endAddr
1270:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer the address where the EEPROM data end address will be returned.
1271:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1272:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param offset
1273:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer the address where the calculated offset of the EEPROM header data
1274:Generated_Source\PSoC5/cy_em_eeprom.c **** * will be returned.
1275:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1276:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param rowNum
1277:Generated_Source\PSoC5/cy_em_eeprom.c **** * The row number that is about to be written.
1278:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1279:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param addr
1280:Generated_Source\PSoC5/cy_em_eeprom.c **** * The address of the EEPROM header data in the currently analyzed row that may
1281:Generated_Source\PSoC5/cy_em_eeprom.c **** * concern to the row about to be written.
1282:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1283:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param len
1284:Generated_Source\PSoC5/cy_em_eeprom.c **** * The length of the EEPROM header data in the currently analyzed row that may
1285:Generated_Source\PSoC5/cy_em_eeprom.c **** * concern to the row about to be written.
1286:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1287:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
1288:Generated_Source\PSoC5/cy_em_eeprom.c **** * Zero indicates that the currently analyzed row has the data to be written to
1289:Generated_Source\PSoC5/cy_em_eeprom.c **** * the active EEPROM row data locations. Non zero value indicates that there is
1290:Generated_Source\PSoC5/cy_em_eeprom.c **** * no data to be written
1291:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1292:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
1293:Generated_Source\PSoC5/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, 
1294:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 *endAddr, 
1295:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 *offset,
1296:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 rowNum,
1297:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 addr,
1298:Generated_Source\PSoC5/cy_em_eeprom.c ****                         uint32 len)
1299:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 2068              		.loc 1 1299 0
 2069              		.cfi_startproc
 2070              		@ args = 8, pretend = 0, frame = 24
 2071              		@ frame_needed = 1, uses_anonymous_args = 0
 2072              		@ link register save eliminated.
 2073 0000 80B4     		push	{r7}
 2074              		.cfi_def_cfa_offset 4
 2075              		.cfi_offset 7, -4
 2076 0002 87B0     		sub	sp, sp, #28
 2077              		.cfi_def_cfa_offset 32
 2078 0004 00AF     		add	r7, sp, #0
 2079              		.cfi_def_cfa_register 7
 2080 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 61


 2081 0008 B960     		str	r1, [r7, #8]
 2082 000a 7A60     		str	r2, [r7, #4]
 2083 000c 3B60     		str	r3, [r7]
1300:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 skip = 0u;
 2084              		.loc 1 1300 0
 2085 000e 0023     		movs	r3, #0
 2086 0010 7B61     		str	r3, [r7, #20]
1301:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1302:Generated_Source\PSoC5/cy_em_eeprom.c ****     *offset =0u;
 2087              		.loc 1 1302 0
 2088 0012 7B68     		ldr	r3, [r7, #4]
 2089 0014 0022     		movs	r2, #0
 2090 0016 1A60     		str	r2, [r3]
1303:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1304:Generated_Source\PSoC5/cy_em_eeprom.c ****     if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr, rowNum))
 2091              		.loc 1 1304 0
 2092 0018 3B68     		ldr	r3, [r7]
 2093 001a DA01     		lsls	r2, r3, #7
 2094 001c 3B6A     		ldr	r3, [r7, #32]
 2095 001e 9A42     		cmp	r2, r3
 2096 0020 08D8     		bhi	.L115
 2097              		.loc 1 1304 0 is_stmt 0 discriminator 1
 2098 0022 3B68     		ldr	r3, [r7]
 2099 0024 0133     		adds	r3, r3, #1
 2100 0026 DB01     		lsls	r3, r3, #7
 2101 0028 5A1E     		subs	r2, r3, #1
 2102 002a 3B6A     		ldr	r3, [r7, #32]
 2103 002c 9A42     		cmp	r2, r3
 2104 002e 01D3     		bcc	.L115
 2105              		.loc 1 1304 0 discriminator 3
 2106 0030 0123     		movs	r3, #1
 2107 0032 00E0     		b	.L116
 2108              	.L115:
 2109              		.loc 1 1304 0 discriminator 4
 2110 0034 0023     		movs	r3, #0
 2111              	.L116:
 2112              		.loc 1 1304 0 discriminator 6
 2113 0036 002B     		cmp	r3, #0
 2114 0038 27D0     		beq	.L117
1305:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1306:Generated_Source\PSoC5/cy_em_eeprom.c ****         *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN + (addr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 2115              		.loc 1 1306 0 is_stmt 1
 2116 003a 3B6A     		ldr	r3, [r7, #32]
 2117 003c 03F07F03 		and	r3, r3, #127
 2118 0040 03F18002 		add	r2, r3, #128
 2119 0044 FB68     		ldr	r3, [r7, #12]
 2120 0046 1A60     		str	r2, [r3]
1307:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1308:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2121              		.loc 1 1308 0
 2122 0048 3A6A     		ldr	r2, [r7, #32]
 2123 004a 7B6A     		ldr	r3, [r7, #36]
 2124 004c 1A44     		add	r2, r2, r3
 2125 004e 3B68     		ldr	r3, [r7]
 2126 0050 DB01     		lsls	r3, r3, #7
 2127 0052 9A42     		cmp	r2, r3
 2128 0054 0AD3     		bcc	.L118
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 62


 2129              		.loc 1 1308 0 is_stmt 0 discriminator 1
 2130 0056 3A6A     		ldr	r2, [r7, #32]
 2131 0058 7B6A     		ldr	r3, [r7, #36]
 2132 005a 1A44     		add	r2, r2, r3
 2133 005c 3B68     		ldr	r3, [r7]
 2134 005e 0133     		adds	r3, r3, #1
 2135 0060 DB01     		lsls	r3, r3, #7
 2136 0062 013B     		subs	r3, r3, #1
 2137 0064 9A42     		cmp	r2, r3
 2138 0066 01D8     		bhi	.L118
 2139              		.loc 1 1308 0 discriminator 3
 2140 0068 0123     		movs	r3, #1
 2141 006a 00E0     		b	.L119
 2142              	.L118:
 2143              		.loc 1 1308 0 discriminator 4
 2144 006c 0023     		movs	r3, #0
 2145              	.L119:
 2146              		.loc 1 1308 0 discriminator 6
 2147 006e 002B     		cmp	r3, #0
 2148 0070 06D0     		beq	.L120
1309:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1310:Generated_Source\PSoC5/cy_em_eeprom.c ****             *endAddr = *startAddr + len;
 2149              		.loc 1 1310 0 is_stmt 1
 2150 0072 FB68     		ldr	r3, [r7, #12]
 2151 0074 1A68     		ldr	r2, [r3]
 2152 0076 7B6A     		ldr	r3, [r7, #36]
 2153 0078 1A44     		add	r2, r2, r3
 2154 007a BB68     		ldr	r3, [r7, #8]
 2155 007c 1A60     		str	r2, [r3]
 2156 007e 36E0     		b	.L122
 2157              	.L120:
1311:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1312:Generated_Source\PSoC5/cy_em_eeprom.c ****         else
1313:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1314:Generated_Source\PSoC5/cy_em_eeprom.c ****             *endAddr = CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 2158              		.loc 1 1314 0
 2159 0080 BB68     		ldr	r3, [r7, #8]
 2160 0082 4FF48072 		mov	r2, #256
 2161 0086 1A60     		str	r2, [r3]
 2162 0088 31E0     		b	.L122
 2163              	.L117:
1315:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1316:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1317:Generated_Source\PSoC5/cy_em_eeprom.c ****     else
1318:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1319:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1320:Generated_Source\PSoC5/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2164              		.loc 1 1320 0
 2165 008a 3A6A     		ldr	r2, [r7, #32]
 2166 008c 7B6A     		ldr	r3, [r7, #36]
 2167 008e 1A44     		add	r2, r2, r3
 2168 0090 3B68     		ldr	r3, [r7]
 2169 0092 DB01     		lsls	r3, r3, #7
 2170 0094 9A42     		cmp	r2, r3
 2171 0096 0AD3     		bcc	.L123
 2172              		.loc 1 1320 0 is_stmt 0 discriminator 1
 2173 0098 3A6A     		ldr	r2, [r7, #32]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 63


 2174 009a 7B6A     		ldr	r3, [r7, #36]
 2175 009c 1A44     		add	r2, r2, r3
 2176 009e 3B68     		ldr	r3, [r7]
 2177 00a0 0133     		adds	r3, r3, #1
 2178 00a2 DB01     		lsls	r3, r3, #7
 2179 00a4 013B     		subs	r3, r3, #1
 2180 00a6 9A42     		cmp	r2, r3
 2181 00a8 01D8     		bhi	.L123
 2182              		.loc 1 1320 0 discriminator 3
 2183 00aa 0123     		movs	r3, #1
 2184 00ac 00E0     		b	.L124
 2185              	.L123:
 2186              		.loc 1 1320 0 discriminator 4
 2187 00ae 0023     		movs	r3, #0
 2188              	.L124:
 2189              		.loc 1 1320 0 discriminator 6
 2190 00b0 002B     		cmp	r3, #0
 2191 00b2 19D0     		beq	.L125
1321:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1322:Generated_Source\PSoC5/cy_em_eeprom.c ****             *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN;
 2192              		.loc 1 1322 0 is_stmt 1
 2193 00b4 FB68     		ldr	r3, [r7, #12]
 2194 00b6 8022     		movs	r2, #128
 2195 00b8 1A60     		str	r2, [r3]
1323:Generated_Source\PSoC5/cy_em_eeprom.c ****             *endAddr = (*startAddr + len) - (*startAddr - (addr % CY_EM_EEPROM_EEPROM_DATA_LEN));
 2196              		.loc 1 1323 0
 2197 00ba FB68     		ldr	r3, [r7, #12]
 2198 00bc 1A68     		ldr	r2, [r3]
 2199 00be 7B6A     		ldr	r3, [r7, #36]
 2200 00c0 1A44     		add	r2, r2, r3
 2201 00c2 3B6A     		ldr	r3, [r7, #32]
 2202 00c4 03F07F01 		and	r1, r3, #127
 2203 00c8 FB68     		ldr	r3, [r7, #12]
 2204 00ca 1B68     		ldr	r3, [r3]
 2205 00cc CB1A     		subs	r3, r1, r3
 2206 00ce 1A44     		add	r2, r2, r3
 2207 00d0 BB68     		ldr	r3, [r7, #8]
 2208 00d2 1A60     		str	r2, [r3]
1324:Generated_Source\PSoC5/cy_em_eeprom.c ****             *offset = len - (*endAddr - *startAddr);
 2209              		.loc 1 1324 0
 2210 00d4 FB68     		ldr	r3, [r7, #12]
 2211 00d6 1A68     		ldr	r2, [r3]
 2212 00d8 BB68     		ldr	r3, [r7, #8]
 2213 00da 1B68     		ldr	r3, [r3]
 2214 00dc D21A     		subs	r2, r2, r3
 2215 00de 7B6A     		ldr	r3, [r7, #36]
 2216 00e0 1A44     		add	r2, r2, r3
 2217 00e2 7B68     		ldr	r3, [r7, #4]
 2218 00e4 1A60     		str	r2, [r3]
 2219 00e6 02E0     		b	.L122
 2220              	.L125:
1325:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1326:Generated_Source\PSoC5/cy_em_eeprom.c ****         else
1327:Generated_Source\PSoC5/cy_em_eeprom.c ****         {
1328:Generated_Source\PSoC5/cy_em_eeprom.c ****             skip++;
 2221              		.loc 1 1328 0
 2222 00e8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 64


 2223 00ea 0133     		adds	r3, r3, #1
 2224 00ec 7B61     		str	r3, [r7, #20]
 2225              	.L122:
1329:Generated_Source\PSoC5/cy_em_eeprom.c ****         }
1330:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1331:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1332:Generated_Source\PSoC5/cy_em_eeprom.c ****     return (skip);
 2226              		.loc 1 1332 0
 2227 00ee 7B69     		ldr	r3, [r7, #20]
1333:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 2228              		.loc 1 1333 0
 2229 00f0 1846     		mov	r0, r3
 2230 00f2 1C37     		adds	r7, r7, #28
 2231              		.cfi_def_cfa_offset 4
 2232 00f4 BD46     		mov	sp, r7
 2233              		.cfi_def_cfa_register 13
 2234              		@ sp needed
 2235 00f6 80BC     		pop	{r7}
 2236              		.cfi_restore 7
 2237              		.cfi_def_cfa_offset 0
 2238 00f8 7047     		bx	lr
 2239              		.cfi_endproc
 2240              	.LFE13:
 2241              		.size	GetAddresses, .-GetAddresses
 2242 00fa 00BF     		.section	.text.FillChecksum,"ax",%progbits
 2243              		.align	2
 2244              		.thumb
 2245              		.thumb_func
 2246              		.type	FillChecksum, %function
 2247              	FillChecksum:
 2248              	.LFB14:
1334:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1335:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1336:Generated_Source\PSoC5/cy_em_eeprom.c **** /*******************************************************************************
1337:Generated_Source\PSoC5/cy_em_eeprom.c **** * Function Name: FillChecksum
1338:Generated_Source\PSoC5/cy_em_eeprom.c **** ****************************************************************************//**
1339:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1340:Generated_Source\PSoC5/cy_em_eeprom.c **** * Performs calculation of the checksum on each row in the Em_EEPROM and fills
1341:Generated_Source\PSoC5/cy_em_eeprom.c **** * the Em_EEPROM headers checksum field with the calculated checksums.
1342:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1343:Generated_Source\PSoC5/cy_em_eeprom.c **** * \param context
1344:Generated_Source\PSoC5/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
1345:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1346:Generated_Source\PSoC5/cy_em_eeprom.c **** * \return
1347:Generated_Source\PSoC5/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1348:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1349:Generated_Source\PSoC5/cy_em_eeprom.c **** * \theory 
1350:Generated_Source\PSoC5/cy_em_eeprom.c **** * In case if redundant copy option is used the Em_EEPROM would return bad 
1351:Generated_Source\PSoC5/cy_em_eeprom.c **** * checksum while trying to read the EEPROM rows which were not yet written by 
1352:Generated_Source\PSoC5/cy_em_eeprom.c **** * the user. E.g. any read after device reprogramming without previous Write() 
1353:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation to the EEPROM would fail. This would happen because the Em_EEPROM 
1354:Generated_Source\PSoC5/cy_em_eeprom.c **** * headers checksum field values (which is zero at the moment) would not be 
1355:Generated_Source\PSoC5/cy_em_eeprom.c **** * equal to the actual data checksum. This function allows to avoid read failure
1356:Generated_Source\PSoC5/cy_em_eeprom.c **** * after device reprogramming. 
1357:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1358:Generated_Source\PSoC5/cy_em_eeprom.c **** * \note
1359:Generated_Source\PSoC5/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 65


1360:Generated_Source\PSoC5/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1361:Generated_Source\PSoC5/cy_em_eeprom.c **** * datasheet.
1362:Generated_Source\PSoC5/cy_em_eeprom.c **** *
1363:Generated_Source\PSoC5/cy_em_eeprom.c **** *******************************************************************************/
1364:Generated_Source\PSoC5/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context)
1365:Generated_Source\PSoC5/cy_em_eeprom.c **** {
 2249              		.loc 1 1365 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 288
 2252              		@ frame_needed = 1, uses_anonymous_args = 0
 2253 0000 80B5     		push	{r7, lr}
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
 2257 0002 C8B0     		sub	sp, sp, #288
 2258              		.cfi_def_cfa_offset 296
 2259 0004 00AF     		add	r7, sp, #0
 2260              		.cfi_def_cfa_register 7
 2261 0006 3B1D     		adds	r3, r7, #4
 2262 0008 1860     		str	r0, [r3]
1366:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 i;
1367:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 rdAddr;
1368:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1369:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 wrAddr = context->lastWrRowAddr;
 2263              		.loc 1 1369 0
 2264 000a 3B1D     		adds	r3, r7, #4
 2265 000c 1B68     		ldr	r3, [r3]
 2266 000e 9A68     		ldr	r2, [r3, #8]
 2267 0010 07F10803 		add	r3, r7, #8
 2268 0014 1A60     		str	r2, [r3]
1370:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 tmpRowAddr;
1371:Generated_Source\PSoC5/cy_em_eeprom.c ****     /* Get the sequence number (number of writes) */
1372:Generated_Source\PSoC5/cy_em_eeprom.c ****     uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(wrAddr);
 2269              		.loc 1 1372 0
 2270 0016 07F10803 		add	r3, r7, #8
 2271 001a 1B68     		ldr	r3, [r3]
 2272 001c 1B68     		ldr	r3, [r3]
 2273 001e C7F81831 		str	r3, [r7, #280]
1373:Generated_Source\PSoC5/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 2274              		.loc 1 1373 0
 2275 0022 0123     		movs	r3, #1
 2276 0024 87F81731 		strb	r3, [r7, #279]
1374:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1375:Generated_Source\PSoC5/cy_em_eeprom.c ****     for(i = 0u; i < (context->numberOfRows * context->wearLevelingFactor); i++)
 2277              		.loc 1 1375 0
 2278 0028 0023     		movs	r3, #0
 2279 002a C7F81C31 		str	r3, [r7, #284]
 2280 002e 53E0     		b	.L128
 2281              	.L129:
1376:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
1377:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Copy the EEPROM row from Flash to RAM */
1378:Generated_Source\PSoC5/cy_em_eeprom.c ****         (void)memcpy((void *)&writeRamBuffer[0u], (void *)(wrAddr), CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 2282              		.loc 1 1378 0 discriminator 3
 2283 0030 07F10803 		add	r3, r7, #8
 2284 0034 1B68     		ldr	r3, [r3]
 2285 0036 1946     		mov	r1, r3
 2286 0038 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 66


 2287 003c 4FF48072 		mov	r2, #256
 2288 0040 1846     		mov	r0, r3
 2289 0042 FFF7FEFF 		bl	memcpy
1379:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1380:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Increment the sequence number */
1381:Generated_Source\PSoC5/cy_em_eeprom.c ****         seqNum++;
 2290              		.loc 1 1381 0 discriminator 3
 2291 0046 D7F81831 		ldr	r3, [r7, #280]
 2292 004a 0133     		adds	r3, r3, #1
 2293 004c C7F81831 		str	r3, [r7, #280]
1382:Generated_Source\PSoC5/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 2294              		.loc 1 1382 0 discriminator 3
 2295 0050 07F10C03 		add	r3, r7, #12
 2296 0054 D7F81821 		ldr	r2, [r7, #280]
 2297 0058 1A60     		str	r2, [r3]
1383:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1384:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Calculate and fill the checksum to the Em_EEPROM header */
1385:Generated_Source\PSoC5/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
1386:Generated_Source\PSoC5/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2298              		.loc 1 1386 0 discriminator 3
 2299 005a 07F10C03 		add	r3, r7, #12
 2300 005e 8033     		adds	r3, r3, #128
 2301 0060 8021     		movs	r1, #128
 2302 0062 1846     		mov	r0, r3
 2303 0064 FFF7FEFF 		bl	CalcChecksum
 2304 0068 0346     		mov	r3, r0
1385:Generated_Source\PSoC5/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2305              		.loc 1 1385 0 discriminator 3
 2306 006a 1A46     		mov	r2, r3
 2307 006c 07F10C03 		add	r3, r7, #12
 2308 0070 DA67     		str	r2, [r3, #124]
1387:Generated_Source\PSoC5/cy_em_eeprom.c ****                                               CY_EM_EEPROM_EEPROM_DATA_LEN);
1388:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1389:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1390:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = WriteRow(wrAddr, writeRamBuffer, context);
 2309              		.loc 1 1390 0 discriminator 3
 2310 0072 07F10803 		add	r3, r7, #8
 2311 0076 1868     		ldr	r0, [r3]
 2312 0078 3B1D     		adds	r3, r7, #4
 2313 007a 07F10C01 		add	r1, r7, #12
 2314 007e 1A68     		ldr	r2, [r3]
 2315 0080 FFF7FEFF 		bl	WriteRow
 2316 0084 0346     		mov	r3, r0
 2317 0086 87F81731 		strb	r3, [r7, #279]
1391:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1392:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Update the row address to point to the relevant row in the redundant 
1393:Generated_Source\PSoC5/cy_em_eeprom.c ****         * EEPROM's copy.
1394:Generated_Source\PSoC5/cy_em_eeprom.c ****         */
1395:Generated_Source\PSoC5/cy_em_eeprom.c ****         tmpRowAddr = (wrAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2318              		.loc 1 1395 0 discriminator 3
 2319 008a 07F10803 		add	r3, r7, #8
 2320 008e 1A68     		ldr	r2, [r3]
 2321 0090 3B1D     		adds	r3, r7, #4
 2322 0092 1B68     		ldr	r3, [r3]
 2323 0094 9B69     		ldr	r3, [r3, #24]
 2324 0096 D21A     		subs	r2, r2, r3
 2325 0098 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 67


 2326 009a 1B68     		ldr	r3, [r3]
 2327 009c 1B68     		ldr	r3, [r3]
 2328 009e 1344     		add	r3, r3, r2
 2329 00a0 C7F81031 		str	r3, [r7, #272]
1396:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1397:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1398:Generated_Source\PSoC5/cy_em_eeprom.c ****         ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 2330              		.loc 1 1398 0 discriminator 3
 2331 00a4 3B1D     		adds	r3, r7, #4
 2332 00a6 07F10C01 		add	r1, r7, #12
 2333 00aa 1A68     		ldr	r2, [r3]
 2334 00ac D7F81001 		ldr	r0, [r7, #272]
 2335 00b0 FFF7FEFF 		bl	WriteRow
 2336 00b4 0346     		mov	r3, r0
 2337 00b6 87F81731 		strb	r3, [r7, #279]
1399:Generated_Source\PSoC5/cy_em_eeprom.c **** 
1400:Generated_Source\PSoC5/cy_em_eeprom.c ****         /* Get the address of the next row to be written. 
1401:Generated_Source\PSoC5/cy_em_eeprom.c ****         * "rdAddr" is not used in this function but provided to prevent NULL 
1402:Generated_Source\PSoC5/cy_em_eeprom.c ****         * pointer exception in GetNextRowToWrite().
1403:Generated_Source\PSoC5/cy_em_eeprom.c ****         */
1404:Generated_Source\PSoC5/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &wrAddr, &rdAddr, context);
 2338              		.loc 1 1404 0 discriminator 3
 2339 00ba 3B1D     		adds	r3, r7, #4
 2340 00bc 07F58672 		add	r2, r7, #268
 2341 00c0 07F10801 		add	r1, r7, #8
 2342 00c4 1B68     		ldr	r3, [r3]
 2343 00c6 D7F81801 		ldr	r0, [r7, #280]
 2344 00ca FFF7FEFF 		bl	GetNextRowToWrite
1375:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 2345              		.loc 1 1375 0 discriminator 3
 2346 00ce D7F81C31 		ldr	r3, [r7, #284]
 2347 00d2 0133     		adds	r3, r3, #1
 2348 00d4 C7F81C31 		str	r3, [r7, #284]
 2349              	.L128:
1375:Generated_Source\PSoC5/cy_em_eeprom.c ****     {
 2350              		.loc 1 1375 0 is_stmt 0 discriminator 1
 2351 00d8 3B1D     		adds	r3, r7, #4
 2352 00da 1B68     		ldr	r3, [r3]
 2353 00dc 5B68     		ldr	r3, [r3, #4]
 2354 00de 3A1D     		adds	r2, r7, #4
 2355 00e0 1268     		ldr	r2, [r2]
 2356 00e2 1269     		ldr	r2, [r2, #16]
 2357 00e4 02FB03F2 		mul	r2, r2, r3
 2358 00e8 D7F81C31 		ldr	r3, [r7, #284]
 2359 00ec 9A42     		cmp	r2, r3
 2360 00ee 9FD8     		bhi	.L129
1405:Generated_Source\PSoC5/cy_em_eeprom.c ****     }
1406:Generated_Source\PSoC5/cy_em_eeprom.c ****     
1407:Generated_Source\PSoC5/cy_em_eeprom.c ****     return(ret);
 2361              		.loc 1 1407 0 is_stmt 1
 2362 00f0 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
1408:Generated_Source\PSoC5/cy_em_eeprom.c **** }
 2363              		.loc 1 1408 0
 2364 00f4 1846     		mov	r0, r3
 2365 00f6 07F59077 		add	r7, r7, #288
 2366              		.cfi_def_cfa_offset 8
 2367 00fa BD46     		mov	sp, r7
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 68


 2368              		.cfi_def_cfa_register 13
 2369              		@ sp needed
 2370 00fc 80BD     		pop	{r7, pc}
 2371              		.cfi_endproc
 2372              	.LFE14:
 2373              		.size	FillChecksum, .-FillChecksum
 2374 00fe 00BF     		.text
 2375              	.Letext0:
 2376              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2377              		.file 3 "Generated_Source\\PSoC5\\cy_em_eeprom.h"
 2378              		.section	.debug_info,"",%progbits
 2379              	.Ldebug_info0:
 2380 0000 6E0A0000 		.4byte	0xa6e
 2381 0004 0400     		.2byte	0x4
 2382 0006 00000000 		.4byte	.Ldebug_abbrev0
 2383 000a 04       		.byte	0x4
 2384 000b 01       		.uleb128 0x1
 2385 000c 5C000000 		.4byte	.LASF102
 2386 0010 0C       		.byte	0xc
 2387 0011 64040000 		.4byte	.LASF103
 2388 0015 A9010000 		.4byte	.LASF104
 2389 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2390 001d 00000000 		.4byte	0
 2391 0021 00000000 		.4byte	.Ldebug_line0
 2392 0025 02       		.uleb128 0x2
 2393 0026 01       		.byte	0x1
 2394 0027 06       		.byte	0x6
 2395 0028 29010000 		.4byte	.LASF0
 2396 002c 02       		.uleb128 0x2
 2397 002d 01       		.byte	0x1
 2398 002e 08       		.byte	0x8
 2399 002f 8A040000 		.4byte	.LASF1
 2400 0033 02       		.uleb128 0x2
 2401 0034 02       		.byte	0x2
 2402 0035 05       		.byte	0x5
 2403 0036 A0040000 		.4byte	.LASF2
 2404 003a 02       		.uleb128 0x2
 2405 003b 02       		.byte	0x2
 2406 003c 07       		.byte	0x7
 2407 003d F8020000 		.4byte	.LASF3
 2408 0041 02       		.uleb128 0x2
 2409 0042 04       		.byte	0x4
 2410 0043 05       		.byte	0x5
 2411 0044 80010000 		.4byte	.LASF4
 2412 0048 02       		.uleb128 0x2
 2413 0049 04       		.byte	0x4
 2414 004a 07       		.byte	0x7
 2415 004b A8020000 		.4byte	.LASF5
 2416 004f 02       		.uleb128 0x2
 2417 0050 08       		.byte	0x8
 2418 0051 05       		.byte	0x5
 2419 0052 1B010000 		.4byte	.LASF6
 2420 0056 02       		.uleb128 0x2
 2421 0057 08       		.byte	0x8
 2422 0058 07       		.byte	0x7
 2423 0059 F4000000 		.4byte	.LASF7
 2424 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 69


 2425 005e 04       		.byte	0x4
 2426 005f 05       		.byte	0x5
 2427 0060 696E7400 		.ascii	"int\000"
 2428 0064 02       		.uleb128 0x2
 2429 0065 04       		.byte	0x4
 2430 0066 07       		.byte	0x7
 2431 0067 92020000 		.4byte	.LASF8
 2432 006b 04       		.uleb128 0x4
 2433 006c 9C010000 		.4byte	.LASF9
 2434 0070 02       		.byte	0x2
 2435 0071 A1       		.byte	0xa1
 2436 0072 2C000000 		.4byte	0x2c
 2437 0076 04       		.uleb128 0x4
 2438 0077 00000000 		.4byte	.LASF10
 2439 007b 02       		.byte	0x2
 2440 007c A2       		.byte	0xa2
 2441 007d 3A000000 		.4byte	0x3a
 2442 0081 04       		.uleb128 0x4
 2443 0082 1A020000 		.4byte	.LASF11
 2444 0086 02       		.byte	0x2
 2445 0087 A3       		.byte	0xa3
 2446 0088 48000000 		.4byte	0x48
 2447 008c 02       		.uleb128 0x2
 2448 008d 04       		.byte	0x4
 2449 008e 04       		.byte	0x4
 2450 008f 36040000 		.4byte	.LASF12
 2451 0093 02       		.uleb128 0x2
 2452 0094 08       		.byte	0x8
 2453 0095 04       		.byte	0x4
 2454 0096 A2010000 		.4byte	.LASF13
 2455 009a 02       		.uleb128 0x2
 2456 009b 01       		.byte	0x1
 2457 009c 08       		.byte	0x8
 2458 009d 13050000 		.4byte	.LASF14
 2459 00a1 05       		.uleb128 0x5
 2460 00a2 FC050000 		.4byte	.LASF15
 2461 00a6 02       		.byte	0x2
 2462 00a7 4301     		.2byte	0x143
 2463 00a9 48000000 		.4byte	0x48
 2464 00ad 02       		.uleb128 0x2
 2465 00ae 08       		.byte	0x8
 2466 00af 04       		.byte	0x4
 2467 00b0 AD030000 		.4byte	.LASF16
 2468 00b4 02       		.uleb128 0x2
 2469 00b5 04       		.byte	0x4
 2470 00b6 07       		.byte	0x7
 2471 00b7 A4030000 		.4byte	.LASF17
 2472 00bb 06       		.uleb128 0x6
 2473 00bc 04       		.byte	0x4
 2474 00bd 07       		.uleb128 0x7
 2475 00be 10       		.byte	0x10
 2476 00bf 03       		.byte	0x3
 2477 00c0 FB       		.byte	0xfb
 2478 00c1 06010000 		.4byte	0x106
 2479 00c5 08       		.uleb128 0x8
 2480 00c6 10010000 		.4byte	.LASF18
 2481 00ca 03       		.byte	0x3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 70


 2482 00cb FE       		.byte	0xfe
 2483 00cc 81000000 		.4byte	0x81
 2484 00d0 00       		.byte	0
 2485 00d1 09       		.uleb128 0x9
 2486 00d2 90050000 		.4byte	.LASF19
 2487 00d6 03       		.byte	0x3
 2488 00d7 0301     		.2byte	0x103
 2489 00d9 81000000 		.4byte	0x81
 2490 00dd 04       		.byte	0x4
 2491 00de 09       		.uleb128 0x9
 2492 00df 7B020000 		.4byte	.LASF20
 2493 00e3 03       		.byte	0x3
 2494 00e4 0601     		.2byte	0x106
 2495 00e6 6B000000 		.4byte	0x6b
 2496 00ea 08       		.byte	0x8
 2497 00eb 09       		.uleb128 0x9
 2498 00ec DC050000 		.4byte	.LASF21
 2499 00f0 03       		.byte	0x3
 2500 00f1 0B01     		.2byte	0x10b
 2501 00f3 6B000000 		.4byte	0x6b
 2502 00f7 09       		.byte	0x9
 2503 00f8 09       		.uleb128 0x9
 2504 00f9 89010000 		.4byte	.LASF22
 2505 00fd 03       		.byte	0x3
 2506 00fe 0E01     		.2byte	0x10e
 2507 0100 81000000 		.4byte	0x81
 2508 0104 0C       		.byte	0xc
 2509 0105 00       		.byte	0
 2510 0106 05       		.uleb128 0x5
 2511 0107 72050000 		.4byte	.LASF23
 2512 010b 03       		.byte	0x3
 2513 010c 0F01     		.2byte	0x10f
 2514 010e BD000000 		.4byte	0xbd
 2515 0112 0A       		.uleb128 0xa
 2516 0113 1C       		.byte	0x1c
 2517 0114 03       		.byte	0x3
 2518 0115 1601     		.2byte	0x116
 2519 0117 84010000 		.4byte	0x184
 2520 011b 09       		.uleb128 0x9
 2521 011c 5A040000 		.4byte	.LASF24
 2522 0120 03       		.byte	0x3
 2523 0121 1B01     		.2byte	0x11b
 2524 0123 81000000 		.4byte	0x81
 2525 0127 00       		.byte	0
 2526 0128 09       		.uleb128 0x9
 2527 0129 4F000000 		.4byte	.LASF25
 2528 012d 03       		.byte	0x3
 2529 012e 2001     		.2byte	0x120
 2530 0130 81000000 		.4byte	0x81
 2531 0134 04       		.byte	0x4
 2532 0135 09       		.uleb128 0x9
 2533 0136 4C050000 		.4byte	.LASF26
 2534 013a 03       		.byte	0x3
 2535 013b 2301     		.2byte	0x123
 2536 013d 81000000 		.4byte	0x81
 2537 0141 08       		.byte	0x8
 2538 0142 09       		.uleb128 0x9
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 71


 2539 0143 10010000 		.4byte	.LASF18
 2540 0147 03       		.byte	0x3
 2541 0148 2601     		.2byte	0x126
 2542 014a 81000000 		.4byte	0x81
 2543 014e 0C       		.byte	0xc
 2544 014f 09       		.uleb128 0x9
 2545 0150 90050000 		.4byte	.LASF19
 2546 0154 03       		.byte	0x3
 2547 0155 2B01     		.2byte	0x12b
 2548 0157 81000000 		.4byte	0x81
 2549 015b 10       		.byte	0x10
 2550 015c 09       		.uleb128 0x9
 2551 015d 7B020000 		.4byte	.LASF20
 2552 0161 03       		.byte	0x3
 2553 0162 2E01     		.2byte	0x12e
 2554 0164 6B000000 		.4byte	0x6b
 2555 0168 14       		.byte	0x14
 2556 0169 09       		.uleb128 0x9
 2557 016a DC050000 		.4byte	.LASF21
 2558 016e 03       		.byte	0x3
 2559 016f 3301     		.2byte	0x133
 2560 0171 6B000000 		.4byte	0x6b
 2561 0175 15       		.byte	0x15
 2562 0176 09       		.uleb128 0x9
 2563 0177 89010000 		.4byte	.LASF22
 2564 017b 03       		.byte	0x3
 2565 017c 3601     		.2byte	0x136
 2566 017e 81000000 		.4byte	0x81
 2567 0182 18       		.byte	0x18
 2568 0183 00       		.byte	0
 2569 0184 05       		.uleb128 0x5
 2570 0185 E6030000 		.4byte	.LASF27
 2571 0189 03       		.byte	0x3
 2572 018a 3701     		.2byte	0x137
 2573 018c 12010000 		.4byte	0x112
 2574 0190 0B       		.uleb128 0xb
 2575 0191 01       		.byte	0x1
 2576 0192 2C000000 		.4byte	0x2c
 2577 0196 03       		.byte	0x3
 2578 0197 5401     		.2byte	0x154
 2579 0199 BC010000 		.4byte	0x1bc
 2580 019d 0C       		.uleb128 0xc
 2581 019e C7050000 		.4byte	.LASF28
 2582 01a2 00       		.byte	0
 2583 01a3 0C       		.uleb128 0xc
 2584 01a4 73030000 		.4byte	.LASF29
 2585 01a8 01       		.byte	0x1
 2586 01a9 0C       		.uleb128 0xc
 2587 01aa 8A030000 		.4byte	.LASF30
 2588 01ae 02       		.byte	0x2
 2589 01af 0C       		.uleb128 0xc
 2590 01b0 44040000 		.4byte	.LASF31
 2591 01b4 03       		.byte	0x3
 2592 01b5 0C       		.uleb128 0xc
 2593 01b6 51010000 		.4byte	.LASF32
 2594 01ba 04       		.byte	0x4
 2595 01bb 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 72


 2596 01bc 05       		.uleb128 0x5
 2597 01bd 1A000000 		.4byte	.LASF33
 2598 01c1 03       		.byte	0x3
 2599 01c2 5A01     		.2byte	0x15a
 2600 01c4 90010000 		.4byte	0x190
 2601 01c8 0D       		.uleb128 0xd
 2602 01c9 D9040000 		.4byte	.LASF36
 2603 01cd 01       		.byte	0x1
 2604 01ce 5F       		.byte	0x5f
 2605 01cf BC010000 		.4byte	0x1bc
 2606 01d3 00000000 		.4byte	.LFB0
 2607 01d7 DE000000 		.4byte	.LFE0-.LFB0
 2608 01db 01       		.uleb128 0x1
 2609 01dc 9C       		.byte	0x9c
 2610 01dd 0C020000 		.4byte	0x20c
 2611 01e1 0E       		.uleb128 0xe
 2612 01e2 18050000 		.4byte	.LASF34
 2613 01e6 01       		.byte	0x1
 2614 01e7 5F       		.byte	0x5f
 2615 01e8 0C020000 		.4byte	0x20c
 2616 01ec 02       		.uleb128 0x2
 2617 01ed 91       		.byte	0x91
 2618 01ee 6C       		.sleb128 -20
 2619 01ef 0E       		.uleb128 0xe
 2620 01f0 44050000 		.4byte	.LASF35
 2621 01f4 01       		.byte	0x1
 2622 01f5 5F       		.byte	0x5f
 2623 01f6 12020000 		.4byte	0x212
 2624 01fa 02       		.uleb128 0x2
 2625 01fb 91       		.byte	0x91
 2626 01fc 68       		.sleb128 -24
 2627 01fd 0F       		.uleb128 0xf
 2628 01fe 72657400 		.ascii	"ret\000"
 2629 0202 01       		.byte	0x1
 2630 0203 61       		.byte	0x61
 2631 0204 BC010000 		.4byte	0x1bc
 2632 0208 02       		.uleb128 0x2
 2633 0209 91       		.byte	0x91
 2634 020a 77       		.sleb128 -9
 2635 020b 00       		.byte	0
 2636 020c 10       		.uleb128 0x10
 2637 020d 04       		.byte	0x4
 2638 020e 06010000 		.4byte	0x106
 2639 0212 10       		.uleb128 0x10
 2640 0213 04       		.byte	0x4
 2641 0214 84010000 		.4byte	0x184
 2642 0218 0D       		.uleb128 0xd
 2643 0219 C7020000 		.4byte	.LASF37
 2644 021d 01       		.byte	0x1
 2645 021e A9       		.byte	0xa9
 2646 021f BC010000 		.4byte	0x1bc
 2647 0223 00000000 		.4byte	.LFB1
 2648 0227 0A030000 		.4byte	.LFE1-.LFB1
 2649 022b 01       		.uleb128 0x1
 2650 022c 9C       		.byte	0x9c
 2651 022d BA030000 		.4byte	0x3ba
 2652 0231 0E       		.uleb128 0xe
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 73


 2653 0232 0B010000 		.4byte	.LASF38
 2654 0236 01       		.byte	0x1
 2655 0237 A9       		.byte	0xa9
 2656 0238 81000000 		.4byte	0x81
 2657 023c 03       		.uleb128 0x3
 2658 023d 91       		.byte	0x91
 2659 023e A47F     		.sleb128 -92
 2660 0240 0E       		.uleb128 0xe
 2661 0241 3A030000 		.4byte	.LASF39
 2662 0245 01       		.byte	0x1
 2663 0246 AA       		.byte	0xaa
 2664 0247 BB000000 		.4byte	0xbb
 2665 024b 03       		.uleb128 0x3
 2666 024c 91       		.byte	0x91
 2667 024d A07F     		.sleb128 -96
 2668 024f 0E       		.uleb128 0xe
 2669 0250 F3020000 		.4byte	.LASF40
 2670 0254 01       		.byte	0x1
 2671 0255 AB       		.byte	0xab
 2672 0256 81000000 		.4byte	0x81
 2673 025a 03       		.uleb128 0x3
 2674 025b 91       		.byte	0x91
 2675 025c 9C7F     		.sleb128 -100
 2676 025e 0E       		.uleb128 0xe
 2677 025f 44050000 		.4byte	.LASF35
 2678 0263 01       		.byte	0x1
 2679 0264 AC       		.byte	0xac
 2680 0265 12020000 		.4byte	0x212
 2681 0269 03       		.uleb128 0x3
 2682 026a 91       		.byte	0x91
 2683 026b 987F     		.sleb128 -104
 2684 026d 0F       		.uleb128 0xf
 2685 026e 72657400 		.ascii	"ret\000"
 2686 0272 01       		.byte	0x1
 2687 0273 AE       		.byte	0xae
 2688 0274 BC010000 		.4byte	0x1bc
 2689 0278 02       		.uleb128 0x2
 2690 0279 91       		.byte	0x91
 2691 027a 77       		.sleb128 -9
 2692 027b 0F       		.uleb128 0xf
 2693 027c 6900     		.ascii	"i\000"
 2694 027e 01       		.byte	0x1
 2695 027f AF       		.byte	0xaf
 2696 0280 81000000 		.4byte	0x81
 2697 0284 02       		.uleb128 0x2
 2698 0285 91       		.byte	0x91
 2699 0286 70       		.sleb128 -16
 2700 0287 11       		.uleb128 0x11
 2701 0288 1F050000 		.4byte	.LASF41
 2702 028c 01       		.byte	0x1
 2703 028d B0       		.byte	0xb0
 2704 028e 81000000 		.4byte	0x81
 2705 0292 02       		.uleb128 0x2
 2706 0293 91       		.byte	0x91
 2707 0294 6C       		.sleb128 -20
 2708 0295 11       		.uleb128 0x11
 2709 0296 52030000 		.4byte	.LASF42
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 74


 2710 029a 01       		.byte	0x1
 2711 029b B1       		.byte	0xb1
 2712 029c 81000000 		.4byte	0x81
 2713 02a0 02       		.uleb128 0x2
 2714 02a1 91       		.byte	0x91
 2715 02a2 44       		.sleb128 -60
 2716 02a3 11       		.uleb128 0x11
 2717 02a4 65050000 		.4byte	.LASF43
 2718 02a8 01       		.byte	0x1
 2719 02a9 B2       		.byte	0xb2
 2720 02aa 81000000 		.4byte	0x81
 2721 02ae 03       		.uleb128 0x3
 2722 02af 91       		.byte	0x91
 2723 02b0 B87F     		.sleb128 -72
 2724 02b2 11       		.uleb128 0x11
 2725 02b3 45030000 		.4byte	.LASF44
 2726 02b7 01       		.byte	0x1
 2727 02b8 B3       		.byte	0xb3
 2728 02b9 81000000 		.4byte	0x81
 2729 02bd 02       		.uleb128 0x2
 2730 02be 91       		.byte	0x91
 2731 02bf 68       		.sleb128 -24
 2732 02c0 11       		.uleb128 0x11
 2733 02c1 21020000 		.4byte	.LASF45
 2734 02c5 01       		.byte	0x1
 2735 02c6 B4       		.byte	0xb4
 2736 02c7 81000000 		.4byte	0x81
 2737 02cb 02       		.uleb128 0x2
 2738 02cc 91       		.byte	0x91
 2739 02cd 40       		.sleb128 -64
 2740 02ce 11       		.uleb128 0x11
 2741 02cf EA050000 		.4byte	.LASF46
 2742 02d3 01       		.byte	0x1
 2743 02d4 B5       		.byte	0xb5
 2744 02d5 81000000 		.4byte	0x81
 2745 02d9 02       		.uleb128 0x2
 2746 02da 91       		.byte	0x91
 2747 02db 64       		.sleb128 -28
 2748 02dc 11       		.uleb128 0x11
 2749 02dd C3040000 		.4byte	.LASF47
 2750 02e1 01       		.byte	0x1
 2751 02e2 B6       		.byte	0xb6
 2752 02e3 81000000 		.4byte	0x81
 2753 02e7 02       		.uleb128 0x2
 2754 02e8 91       		.byte	0x91
 2755 02e9 60       		.sleb128 -32
 2756 02ea 11       		.uleb128 0x11
 2757 02eb 3E060000 		.4byte	.LASF48
 2758 02ef 01       		.byte	0x1
 2759 02f0 B7       		.byte	0xb7
 2760 02f1 81000000 		.4byte	0x81
 2761 02f5 02       		.uleb128 0x2
 2762 02f6 91       		.byte	0x91
 2763 02f7 5C       		.sleb128 -36
 2764 02f8 12       		.uleb128 0x12
 2765 02f9 40000000 		.4byte	.LBB2
 2766 02fd BE020000 		.4byte	.LBE2-.LBB2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 75


 2767 0301 11       		.uleb128 0x11
 2768 0302 A3050000 		.4byte	.LASF49
 2769 0306 01       		.byte	0x1
 2770 0307 BC       		.byte	0xbc
 2771 0308 81000000 		.4byte	0x81
 2772 030c 02       		.uleb128 0x2
 2773 030d 91       		.byte	0x91
 2774 030e 58       		.sleb128 -40
 2775 030f 11       		.uleb128 0x11
 2776 0310 89050000 		.4byte	.LASF50
 2777 0314 01       		.byte	0x1
 2778 0315 BD       		.byte	0xbd
 2779 0316 81000000 		.4byte	0x81
 2780 031a 02       		.uleb128 0x2
 2781 031b 91       		.byte	0x91
 2782 031c 54       		.sleb128 -44
 2783 031d 11       		.uleb128 0x11
 2784 031e DF030000 		.4byte	.LASF51
 2785 0322 01       		.byte	0x1
 2786 0323 BF       		.byte	0xbf
 2787 0324 81000000 		.4byte	0x81
 2788 0328 02       		.uleb128 0x2
 2789 0329 91       		.byte	0x91
 2790 032a 4C       		.sleb128 -52
 2791 032b 11       		.uleb128 0x11
 2792 032c 44020000 		.4byte	.LASF52
 2793 0330 01       		.byte	0x1
 2794 0331 C0       		.byte	0xc0
 2795 0332 81000000 		.4byte	0x81
 2796 0336 02       		.uleb128 0x2
 2797 0337 91       		.byte	0x91
 2798 0338 50       		.sleb128 -48
 2799 0339 11       		.uleb128 0x11
 2800 033a 22060000 		.4byte	.LASF53
 2801 033e 01       		.byte	0x1
 2802 033f C5       		.byte	0xc5
 2803 0340 81000000 		.4byte	0x81
 2804 0344 02       		.uleb128 0x2
 2805 0345 91       		.byte	0x91
 2806 0346 48       		.sleb128 -56
 2807 0347 13       		.uleb128 0x13
 2808 0348 E4000000 		.4byte	.LBB3
 2809 034c 26000000 		.4byte	.LBE3-.LBB3
 2810 0350 64030000 		.4byte	0x364
 2811 0354 11       		.uleb128 0x11
 2812 0355 5B020000 		.4byte	.LASF54
 2813 0359 01       		.byte	0x1
 2814 035a E2       		.byte	0xe2
 2815 035b 81000000 		.4byte	0x81
 2816 035f 03       		.uleb128 0x3
 2817 0360 91       		.byte	0x91
 2818 0361 BC7F     		.sleb128 -68
 2819 0363 00       		.byte	0
 2820 0364 12       		.uleb128 0x12
 2821 0365 20020000 		.4byte	.LBB4
 2822 0369 D0000000 		.4byte	.LBE4-.LBB4
 2823 036d 14       		.uleb128 0x14
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 76


 2824 036e 2E050000 		.4byte	.LASF55
 2825 0372 01       		.byte	0x1
 2826 0373 3B01     		.2byte	0x13b
 2827 0375 81000000 		.4byte	0x81
 2828 0379 03       		.uleb128 0x3
 2829 037a 91       		.byte	0x91
 2830 037b B47F     		.sleb128 -76
 2831 037d 14       		.uleb128 0x14
 2832 037e 3C040000 		.4byte	.LASF56
 2833 0382 01       		.byte	0x1
 2834 0383 3C01     		.2byte	0x13c
 2835 0385 81000000 		.4byte	0x81
 2836 0389 03       		.uleb128 0x3
 2837 038a 91       		.byte	0x91
 2838 038b B07F     		.sleb128 -80
 2839 038d 12       		.uleb128 0x12
 2840 038e 62020000 		.4byte	.LBB5
 2841 0392 8E000000 		.4byte	.LBE5-.LBB5
 2842 0396 14       		.uleb128 0x14
 2843 0397 E9020000 		.4byte	.LASF57
 2844 039b 01       		.byte	0x1
 2845 039c 4101     		.2byte	0x141
 2846 039e 81000000 		.4byte	0x81
 2847 03a2 03       		.uleb128 0x3
 2848 03a3 91       		.byte	0x91
 2849 03a4 AC7F     		.sleb128 -84
 2850 03a6 14       		.uleb128 0x14
 2851 03a7 AA050000 		.4byte	.LASF58
 2852 03ab 01       		.byte	0x1
 2853 03ac 4201     		.2byte	0x142
 2854 03ae 81000000 		.4byte	0x81
 2855 03b2 03       		.uleb128 0x3
 2856 03b3 91       		.byte	0x91
 2857 03b4 A87F     		.sleb128 -88
 2858 03b6 00       		.byte	0
 2859 03b7 00       		.byte	0
 2860 03b8 00       		.byte	0
 2861 03b9 00       		.byte	0
 2862 03ba 15       		.uleb128 0x15
 2863 03bb CC030000 		.4byte	.LASF59
 2864 03bf 01       		.byte	0x1
 2865 03c0 9B01     		.2byte	0x19b
 2866 03c2 BC010000 		.4byte	0x1bc
 2867 03c6 00000000 		.4byte	.LFB2
 2868 03ca 4C030000 		.4byte	.LFE2-.LFB2
 2869 03ce 01       		.uleb128 0x1
 2870 03cf 9C       		.byte	0x9c
 2871 03d0 32050000 		.4byte	0x532
 2872 03d4 16       		.uleb128 0x16
 2873 03d5 0B010000 		.4byte	.LASF38
 2874 03d9 01       		.byte	0x1
 2875 03da 9B01     		.2byte	0x19b
 2876 03dc 81000000 		.4byte	0x81
 2877 03e0 03       		.uleb128 0x3
 2878 03e1 91       		.byte	0x91
 2879 03e2 AC7D     		.sleb128 -340
 2880 03e4 16       		.uleb128 0x16
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 77


 2881 03e5 3A030000 		.4byte	.LASF39
 2882 03e9 01       		.byte	0x1
 2883 03ea 9C01     		.2byte	0x19c
 2884 03ec BB000000 		.4byte	0xbb
 2885 03f0 03       		.uleb128 0x3
 2886 03f1 91       		.byte	0x91
 2887 03f2 A87D     		.sleb128 -344
 2888 03f4 16       		.uleb128 0x16
 2889 03f5 F3020000 		.4byte	.LASF40
 2890 03f9 01       		.byte	0x1
 2891 03fa 9D01     		.2byte	0x19d
 2892 03fc 81000000 		.4byte	0x81
 2893 0400 03       		.uleb128 0x3
 2894 0401 91       		.byte	0x91
 2895 0402 A47D     		.sleb128 -348
 2896 0404 16       		.uleb128 0x16
 2897 0405 44050000 		.4byte	.LASF35
 2898 0409 01       		.byte	0x1
 2899 040a 9E01     		.2byte	0x19e
 2900 040c 12020000 		.4byte	0x212
 2901 0410 03       		.uleb128 0x3
 2902 0411 91       		.byte	0x91
 2903 0412 A07D     		.sleb128 -352
 2904 0414 17       		.uleb128 0x17
 2905 0415 72657400 		.ascii	"ret\000"
 2906 0419 01       		.byte	0x1
 2907 041a A001     		.2byte	0x1a0
 2908 041c BC010000 		.4byte	0x1bc
 2909 0420 02       		.uleb128 0x2
 2910 0421 91       		.byte	0x91
 2911 0422 6F       		.sleb128 -17
 2912 0423 17       		.uleb128 0x17
 2913 0424 6900     		.ascii	"i\000"
 2914 0426 01       		.byte	0x1
 2915 0427 A101     		.2byte	0x1a1
 2916 0429 81000000 		.4byte	0x81
 2917 042d 02       		.uleb128 0x2
 2918 042e 91       		.byte	0x91
 2919 042f 68       		.sleb128 -24
 2920 0430 14       		.uleb128 0x14
 2921 0431 30040000 		.4byte	.LASF60
 2922 0435 01       		.byte	0x1
 2923 0436 A201     		.2byte	0x1a2
 2924 0438 81000000 		.4byte	0x81
 2925 043c 02       		.uleb128 0x2
 2926 043d 91       		.byte	0x91
 2927 043e 64       		.sleb128 -28
 2928 043f 14       		.uleb128 0x14
 2929 0440 0B030000 		.4byte	.LASF61
 2930 0444 01       		.byte	0x1
 2931 0445 A301     		.2byte	0x1a3
 2932 0447 81000000 		.4byte	0x81
 2933 044b 02       		.uleb128 0x2
 2934 044c 91       		.byte	0x91
 2935 044d 48       		.sleb128 -56
 2936 044e 14       		.uleb128 0x14
 2937 044f EB040000 		.4byte	.LASF62
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 78


 2938 0453 01       		.byte	0x1
 2939 0454 A401     		.2byte	0x1a4
 2940 0456 32050000 		.4byte	0x532
 2941 045a 03       		.uleb128 0x3
 2942 045b 91       		.byte	0x91
 2943 045c C47D     		.sleb128 -316
 2944 045e 14       		.uleb128 0x14
 2945 045f 2E050000 		.4byte	.LASF55
 2946 0463 01       		.byte	0x1
 2947 0464 A501     		.2byte	0x1a5
 2948 0466 81000000 		.4byte	0x81
 2949 046a 03       		.uleb128 0x3
 2950 046b 91       		.byte	0x91
 2951 046c C07D     		.sleb128 -320
 2952 046e 14       		.uleb128 0x14
 2953 046f 3C040000 		.4byte	.LASF56
 2954 0473 01       		.byte	0x1
 2955 0474 A601     		.2byte	0x1a6
 2956 0476 81000000 		.4byte	0x81
 2957 047a 03       		.uleb128 0x3
 2958 047b 91       		.byte	0x91
 2959 047c BC7D     		.sleb128 -324
 2960 047e 14       		.uleb128 0x14
 2961 047f 5A050000 		.4byte	.LASF63
 2962 0483 01       		.byte	0x1
 2963 0484 A701     		.2byte	0x1a7
 2964 0486 81000000 		.4byte	0x81
 2965 048a 02       		.uleb128 0x2
 2966 048b 91       		.byte	0x91
 2967 048c 60       		.sleb128 -32
 2968 048d 14       		.uleb128 0x14
 2969 048e 2E060000 		.4byte	.LASF64
 2970 0492 01       		.byte	0x1
 2971 0493 A801     		.2byte	0x1a8
 2972 0495 81000000 		.4byte	0x81
 2973 0499 03       		.uleb128 0x3
 2974 049a 91       		.byte	0x91
 2975 049b B87D     		.sleb128 -328
 2976 049d 14       		.uleb128 0x14
 2977 049e 28030000 		.4byte	.LASF65
 2978 04a2 01       		.byte	0x1
 2979 04a3 A901     		.2byte	0x1a9
 2980 04a5 81000000 		.4byte	0x81
 2981 04a9 03       		.uleb128 0x3
 2982 04aa 91       		.byte	0x91
 2983 04ab B47D     		.sleb128 -332
 2984 04ad 14       		.uleb128 0x14
 2985 04ae 12000000 		.4byte	.LASF66
 2986 04b2 01       		.byte	0x1
 2987 04b3 AA01     		.2byte	0x1aa
 2988 04b5 BB000000 		.4byte	0xbb
 2989 04b9 02       		.uleb128 0x2
 2990 04ba 91       		.byte	0x91
 2991 04bb 4C       		.sleb128 -52
 2992 04bc 14       		.uleb128 0x14
 2993 04bd 3E060000 		.4byte	.LASF48
 2994 04c1 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 79


 2995 04c2 AB01     		.2byte	0x1ab
 2996 04c4 81000000 		.4byte	0x81
 2997 04c8 02       		.uleb128 0x2
 2998 04c9 91       		.byte	0x91
 2999 04ca 5C       		.sleb128 -36
 3000 04cb 12       		.uleb128 0x12
 3001 04cc 74000000 		.4byte	.LBB6
 3002 04d0 C4020000 		.4byte	.LBE6-.LBB6
 3003 04d4 14       		.uleb128 0x14
 3004 04d5 EA000000 		.4byte	.LASF67
 3005 04d9 01       		.byte	0x1
 3006 04da B001     		.2byte	0x1b0
 3007 04dc 81000000 		.4byte	0x81
 3008 04e0 02       		.uleb128 0x2
 3009 04e1 91       		.byte	0x91
 3010 04e2 54       		.sleb128 -44
 3011 04e3 14       		.uleb128 0x14
 3012 04e4 31020000 		.4byte	.LASF68
 3013 04e8 01       		.byte	0x1
 3014 04e9 B101     		.2byte	0x1b1
 3015 04eb 81000000 		.4byte	0x81
 3016 04ef 03       		.uleb128 0x3
 3017 04f0 91       		.byte	0x91
 3018 04f1 B07D     		.sleb128 -336
 3019 04f3 18       		.uleb128 0x18
 3020 04f4 00000000 		.4byte	.Ldebug_ranges0+0
 3021 04f8 14       		.uleb128 0x14
 3022 04f9 B5040000 		.4byte	.LASF69
 3023 04fd 01       		.byte	0x1
 3024 04fe B501     		.2byte	0x1b5
 3025 0500 81000000 		.4byte	0x81
 3026 0504 02       		.uleb128 0x2
 3027 0505 91       		.byte	0x91
 3028 0506 58       		.sleb128 -40
 3029 0507 14       		.uleb128 0x14
 3030 0508 DF030000 		.4byte	.LASF51
 3031 050c 01       		.byte	0x1
 3032 050d B701     		.2byte	0x1b7
 3033 050f 81000000 		.4byte	0x81
 3034 0513 02       		.uleb128 0x2
 3035 0514 91       		.byte	0x91
 3036 0515 50       		.sleb128 -48
 3037 0516 12       		.uleb128 0x12
 3038 0517 2C020000 		.4byte	.LBB8
 3039 051b 3E000000 		.4byte	.LBE8-.LBB8
 3040 051f 14       		.uleb128 0x14
 3041 0520 89020000 		.4byte	.LASF70
 3042 0524 01       		.byte	0x1
 3043 0525 1702     		.2byte	0x217
 3044 0527 81000000 		.4byte	0x81
 3045 052b 02       		.uleb128 0x2
 3046 052c 91       		.byte	0x91
 3047 052d 44       		.sleb128 -60
 3048 052e 00       		.byte	0
 3049 052f 00       		.byte	0
 3050 0530 00       		.byte	0
 3051 0531 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 80


 3052 0532 19       		.uleb128 0x19
 3053 0533 81000000 		.4byte	0x81
 3054 0537 42050000 		.4byte	0x542
 3055 053b 1A       		.uleb128 0x1a
 3056 053c B4000000 		.4byte	0xb4
 3057 0540 3F       		.byte	0x3f
 3058 0541 00       		.byte	0
 3059 0542 15       		.uleb128 0x15
 3060 0543 B9030000 		.4byte	.LASF71
 3061 0547 01       		.byte	0x1
 3062 0548 7502     		.2byte	0x275
 3063 054a BC010000 		.4byte	0x1bc
 3064 054e 00000000 		.4byte	.LFB3
 3065 0552 E8000000 		.4byte	.LFE3-.LFB3
 3066 0556 01       		.uleb128 0x1
 3067 0557 9C       		.byte	0x9c
 3068 0558 DF050000 		.4byte	0x5df
 3069 055c 16       		.uleb128 0x16
 3070 055d 44050000 		.4byte	.LASF35
 3071 0561 01       		.byte	0x1
 3072 0562 7502     		.2byte	0x275
 3073 0564 12020000 		.4byte	0x212
 3074 0568 03       		.uleb128 0x3
 3075 0569 91       		.byte	0x91
 3076 056a DC7D     		.sleb128 -292
 3077 056c 17       		.uleb128 0x17
 3078 056d 6900     		.ascii	"i\000"
 3079 056f 01       		.byte	0x1
 3080 0570 7702     		.2byte	0x277
 3081 0572 81000000 		.4byte	0x81
 3082 0576 02       		.uleb128 0x2
 3083 0577 91       		.byte	0x91
 3084 0578 74       		.sleb128 -12
 3085 0579 14       		.uleb128 0x14
 3086 057a DF030000 		.4byte	.LASF51
 3087 057e 01       		.byte	0x1
 3088 057f 7802     		.2byte	0x278
 3089 0581 81000000 		.4byte	0x81
 3090 0585 02       		.uleb128 0x2
 3091 0586 91       		.byte	0x91
 3092 0587 6C       		.sleb128 -20
 3093 0588 14       		.uleb128 0x14
 3094 0589 2E060000 		.4byte	.LASF64
 3095 058d 01       		.byte	0x1
 3096 058e 7902     		.2byte	0x279
 3097 0590 81000000 		.4byte	0x81
 3098 0594 02       		.uleb128 0x2
 3099 0595 91       		.byte	0x91
 3100 0596 64       		.sleb128 -28
 3101 0597 14       		.uleb128 0x14
 3102 0598 28030000 		.4byte	.LASF65
 3103 059c 01       		.byte	0x1
 3104 059d 7A02     		.2byte	0x27a
 3105 059f 81000000 		.4byte	0x81
 3106 05a3 02       		.uleb128 0x2
 3107 05a4 91       		.byte	0x91
 3108 05a5 60       		.sleb128 -32
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 81


 3109 05a6 17       		.uleb128 0x17
 3110 05a7 72657400 		.ascii	"ret\000"
 3111 05ab 01       		.byte	0x1
 3112 05ac 7B02     		.2byte	0x27b
 3113 05ae BC010000 		.4byte	0x1bc
 3114 05b2 02       		.uleb128 0x2
 3115 05b3 91       		.byte	0x91
 3116 05b4 73       		.sleb128 -13
 3117 05b5 14       		.uleb128 0x14
 3118 05b6 EB040000 		.4byte	.LASF62
 3119 05ba 01       		.byte	0x1
 3120 05bb 7C02     		.2byte	0x27c
 3121 05bd 32050000 		.4byte	0x532
 3122 05c1 03       		.uleb128 0x3
 3123 05c2 91       		.byte	0x91
 3124 05c3 E07D     		.sleb128 -288
 3125 05c5 12       		.uleb128 0x12
 3126 05c6 3E000000 		.4byte	.LBB10
 3127 05ca 9C000000 		.4byte	.LBE10-.LBB10
 3128 05ce 14       		.uleb128 0x14
 3129 05cf EA000000 		.4byte	.LASF67
 3130 05d3 01       		.byte	0x1
 3131 05d4 8902     		.2byte	0x289
 3132 05d6 81000000 		.4byte	0x81
 3133 05da 02       		.uleb128 0x2
 3134 05db 91       		.byte	0x91
 3135 05dc 68       		.sleb128 -24
 3136 05dd 00       		.byte	0
 3137 05de 00       		.byte	0
 3138 05df 1B       		.uleb128 0x1b
 3139 05e0 69010000 		.4byte	.LASF72
 3140 05e4 01       		.byte	0x1
 3141 05e5 DC02     		.2byte	0x2dc
 3142 05e7 81000000 		.4byte	0x81
 3143 05eb 00000000 		.4byte	.LFB4
 3144 05ef 18000000 		.4byte	.LFE4-.LFB4
 3145 05f3 01       		.uleb128 0x1
 3146 05f4 9C       		.byte	0x9c
 3147 05f5 09060000 		.4byte	0x609
 3148 05f9 16       		.uleb128 0x16
 3149 05fa 44050000 		.4byte	.LASF35
 3150 05fe 01       		.byte	0x1
 3151 05ff DC02     		.2byte	0x2dc
 3152 0601 12020000 		.4byte	0x212
 3153 0605 02       		.uleb128 0x2
 3154 0606 91       		.byte	0x91
 3155 0607 74       		.sleb128 -12
 3156 0608 00       		.byte	0
 3157 0609 1C       		.uleb128 0x1c
 3158 060a 3E010000 		.4byte	.LASF77
 3159 060e 01       		.byte	0x1
 3160 060f F602     		.2byte	0x2f6
 3161 0611 00000000 		.4byte	.LFB5
 3162 0615 6C000000 		.4byte	.LFE5-.LFB5
 3163 0619 01       		.uleb128 0x1
 3164 061a 9C       		.byte	0x9c
 3165 061b 7A060000 		.4byte	0x67a
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 82


 3166 061f 16       		.uleb128 0x16
 3167 0620 0D020000 		.4byte	.LASF73
 3168 0624 01       		.byte	0x1
 3169 0625 F602     		.2byte	0x2f6
 3170 0627 7A060000 		.4byte	0x67a
 3171 062b 02       		.uleb128 0x2
 3172 062c 91       		.byte	0x91
 3173 062d 64       		.sleb128 -28
 3174 062e 16       		.uleb128 0x16
 3175 062f 44050000 		.4byte	.LASF35
 3176 0633 01       		.byte	0x1
 3177 0634 F602     		.2byte	0x2f6
 3178 0636 12020000 		.4byte	0x212
 3179 063a 02       		.uleb128 0x2
 3180 063b 91       		.byte	0x91
 3181 063c 60       		.sleb128 -32
 3182 063d 14       		.uleb128 0x14
 3183 063e DF030000 		.4byte	.LASF51
 3184 0642 01       		.byte	0x1
 3185 0643 F802     		.2byte	0x2f8
 3186 0645 81000000 		.4byte	0x81
 3187 0649 02       		.uleb128 0x2
 3188 064a 91       		.byte	0x91
 3189 064b 68       		.sleb128 -24
 3190 064c 14       		.uleb128 0x14
 3191 064d AA040000 		.4byte	.LASF74
 3192 0651 01       		.byte	0x1
 3193 0652 F902     		.2byte	0x2f9
 3194 0654 81000000 		.4byte	0x81
 3195 0658 02       		.uleb128 0x2
 3196 0659 91       		.byte	0x91
 3197 065a 74       		.sleb128 -12
 3198 065b 14       		.uleb128 0x14
 3199 065c 53020000 		.4byte	.LASF75
 3200 0660 01       		.byte	0x1
 3201 0661 FA02     		.2byte	0x2fa
 3202 0663 81000000 		.4byte	0x81
 3203 0667 02       		.uleb128 0x2
 3204 0668 91       		.byte	0x91
 3205 0669 70       		.sleb128 -16
 3206 066a 14       		.uleb128 0x14
 3207 066b 33000000 		.4byte	.LASF76
 3208 066f 01       		.byte	0x1
 3209 0670 FB02     		.2byte	0x2fb
 3210 0672 81000000 		.4byte	0x81
 3211 0676 02       		.uleb128 0x2
 3212 0677 91       		.byte	0x91
 3213 0678 6C       		.sleb128 -20
 3214 0679 00       		.byte	0
 3215 067a 10       		.uleb128 0x10
 3216 067b 04       		.byte	0x4
 3217 067c 81000000 		.4byte	0x81
 3218 0680 1D       		.uleb128 0x1d
 3219 0681 B4050000 		.4byte	.LASF81
 3220 0685 01       		.byte	0x1
 3221 0686 2203     		.2byte	0x322
 3222 0688 81000000 		.4byte	0x81
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 83


 3223 068c 00000000 		.4byte	.LFB6
 3224 0690 40000000 		.4byte	.LFE6-.LFB6
 3225 0694 01       		.uleb128 0x1
 3226 0695 9C       		.byte	0x9c
 3227 0696 C8060000 		.4byte	0x6c8
 3228 069a 16       		.uleb128 0x16
 3229 069b DF030000 		.4byte	.LASF51
 3230 069f 01       		.byte	0x1
 3231 06a0 2203     		.2byte	0x322
 3232 06a2 81000000 		.4byte	0x81
 3233 06a6 02       		.uleb128 0x2
 3234 06a7 91       		.byte	0x91
 3235 06a8 6C       		.sleb128 -20
 3236 06a9 16       		.uleb128 0x16
 3237 06aa 44050000 		.4byte	.LASF35
 3238 06ae 01       		.byte	0x1
 3239 06af 2203     		.2byte	0x322
 3240 06b1 12020000 		.4byte	0x212
 3241 06b5 02       		.uleb128 0x2
 3242 06b6 91       		.byte	0x91
 3243 06b7 68       		.sleb128 -24
 3244 06b8 14       		.uleb128 0x14
 3245 06b9 33000000 		.4byte	.LASF76
 3246 06bd 01       		.byte	0x1
 3247 06be 2403     		.2byte	0x324
 3248 06c0 81000000 		.4byte	0x81
 3249 06c4 02       		.uleb128 0x2
 3250 06c5 91       		.byte	0x91
 3251 06c6 74       		.sleb128 -12
 3252 06c7 00       		.byte	0
 3253 06c8 1C       		.uleb128 0x1c
 3254 06c9 FE030000 		.4byte	.LASF78
 3255 06cd 01       		.byte	0x1
 3256 06ce 4F03     		.2byte	0x34f
 3257 06d0 00000000 		.4byte	.LFB7
 3258 06d4 B2000000 		.4byte	.LFE7-.LFB7
 3259 06d8 01       		.uleb128 0x1
 3260 06d9 9C       		.byte	0x9c
 3261 06da 1B070000 		.4byte	0x71b
 3262 06de 16       		.uleb128 0x16
 3263 06df DF030000 		.4byte	.LASF51
 3264 06e3 01       		.byte	0x1
 3265 06e4 4F03     		.2byte	0x34f
 3266 06e6 81000000 		.4byte	0x81
 3267 06ea 02       		.uleb128 0x2
 3268 06eb 91       		.byte	0x91
 3269 06ec 74       		.sleb128 -12
 3270 06ed 16       		.uleb128 0x16
 3271 06ee 07000000 		.4byte	.LASF79
 3272 06f2 01       		.byte	0x1
 3273 06f3 5003     		.2byte	0x350
 3274 06f5 7A060000 		.4byte	0x67a
 3275 06f9 02       		.uleb128 0x2
 3276 06fa 91       		.byte	0x91
 3277 06fb 70       		.sleb128 -16
 3278 06fc 16       		.uleb128 0x16
 3279 06fd 1D030000 		.4byte	.LASF80
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 84


 3280 0701 01       		.byte	0x1
 3281 0702 5103     		.2byte	0x351
 3282 0704 7A060000 		.4byte	0x67a
 3283 0708 02       		.uleb128 0x2
 3284 0709 91       		.byte	0x91
 3285 070a 6C       		.sleb128 -20
 3286 070b 16       		.uleb128 0x16
 3287 070c 44050000 		.4byte	.LASF35
 3288 0710 01       		.byte	0x1
 3289 0711 5203     		.2byte	0x352
 3290 0713 12020000 		.4byte	0x212
 3291 0717 02       		.uleb128 0x2
 3292 0718 91       		.byte	0x91
 3293 0719 68       		.sleb128 -24
 3294 071a 00       		.byte	0
 3295 071b 1D       		.uleb128 0x1d
 3296 071c 05060000 		.4byte	.LASF82
 3297 0720 01       		.byte	0x1
 3298 0721 9B03     		.2byte	0x39b
 3299 0723 6B000000 		.4byte	0x6b
 3300 0727 00000000 		.4byte	.LFB8
 3301 072b 6C000000 		.4byte	.LFE8-.LFB8
 3302 072f 01       		.uleb128 0x1
 3303 0730 9C       		.byte	0x9c
 3304 0731 7F070000 		.4byte	0x77f
 3305 0735 16       		.uleb128 0x16
 3306 0736 1A060000 		.4byte	.LASF83
 3307 073a 01       		.byte	0x1
 3308 073b 9B03     		.2byte	0x39b
 3309 073d 7F070000 		.4byte	0x77f
 3310 0741 02       		.uleb128 0x2
 3311 0742 91       		.byte	0x91
 3312 0743 6C       		.sleb128 -20
 3313 0744 1E       		.uleb128 0x1e
 3314 0745 6C656E00 		.ascii	"len\000"
 3315 0749 01       		.byte	0x1
 3316 074a 9B03     		.2byte	0x39b
 3317 074c 81000000 		.4byte	0x81
 3318 0750 02       		.uleb128 0x2
 3319 0751 91       		.byte	0x91
 3320 0752 68       		.sleb128 -24
 3321 0753 17       		.uleb128 0x17
 3322 0754 63726300 		.ascii	"crc\000"
 3323 0758 01       		.byte	0x1
 3324 0759 9D03     		.2byte	0x39d
 3325 075b 6B000000 		.4byte	0x6b
 3326 075f 02       		.uleb128 0x2
 3327 0760 91       		.byte	0x91
 3328 0761 77       		.sleb128 -9
 3329 0762 17       		.uleb128 0x17
 3330 0763 6900     		.ascii	"i\000"
 3331 0765 01       		.byte	0x1
 3332 0766 9E03     		.2byte	0x39e
 3333 0768 6B000000 		.4byte	0x6b
 3334 076c 02       		.uleb128 0x2
 3335 076d 91       		.byte	0x91
 3336 076e 76       		.sleb128 -10
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 85


 3337 076f 17       		.uleb128 0x17
 3338 0770 636E7400 		.ascii	"cnt\000"
 3339 0774 01       		.byte	0x1
 3340 0775 9F03     		.2byte	0x39f
 3341 0777 76000000 		.4byte	0x76
 3342 077b 02       		.uleb128 0x2
 3343 077c 91       		.byte	0x91
 3344 077d 74       		.sleb128 -12
 3345 077e 00       		.byte	0
 3346 077f 10       		.uleb128 0x10
 3347 0780 04       		.byte	0x4
 3348 0781 6B000000 		.4byte	0x6b
 3349 0785 1D       		.uleb128 0x1d
 3350 0786 1D040000 		.4byte	.LASF84
 3351 078a 01       		.byte	0x1
 3352 078b BC03     		.2byte	0x3bc
 3353 078d BC010000 		.4byte	0x1bc
 3354 0791 00000000 		.4byte	.LFB9
 3355 0795 64000000 		.4byte	.LFE9-.LFB9
 3356 0799 01       		.uleb128 0x1
 3357 079a 9C       		.byte	0x9c
 3358 079b DC070000 		.4byte	0x7dc
 3359 079f 16       		.uleb128 0x16
 3360 07a0 18050000 		.4byte	.LASF34
 3361 07a4 01       		.byte	0x1
 3362 07a5 BC03     		.2byte	0x3bc
 3363 07a7 0C020000 		.4byte	0x20c
 3364 07ab 02       		.uleb128 0x2
 3365 07ac 91       		.byte	0x91
 3366 07ad 64       		.sleb128 -28
 3367 07ae 17       		.uleb128 0x17
 3368 07af 72657400 		.ascii	"ret\000"
 3369 07b3 01       		.byte	0x1
 3370 07b4 BE03     		.2byte	0x3be
 3371 07b6 BC010000 		.4byte	0x1bc
 3372 07ba 02       		.uleb128 0x2
 3373 07bb 91       		.byte	0x91
 3374 07bc 77       		.sleb128 -9
 3375 07bd 14       		.uleb128 0x14
 3376 07be 2E050000 		.4byte	.LASF55
 3377 07c2 01       		.byte	0x1
 3378 07c3 BF03     		.2byte	0x3bf
 3379 07c5 81000000 		.4byte	0x81
 3380 07c9 02       		.uleb128 0x2
 3381 07ca 91       		.byte	0x91
 3382 07cb 70       		.sleb128 -16
 3383 07cc 14       		.uleb128 0x14
 3384 07cd 3C040000 		.4byte	.LASF56
 3385 07d1 01       		.byte	0x1
 3386 07d2 C003     		.2byte	0x3c0
 3387 07d4 81000000 		.4byte	0x81
 3388 07d8 02       		.uleb128 0x2
 3389 07d9 91       		.byte	0x91
 3390 07da 6C       		.sleb128 -20
 3391 07db 00       		.byte	0
 3392 07dc 1F       		.uleb128 0x1f
 3393 07dd 35010000 		.4byte	.LASF85
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 86


 3394 07e1 01       		.byte	0x1
 3395 07e2 DF03     		.2byte	0x3df
 3396 07e4 BC010000 		.4byte	0x1bc
 3397 07e8 00000000 		.4byte	.LFB10
 3398 07ec 4C000000 		.4byte	.LFE10-.LFB10
 3399 07f0 01       		.uleb128 0x1
 3400 07f1 9C       		.byte	0x9c
 3401 07f2 5F080000 		.4byte	0x85f
 3402 07f6 16       		.uleb128 0x16
 3403 07f7 98040000 		.4byte	.LASF86
 3404 07fb 01       		.byte	0x1
 3405 07fc DF03     		.2byte	0x3df
 3406 07fe 81000000 		.4byte	0x81
 3407 0802 02       		.uleb128 0x2
 3408 0803 91       		.byte	0x91
 3409 0804 64       		.sleb128 -28
 3410 0805 16       		.uleb128 0x16
 3411 0806 1A060000 		.4byte	.LASF83
 3412 080a 01       		.byte	0x1
 3413 080b E003     		.2byte	0x3e0
 3414 080d 7A060000 		.4byte	0x67a
 3415 0811 02       		.uleb128 0x2
 3416 0812 91       		.byte	0x91
 3417 0813 60       		.sleb128 -32
 3418 0814 16       		.uleb128 0x16
 3419 0815 44050000 		.4byte	.LASF35
 3420 0819 01       		.byte	0x1
 3421 081a E103     		.2byte	0x3e1
 3422 081c 12020000 		.4byte	0x212
 3423 0820 02       		.uleb128 0x2
 3424 0821 91       		.byte	0x91
 3425 0822 5C       		.sleb128 -36
 3426 0823 17       		.uleb128 0x17
 3427 0824 72657400 		.ascii	"ret\000"
 3428 0828 01       		.byte	0x1
 3429 0829 E303     		.2byte	0x3e3
 3430 082b BC010000 		.4byte	0x1bc
 3431 082f 02       		.uleb128 0x2
 3432 0830 91       		.byte	0x91
 3433 0831 77       		.sleb128 -9
 3434 0832 17       		.uleb128 0x17
 3435 0833 726300   		.ascii	"rc\000"
 3436 0836 01       		.byte	0x1
 3437 0837 E503     		.2byte	0x3e5
 3438 0839 A1000000 		.4byte	0xa1
 3439 083d 02       		.uleb128 0x2
 3440 083e 91       		.byte	0x91
 3441 083f 68       		.sleb128 -24
 3442 0840 14       		.uleb128 0x14
 3443 0841 64030000 		.4byte	.LASF87
 3444 0845 01       		.byte	0x1
 3445 0846 E603     		.2byte	0x3e6
 3446 0848 81000000 		.4byte	0x81
 3447 084c 02       		.uleb128 0x2
 3448 084d 91       		.byte	0x91
 3449 084e 70       		.sleb128 -16
 3450 084f 14       		.uleb128 0x14
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 87


 3451 0850 12060000 		.4byte	.LASF88
 3452 0854 01       		.byte	0x1
 3453 0855 E803     		.2byte	0x3e8
 3454 0857 81000000 		.4byte	0x81
 3455 085b 02       		.uleb128 0x2
 3456 085c 91       		.byte	0x91
 3457 085d 6C       		.sleb128 -20
 3458 085e 00       		.byte	0
 3459 085f 1F       		.uleb128 0x1f
 3460 0860 6A030000 		.4byte	.LASF89
 3461 0864 01       		.byte	0x1
 3462 0865 4504     		.2byte	0x445
 3463 0867 BC010000 		.4byte	0x1bc
 3464 086b 00000000 		.4byte	.LFB11
 3465 086f 68000000 		.4byte	.LFE11-.LFB11
 3466 0873 01       		.uleb128 0x1
 3467 0874 9C       		.byte	0x9c
 3468 0875 C5080000 		.4byte	0x8c5
 3469 0879 16       		.uleb128 0x16
 3470 087a 98040000 		.4byte	.LASF86
 3471 087e 01       		.byte	0x1
 3472 087f 4504     		.2byte	0x445
 3473 0881 81000000 		.4byte	0x81
 3474 0885 02       		.uleb128 0x2
 3475 0886 91       		.byte	0x91
 3476 0887 6C       		.sleb128 -20
 3477 0888 16       		.uleb128 0x16
 3478 0889 6F020000 		.4byte	.LASF90
 3479 088d 01       		.byte	0x1
 3480 088e 4604     		.2byte	0x446
 3481 0890 81000000 		.4byte	0x81
 3482 0894 02       		.uleb128 0x2
 3483 0895 91       		.byte	0x91
 3484 0896 68       		.sleb128 -24
 3485 0897 16       		.uleb128 0x16
 3486 0898 44050000 		.4byte	.LASF35
 3487 089c 01       		.byte	0x1
 3488 089d 4704     		.2byte	0x447
 3489 089f 12020000 		.4byte	0x212
 3490 08a3 02       		.uleb128 0x2
 3491 08a4 91       		.byte	0x91
 3492 08a5 64       		.sleb128 -28
 3493 08a6 14       		.uleb128 0x14
 3494 08a7 2E060000 		.4byte	.LASF64
 3495 08ab 01       		.byte	0x1
 3496 08ac 4904     		.2byte	0x449
 3497 08ae 81000000 		.4byte	0x81
 3498 08b2 02       		.uleb128 0x2
 3499 08b3 91       		.byte	0x91
 3500 08b4 70       		.sleb128 -16
 3501 08b5 17       		.uleb128 0x17
 3502 08b6 72657400 		.ascii	"ret\000"
 3503 08ba 01       		.byte	0x1
 3504 08bb 4A04     		.2byte	0x44a
 3505 08bd BC010000 		.4byte	0x1bc
 3506 08c1 02       		.uleb128 0x2
 3507 08c2 91       		.byte	0x91
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 88


 3508 08c3 77       		.sleb128 -9
 3509 08c4 00       		.byte	0
 3510 08c5 1F       		.uleb128 0x1f
 3511 08c6 D9020000 		.4byte	.LASF91
 3512 08ca 01       		.byte	0x1
 3513 08cb B904     		.2byte	0x4b9
 3514 08cd BC010000 		.4byte	0x1bc
 3515 08d1 00000000 		.4byte	.LFB12
 3516 08d5 F6000000 		.4byte	.LFE12-.LFB12
 3517 08d9 01       		.uleb128 0x1
 3518 08da 9C       		.byte	0x9c
 3519 08db 5D090000 		.4byte	0x95d
 3520 08df 16       		.uleb128 0x16
 3521 08e0 2E050000 		.4byte	.LASF55
 3522 08e4 01       		.byte	0x1
 3523 08e5 B904     		.2byte	0x4b9
 3524 08e7 81000000 		.4byte	0x81
 3525 08eb 03       		.uleb128 0x3
 3526 08ec 91       		.byte	0x91
 3527 08ed E47D     		.sleb128 -284
 3528 08ef 16       		.uleb128 0x16
 3529 08f0 40000000 		.4byte	.LASF92
 3530 08f4 01       		.byte	0x1
 3531 08f5 BA04     		.2byte	0x4ba
 3532 08f7 81000000 		.4byte	0x81
 3533 08fb 03       		.uleb128 0x3
 3534 08fc 91       		.byte	0x91
 3535 08fd E07D     		.sleb128 -288
 3536 08ff 16       		.uleb128 0x16
 3537 0900 FA040000 		.4byte	.LASF93
 3538 0904 01       		.byte	0x1
 3539 0905 BB04     		.2byte	0x4bb
 3540 0907 81000000 		.4byte	0x81
 3541 090b 03       		.uleb128 0x3
 3542 090c 91       		.byte	0x91
 3543 090d DC7D     		.sleb128 -292
 3544 090f 16       		.uleb128 0x16
 3545 0910 9F020000 		.4byte	.LASF94
 3546 0914 01       		.byte	0x1
 3547 0915 BC04     		.2byte	0x4bc
 3548 0917 81000000 		.4byte	0x81
 3549 091b 03       		.uleb128 0x3
 3550 091c 91       		.byte	0x91
 3551 091d D87D     		.sleb128 -296
 3552 091f 16       		.uleb128 0x16
 3553 0920 44050000 		.4byte	.LASF35
 3554 0924 01       		.byte	0x1
 3555 0925 BD04     		.2byte	0x4bd
 3556 0927 12020000 		.4byte	0x212
 3557 092b 02       		.uleb128 0x2
 3558 092c 91       		.byte	0x91
 3559 092d 00       		.sleb128 0
 3560 092e 17       		.uleb128 0x17
 3561 092f 72657400 		.ascii	"ret\000"
 3562 0933 01       		.byte	0x1
 3563 0934 BF04     		.2byte	0x4bf
 3564 0936 BC010000 		.4byte	0x1bc
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 89


 3565 093a 02       		.uleb128 0x2
 3566 093b 91       		.byte	0x91
 3567 093c 6F       		.sleb128 -17
 3568 093d 14       		.uleb128 0x14
 3569 093e EB040000 		.4byte	.LASF62
 3570 0942 01       		.byte	0x1
 3571 0943 C004     		.2byte	0x4c0
 3572 0945 32050000 		.4byte	0x532
 3573 0949 03       		.uleb128 0x3
 3574 094a 91       		.byte	0x91
 3575 094b E87D     		.sleb128 -280
 3576 094d 14       		.uleb128 0x14
 3577 094e 04050000 		.4byte	.LASF95
 3578 0952 01       		.byte	0x1
 3579 0953 C304     		.2byte	0x4c3
 3580 0955 81000000 		.4byte	0x81
 3581 0959 02       		.uleb128 0x2
 3582 095a 91       		.byte	0x91
 3583 095b 68       		.sleb128 -24
 3584 095c 00       		.byte	0
 3585 095d 1D       		.uleb128 0x1d
 3586 095e BA020000 		.4byte	.LASF96
 3587 0962 01       		.byte	0x1
 3588 0963 0D05     		.2byte	0x50d
 3589 0965 81000000 		.4byte	0x81
 3590 0969 00000000 		.4byte	.LFB13
 3591 096d FA000000 		.4byte	.LFE13-.LFB13
 3592 0971 01       		.uleb128 0x1
 3593 0972 9C       		.byte	0x9c
 3594 0973 E1090000 		.4byte	0x9e1
 3595 0977 16       		.uleb128 0x16
 3596 0978 2E050000 		.4byte	.LASF55
 3597 097c 01       		.byte	0x1
 3598 097d 0D05     		.2byte	0x50d
 3599 097f 7A060000 		.4byte	0x67a
 3600 0983 02       		.uleb128 0x2
 3601 0984 91       		.byte	0x91
 3602 0985 6C       		.sleb128 -20
 3603 0986 16       		.uleb128 0x16
 3604 0987 3C040000 		.4byte	.LASF56
 3605 098b 01       		.byte	0x1
 3606 098c 0E05     		.2byte	0x50e
 3607 098e 7A060000 		.4byte	0x67a
 3608 0992 02       		.uleb128 0x2
 3609 0993 91       		.byte	0x91
 3610 0994 68       		.sleb128 -24
 3611 0995 16       		.uleb128 0x16
 3612 0996 3D050000 		.4byte	.LASF97
 3613 099a 01       		.byte	0x1
 3614 099b 0F05     		.2byte	0x50f
 3615 099d 7A060000 		.4byte	0x67a
 3616 09a1 02       		.uleb128 0x2
 3617 09a2 91       		.byte	0x91
 3618 09a3 64       		.sleb128 -28
 3619 09a4 16       		.uleb128 0x16
 3620 09a5 48000000 		.4byte	.LASF98
 3621 09a9 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 90


 3622 09aa 1005     		.2byte	0x510
 3623 09ac 81000000 		.4byte	0x81
 3624 09b0 02       		.uleb128 0x2
 3625 09b1 91       		.byte	0x91
 3626 09b2 60       		.sleb128 -32
 3627 09b3 16       		.uleb128 0x16
 3628 09b4 0B010000 		.4byte	.LASF38
 3629 09b8 01       		.byte	0x1
 3630 09b9 1105     		.2byte	0x511
 3631 09bb 81000000 		.4byte	0x81
 3632 09bf 02       		.uleb128 0x2
 3633 09c0 91       		.byte	0x91
 3634 09c1 00       		.sleb128 0
 3635 09c2 1E       		.uleb128 0x1e
 3636 09c3 6C656E00 		.ascii	"len\000"
 3637 09c7 01       		.byte	0x1
 3638 09c8 1205     		.2byte	0x512
 3639 09ca 81000000 		.4byte	0x81
 3640 09ce 02       		.uleb128 0x2
 3641 09cf 91       		.byte	0x91
 3642 09d0 04       		.sleb128 4
 3643 09d1 14       		.uleb128 0x14
 3644 09d2 38050000 		.4byte	.LASF99
 3645 09d6 01       		.byte	0x1
 3646 09d7 1405     		.2byte	0x514
 3647 09d9 81000000 		.4byte	0x81
 3648 09dd 02       		.uleb128 0x2
 3649 09de 91       		.byte	0x91
 3650 09df 74       		.sleb128 -12
 3651 09e0 00       		.byte	0
 3652 09e1 20       		.uleb128 0x20
 3653 09e2 10040000 		.4byte	.LASF100
 3654 09e6 01       		.byte	0x1
 3655 09e7 5405     		.2byte	0x554
 3656 09e9 BC010000 		.4byte	0x1bc
 3657 09ed 00000000 		.4byte	.LFB14
 3658 09f1 FE000000 		.4byte	.LFE14-.LFB14
 3659 09f5 01       		.uleb128 0x1
 3660 09f6 9C       		.byte	0x9c
 3661 09f7 16       		.uleb128 0x16
 3662 09f8 44050000 		.4byte	.LASF35
 3663 09fc 01       		.byte	0x1
 3664 09fd 5405     		.2byte	0x554
 3665 09ff 12020000 		.4byte	0x212
 3666 0a03 03       		.uleb128 0x3
 3667 0a04 91       		.byte	0x91
 3668 0a05 DC7D     		.sleb128 -292
 3669 0a07 17       		.uleb128 0x17
 3670 0a08 6900     		.ascii	"i\000"
 3671 0a0a 01       		.byte	0x1
 3672 0a0b 5605     		.2byte	0x556
 3673 0a0d 81000000 		.4byte	0x81
 3674 0a11 02       		.uleb128 0x2
 3675 0a12 91       		.byte	0x91
 3676 0a13 74       		.sleb128 -12
 3677 0a14 14       		.uleb128 0x14
 3678 0a15 A3050000 		.4byte	.LASF49
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 91


 3679 0a19 01       		.byte	0x1
 3680 0a1a 5705     		.2byte	0x557
 3681 0a1c 81000000 		.4byte	0x81
 3682 0a20 02       		.uleb128 0x2
 3683 0a21 91       		.byte	0x91
 3684 0a22 64       		.sleb128 -28
 3685 0a23 14       		.uleb128 0x14
 3686 0a24 EB040000 		.4byte	.LASF62
 3687 0a28 01       		.byte	0x1
 3688 0a29 5805     		.2byte	0x558
 3689 0a2b 32050000 		.4byte	0x532
 3690 0a2f 03       		.uleb128 0x3
 3691 0a30 91       		.byte	0x91
 3692 0a31 E47D     		.sleb128 -284
 3693 0a33 14       		.uleb128 0x14
 3694 0a34 29040000 		.4byte	.LASF101
 3695 0a38 01       		.byte	0x1
 3696 0a39 5905     		.2byte	0x559
 3697 0a3b 81000000 		.4byte	0x81
 3698 0a3f 03       		.uleb128 0x3
 3699 0a40 91       		.byte	0x91
 3700 0a41 E07D     		.sleb128 -288
 3701 0a43 14       		.uleb128 0x14
 3702 0a44 5A050000 		.4byte	.LASF63
 3703 0a48 01       		.byte	0x1
 3704 0a49 5A05     		.2byte	0x55a
 3705 0a4b 81000000 		.4byte	0x81
 3706 0a4f 02       		.uleb128 0x2
 3707 0a50 91       		.byte	0x91
 3708 0a51 68       		.sleb128 -24
 3709 0a52 14       		.uleb128 0x14
 3710 0a53 DF030000 		.4byte	.LASF51
 3711 0a57 01       		.byte	0x1
 3712 0a58 5C05     		.2byte	0x55c
 3713 0a5a 81000000 		.4byte	0x81
 3714 0a5e 02       		.uleb128 0x2
 3715 0a5f 91       		.byte	0x91
 3716 0a60 70       		.sleb128 -16
 3717 0a61 17       		.uleb128 0x17
 3718 0a62 72657400 		.ascii	"ret\000"
 3719 0a66 01       		.byte	0x1
 3720 0a67 5D05     		.2byte	0x55d
 3721 0a69 BC010000 		.4byte	0x1bc
 3722 0a6d 02       		.uleb128 0x2
 3723 0a6e 91       		.byte	0x91
 3724 0a6f 6F       		.sleb128 -17
 3725 0a70 00       		.byte	0
 3726 0a71 00       		.byte	0
 3727              		.section	.debug_abbrev,"",%progbits
 3728              	.Ldebug_abbrev0:
 3729 0000 01       		.uleb128 0x1
 3730 0001 11       		.uleb128 0x11
 3731 0002 01       		.byte	0x1
 3732 0003 25       		.uleb128 0x25
 3733 0004 0E       		.uleb128 0xe
 3734 0005 13       		.uleb128 0x13
 3735 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 92


 3736 0007 03       		.uleb128 0x3
 3737 0008 0E       		.uleb128 0xe
 3738 0009 1B       		.uleb128 0x1b
 3739 000a 0E       		.uleb128 0xe
 3740 000b 55       		.uleb128 0x55
 3741 000c 17       		.uleb128 0x17
 3742 000d 11       		.uleb128 0x11
 3743 000e 01       		.uleb128 0x1
 3744 000f 10       		.uleb128 0x10
 3745 0010 17       		.uleb128 0x17
 3746 0011 00       		.byte	0
 3747 0012 00       		.byte	0
 3748 0013 02       		.uleb128 0x2
 3749 0014 24       		.uleb128 0x24
 3750 0015 00       		.byte	0
 3751 0016 0B       		.uleb128 0xb
 3752 0017 0B       		.uleb128 0xb
 3753 0018 3E       		.uleb128 0x3e
 3754 0019 0B       		.uleb128 0xb
 3755 001a 03       		.uleb128 0x3
 3756 001b 0E       		.uleb128 0xe
 3757 001c 00       		.byte	0
 3758 001d 00       		.byte	0
 3759 001e 03       		.uleb128 0x3
 3760 001f 24       		.uleb128 0x24
 3761 0020 00       		.byte	0
 3762 0021 0B       		.uleb128 0xb
 3763 0022 0B       		.uleb128 0xb
 3764 0023 3E       		.uleb128 0x3e
 3765 0024 0B       		.uleb128 0xb
 3766 0025 03       		.uleb128 0x3
 3767 0026 08       		.uleb128 0x8
 3768 0027 00       		.byte	0
 3769 0028 00       		.byte	0
 3770 0029 04       		.uleb128 0x4
 3771 002a 16       		.uleb128 0x16
 3772 002b 00       		.byte	0
 3773 002c 03       		.uleb128 0x3
 3774 002d 0E       		.uleb128 0xe
 3775 002e 3A       		.uleb128 0x3a
 3776 002f 0B       		.uleb128 0xb
 3777 0030 3B       		.uleb128 0x3b
 3778 0031 0B       		.uleb128 0xb
 3779 0032 49       		.uleb128 0x49
 3780 0033 13       		.uleb128 0x13
 3781 0034 00       		.byte	0
 3782 0035 00       		.byte	0
 3783 0036 05       		.uleb128 0x5
 3784 0037 16       		.uleb128 0x16
 3785 0038 00       		.byte	0
 3786 0039 03       		.uleb128 0x3
 3787 003a 0E       		.uleb128 0xe
 3788 003b 3A       		.uleb128 0x3a
 3789 003c 0B       		.uleb128 0xb
 3790 003d 3B       		.uleb128 0x3b
 3791 003e 05       		.uleb128 0x5
 3792 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 93


 3793 0040 13       		.uleb128 0x13
 3794 0041 00       		.byte	0
 3795 0042 00       		.byte	0
 3796 0043 06       		.uleb128 0x6
 3797 0044 0F       		.uleb128 0xf
 3798 0045 00       		.byte	0
 3799 0046 0B       		.uleb128 0xb
 3800 0047 0B       		.uleb128 0xb
 3801 0048 00       		.byte	0
 3802 0049 00       		.byte	0
 3803 004a 07       		.uleb128 0x7
 3804 004b 13       		.uleb128 0x13
 3805 004c 01       		.byte	0x1
 3806 004d 0B       		.uleb128 0xb
 3807 004e 0B       		.uleb128 0xb
 3808 004f 3A       		.uleb128 0x3a
 3809 0050 0B       		.uleb128 0xb
 3810 0051 3B       		.uleb128 0x3b
 3811 0052 0B       		.uleb128 0xb
 3812 0053 01       		.uleb128 0x1
 3813 0054 13       		.uleb128 0x13
 3814 0055 00       		.byte	0
 3815 0056 00       		.byte	0
 3816 0057 08       		.uleb128 0x8
 3817 0058 0D       		.uleb128 0xd
 3818 0059 00       		.byte	0
 3819 005a 03       		.uleb128 0x3
 3820 005b 0E       		.uleb128 0xe
 3821 005c 3A       		.uleb128 0x3a
 3822 005d 0B       		.uleb128 0xb
 3823 005e 3B       		.uleb128 0x3b
 3824 005f 0B       		.uleb128 0xb
 3825 0060 49       		.uleb128 0x49
 3826 0061 13       		.uleb128 0x13
 3827 0062 38       		.uleb128 0x38
 3828 0063 0B       		.uleb128 0xb
 3829 0064 00       		.byte	0
 3830 0065 00       		.byte	0
 3831 0066 09       		.uleb128 0x9
 3832 0067 0D       		.uleb128 0xd
 3833 0068 00       		.byte	0
 3834 0069 03       		.uleb128 0x3
 3835 006a 0E       		.uleb128 0xe
 3836 006b 3A       		.uleb128 0x3a
 3837 006c 0B       		.uleb128 0xb
 3838 006d 3B       		.uleb128 0x3b
 3839 006e 05       		.uleb128 0x5
 3840 006f 49       		.uleb128 0x49
 3841 0070 13       		.uleb128 0x13
 3842 0071 38       		.uleb128 0x38
 3843 0072 0B       		.uleb128 0xb
 3844 0073 00       		.byte	0
 3845 0074 00       		.byte	0
 3846 0075 0A       		.uleb128 0xa
 3847 0076 13       		.uleb128 0x13
 3848 0077 01       		.byte	0x1
 3849 0078 0B       		.uleb128 0xb
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 94


 3850 0079 0B       		.uleb128 0xb
 3851 007a 3A       		.uleb128 0x3a
 3852 007b 0B       		.uleb128 0xb
 3853 007c 3B       		.uleb128 0x3b
 3854 007d 05       		.uleb128 0x5
 3855 007e 01       		.uleb128 0x1
 3856 007f 13       		.uleb128 0x13
 3857 0080 00       		.byte	0
 3858 0081 00       		.byte	0
 3859 0082 0B       		.uleb128 0xb
 3860 0083 04       		.uleb128 0x4
 3861 0084 01       		.byte	0x1
 3862 0085 0B       		.uleb128 0xb
 3863 0086 0B       		.uleb128 0xb
 3864 0087 49       		.uleb128 0x49
 3865 0088 13       		.uleb128 0x13
 3866 0089 3A       		.uleb128 0x3a
 3867 008a 0B       		.uleb128 0xb
 3868 008b 3B       		.uleb128 0x3b
 3869 008c 05       		.uleb128 0x5
 3870 008d 01       		.uleb128 0x1
 3871 008e 13       		.uleb128 0x13
 3872 008f 00       		.byte	0
 3873 0090 00       		.byte	0
 3874 0091 0C       		.uleb128 0xc
 3875 0092 28       		.uleb128 0x28
 3876 0093 00       		.byte	0
 3877 0094 03       		.uleb128 0x3
 3878 0095 0E       		.uleb128 0xe
 3879 0096 1C       		.uleb128 0x1c
 3880 0097 0B       		.uleb128 0xb
 3881 0098 00       		.byte	0
 3882 0099 00       		.byte	0
 3883 009a 0D       		.uleb128 0xd
 3884 009b 2E       		.uleb128 0x2e
 3885 009c 01       		.byte	0x1
 3886 009d 3F       		.uleb128 0x3f
 3887 009e 19       		.uleb128 0x19
 3888 009f 03       		.uleb128 0x3
 3889 00a0 0E       		.uleb128 0xe
 3890 00a1 3A       		.uleb128 0x3a
 3891 00a2 0B       		.uleb128 0xb
 3892 00a3 3B       		.uleb128 0x3b
 3893 00a4 0B       		.uleb128 0xb
 3894 00a5 27       		.uleb128 0x27
 3895 00a6 19       		.uleb128 0x19
 3896 00a7 49       		.uleb128 0x49
 3897 00a8 13       		.uleb128 0x13
 3898 00a9 11       		.uleb128 0x11
 3899 00aa 01       		.uleb128 0x1
 3900 00ab 12       		.uleb128 0x12
 3901 00ac 06       		.uleb128 0x6
 3902 00ad 40       		.uleb128 0x40
 3903 00ae 18       		.uleb128 0x18
 3904 00af 9642     		.uleb128 0x2116
 3905 00b1 19       		.uleb128 0x19
 3906 00b2 01       		.uleb128 0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 95


 3907 00b3 13       		.uleb128 0x13
 3908 00b4 00       		.byte	0
 3909 00b5 00       		.byte	0
 3910 00b6 0E       		.uleb128 0xe
 3911 00b7 05       		.uleb128 0x5
 3912 00b8 00       		.byte	0
 3913 00b9 03       		.uleb128 0x3
 3914 00ba 0E       		.uleb128 0xe
 3915 00bb 3A       		.uleb128 0x3a
 3916 00bc 0B       		.uleb128 0xb
 3917 00bd 3B       		.uleb128 0x3b
 3918 00be 0B       		.uleb128 0xb
 3919 00bf 49       		.uleb128 0x49
 3920 00c0 13       		.uleb128 0x13
 3921 00c1 02       		.uleb128 0x2
 3922 00c2 18       		.uleb128 0x18
 3923 00c3 00       		.byte	0
 3924 00c4 00       		.byte	0
 3925 00c5 0F       		.uleb128 0xf
 3926 00c6 34       		.uleb128 0x34
 3927 00c7 00       		.byte	0
 3928 00c8 03       		.uleb128 0x3
 3929 00c9 08       		.uleb128 0x8
 3930 00ca 3A       		.uleb128 0x3a
 3931 00cb 0B       		.uleb128 0xb
 3932 00cc 3B       		.uleb128 0x3b
 3933 00cd 0B       		.uleb128 0xb
 3934 00ce 49       		.uleb128 0x49
 3935 00cf 13       		.uleb128 0x13
 3936 00d0 02       		.uleb128 0x2
 3937 00d1 18       		.uleb128 0x18
 3938 00d2 00       		.byte	0
 3939 00d3 00       		.byte	0
 3940 00d4 10       		.uleb128 0x10
 3941 00d5 0F       		.uleb128 0xf
 3942 00d6 00       		.byte	0
 3943 00d7 0B       		.uleb128 0xb
 3944 00d8 0B       		.uleb128 0xb
 3945 00d9 49       		.uleb128 0x49
 3946 00da 13       		.uleb128 0x13
 3947 00db 00       		.byte	0
 3948 00dc 00       		.byte	0
 3949 00dd 11       		.uleb128 0x11
 3950 00de 34       		.uleb128 0x34
 3951 00df 00       		.byte	0
 3952 00e0 03       		.uleb128 0x3
 3953 00e1 0E       		.uleb128 0xe
 3954 00e2 3A       		.uleb128 0x3a
 3955 00e3 0B       		.uleb128 0xb
 3956 00e4 3B       		.uleb128 0x3b
 3957 00e5 0B       		.uleb128 0xb
 3958 00e6 49       		.uleb128 0x49
 3959 00e7 13       		.uleb128 0x13
 3960 00e8 02       		.uleb128 0x2
 3961 00e9 18       		.uleb128 0x18
 3962 00ea 00       		.byte	0
 3963 00eb 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 96


 3964 00ec 12       		.uleb128 0x12
 3965 00ed 0B       		.uleb128 0xb
 3966 00ee 01       		.byte	0x1
 3967 00ef 11       		.uleb128 0x11
 3968 00f0 01       		.uleb128 0x1
 3969 00f1 12       		.uleb128 0x12
 3970 00f2 06       		.uleb128 0x6
 3971 00f3 00       		.byte	0
 3972 00f4 00       		.byte	0
 3973 00f5 13       		.uleb128 0x13
 3974 00f6 0B       		.uleb128 0xb
 3975 00f7 01       		.byte	0x1
 3976 00f8 11       		.uleb128 0x11
 3977 00f9 01       		.uleb128 0x1
 3978 00fa 12       		.uleb128 0x12
 3979 00fb 06       		.uleb128 0x6
 3980 00fc 01       		.uleb128 0x1
 3981 00fd 13       		.uleb128 0x13
 3982 00fe 00       		.byte	0
 3983 00ff 00       		.byte	0
 3984 0100 14       		.uleb128 0x14
 3985 0101 34       		.uleb128 0x34
 3986 0102 00       		.byte	0
 3987 0103 03       		.uleb128 0x3
 3988 0104 0E       		.uleb128 0xe
 3989 0105 3A       		.uleb128 0x3a
 3990 0106 0B       		.uleb128 0xb
 3991 0107 3B       		.uleb128 0x3b
 3992 0108 05       		.uleb128 0x5
 3993 0109 49       		.uleb128 0x49
 3994 010a 13       		.uleb128 0x13
 3995 010b 02       		.uleb128 0x2
 3996 010c 18       		.uleb128 0x18
 3997 010d 00       		.byte	0
 3998 010e 00       		.byte	0
 3999 010f 15       		.uleb128 0x15
 4000 0110 2E       		.uleb128 0x2e
 4001 0111 01       		.byte	0x1
 4002 0112 3F       		.uleb128 0x3f
 4003 0113 19       		.uleb128 0x19
 4004 0114 03       		.uleb128 0x3
 4005 0115 0E       		.uleb128 0xe
 4006 0116 3A       		.uleb128 0x3a
 4007 0117 0B       		.uleb128 0xb
 4008 0118 3B       		.uleb128 0x3b
 4009 0119 05       		.uleb128 0x5
 4010 011a 27       		.uleb128 0x27
 4011 011b 19       		.uleb128 0x19
 4012 011c 49       		.uleb128 0x49
 4013 011d 13       		.uleb128 0x13
 4014 011e 11       		.uleb128 0x11
 4015 011f 01       		.uleb128 0x1
 4016 0120 12       		.uleb128 0x12
 4017 0121 06       		.uleb128 0x6
 4018 0122 40       		.uleb128 0x40
 4019 0123 18       		.uleb128 0x18
 4020 0124 9642     		.uleb128 0x2116
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 97


 4021 0126 19       		.uleb128 0x19
 4022 0127 01       		.uleb128 0x1
 4023 0128 13       		.uleb128 0x13
 4024 0129 00       		.byte	0
 4025 012a 00       		.byte	0
 4026 012b 16       		.uleb128 0x16
 4027 012c 05       		.uleb128 0x5
 4028 012d 00       		.byte	0
 4029 012e 03       		.uleb128 0x3
 4030 012f 0E       		.uleb128 0xe
 4031 0130 3A       		.uleb128 0x3a
 4032 0131 0B       		.uleb128 0xb
 4033 0132 3B       		.uleb128 0x3b
 4034 0133 05       		.uleb128 0x5
 4035 0134 49       		.uleb128 0x49
 4036 0135 13       		.uleb128 0x13
 4037 0136 02       		.uleb128 0x2
 4038 0137 18       		.uleb128 0x18
 4039 0138 00       		.byte	0
 4040 0139 00       		.byte	0
 4041 013a 17       		.uleb128 0x17
 4042 013b 34       		.uleb128 0x34
 4043 013c 00       		.byte	0
 4044 013d 03       		.uleb128 0x3
 4045 013e 08       		.uleb128 0x8
 4046 013f 3A       		.uleb128 0x3a
 4047 0140 0B       		.uleb128 0xb
 4048 0141 3B       		.uleb128 0x3b
 4049 0142 05       		.uleb128 0x5
 4050 0143 49       		.uleb128 0x49
 4051 0144 13       		.uleb128 0x13
 4052 0145 02       		.uleb128 0x2
 4053 0146 18       		.uleb128 0x18
 4054 0147 00       		.byte	0
 4055 0148 00       		.byte	0
 4056 0149 18       		.uleb128 0x18
 4057 014a 0B       		.uleb128 0xb
 4058 014b 01       		.byte	0x1
 4059 014c 55       		.uleb128 0x55
 4060 014d 17       		.uleb128 0x17
 4061 014e 00       		.byte	0
 4062 014f 00       		.byte	0
 4063 0150 19       		.uleb128 0x19
 4064 0151 01       		.uleb128 0x1
 4065 0152 01       		.byte	0x1
 4066 0153 49       		.uleb128 0x49
 4067 0154 13       		.uleb128 0x13
 4068 0155 01       		.uleb128 0x1
 4069 0156 13       		.uleb128 0x13
 4070 0157 00       		.byte	0
 4071 0158 00       		.byte	0
 4072 0159 1A       		.uleb128 0x1a
 4073 015a 21       		.uleb128 0x21
 4074 015b 00       		.byte	0
 4075 015c 49       		.uleb128 0x49
 4076 015d 13       		.uleb128 0x13
 4077 015e 2F       		.uleb128 0x2f
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 98


 4078 015f 0B       		.uleb128 0xb
 4079 0160 00       		.byte	0
 4080 0161 00       		.byte	0
 4081 0162 1B       		.uleb128 0x1b
 4082 0163 2E       		.uleb128 0x2e
 4083 0164 01       		.byte	0x1
 4084 0165 3F       		.uleb128 0x3f
 4085 0166 19       		.uleb128 0x19
 4086 0167 03       		.uleb128 0x3
 4087 0168 0E       		.uleb128 0xe
 4088 0169 3A       		.uleb128 0x3a
 4089 016a 0B       		.uleb128 0xb
 4090 016b 3B       		.uleb128 0x3b
 4091 016c 05       		.uleb128 0x5
 4092 016d 27       		.uleb128 0x27
 4093 016e 19       		.uleb128 0x19
 4094 016f 49       		.uleb128 0x49
 4095 0170 13       		.uleb128 0x13
 4096 0171 11       		.uleb128 0x11
 4097 0172 01       		.uleb128 0x1
 4098 0173 12       		.uleb128 0x12
 4099 0174 06       		.uleb128 0x6
 4100 0175 40       		.uleb128 0x40
 4101 0176 18       		.uleb128 0x18
 4102 0177 9742     		.uleb128 0x2117
 4103 0179 19       		.uleb128 0x19
 4104 017a 01       		.uleb128 0x1
 4105 017b 13       		.uleb128 0x13
 4106 017c 00       		.byte	0
 4107 017d 00       		.byte	0
 4108 017e 1C       		.uleb128 0x1c
 4109 017f 2E       		.uleb128 0x2e
 4110 0180 01       		.byte	0x1
 4111 0181 03       		.uleb128 0x3
 4112 0182 0E       		.uleb128 0xe
 4113 0183 3A       		.uleb128 0x3a
 4114 0184 0B       		.uleb128 0xb
 4115 0185 3B       		.uleb128 0x3b
 4116 0186 05       		.uleb128 0x5
 4117 0187 27       		.uleb128 0x27
 4118 0188 19       		.uleb128 0x19
 4119 0189 11       		.uleb128 0x11
 4120 018a 01       		.uleb128 0x1
 4121 018b 12       		.uleb128 0x12
 4122 018c 06       		.uleb128 0x6
 4123 018d 40       		.uleb128 0x40
 4124 018e 18       		.uleb128 0x18
 4125 018f 9742     		.uleb128 0x2117
 4126 0191 19       		.uleb128 0x19
 4127 0192 01       		.uleb128 0x1
 4128 0193 13       		.uleb128 0x13
 4129 0194 00       		.byte	0
 4130 0195 00       		.byte	0
 4131 0196 1D       		.uleb128 0x1d
 4132 0197 2E       		.uleb128 0x2e
 4133 0198 01       		.byte	0x1
 4134 0199 03       		.uleb128 0x3
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 99


 4135 019a 0E       		.uleb128 0xe
 4136 019b 3A       		.uleb128 0x3a
 4137 019c 0B       		.uleb128 0xb
 4138 019d 3B       		.uleb128 0x3b
 4139 019e 05       		.uleb128 0x5
 4140 019f 27       		.uleb128 0x27
 4141 01a0 19       		.uleb128 0x19
 4142 01a1 49       		.uleb128 0x49
 4143 01a2 13       		.uleb128 0x13
 4144 01a3 11       		.uleb128 0x11
 4145 01a4 01       		.uleb128 0x1
 4146 01a5 12       		.uleb128 0x12
 4147 01a6 06       		.uleb128 0x6
 4148 01a7 40       		.uleb128 0x40
 4149 01a8 18       		.uleb128 0x18
 4150 01a9 9742     		.uleb128 0x2117
 4151 01ab 19       		.uleb128 0x19
 4152 01ac 01       		.uleb128 0x1
 4153 01ad 13       		.uleb128 0x13
 4154 01ae 00       		.byte	0
 4155 01af 00       		.byte	0
 4156 01b0 1E       		.uleb128 0x1e
 4157 01b1 05       		.uleb128 0x5
 4158 01b2 00       		.byte	0
 4159 01b3 03       		.uleb128 0x3
 4160 01b4 08       		.uleb128 0x8
 4161 01b5 3A       		.uleb128 0x3a
 4162 01b6 0B       		.uleb128 0xb
 4163 01b7 3B       		.uleb128 0x3b
 4164 01b8 05       		.uleb128 0x5
 4165 01b9 49       		.uleb128 0x49
 4166 01ba 13       		.uleb128 0x13
 4167 01bb 02       		.uleb128 0x2
 4168 01bc 18       		.uleb128 0x18
 4169 01bd 00       		.byte	0
 4170 01be 00       		.byte	0
 4171 01bf 1F       		.uleb128 0x1f
 4172 01c0 2E       		.uleb128 0x2e
 4173 01c1 01       		.byte	0x1
 4174 01c2 03       		.uleb128 0x3
 4175 01c3 0E       		.uleb128 0xe
 4176 01c4 3A       		.uleb128 0x3a
 4177 01c5 0B       		.uleb128 0xb
 4178 01c6 3B       		.uleb128 0x3b
 4179 01c7 05       		.uleb128 0x5
 4180 01c8 27       		.uleb128 0x27
 4181 01c9 19       		.uleb128 0x19
 4182 01ca 49       		.uleb128 0x49
 4183 01cb 13       		.uleb128 0x13
 4184 01cc 11       		.uleb128 0x11
 4185 01cd 01       		.uleb128 0x1
 4186 01ce 12       		.uleb128 0x12
 4187 01cf 06       		.uleb128 0x6
 4188 01d0 40       		.uleb128 0x40
 4189 01d1 18       		.uleb128 0x18
 4190 01d2 9642     		.uleb128 0x2116
 4191 01d4 19       		.uleb128 0x19
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 100


 4192 01d5 01       		.uleb128 0x1
 4193 01d6 13       		.uleb128 0x13
 4194 01d7 00       		.byte	0
 4195 01d8 00       		.byte	0
 4196 01d9 20       		.uleb128 0x20
 4197 01da 2E       		.uleb128 0x2e
 4198 01db 01       		.byte	0x1
 4199 01dc 03       		.uleb128 0x3
 4200 01dd 0E       		.uleb128 0xe
 4201 01de 3A       		.uleb128 0x3a
 4202 01df 0B       		.uleb128 0xb
 4203 01e0 3B       		.uleb128 0x3b
 4204 01e1 05       		.uleb128 0x5
 4205 01e2 27       		.uleb128 0x27
 4206 01e3 19       		.uleb128 0x19
 4207 01e4 49       		.uleb128 0x49
 4208 01e5 13       		.uleb128 0x13
 4209 01e6 11       		.uleb128 0x11
 4210 01e7 01       		.uleb128 0x1
 4211 01e8 12       		.uleb128 0x12
 4212 01e9 06       		.uleb128 0x6
 4213 01ea 40       		.uleb128 0x40
 4214 01eb 18       		.uleb128 0x18
 4215 01ec 9642     		.uleb128 0x2116
 4216 01ee 19       		.uleb128 0x19
 4217 01ef 00       		.byte	0
 4218 01f0 00       		.byte	0
 4219 01f1 00       		.byte	0
 4220              		.section	.debug_aranges,"",%progbits
 4221 0000 8C000000 		.4byte	0x8c
 4222 0004 0200     		.2byte	0x2
 4223 0006 00000000 		.4byte	.Ldebug_info0
 4224 000a 04       		.byte	0x4
 4225 000b 00       		.byte	0
 4226 000c 0000     		.2byte	0
 4227 000e 0000     		.2byte	0
 4228 0010 00000000 		.4byte	.LFB0
 4229 0014 DE000000 		.4byte	.LFE0-.LFB0
 4230 0018 00000000 		.4byte	.LFB1
 4231 001c 0A030000 		.4byte	.LFE1-.LFB1
 4232 0020 00000000 		.4byte	.LFB2
 4233 0024 4C030000 		.4byte	.LFE2-.LFB2
 4234 0028 00000000 		.4byte	.LFB3
 4235 002c E8000000 		.4byte	.LFE3-.LFB3
 4236 0030 00000000 		.4byte	.LFB4
 4237 0034 18000000 		.4byte	.LFE4-.LFB4
 4238 0038 00000000 		.4byte	.LFB5
 4239 003c 6C000000 		.4byte	.LFE5-.LFB5
 4240 0040 00000000 		.4byte	.LFB6
 4241 0044 40000000 		.4byte	.LFE6-.LFB6
 4242 0048 00000000 		.4byte	.LFB7
 4243 004c B2000000 		.4byte	.LFE7-.LFB7
 4244 0050 00000000 		.4byte	.LFB8
 4245 0054 6C000000 		.4byte	.LFE8-.LFB8
 4246 0058 00000000 		.4byte	.LFB9
 4247 005c 64000000 		.4byte	.LFE9-.LFB9
 4248 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 101


 4249 0064 4C000000 		.4byte	.LFE10-.LFB10
 4250 0068 00000000 		.4byte	.LFB11
 4251 006c 68000000 		.4byte	.LFE11-.LFB11
 4252 0070 00000000 		.4byte	.LFB12
 4253 0074 F6000000 		.4byte	.LFE12-.LFB12
 4254 0078 00000000 		.4byte	.LFB13
 4255 007c FA000000 		.4byte	.LFE13-.LFB13
 4256 0080 00000000 		.4byte	.LFB14
 4257 0084 FE000000 		.4byte	.LFE14-.LFB14
 4258 0088 00000000 		.4byte	0
 4259 008c 00000000 		.4byte	0
 4260              		.section	.debug_ranges,"",%progbits
 4261              	.Ldebug_ranges0:
 4262 0000 98000000 		.4byte	.LBB7
 4263 0004 1C030000 		.4byte	.LBE7
 4264 0008 36030000 		.4byte	.LBB9
 4265 000c 38030000 		.4byte	.LBE9
 4266 0010 00000000 		.4byte	0
 4267 0014 00000000 		.4byte	0
 4268 0018 00000000 		.4byte	.LFB0
 4269 001c DE000000 		.4byte	.LFE0
 4270 0020 00000000 		.4byte	.LFB1
 4271 0024 0A030000 		.4byte	.LFE1
 4272 0028 00000000 		.4byte	.LFB2
 4273 002c 4C030000 		.4byte	.LFE2
 4274 0030 00000000 		.4byte	.LFB3
 4275 0034 E8000000 		.4byte	.LFE3
 4276 0038 00000000 		.4byte	.LFB4
 4277 003c 18000000 		.4byte	.LFE4
 4278 0040 00000000 		.4byte	.LFB5
 4279 0044 6C000000 		.4byte	.LFE5
 4280 0048 00000000 		.4byte	.LFB6
 4281 004c 40000000 		.4byte	.LFE6
 4282 0050 00000000 		.4byte	.LFB7
 4283 0054 B2000000 		.4byte	.LFE7
 4284 0058 00000000 		.4byte	.LFB8
 4285 005c 6C000000 		.4byte	.LFE8
 4286 0060 00000000 		.4byte	.LFB9
 4287 0064 64000000 		.4byte	.LFE9
 4288 0068 00000000 		.4byte	.LFB10
 4289 006c 4C000000 		.4byte	.LFE10
 4290 0070 00000000 		.4byte	.LFB11
 4291 0074 68000000 		.4byte	.LFE11
 4292 0078 00000000 		.4byte	.LFB12
 4293 007c F6000000 		.4byte	.LFE12
 4294 0080 00000000 		.4byte	.LFB13
 4295 0084 FA000000 		.4byte	.LFE13
 4296 0088 00000000 		.4byte	.LFB14
 4297 008c FE000000 		.4byte	.LFE14
 4298 0090 00000000 		.4byte	0
 4299 0094 00000000 		.4byte	0
 4300              		.section	.debug_line,"",%progbits
 4301              	.Ldebug_line0:
 4302 0000 E5040000 		.section	.debug_str,"MS",%progbits,1
 4302      02005B00 
 4302      00000201 
 4302      FB0E0D00 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 102


 4302      01010101 
 4303              	.LASF10:
 4304 0000 75696E74 		.ascii	"uint16\000"
 4304      313600
 4305              	.LASF79:
 4306 0007 726F7754 		.ascii	"rowToWrPtr\000"
 4306      6F577250 
 4306      747200
 4307              	.LASF66:
 4308 0012 746D7044 		.ascii	"tmpData\000"
 4308      61746100 
 4309              	.LASF33:
 4310 001a 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 4310      6E5F656D 
 4310      5F656570 
 4310      726F6D5F 
 4310      73746174 
 4311              	.LASF76:
 4312 0033 656D4565 		.ascii	"emEepromAddr\000"
 4312      70726F6D 
 4312      41646472 
 4312      00
 4313              	.LASF92:
 4314 0040 64737441 		.ascii	"dstAddr\000"
 4314      64647200 
 4315              	.LASF98:
 4316 0048 726F774E 		.ascii	"rowNum\000"
 4316      756D00
 4317              	.LASF25:
 4318 004f 6E756D62 		.ascii	"numberOfRows\000"
 4318      65724F66 
 4318      526F7773 
 4318      00
 4319              	.LASF102:
 4320 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4320      43313120 
 4320      352E342E 
 4320      31203230 
 4320      31363036 
 4321 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4321      20726576 
 4321      6973696F 
 4321      6E203233 
 4321      37373135 
 4322 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4322      66756E63 
 4322      74696F6E 
 4322      2D736563 
 4322      74696F6E 
 4323              	.LASF67:
 4324 00ea 6E756D57 		.ascii	"numWrites\000"
 4324      72697465 
 4324      7300
 4325              	.LASF7:
 4326 00f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 4326      206C6F6E 
 4326      6720756E 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 103


 4326      7369676E 
 4326      65642069 
 4327              	.LASF38:
 4328 010b 61646472 		.ascii	"addr\000"
 4328      00
 4329              	.LASF18:
 4330 0110 65657072 		.ascii	"eepromSize\000"
 4330      6F6D5369 
 4330      7A6500
 4331              	.LASF6:
 4332 011b 6C6F6E67 		.ascii	"long long int\000"
 4332      206C6F6E 
 4332      6720696E 
 4332      7400
 4333              	.LASF0:
 4334 0129 7369676E 		.ascii	"signed char\000"
 4334      65642063 
 4334      68617200 
 4335              	.LASF85:
 4336 0135 57726974 		.ascii	"WriteRow\000"
 4336      65526F77 
 4336      00
 4337              	.LASF77:
 4338 013e 46696E64 		.ascii	"FindLastWrittenRow\000"
 4338      4C617374 
 4338      57726974 
 4338      74656E52 
 4338      6F7700
 4339              	.LASF32:
 4340 0151 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 4340      4D5F4545 
 4340      50524F4D 
 4340      5F575249 
 4340      54455F46 
 4341              	.LASF72:
 4342 0169 43795F45 		.ascii	"Cy_Em_EEPROM_NumWrites\000"
 4342      6D5F4545 
 4342      50524F4D 
 4342      5F4E756D 
 4342      57726974 
 4343              	.LASF4:
 4344 0180 6C6F6E67 		.ascii	"long int\000"
 4344      20696E74 
 4344      00
 4345              	.LASF22:
 4346 0189 75736572 		.ascii	"userFlashStartAddr\000"
 4346      466C6173 
 4346      68537461 
 4346      72744164 
 4346      647200
 4347              	.LASF9:
 4348 019c 75696E74 		.ascii	"uint8\000"
 4348      3800
 4349              	.LASF13:
 4350 01a2 646F7562 		.ascii	"double\000"
 4350      6C6500
 4351              	.LASF104:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 104


 4352 01a9 433A5C55 		.ascii	"C:\\Users\\rens_\\Downloads\\platooning-master\\pla"
 4352      73657273 
 4352      5C72656E 
 4352      735F5C44 
 4352      6F776E6C 
 4353 01d7 746F6F6E 		.ascii	"tooning-master\\PSoC\\Platooning\\AngleMeasurement."
 4353      696E672D 
 4353      6D617374 
 4353      65725C50 
 4353      536F435C 
 4354 0207 63796473 		.ascii	"cydsn\000"
 4354      6E00
 4355              	.LASF73:
 4356 020d 6C617374 		.ascii	"lastWrRowPtr\000"
 4356      5772526F 
 4356      77507472 
 4356      00
 4357              	.LASF11:
 4358 021a 75696E74 		.ascii	"uint32\000"
 4358      333200
 4359              	.LASF45:
 4360 0221 61637445 		.ascii	"actEepromRowNum\000"
 4360      6570726F 
 4360      6D526F77 
 4360      4E756D00 
 4361              	.LASF68:
 4362 0231 65654865 		.ascii	"eeHeaderDataOffset\000"
 4362      61646572 
 4362      44617461 
 4362      4F666673 
 4362      657400
 4363              	.LASF52:
 4364 0244 75706461 		.ascii	"updateAddrFlag\000"
 4364      74654164 
 4364      6472466C 
 4364      616700
 4365              	.LASF75:
 4366 0253 6E756D52 		.ascii	"numRows\000"
 4366      6F777300 
 4367              	.LASF54:
 4368 025b 64617461 		.ascii	"dataEndEepromRowNum\000"
 4368      456E6445 
 4368      6570726F 
 4368      6D526F77 
 4368      4E756D00 
 4369              	.LASF90:
 4370 026f 72616D42 		.ascii	"ramBuffAddr\000"
 4370      75666641 
 4370      64647200 
 4371              	.LASF20:
 4372 027b 72656475 		.ascii	"redundantCopy\000"
 4372      6E64616E 
 4372      74436F70 
 4372      7900
 4373              	.LASF70:
 4374 0289 64617461 		.ascii	"dataAddr\000"
 4374      41646472 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 105


 4374      00
 4375              	.LASF8:
 4376 0292 756E7369 		.ascii	"unsigned int\000"
 4376      676E6564 
 4376      20696E74 
 4376      00
 4377              	.LASF94:
 4378 029f 6E756D42 		.ascii	"numBytes\000"
 4378      79746573 
 4378      00
 4379              	.LASF5:
 4380 02a8 6C6F6E67 		.ascii	"long unsigned int\000"
 4380      20756E73 
 4380      69676E65 
 4380      6420696E 
 4380      7400
 4381              	.LASF96:
 4382 02ba 47657441 		.ascii	"GetAddresses\000"
 4382      64647265 
 4382      73736573 
 4382      00
 4383              	.LASF37:
 4384 02c7 43795F45 		.ascii	"Cy_Em_EEPROM_Read\000"
 4384      6D5F4545 
 4384      50524F4D 
 4384      5F526561 
 4384      6400
 4385              	.LASF91:
 4386 02d9 43686563 		.ascii	"CheckCrcAndCopy\000"
 4386      6B437263 
 4386      416E6443 
 4386      6F707900 
 4387              	.LASF57:
 4388 02e9 7372634F 		.ascii	"srcOffset\000"
 4388      66667365 
 4388      7400
 4389              	.LASF40:
 4390 02f3 73697A65 		.ascii	"size\000"
 4390      00
 4391              	.LASF3:
 4392 02f8 73686F72 		.ascii	"short unsigned int\000"
 4392      7420756E 
 4392      7369676E 
 4392      65642069 
 4392      6E7400
 4393              	.LASF61:
 4394 030b 61637445 		.ascii	"actEmEepromRowNum\000"
 4394      6D456570 
 4394      726F6D52 
 4394      6F774E75 
 4394      6D00
 4395              	.LASF80:
 4396 031d 726F7754 		.ascii	"rowToRdPtr\000"
 4396      6F526450 
 4396      747200
 4397              	.LASF65:
 4398 0328 656D4565 		.ascii	"emEepromRowRdAddr\000"
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 106


 4398      70726F6D 
 4398      526F7752 
 4398      64416464 
 4398      7200
 4399              	.LASF39:
 4400 033a 65657072 		.ascii	"eepromData\000"
 4400      6F6D4461 
 4400      746100
 4401              	.LASF44:
 4402 0345 73746172 		.ascii	"startRowAddr\000"
 4402      74526F77 
 4402      41646472 
 4402      00
 4403              	.LASF42:
 4404 0352 63757245 		.ascii	"curEepromBaseAddr\000"
 4404      6570726F 
 4404      6D426173 
 4404      65416464 
 4404      7200
 4405              	.LASF87:
 4406 0364 726F7749 		.ascii	"rowId\000"
 4406      6400
 4407              	.LASF89:
 4408 036a 45726173 		.ascii	"EraseRow\000"
 4408      65526F77 
 4408      00
 4409              	.LASF29:
 4410 0373 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 4410      4D5F4545 
 4410      50524F4D 
 4410      5F424144 
 4410      5F504152 
 4411              	.LASF30:
 4412 038a 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 4412      4D5F4545 
 4412      50524F4D 
 4412      5F424144 
 4412      5F434845 
 4413              	.LASF17:
 4414 03a4 73697A65 		.ascii	"sizetype\000"
 4414      74797065 
 4414      00
 4415              	.LASF16:
 4416 03ad 6C6F6E67 		.ascii	"long double\000"
 4416      20646F75 
 4416      626C6500 
 4417              	.LASF71:
 4418 03b9 43795F45 		.ascii	"Cy_Em_EEPROM_Erase\000"
 4418      6D5F4545 
 4418      50524F4D 
 4418      5F457261 
 4418      736500
 4419              	.LASF59:
 4420 03cc 43795F45 		.ascii	"Cy_Em_EEPROM_Write\000"
 4420      6D5F4545 
 4420      50524F4D 
 4420      5F577269 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 107


 4420      746500
 4421              	.LASF51:
 4422 03df 7365714E 		.ascii	"seqNum\000"
 4422      756D00
 4423              	.LASF27:
 4424 03e6 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 4424      74635F65 
 4424      6570726F 
 4424      6D5F636F 
 4424      6E746578 
 4425              	.LASF78:
 4426 03fe 4765744E 		.ascii	"GetNextRowToWrite\000"
 4426      65787452 
 4426      6F77546F 
 4426      57726974 
 4426      6500
 4427              	.LASF100:
 4428 0410 46696C6C 		.ascii	"FillChecksum\000"
 4428      43686563 
 4428      6B73756D 
 4428      00
 4429              	.LASF84:
 4430 041d 43686563 		.ascii	"CheckRanges\000"
 4430      6B52616E 
 4430      67657300 
 4431              	.LASF101:
 4432 0429 77724164 		.ascii	"wrAddr\000"
 4432      647200
 4433              	.LASF60:
 4434 0430 7772436E 		.ascii	"wrCnt\000"
 4434      7400
 4435              	.LASF12:
 4436 0436 666C6F61 		.ascii	"float\000"
 4436      7400
 4437              	.LASF56:
 4438 043c 656E6441 		.ascii	"endAddr\000"
 4438      64647200 
 4439              	.LASF31:
 4440 0444 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 4440      4D5F4545 
 4440      50524F4D 
 4440      5F424144 
 4440      5F444154 
 4441              	.LASF24:
 4442 045a 776C456E 		.ascii	"wlEndAddr\000"
 4442      64416464 
 4442      7200
 4443              	.LASF103:
 4444 0464 47656E65 		.ascii	"Generated_Source\\PSoC5\\cy_em_eeprom.c\000"
 4444      72617465 
 4444      645F536F 
 4444      75726365 
 4444      5C50536F 
 4445              	.LASF1:
 4446 048a 756E7369 		.ascii	"unsigned char\000"
 4446      676E6564 
 4446      20636861 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 108


 4446      7200
 4447              	.LASF86:
 4448 0498 726F7741 		.ascii	"rowAddr\000"
 4448      64647200 
 4449              	.LASF2:
 4450 04a0 73686F72 		.ascii	"short int\000"
 4450      7420696E 
 4450      7400
 4451              	.LASF74:
 4452 04aa 70726576 		.ascii	"prevSeqNum\000"
 4452      5365714E 
 4452      756D00
 4453              	.LASF69:
 4454 04b5 736B6970 		.ascii	"skipOperation\000"
 4454      4F706572 
 4454      6174696F 
 4454      6E00
 4455              	.LASF47:
 4456 04c3 64617461 		.ascii	"dataStartEepromRowNum\000"
 4456      53746172 
 4456      74456570 
 4456      726F6D52 
 4456      6F774E75 
 4457              	.LASF36:
 4458 04d9 43795F45 		.ascii	"Cy_Em_EEPROM_Init\000"
 4458      6D5F4545 
 4458      50524F4D 
 4458      5F496E69 
 4458      7400
 4459              	.LASF62:
 4460 04eb 77726974 		.ascii	"writeRamBuffer\000"
 4460      6552616D 
 4460      42756666 
 4460      657200
 4461              	.LASF93:
 4462 04fa 726F774F 		.ascii	"rowOffset\000"
 4462      66667365 
 4462      7400
 4463              	.LASF95:
 4464 0504 72635374 		.ascii	"rcStartRowAddr\000"
 4464      61727452 
 4464      6F774164 
 4464      647200
 4465              	.LASF14:
 4466 0513 63686172 		.ascii	"char\000"
 4466      00
 4467              	.LASF34:
 4468 0518 636F6E66 		.ascii	"config\000"
 4468      696700
 4469              	.LASF41:
 4470 051f 6E756D42 		.ascii	"numBytesToRead\000"
 4470      79746573 
 4470      546F5265 
 4470      616400
 4471              	.LASF55:
 4472 052e 73746172 		.ascii	"startAddr\000"
 4472      74416464 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 109


 4472      7200
 4473              	.LASF99:
 4474 0538 736B6970 		.ascii	"skip\000"
 4474      00
 4475              	.LASF97:
 4476 053d 6F666673 		.ascii	"offset\000"
 4476      657400
 4477              	.LASF35:
 4478 0544 636F6E74 		.ascii	"context\000"
 4478      65787400 
 4479              	.LASF26:
 4480 054c 6C617374 		.ascii	"lastWrRowAddr\000"
 4480      5772526F 
 4480      77416464 
 4480      7200
 4481              	.LASF63:
 4482 055a 746D7052 		.ascii	"tmpRowAddr\000"
 4482      6F774164 
 4482      647200
 4483              	.LASF43:
 4484 0565 63757252 		.ascii	"curRowOffset\000"
 4484      6F774F66 
 4484      66736574 
 4484      00
 4485              	.LASF23:
 4486 0572 63795F73 		.ascii	"cy_stc_eeprom_config_t\000"
 4486      74635F65 
 4486      6570726F 
 4486      6D5F636F 
 4486      6E666967 
 4487              	.LASF50:
 4488 0589 72645369 		.ascii	"rdSize\000"
 4488      7A6500
 4489              	.LASF19:
 4490 0590 77656172 		.ascii	"wearLevelingFactor\000"
 4490      4C657665 
 4490      6C696E67 
 4490      46616374 
 4490      6F7200
 4491              	.LASF49:
 4492 05a3 72644164 		.ascii	"rdAddr\000"
 4492      647200
 4493              	.LASF58:
 4494 05aa 6473744F 		.ascii	"dstOffset\000"
 4494      66667365 
 4494      7400
 4495              	.LASF81:
 4496 05b4 47657452 		.ascii	"GetRowAddrBySeqNum\000"
 4496      6F774164 
 4496      64724279 
 4496      5365714E 
 4496      756D00
 4497              	.LASF28:
 4498 05c7 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 4498      4D5F4545 
 4498      50524F4D 
 4498      5F535543 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccL6WbmE.s 			page 110


 4498      43455353 
 4499              	.LASF21:
 4500 05dc 626C6F63 		.ascii	"blockingWrite\000"
 4500      6B696E67 
 4500      57726974 
 4500      6500
 4501              	.LASF46:
 4502 05ea 63757252 		.ascii	"curRdEepromRowNum\000"
 4502      64456570 
 4502      726F6D52 
 4502      6F774E75 
 4502      6D00
 4503              	.LASF15:
 4504 05fc 63797374 		.ascii	"cystatus\000"
 4504      61747573 
 4504      00
 4505              	.LASF82:
 4506 0605 43616C63 		.ascii	"CalcChecksum\000"
 4506      43686563 
 4506      6B73756D 
 4506      00
 4507              	.LASF88:
 4508 0612 61727261 		.ascii	"arrayId\000"
 4508      79496400 
 4509              	.LASF83:
 4510 061a 726F7744 		.ascii	"rowData\000"
 4510      61746100 
 4511              	.LASF53:
 4512 0622 6E756D52 		.ascii	"numRowReads\000"
 4512      6F775265 
 4512      61647300 
 4513              	.LASF64:
 4514 062e 656D4565 		.ascii	"emEepromRowAddr\000"
 4514      70726F6D 
 4514      526F7741 
 4514      64647200 
 4515              	.LASF48:
 4516 063e 65654461 		.ascii	"eeData\000"
 4516      746100
 4517              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
