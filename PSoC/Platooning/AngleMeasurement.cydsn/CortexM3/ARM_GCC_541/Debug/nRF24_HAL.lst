ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"nRF24_HAL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.nRF24_ss_write,"ax",%progbits
  20              		.align	2
  21              		.global	nRF24_ss_write
  22              		.thumb
  23              		.thumb_func
  24              		.type	nRF24_ss_write, %function
  25              	nRF24_ss_write:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\nRF24_HAL.c"
   1:Generated_Source\PSoC5/nRF24_HAL.c **** /****************************************************************************
   2:Generated_Source\PSoC5/nRF24_HAL.c **** * This file is part of the nRF24 Custom Component for PSoC Devices.
   3:Generated_Source\PSoC5/nRF24_HAL.c **** *
   4:Generated_Source\PSoC5/nRF24_HAL.c **** * Copyright (C) 2017 Carlos Diaz <carlos.santiago.diaz@gmail.com>
   5:Generated_Source\PSoC5/nRF24_HAL.c **** *
   6:Generated_Source\PSoC5/nRF24_HAL.c **** * Permission to use, copy, modify, and/or distribute this software for any
   7:Generated_Source\PSoC5/nRF24_HAL.c **** * purpose with or without fee is hereby granted, provided that the above
   8:Generated_Source\PSoC5/nRF24_HAL.c **** * copyright notice and this permission notice appear in all copies.
   9:Generated_Source\PSoC5/nRF24_HAL.c **** *
  10:Generated_Source\PSoC5/nRF24_HAL.c **** * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  11:Generated_Source\PSoC5/nRF24_HAL.c **** * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  12:Generated_Source\PSoC5/nRF24_HAL.c **** * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  13:Generated_Source\PSoC5/nRF24_HAL.c **** * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  14:Generated_Source\PSoC5/nRF24_HAL.c **** * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  15:Generated_Source\PSoC5/nRF24_HAL.c **** * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  16:Generated_Source\PSoC5/nRF24_HAL.c **** * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  17:Generated_Source\PSoC5/nRF24_HAL.c **** ****************************************************************************/
  18:Generated_Source\PSoC5/nRF24_HAL.c **** 
  19:Generated_Source\PSoC5/nRF24_HAL.c **** /**
  20:Generated_Source\PSoC5/nRF24_HAL.c **** * @file nRF24_HAL.c
  21:Generated_Source\PSoC5/nRF24_HAL.c **** *
  22:Generated_Source\PSoC5/nRF24_HAL.c **** * @brief The nRF24 radio is controlled via SPI, this file have all the SPI
  23:Generated_Source\PSoC5/nRF24_HAL.c **** * communication between the PSoC and the nRF24 radio.
  24:Generated_Source\PSoC5/nRF24_HAL.c **** */
  25:Generated_Source\PSoC5/nRF24_HAL.c **** 
  26:Generated_Source\PSoC5/nRF24_HAL.c **** #include <stdint.h>
  27:Generated_Source\PSoC5/nRF24_HAL.c **** #include <string.h>
  28:Generated_Source\PSoC5/nRF24_HAL.c **** 
  29:Generated_Source\PSoC5/nRF24_HAL.c **** #include "nRF24_CONFIG.h"
  30:Generated_Source\PSoC5/nRF24_HAL.c **** #include "nRF24_HAL.h"
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 2


  31:Generated_Source\PSoC5/nRF24_HAL.c **** 
  32:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
  33:Generated_Source\PSoC5/nRF24_HAL.c **** # include "gpio/cy_gpio.h"
  34:Generated_Source\PSoC5/nRF24_HAL.c **** #else // (_PSOC_UDB) || (_PSOC4)
  35:Generated_Source\PSoC5/nRF24_HAL.c **** # if defined (_PSOC4_SCB)
  36:Generated_Source\PSoC5/nRF24_HAL.c **** #  include "SPI_SPI_UART.h" // may be no longer necessary
  37:Generated_Source\PSoC5/nRF24_HAL.c **** # endif
  38:Generated_Source\PSoC5/nRF24_HAL.c **** # include "CE.h"
  39:Generated_Source\PSoC5/nRF24_HAL.c **** # include "SS.h"
  40:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  41:Generated_Source\PSoC5/nRF24_HAL.c **** 
  42:Generated_Source\PSoC5/nRF24_HAL.c **** /* GPIO Control */
  43:Generated_Source\PSoC5/nRF24_HAL.c **** 
  44:Generated_Source\PSoC5/nRF24_HAL.c **** /**
  45:Generated_Source\PSoC5/nRF24_HAL.c ****  * GPIO control in PSoC6 and PSoC4/PSoC5LP is a little bit different,
  46:Generated_Source\PSoC5/nRF24_HAL.c ****  * so here we try to unify them.
  47:Generated_Source\PSoC5/nRF24_HAL.c ****  *
  48:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param[in] nrf_gpio state 
  49:Generated_Source\PSoC5/nRF24_HAL.c ****  */
  50:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_ss_write(nrf_gpio state)
  51:Generated_Source\PSoC5/nRF24_HAL.c **** {
  28              		.loc 1 51 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0346     		mov	r3, r0
  41 0008 FB71     		strb	r3, [r7, #7]
  52:Generated_Source\PSoC5/nRF24_HAL.c ****     if (GPIO_CLEAR == state) {
  42              		.loc 1 52 0
  43 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  44 000c 002B     		cmp	r3, #0
  45 000e 03D1     		bne	.L2
  53:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
  54:Generated_Source\PSoC5/nRF24_HAL.c ****     Cy_GPIO_Clr(SS_PORT, SS_NUM);
  55:Generated_Source\PSoC5/nRF24_HAL.c **** #else // _PSoC4_SCB | _PSOC_UDB
  56:Generated_Source\PSoC5/nRF24_HAL.c ****     SS_Write(0);
  46              		.loc 1 56 0
  47 0010 0020     		movs	r0, #0
  48 0012 FFF7FEFF 		bl	SS_Write
  57:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  58:Generated_Source\PSoC5/nRF24_HAL.c ****     } else { // GPIO_SET
  59:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
  60:Generated_Source\PSoC5/nRF24_HAL.c ****     Cy_GPIO_Set(SS_PORT, SS_NUM);
  61:Generated_Source\PSoC5/nRF24_HAL.c **** #else // _PSoC4_SCB | _PSOC_UDB
  62:Generated_Source\PSoC5/nRF24_HAL.c ****     SS_Write(1);
  63:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  64:Generated_Source\PSoC5/nRF24_HAL.c ****     }
  65:Generated_Source\PSoC5/nRF24_HAL.c **** }
  49              		.loc 1 65 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 3


  50 0016 02E0     		b	.L4
  51              	.L2:
  62:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  52              		.loc 1 62 0
  53 0018 0120     		movs	r0, #1
  54 001a FFF7FEFF 		bl	SS_Write
  55              	.L4:
  56              		.loc 1 65 0
  57 001e 00BF     		nop
  58 0020 0837     		adds	r7, r7, #8
  59              		.cfi_def_cfa_offset 8
  60 0022 BD46     		mov	sp, r7
  61              		.cfi_def_cfa_register 13
  62              		@ sp needed
  63 0024 80BD     		pop	{r7, pc}
  64              		.cfi_endproc
  65              	.LFE0:
  66              		.size	nRF24_ss_write, .-nRF24_ss_write
  67 0026 00BF     		.section	.text.nRF24_ce_write,"ax",%progbits
  68              		.align	2
  69              		.global	nRF24_ce_write
  70              		.thumb
  71              		.thumb_func
  72              		.type	nRF24_ce_write, %function
  73              	nRF24_ce_write:
  74              	.LFB1:
  66:Generated_Source\PSoC5/nRF24_HAL.c **** 
  67:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_ce_write(nrf_gpio state)
  68:Generated_Source\PSoC5/nRF24_HAL.c **** {
  75              		.loc 1 68 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 8
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 82B0     		sub	sp, sp, #8
  84              		.cfi_def_cfa_offset 16
  85 0004 00AF     		add	r7, sp, #0
  86              		.cfi_def_cfa_register 7
  87 0006 0346     		mov	r3, r0
  88 0008 FB71     		strb	r3, [r7, #7]
  69:Generated_Source\PSoC5/nRF24_HAL.c ****     if (GPIO_CLEAR == state) {
  89              		.loc 1 69 0
  90 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  91 000c 002B     		cmp	r3, #0
  92 000e 03D1     		bne	.L6
  70:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
  71:Generated_Source\PSoC5/nRF24_HAL.c ****     Cy_GPIO_Clr(CE_PORT, CE_NUM);
  72:Generated_Source\PSoC5/nRF24_HAL.c **** #else // _PSoC4_SCB | _PSOC_UDB
  73:Generated_Source\PSoC5/nRF24_HAL.c ****     CE_Write(0);
  93              		.loc 1 73 0
  94 0010 0020     		movs	r0, #0
  95 0012 FFF7FEFF 		bl	CE_Write
  74:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  75:Generated_Source\PSoC5/nRF24_HAL.c ****     } else { // GPIO_SET
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 4


  76:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
  77:Generated_Source\PSoC5/nRF24_HAL.c ****     Cy_GPIO_Set(CE_PORT, CE_NUM);
  78:Generated_Source\PSoC5/nRF24_HAL.c **** #else // _PSoC4_SCB | _PSOC_UDB
  79:Generated_Source\PSoC5/nRF24_HAL.c ****     CE_Write(1);
  80:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  81:Generated_Source\PSoC5/nRF24_HAL.c ****     }
  82:Generated_Source\PSoC5/nRF24_HAL.c **** }
  96              		.loc 1 82 0
  97 0016 02E0     		b	.L8
  98              	.L6:
  79:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
  99              		.loc 1 79 0
 100 0018 0120     		movs	r0, #1
 101 001a FFF7FEFF 		bl	CE_Write
 102              	.L8:
 103              		.loc 1 82 0
 104 001e 00BF     		nop
 105 0020 0837     		adds	r7, r7, #8
 106              		.cfi_def_cfa_offset 8
 107 0022 BD46     		mov	sp, r7
 108              		.cfi_def_cfa_register 13
 109              		@ sp needed
 110 0024 80BD     		pop	{r7, pc}
 111              		.cfi_endproc
 112              	.LFE1:
 113              		.size	nRF24_ce_write, .-nRF24_ce_write
 114 0026 00BF     		.section	.text.nRF24_spi_xfer,"ax",%progbits
 115              		.align	2
 116              		.global	nRF24_spi_xfer
 117              		.thumb
 118              		.thumb_func
 119              		.type	nRF24_spi_xfer, %function
 120              	nRF24_spi_xfer:
 121              	.LFB2:
  83:Generated_Source\PSoC5/nRF24_HAL.c **** 
  84:Generated_Source\PSoC5/nRF24_HAL.c **** // xfer xfer_size bytes to the nrf24 radio and get back xfer_size bytes back
  85:Generated_Source\PSoC5/nRF24_HAL.c **** // from it.
  86:Generated_Source\PSoC5/nRF24_HAL.c **** // in[0] is always the NRF_COMMAND
  87:Generated_Source\PSoC5/nRF24_HAL.c **** // out[0] is always the STATUS_REGISTER
  88:Generated_Source\PSoC5/nRF24_HAL.c **** //
  89:Generated_Source\PSoC5/nRF24_HAL.c **** // Example of use:
  90:Generated_Source\PSoC5/nRF24_HAL.c **** // - To read the radio status register and save it in status_reg variable:
  91:Generated_Source\PSoC5/nRF24_HAL.c **** //
  92:Generated_Source\PSoC5/nRF24_HAL.c **** // uint8_t NRF_DUMMY = 0xFF;
  93:Generated_Source\PSoC5/nRF24_HAL.c **** // uint8_t status_reg = 0;
  94:Generated_Source\PSoC5/nRF24_HAL.c **** // nrf24_spi_xfer(&NRF_DUMMY, &status_reg, 1);
  95:Generated_Source\PSoC5/nRF24_HAL.c **** //
  96:Generated_Source\PSoC5/nRF24_HAL.c **** // TODO:
  97:Generated_Source\PSoC5/nRF24_HAL.c **** // This function will be the only way to transfer/get data from the radio,
  98:Generated_Source\PSoC5/nRF24_HAL.c **** // that way we can eliminate duplicated code on the NRF_HAL and NRF_COMMANDS
  99:Generated_Source\PSoC5/nRF24_HAL.c **** // files. Also that way we can ease the implementation of the custom spi_xfer
 100:Generated_Source\PSoC5/nRF24_HAL.c **** // function.
 101:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_spi_xfer(const uint8_t *in, uint8_t *out, const size_t xfer_size)
 102:Generated_Source\PSoC5/nRF24_HAL.c **** {
 122              		.loc 1 102 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 5


 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 90B5     		push	{r4, r7, lr}
 127              		.cfi_def_cfa_offset 12
 128              		.cfi_offset 4, -12
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 87B0     		sub	sp, sp, #28
 132              		.cfi_def_cfa_offset 40
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 135 0006 F860     		str	r0, [r7, #12]
 136 0008 B960     		str	r1, [r7, #8]
 137 000a 7A60     		str	r2, [r7, #4]
 103:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_spi_clear_fifo();
 138              		.loc 1 103 0
 139 000c FFF7FEFF 		bl	nRF24_spi_clear_fifo
 104:Generated_Source\PSoC5/nRF24_HAL.c **** 
 105:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_ss_write(GPIO_CLEAR);
 140              		.loc 1 105 0
 141 0010 0020     		movs	r0, #0
 142 0012 FFF7FEFF 		bl	nRF24_ss_write
 143              	.LBB2:
 106:Generated_Source\PSoC5/nRF24_HAL.c **** 
 107:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
 108:Generated_Source\PSoC5/nRF24_HAL.c ****     for(size_t i = 0; i < xfer_size; i++){
 109:Generated_Source\PSoC5/nRF24_HAL.c ****         while(Cy_SCB_Write(SPI_HW, in[i]) == 0);
 110:Generated_Source\PSoC5/nRF24_HAL.c ****         while (Cy_SCB_GetNumInRxFifo(SPI_HW) == 0) {}
 111:Generated_Source\PSoC5/nRF24_HAL.c ****         out[i] = Cy_SCB_ReadRxFifo(SPI_HW);
 112:Generated_Source\PSoC5/nRF24_HAL.c ****     }
 113:Generated_Source\PSoC5/nRF24_HAL.c **** #elif defined (_PSOC4_SCB)
 114:Generated_Source\PSoC5/nRF24_HAL.c ****     for (size_t i = 0; i < xfer_size; i++) {
 115:Generated_Source\PSoC5/nRF24_HAL.c ****         SPI_SpiUartWriteTxData(in[i]);
 116:Generated_Source\PSoC5/nRF24_HAL.c ****         while (SPI_SpiUartGetRxBufferSize() == 0){}
 117:Generated_Source\PSoC5/nRF24_HAL.c ****         out[i] = SPI_SpiUartReadRxData();
 118:Generated_Source\PSoC5/nRF24_HAL.c ****     }
 119:Generated_Source\PSoC5/nRF24_HAL.c **** #elif defined (_PSOC_UDB)
 120:Generated_Source\PSoC5/nRF24_HAL.c ****     for (size_t i = 0; i < xfer_size; i++) {
 144              		.loc 1 120 0
 145 0016 0023     		movs	r3, #0
 146 0018 7B61     		str	r3, [r7, #20]
 147 001a 18E0     		b	.L10
 148              	.L12:
 121:Generated_Source\PSoC5/nRF24_HAL.c ****         SPI_WriteTxData(in[i]);
 149              		.loc 1 121 0
 150 001c FA68     		ldr	r2, [r7, #12]
 151 001e 7B69     		ldr	r3, [r7, #20]
 152 0020 1344     		add	r3, r3, r2
 153 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154 0024 1846     		mov	r0, r3
 155 0026 FFF7FEFF 		bl	SPI_WriteTxData
 122:Generated_Source\PSoC5/nRF24_HAL.c ****         while (!(SPI_ReadTxStatus() & SPI_STS_BYTE_COMPLETE)) {
 156              		.loc 1 122 0
 157 002a 00BF     		nop
 158              	.L11:
 159              		.loc 1 122 0 is_stmt 0 discriminator 1
 160 002c FFF7FEFF 		bl	SPI_ReadTxStatus
 161 0030 0346     		mov	r3, r0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 6


 162 0032 03F00803 		and	r3, r3, #8
 163 0036 002B     		cmp	r3, #0
 164 0038 F8D0     		beq	.L11
 123:Generated_Source\PSoC5/nRF24_HAL.c ****         }
 124:Generated_Source\PSoC5/nRF24_HAL.c ****         out[i] = SPI_ReadRxData();
 165              		.loc 1 124 0 is_stmt 1 discriminator 2
 166 003a BA68     		ldr	r2, [r7, #8]
 167 003c 7B69     		ldr	r3, [r7, #20]
 168 003e D418     		adds	r4, r2, r3
 169 0040 FFF7FEFF 		bl	SPI_ReadRxData
 170 0044 0346     		mov	r3, r0
 171 0046 2370     		strb	r3, [r4]
 120:Generated_Source\PSoC5/nRF24_HAL.c ****         SPI_WriteTxData(in[i]);
 172              		.loc 1 120 0 discriminator 2
 173 0048 7B69     		ldr	r3, [r7, #20]
 174 004a 0133     		adds	r3, r3, #1
 175 004c 7B61     		str	r3, [r7, #20]
 176              	.L10:
 120:Generated_Source\PSoC5/nRF24_HAL.c ****         SPI_WriteTxData(in[i]);
 177              		.loc 1 120 0 is_stmt 0 discriminator 1
 178 004e 7A69     		ldr	r2, [r7, #20]
 179 0050 7B68     		ldr	r3, [r7, #4]
 180 0052 9A42     		cmp	r2, r3
 181 0054 E2D3     		bcc	.L12
 182              	.LBE2:
 125:Generated_Source\PSoC5/nRF24_HAL.c ****     }
 126:Generated_Source\PSoC5/nRF24_HAL.c **** #else
 127:Generated_Source\PSoC5/nRF24_HAL.c ****     #error "Non valid PSoC device identified."
 128:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
 129:Generated_Source\PSoC5/nRF24_HAL.c **** 
 130:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_ss_write(GPIO_SET);
 183              		.loc 1 130 0 is_stmt 1
 184 0056 0120     		movs	r0, #1
 185 0058 FFF7FEFF 		bl	nRF24_ss_write
 131:Generated_Source\PSoC5/nRF24_HAL.c **** }
 186              		.loc 1 131 0
 187 005c 00BF     		nop
 188 005e 1C37     		adds	r7, r7, #28
 189              		.cfi_def_cfa_offset 12
 190 0060 BD46     		mov	sp, r7
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 0062 90BD     		pop	{r4, r7, pc}
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	nRF24_spi_xfer, .-nRF24_spi_xfer
 197              		.section	.text.nRF24_spi_clear_fifo,"ax",%progbits
 198              		.align	2
 199              		.global	nRF24_spi_clear_fifo
 200              		.thumb
 201              		.thumb_func
 202              		.type	nRF24_spi_clear_fifo, %function
 203              	nRF24_spi_clear_fifo:
 204              	.LFB3:
 132:Generated_Source\PSoC5/nRF24_HAL.c **** 
 133:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_spi_clear_fifo(void)
 134:Generated_Source\PSoC5/nRF24_HAL.c **** {
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 7


 205              		.loc 1 134 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
 135:Generated_Source\PSoC5/nRF24_HAL.c **** #if defined (_PSOC6)
 136:Generated_Source\PSoC5/nRF24_HAL.c ****     Cy_SCB_ClearRxFifo(SPI_HW);
 137:Generated_Source\PSoC5/nRF24_HAL.c ****     Cy_SCB_ClearTxFifo(SPI_HW);
 138:Generated_Source\PSoC5/nRF24_HAL.c **** #elif defined (_PSOC4_SCB)
 139:Generated_Source\PSoC5/nRF24_HAL.c ****     SPI_SpiUartClearRxBuffer();
 140:Generated_Source\PSoC5/nRF24_HAL.c ****     SPI_SpiUartClearTxBuffer();
 141:Generated_Source\PSoC5/nRF24_HAL.c **** #elif defined (_PSOC_UDB)
 142:Generated_Source\PSoC5/nRF24_HAL.c ****     SPI_ClearFIFO();
 215              		.loc 1 142 0
 216 0004 FFF7FEFF 		bl	SPI_ClearFIFO
 143:Generated_Source\PSoC5/nRF24_HAL.c **** #else
 144:Generated_Source\PSoC5/nRF24_HAL.c ****     #error "Non valid PSoC device identified."
 145:Generated_Source\PSoC5/nRF24_HAL.c **** #endif
 146:Generated_Source\PSoC5/nRF24_HAL.c **** }
 217              		.loc 1 146 0
 218 0008 00BF     		nop
 219 000a 80BD     		pop	{r7, pc}
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	nRF24_spi_clear_fifo, .-nRF24_spi_clear_fifo
 223              		.section	.text.nRF24_read_register,"ax",%progbits
 224              		.align	2
 225              		.global	nRF24_read_register
 226              		.thumb
 227              		.thumb_func
 228              		.type	nRF24_read_register, %function
 229              	nRF24_read_register:
 230              	.LFB4:
 147:Generated_Source\PSoC5/nRF24_HAL.c **** 
 148:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 149:Generated_Source\PSoC5/nRF24_HAL.c ****  * Read the specified nRF24 register (1byte).
 150:Generated_Source\PSoC5/nRF24_HAL.c ****  * 
 151:Generated_Source\PSoC5/nRF24_HAL.c ****  * TODO: So here the microcontroller just need to write 2 uint8_t's
 152:Generated_Source\PSoC5/nRF24_HAL.c ****  * to the nrf24 radio and read the last stored uint8_t.
 153:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 154:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be read.
 155:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 156:Generated_Source\PSoC5/nRF24_HAL.c ****  * @return uint8_t: Content of the specified register.
 157:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 158:Generated_Source\PSoC5/nRF24_HAL.c **** uint8_t nRF24_read_register(const nrf_register reg)
 159:Generated_Source\PSoC5/nRF24_HAL.c **** {
 231              		.loc 1 159 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 16
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 8


 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 84B0     		sub	sp, sp, #16
 240              		.cfi_def_cfa_offset 24
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 0346     		mov	r3, r0
 244 0008 FB71     		strb	r3, [r7, #7]
 160:Generated_Source\PSoC5/nRF24_HAL.c ****     const uint8_t _nrf_cmd[] = {
 245              		.loc 1 160 0
 246 000a FB79     		ldrb	r3, [r7, #7]
 247 000c 3B73     		strb	r3, [r7, #12]
 248 000e FF23     		movs	r3, #255
 249 0010 7B73     		strb	r3, [r7, #13]
 161:Generated_Source\PSoC5/nRF24_HAL.c ****         NRF_CMD_R_REGISTER | reg, NRF_CMD_NOP
 162:Generated_Source\PSoC5/nRF24_HAL.c ****     };
 163:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t _nrf_data[2] = {0};
 250              		.loc 1 163 0
 251 0012 0023     		movs	r3, #0
 252 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 164:Generated_Source\PSoC5/nRF24_HAL.c ****     
 165:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_spi_xfer(_nrf_cmd, _nrf_data, sizeof(_nrf_cmd) / sizeof(_nrf_cmd[0]));
 253              		.loc 1 165 0
 254 0016 07F10801 		add	r1, r7, #8
 255 001a 07F10C03 		add	r3, r7, #12
 256 001e 0222     		movs	r2, #2
 257 0020 1846     		mov	r0, r3
 258 0022 FFF7FEFF 		bl	nRF24_spi_xfer
 166:Generated_Source\PSoC5/nRF24_HAL.c **** 
 167:Generated_Source\PSoC5/nRF24_HAL.c ****     return _nrf_data[1];
 259              		.loc 1 167 0
 260 0026 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 168:Generated_Source\PSoC5/nRF24_HAL.c **** }
 261              		.loc 1 168 0
 262 0028 1846     		mov	r0, r3
 263 002a 1037     		adds	r7, r7, #16
 264              		.cfi_def_cfa_offset 8
 265 002c BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 002e 80BD     		pop	{r7, pc}
 269              		.cfi_endproc
 270              	.LFE4:
 271              		.size	nRF24_read_register, .-nRF24_read_register
 272              		.section	.text.nRF24_read_long_register,"ax",%progbits
 273              		.align	2
 274              		.global	nRF24_read_long_register
 275              		.thumb
 276              		.thumb_func
 277              		.type	nRF24_read_long_register, %function
 278              	nRF24_read_long_register:
 279              	.LFB5:
 169:Generated_Source\PSoC5/nRF24_HAL.c **** 
 170:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 171:Generated_Source\PSoC5/nRF24_HAL.c ****  * Read the specified nRF24 register (bigger than 1 byte).
 172:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 173:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be read.
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 9


 174:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param uint8_t* data: Pointer to where the content of the register
 175:Generated_Source\PSoC5/nRF24_HAL.c ****  * will be stored.
 176:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param size_t size: Size of the register and data.
 177:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 178:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_read_long_register(const nrf_register reg,
 179:Generated_Source\PSoC5/nRF24_HAL.c ****                                            uint8_t* data, const size_t size)
 180:Generated_Source\PSoC5/nRF24_HAL.c **** {
 280              		.loc 1 180 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 24
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 285              		.cfi_def_cfa_offset 36
 286              		.cfi_offset 4, -36
 287              		.cfi_offset 5, -32
 288              		.cfi_offset 6, -28
 289              		.cfi_offset 7, -24
 290              		.cfi_offset 8, -20
 291              		.cfi_offset 9, -16
 292              		.cfi_offset 10, -12
 293              		.cfi_offset 11, -8
 294              		.cfi_offset 14, -4
 295 0004 87B0     		sub	sp, sp, #28
 296              		.cfi_def_cfa_offset 64
 297 0006 00AF     		add	r7, sp, #0
 298              		.cfi_def_cfa_register 7
 299 0008 B960     		str	r1, [r7, #8]
 300 000a 7A60     		str	r2, [r7, #4]
 301 000c 0246     		mov	r2, r0
 302 000e FA73     		strb	r2, [r7, #15]
 303              		.loc 1 180 0
 304 0010 6A46     		mov	r2, sp
 305 0012 3A60     		str	r2, [r7]
 181:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t nrf_data[size + 1];
 306              		.loc 1 181 0
 307 0014 7A68     		ldr	r2, [r7, #4]
 308 0016 0132     		adds	r2, r2, #1
 309 0018 1146     		mov	r1, r2
 310 001a 4FF00002 		mov	r2, #0
 311 001e 4FEAC20B 		lsl	fp, r2, #3
 312 0022 4BEA517B 		orr	fp, fp, r1, lsr #29
 313 0026 4FEAC10A 		lsl	r10, r1, #3
 314 002a 7A68     		ldr	r2, [r7, #4]
 315 002c 0132     		adds	r2, r2, #1
 316 002e 1146     		mov	r1, r2
 317 0030 4FF00002 		mov	r2, #0
 318 0034 4FEAC209 		lsl	r9, r2, #3
 319 0038 49EA5179 		orr	r9, r9, r1, lsr #29
 320 003c 4FEAC108 		lsl	r8, r1, #3
 321 0040 7A68     		ldr	r2, [r7, #4]
 322 0042 0132     		adds	r2, r2, #1
 323 0044 0732     		adds	r2, r2, #7
 324 0046 D208     		lsrs	r2, r2, #3
 325 0048 D200     		lsls	r2, r2, #3
 326 004a ADEB020D 		sub	sp, sp, r2
 327 004e 6A46     		mov	r2, sp
 328 0050 0032     		adds	r2, r2, #0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 10


 329 0052 7A61     		str	r2, [r7, #20]
 182:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t dummy[size + 1];
 330              		.loc 1 182 0
 331 0054 7A68     		ldr	r2, [r7, #4]
 332 0056 0132     		adds	r2, r2, #1
 333 0058 1146     		mov	r1, r2
 334 005a 4FF00002 		mov	r2, #0
 335 005e D600     		lsls	r6, r2, #3
 336 0060 46EA5176 		orr	r6, r6, r1, lsr #29
 337 0064 CD00     		lsls	r5, r1, #3
 338 0066 7A68     		ldr	r2, [r7, #4]
 339 0068 0132     		adds	r2, r2, #1
 340 006a 1146     		mov	r1, r2
 341 006c 4FF00002 		mov	r2, #0
 342 0070 D400     		lsls	r4, r2, #3
 343 0072 44EA5174 		orr	r4, r4, r1, lsr #29
 344 0076 CB00     		lsls	r3, r1, #3
 345 0078 7B68     		ldr	r3, [r7, #4]
 346 007a 0133     		adds	r3, r3, #1
 347 007c 0733     		adds	r3, r3, #7
 348 007e DB08     		lsrs	r3, r3, #3
 349 0080 DB00     		lsls	r3, r3, #3
 350 0082 ADEB030D 		sub	sp, sp, r3
 351 0086 6B46     		mov	r3, sp
 352 0088 0033     		adds	r3, r3, #0
 353 008a 3B61     		str	r3, [r7, #16]
 183:Generated_Source\PSoC5/nRF24_HAL.c ****     
 184:Generated_Source\PSoC5/nRF24_HAL.c ****     dummy[0] = NRF_CMD_R_REGISTER | reg;
 354              		.loc 1 184 0
 355 008c 3B69     		ldr	r3, [r7, #16]
 356 008e FA7B     		ldrb	r2, [r7, #15]
 357 0090 1A70     		strb	r2, [r3]
 185:Generated_Source\PSoC5/nRF24_HAL.c **** 
 186:Generated_Source\PSoC5/nRF24_HAL.c ****     // Send the command and get the status
 187:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_spi_xfer(dummy, nrf_data, sizeof(dummy));
 358              		.loc 1 187 0
 359 0092 3869     		ldr	r0, [r7, #16]
 360 0094 7969     		ldr	r1, [r7, #20]
 361 0096 7B68     		ldr	r3, [r7, #4]
 362 0098 0133     		adds	r3, r3, #1
 363 009a 1A46     		mov	r2, r3
 364 009c FFF7FEFF 		bl	nRF24_spi_xfer
 188:Generated_Source\PSoC5/nRF24_HAL.c **** 
 189:Generated_Source\PSoC5/nRF24_HAL.c ****     // Copy data without the status register to the user pointer
 190:Generated_Source\PSoC5/nRF24_HAL.c ****     memcpy(data, &nrf_data[1], size);
 365              		.loc 1 190 0
 366 00a0 7B69     		ldr	r3, [r7, #20]
 367 00a2 0133     		adds	r3, r3, #1
 368 00a4 7A68     		ldr	r2, [r7, #4]
 369 00a6 1946     		mov	r1, r3
 370 00a8 B868     		ldr	r0, [r7, #8]
 371 00aa FFF7FEFF 		bl	memcpy
 372 00ae D7F800D0 		ldr	sp, [r7]
 191:Generated_Source\PSoC5/nRF24_HAL.c **** }
 373              		.loc 1 191 0
 374 00b2 00BF     		nop
 375 00b4 1C37     		adds	r7, r7, #28
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 11


 376              		.cfi_def_cfa_offset 36
 377 00b6 BD46     		mov	sp, r7
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 00b8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 381              		.cfi_endproc
 382              	.LFE5:
 383              		.size	nRF24_read_long_register, .-nRF24_read_long_register
 384              		.section	.text.nRF24_write_register,"ax",%progbits
 385              		.align	2
 386              		.global	nRF24_write_register
 387              		.thumb
 388              		.thumb_func
 389              		.type	nRF24_write_register, %function
 390              	nRF24_write_register:
 391              	.LFB6:
 192:Generated_Source\PSoC5/nRF24_HAL.c **** 
 193:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 194:Generated_Source\PSoC5/nRF24_HAL.c ****  * Write to the specified nRF24 Register (1byte).
 195:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 196:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be written.
 197:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const uint8_t data: Data to be written into the specified register.
 198:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 199:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_write_register(const nrf_register reg, const uint8_t data)
 200:Generated_Source\PSoC5/nRF24_HAL.c **** {
 392              		.loc 1 200 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 16
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396 0000 80B5     		push	{r7, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 7, -8
 399              		.cfi_offset 14, -4
 400 0002 84B0     		sub	sp, sp, #16
 401              		.cfi_def_cfa_offset 24
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 404 0006 0346     		mov	r3, r0
 405 0008 0A46     		mov	r2, r1
 406 000a FB71     		strb	r3, [r7, #7]
 407 000c 1346     		mov	r3, r2
 408 000e BB71     		strb	r3, [r7, #6]
 201:Generated_Source\PSoC5/nRF24_HAL.c ****     const uint8_t data_to_write[] = {NRF_CMD_W_REGISTER | reg, data};
 409              		.loc 1 201 0
 410 0010 FB79     		ldrb	r3, [r7, #7]
 411 0012 43F02003 		orr	r3, r3, #32
 412 0016 DBB2     		uxtb	r3, r3
 413 0018 3B73     		strb	r3, [r7, #12]
 414 001a BB79     		ldrb	r3, [r7, #6]
 415 001c 7B73     		strb	r3, [r7, #13]
 202:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t nrf_data[2] = {0};
 416              		.loc 1 202 0
 417 001e 0023     		movs	r3, #0
 418 0020 3B81     		strh	r3, [r7, #8]	@ movhi
 203:Generated_Source\PSoC5/nRF24_HAL.c ****     
 204:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_spi_xfer(data_to_write, nrf_data, sizeof(data_to_write));
 419              		.loc 1 204 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 12


 420 0022 07F10801 		add	r1, r7, #8
 421 0026 07F10C03 		add	r3, r7, #12
 422 002a 0222     		movs	r2, #2
 423 002c 1846     		mov	r0, r3
 424 002e FFF7FEFF 		bl	nRF24_spi_xfer
 205:Generated_Source\PSoC5/nRF24_HAL.c **** }
 425              		.loc 1 205 0
 426 0032 00BF     		nop
 427 0034 1037     		adds	r7, r7, #16
 428              		.cfi_def_cfa_offset 8
 429 0036 BD46     		mov	sp, r7
 430              		.cfi_def_cfa_register 13
 431              		@ sp needed
 432 0038 80BD     		pop	{r7, pc}
 433              		.cfi_endproc
 434              	.LFE6:
 435              		.size	nRF24_write_register, .-nRF24_write_register
 436 003a 00BF     		.section	.text.nRF24_write_long_register,"ax",%progbits
 437              		.align	2
 438              		.global	nRF24_write_long_register
 439              		.thumb
 440              		.thumb_func
 441              		.type	nRF24_write_long_register, %function
 442              	nRF24_write_long_register:
 443              	.LFB7:
 206:Generated_Source\PSoC5/nRF24_HAL.c **** 
 207:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 208:Generated_Source\PSoC5/nRF24_HAL.c ****  * Write one or more bytes to the specified nRF24 Register.
 209:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 210:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be written.
 211:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const uint8_t* data: Data to writen into the register.
 212:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param size_t size: Bytes of the data to be written in the specified register.
 213:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 214:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_write_long_register(const nrf_register reg,
 215:Generated_Source\PSoC5/nRF24_HAL.c ****                                             const uint8_t* data, const size_t size)
 216:Generated_Source\PSoC5/nRF24_HAL.c **** {
 444              		.loc 1 216 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 24
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 449              		.cfi_def_cfa_offset 36
 450              		.cfi_offset 4, -36
 451              		.cfi_offset 5, -32
 452              		.cfi_offset 6, -28
 453              		.cfi_offset 7, -24
 454              		.cfi_offset 8, -20
 455              		.cfi_offset 9, -16
 456              		.cfi_offset 10, -12
 457              		.cfi_offset 11, -8
 458              		.cfi_offset 14, -4
 459 0004 87B0     		sub	sp, sp, #28
 460              		.cfi_def_cfa_offset 64
 461 0006 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 463 0008 B960     		str	r1, [r7, #8]
 464 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 13


 465 000c 0246     		mov	r2, r0
 466 000e FA73     		strb	r2, [r7, #15]
 467              		.loc 1 216 0
 468 0010 6A46     		mov	r2, sp
 469 0012 3A60     		str	r2, [r7]
 217:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t data_to_nrf[size + 1];
 470              		.loc 1 217 0
 471 0014 7A68     		ldr	r2, [r7, #4]
 472 0016 0132     		adds	r2, r2, #1
 473 0018 1146     		mov	r1, r2
 474 001a 4FF00002 		mov	r2, #0
 475 001e 4FEAC20B 		lsl	fp, r2, #3
 476 0022 4BEA517B 		orr	fp, fp, r1, lsr #29
 477 0026 4FEAC10A 		lsl	r10, r1, #3
 478 002a 7A68     		ldr	r2, [r7, #4]
 479 002c 0132     		adds	r2, r2, #1
 480 002e 1146     		mov	r1, r2
 481 0030 4FF00002 		mov	r2, #0
 482 0034 4FEAC209 		lsl	r9, r2, #3
 483 0038 49EA5179 		orr	r9, r9, r1, lsr #29
 484 003c 4FEAC108 		lsl	r8, r1, #3
 485 0040 7A68     		ldr	r2, [r7, #4]
 486 0042 0132     		adds	r2, r2, #1
 487 0044 0732     		adds	r2, r2, #7
 488 0046 D208     		lsrs	r2, r2, #3
 489 0048 D200     		lsls	r2, r2, #3
 490 004a ADEB020D 		sub	sp, sp, r2
 491 004e 6A46     		mov	r2, sp
 492 0050 0032     		adds	r2, r2, #0
 493 0052 7A61     		str	r2, [r7, #20]
 218:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t data_from_nrf[size + 1];
 494              		.loc 1 218 0
 495 0054 7A68     		ldr	r2, [r7, #4]
 496 0056 0132     		adds	r2, r2, #1
 497 0058 1146     		mov	r1, r2
 498 005a 4FF00002 		mov	r2, #0
 499 005e D600     		lsls	r6, r2, #3
 500 0060 46EA5176 		orr	r6, r6, r1, lsr #29
 501 0064 CD00     		lsls	r5, r1, #3
 502 0066 7A68     		ldr	r2, [r7, #4]
 503 0068 0132     		adds	r2, r2, #1
 504 006a 1146     		mov	r1, r2
 505 006c 4FF00002 		mov	r2, #0
 506 0070 D400     		lsls	r4, r2, #3
 507 0072 44EA5174 		orr	r4, r4, r1, lsr #29
 508 0076 CB00     		lsls	r3, r1, #3
 509 0078 7B68     		ldr	r3, [r7, #4]
 510 007a 0133     		adds	r3, r3, #1
 511 007c 0733     		adds	r3, r3, #7
 512 007e DB08     		lsrs	r3, r3, #3
 513 0080 DB00     		lsls	r3, r3, #3
 514 0082 ADEB030D 		sub	sp, sp, r3
 515 0086 6B46     		mov	r3, sp
 516 0088 0033     		adds	r3, r3, #0
 517 008a 3B61     		str	r3, [r7, #16]
 219:Generated_Source\PSoC5/nRF24_HAL.c ****     
 220:Generated_Source\PSoC5/nRF24_HAL.c ****     // Set the write command and the register to write to
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 14


 221:Generated_Source\PSoC5/nRF24_HAL.c ****     data_to_nrf[0] = NRF_CMD_W_REGISTER | reg;
 518              		.loc 1 221 0
 519 008c FB7B     		ldrb	r3, [r7, #15]
 520 008e 43F02003 		orr	r3, r3, #32
 521 0092 DAB2     		uxtb	r2, r3
 522 0094 7B69     		ldr	r3, [r7, #20]
 523 0096 1A70     		strb	r2, [r3]
 222:Generated_Source\PSoC5/nRF24_HAL.c ****     // add the data given by the user
 223:Generated_Source\PSoC5/nRF24_HAL.c ****     memcpy(&data_to_nrf[1], data, size);
 524              		.loc 1 223 0
 525 0098 7B69     		ldr	r3, [r7, #20]
 526 009a 0133     		adds	r3, r3, #1
 527 009c 7A68     		ldr	r2, [r7, #4]
 528 009e B968     		ldr	r1, [r7, #8]
 529 00a0 1846     		mov	r0, r3
 530 00a2 FFF7FEFF 		bl	memcpy
 224:Generated_Source\PSoC5/nRF24_HAL.c **** 
 225:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_spi_xfer(data_to_nrf, data_from_nrf, sizeof(data_to_nrf));
 531              		.loc 1 225 0
 532 00a6 7869     		ldr	r0, [r7, #20]
 533 00a8 3969     		ldr	r1, [r7, #16]
 534 00aa 7B68     		ldr	r3, [r7, #4]
 535 00ac 0133     		adds	r3, r3, #1
 536 00ae 1A46     		mov	r2, r3
 537 00b0 FFF7FEFF 		bl	nRF24_spi_xfer
 538 00b4 D7F800D0 		ldr	sp, [r7]
 226:Generated_Source\PSoC5/nRF24_HAL.c **** }
 539              		.loc 1 226 0
 540 00b8 00BF     		nop
 541 00ba 1C37     		adds	r7, r7, #28
 542              		.cfi_def_cfa_offset 36
 543 00bc BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 547              		.cfi_endproc
 548              	.LFE7:
 549              		.size	nRF24_write_long_register, .-nRF24_write_long_register
 550 00c2 00BF     		.section	.text.nRF24_read_bit,"ax",%progbits
 551              		.align	2
 552              		.global	nRF24_read_bit
 553              		.thumb
 554              		.thumb_func
 555              		.type	nRF24_read_bit, %function
 556              	nRF24_read_bit:
 557              	.LFB8:
 227:Generated_Source\PSoC5/nRF24_HAL.c **** 
 228:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 229:Generated_Source\PSoC5/nRF24_HAL.c ****  * Read the content of the specified bit of the specified nrf_register.
 230:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 231:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be read.
 232:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param uint8_t bit: Bit to be read.
 233:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 234:Generated_Source\PSoC5/nRF24_HAL.c ****  * @return bool: Return the content of the bit.
 235:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 236:Generated_Source\PSoC5/nRF24_HAL.c **** bool nRF24_read_bit(const nrf_register reg, const uint8_t bit)
 237:Generated_Source\PSoC5/nRF24_HAL.c **** {
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 15


 558              		.loc 1 237 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 8
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 82B0     		sub	sp, sp, #8
 567              		.cfi_def_cfa_offset 16
 568 0004 00AF     		add	r7, sp, #0
 569              		.cfi_def_cfa_register 7
 570 0006 0346     		mov	r3, r0
 571 0008 0A46     		mov	r2, r1
 572 000a FB71     		strb	r3, [r7, #7]
 573 000c 1346     		mov	r3, r2
 574 000e BB71     		strb	r3, [r7, #6]
 238:Generated_Source\PSoC5/nRF24_HAL.c ****     return (nRF24_read_register(reg) & (1 << bit)) != 0;
 575              		.loc 1 238 0
 576 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 577 0012 1846     		mov	r0, r3
 578 0014 FFF7FEFF 		bl	nRF24_read_register
 579 0018 0346     		mov	r3, r0
 580 001a 1A46     		mov	r2, r3
 581 001c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 582 001e 42FA03F3 		asr	r3, r2, r3
 583 0022 03F00103 		and	r3, r3, #1
 584 0026 002B     		cmp	r3, #0
 585 0028 14BF     		ite	ne
 586 002a 0123     		movne	r3, #1
 587 002c 0023     		moveq	r3, #0
 588 002e DBB2     		uxtb	r3, r3
 239:Generated_Source\PSoC5/nRF24_HAL.c **** }
 589              		.loc 1 239 0
 590 0030 1846     		mov	r0, r3
 591 0032 0837     		adds	r7, r7, #8
 592              		.cfi_def_cfa_offset 8
 593 0034 BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0036 80BD     		pop	{r7, pc}
 597              		.cfi_endproc
 598              	.LFE8:
 599              		.size	nRF24_read_bit, .-nRF24_read_bit
 600              		.section	.text.nRF24_write_bit,"ax",%progbits
 601              		.align	2
 602              		.thumb
 603              		.thumb_func
 604              		.type	nRF24_write_bit, %function
 605              	nRF24_write_bit:
 606              	.LFB9:
 240:Generated_Source\PSoC5/nRF24_HAL.c **** 
 241:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 242:Generated_Source\PSoC5/nRF24_HAL.c ****  * Set (1) or clear (0) the specified bit of the specified nRF24 register.
 243:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 244:Generated_Source\PSoC5/nRF24_HAL.c ****  * First we read the specified register and check the content of the specified
 245:Generated_Source\PSoC5/nRF24_HAL.c ****  * bit, exit early if the bit already is the value we wanted, otherwise we set
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 16


 246:Generated_Source\PSoC5/nRF24_HAL.c ****  * the bit to the specified value.
 247:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 248:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be written.
 249:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const uint8_t bit: Position of the bit to be written.
 250:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const bool value: Value (1 or 0) to write into the bit.
 251:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 252:Generated_Source\PSoC5/nRF24_HAL.c **** static void nRF24_write_bit(const nrf_register reg,
 253:Generated_Source\PSoC5/nRF24_HAL.c ****                                   const uint8_t bit, const bool value)
 254:Generated_Source\PSoC5/nRF24_HAL.c **** {
 607              		.loc 1 254 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 16
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0000 80B5     		push	{r7, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 84B0     		sub	sp, sp, #16
 616              		.cfi_def_cfa_offset 24
 617 0004 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 619 0006 0346     		mov	r3, r0
 620 0008 FB71     		strb	r3, [r7, #7]
 621 000a 0B46     		mov	r3, r1
 622 000c BB71     		strb	r3, [r7, #6]
 623 000e 1346     		mov	r3, r2
 624 0010 7B71     		strb	r3, [r7, #5]
 255:Generated_Source\PSoC5/nRF24_HAL.c ****     uint8_t temp = nRF24_read_register(reg);
 625              		.loc 1 255 0
 626 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 627 0014 1846     		mov	r0, r3
 628 0016 FFF7FEFF 		bl	nRF24_read_register
 629 001a 0346     		mov	r3, r0
 630 001c FB73     		strb	r3, [r7, #15]
 256:Generated_Source\PSoC5/nRF24_HAL.c **** 
 257:Generated_Source\PSoC5/nRF24_HAL.c ****     // Read the bit value before writing to it.
 258:Generated_Source\PSoC5/nRF24_HAL.c ****     // Check if the bit is 1
 259:Generated_Source\PSoC5/nRF24_HAL.c ****     if ((temp & (1 << bit)) != 0) {
 631              		.loc 1 259 0
 632 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 633 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 634 0022 42FA03F3 		asr	r3, r2, r3
 635 0026 03F00103 		and	r3, r3, #1
 636 002a 002B     		cmp	r3, #0
 637 002c 03D0     		beq	.L22
 260:Generated_Source\PSoC5/nRF24_HAL.c ****         // it is 1, return if we wanted to set it to 1
 261:Generated_Source\PSoC5/nRF24_HAL.c ****         if (value) {
 638              		.loc 1 261 0
 639 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 640 0030 002B     		cmp	r3, #0
 641 0032 06D0     		beq	.L23
 262:Generated_Source\PSoC5/nRF24_HAL.c ****             return;
 642              		.loc 1 262 0
 643 0034 28E0     		b	.L21
 644              	.L22:
 263:Generated_Source\PSoC5/nRF24_HAL.c ****         }
 264:Generated_Source\PSoC5/nRF24_HAL.c ****     } else { // the bit is 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 17


 265:Generated_Source\PSoC5/nRF24_HAL.c ****         // it is 0, return if we wanted to set it to 0
 266:Generated_Source\PSoC5/nRF24_HAL.c ****         if (!value) {
 645              		.loc 1 266 0
 646 0036 7B79     		ldrb	r3, [r7, #5]
 647 0038 83F00103 		eor	r3, r3, #1
 648 003c DBB2     		uxtb	r3, r3
 649 003e 002B     		cmp	r3, #0
 650 0040 21D1     		bne	.L27
 651              	.L23:
 267:Generated_Source\PSoC5/nRF24_HAL.c ****             return;
 268:Generated_Source\PSoC5/nRF24_HAL.c ****         }
 269:Generated_Source\PSoC5/nRF24_HAL.c ****     }
 270:Generated_Source\PSoC5/nRF24_HAL.c **** 
 271:Generated_Source\PSoC5/nRF24_HAL.c ****     // Calculate the new value to be written into the register
 272:Generated_Source\PSoC5/nRF24_HAL.c ****     temp = value ? temp | (1 << bit) : temp & ~(1 << bit);
 652              		.loc 1 272 0
 653 0042 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 654 0044 002B     		cmp	r3, #0
 655 0046 0AD0     		beq	.L25
 656              		.loc 1 272 0 is_stmt 0 discriminator 1
 657 0048 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 658 004a 0122     		movs	r2, #1
 659 004c 02FA03F3 		lsl	r3, r2, r3
 660 0050 5AB2     		sxtb	r2, r3
 661 0052 97F90F30 		ldrsb	r3, [r7, #15]
 662 0056 1343     		orrs	r3, r3, r2
 663 0058 5BB2     		sxtb	r3, r3
 664 005a DBB2     		uxtb	r3, r3
 665 005c 0BE0     		b	.L26
 666              	.L25:
 667              		.loc 1 272 0 discriminator 2
 668 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 669 0060 0122     		movs	r2, #1
 670 0062 02FA03F3 		lsl	r3, r2, r3
 671 0066 5BB2     		sxtb	r3, r3
 672 0068 DB43     		mvns	r3, r3
 673 006a 5AB2     		sxtb	r2, r3
 674 006c 97F90F30 		ldrsb	r3, [r7, #15]
 675 0070 1340     		ands	r3, r3, r2
 676 0072 5BB2     		sxtb	r3, r3
 677 0074 DBB2     		uxtb	r3, r3
 678              	.L26:
 679              		.loc 1 272 0 discriminator 4
 680 0076 FB73     		strb	r3, [r7, #15]
 273:Generated_Source\PSoC5/nRF24_HAL.c **** 
 274:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_write_register(reg, temp);
 681              		.loc 1 274 0 is_stmt 1 discriminator 4
 682 0078 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 683 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684 007c 1146     		mov	r1, r2
 685 007e 1846     		mov	r0, r3
 686 0080 FFF7FEFF 		bl	nRF24_write_register
 687 0084 00E0     		b	.L21
 688              	.L27:
 267:Generated_Source\PSoC5/nRF24_HAL.c ****             return;
 689              		.loc 1 267 0
 690 0086 00BF     		nop
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 18


 691              	.L21:
 275:Generated_Source\PSoC5/nRF24_HAL.c **** }
 692              		.loc 1 275 0
 693 0088 1037     		adds	r7, r7, #16
 694              		.cfi_def_cfa_offset 8
 695 008a BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 008c 80BD     		pop	{r7, pc}
 699              		.cfi_endproc
 700              	.LFE9:
 701              		.size	nRF24_write_bit, .-nRF24_write_bit
 702 008e 00BF     		.section	.text.nRF24_clear_bit,"ax",%progbits
 703              		.align	2
 704              		.global	nRF24_clear_bit
 705              		.thumb
 706              		.thumb_func
 707              		.type	nRF24_clear_bit, %function
 708              	nRF24_clear_bit:
 709              	.LFB10:
 276:Generated_Source\PSoC5/nRF24_HAL.c **** 
 277:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 278:Generated_Source\PSoC5/nRF24_HAL.c ****  * Set to 0 the specified bit of the specified nRF24 register.
 279:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 280:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be written.
 281:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const uint8_t bit: Bit to be written.
 282:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 283:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_clear_bit(const nrf_register reg, const uint8_t bit)
 284:Generated_Source\PSoC5/nRF24_HAL.c **** {
 710              		.loc 1 284 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 8
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              		.cfi_def_cfa_offset 16
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 722 0006 0346     		mov	r3, r0
 723 0008 0A46     		mov	r2, r1
 724 000a FB71     		strb	r3, [r7, #7]
 725 000c 1346     		mov	r3, r2
 726 000e BB71     		strb	r3, [r7, #6]
 285:Generated_Source\PSoC5/nRF24_HAL.c ****     if (8 < bit) {
 727              		.loc 1 285 0
 728 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 729 0012 082B     		cmp	r3, #8
 730 0014 06D8     		bhi	.L31
 286:Generated_Source\PSoC5/nRF24_HAL.c ****         return;
 287:Generated_Source\PSoC5/nRF24_HAL.c ****     }
 288:Generated_Source\PSoC5/nRF24_HAL.c **** 
 289:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_write_bit(reg, bit, 0);
 731              		.loc 1 289 0
 732 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 19


 733 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 734 001a 0022     		movs	r2, #0
 735 001c 1846     		mov	r0, r3
 736 001e FFF7FEFF 		bl	nRF24_write_bit
 737 0022 00E0     		b	.L28
 738              	.L31:
 286:Generated_Source\PSoC5/nRF24_HAL.c ****         return;
 739              		.loc 1 286 0
 740 0024 00BF     		nop
 741              	.L28:
 290:Generated_Source\PSoC5/nRF24_HAL.c **** }
 742              		.loc 1 290 0
 743 0026 0837     		adds	r7, r7, #8
 744              		.cfi_def_cfa_offset 8
 745 0028 BD46     		mov	sp, r7
 746              		.cfi_def_cfa_register 13
 747              		@ sp needed
 748 002a 80BD     		pop	{r7, pc}
 749              		.cfi_endproc
 750              	.LFE10:
 751              		.size	nRF24_clear_bit, .-nRF24_clear_bit
 752              		.section	.text.nRF24_set_bit,"ax",%progbits
 753              		.align	2
 754              		.global	nRF24_set_bit
 755              		.thumb
 756              		.thumb_func
 757              		.type	nRF24_set_bit, %function
 758              	nRF24_set_bit:
 759              	.LFB11:
 291:Generated_Source\PSoC5/nRF24_HAL.c **** 
 292:Generated_Source\PSoC5/nRF24_HAL.c **** /**
 293:Generated_Source\PSoC5/nRF24_HAL.c ****  * Set to 1 the specified bit of the specified nRF24 register.
 294:Generated_Source\PSoC5/nRF24_HAL.c ****  *
 295:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const nrf_register reg: Register to be written.
 296:Generated_Source\PSoC5/nRF24_HAL.c ****  * @param const uint8_t bit: Bit to be written.
 297:Generated_Source\PSoC5/nRF24_HAL.c ****  */
 298:Generated_Source\PSoC5/nRF24_HAL.c **** void nRF24_set_bit(const nrf_register reg, const uint8_t bit)
 299:Generated_Source\PSoC5/nRF24_HAL.c **** {
 760              		.loc 1 299 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 82B0     		sub	sp, sp, #8
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 0346     		mov	r3, r0
 773 0008 0A46     		mov	r2, r1
 774 000a FB71     		strb	r3, [r7, #7]
 775 000c 1346     		mov	r3, r2
 776 000e BB71     		strb	r3, [r7, #6]
 300:Generated_Source\PSoC5/nRF24_HAL.c ****     if (8 < bit) {
 777              		.loc 1 300 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 20


 778 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 779 0012 082B     		cmp	r3, #8
 780 0014 06D8     		bhi	.L35
 301:Generated_Source\PSoC5/nRF24_HAL.c ****         return;
 302:Generated_Source\PSoC5/nRF24_HAL.c ****     }
 303:Generated_Source\PSoC5/nRF24_HAL.c **** 
 304:Generated_Source\PSoC5/nRF24_HAL.c ****     nRF24_write_bit(reg, bit, 1);
 781              		.loc 1 304 0
 782 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 783 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 784 001a 0122     		movs	r2, #1
 785 001c 1846     		mov	r0, r3
 786 001e FFF7FEFF 		bl	nRF24_write_bit
 787 0022 00E0     		b	.L32
 788              	.L35:
 301:Generated_Source\PSoC5/nRF24_HAL.c ****         return;
 789              		.loc 1 301 0
 790 0024 00BF     		nop
 791              	.L32:
 305:Generated_Source\PSoC5/nRF24_HAL.c **** }
 792              		.loc 1 305 0
 793 0026 0837     		adds	r7, r7, #8
 794              		.cfi_def_cfa_offset 8
 795 0028 BD46     		mov	sp, r7
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 002a 80BD     		pop	{r7, pc}
 799              		.cfi_endproc
 800              	.LFE11:
 801              		.size	nRF24_set_bit, .-nRF24_set_bit
 802              		.text
 803              	.Letext0:
 804              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 805              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 806              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 807              		.file 5 "Generated_Source\\PSoC5\\cytypes.h"
 808              		.file 6 "Generated_Source\\PSoC5\\nRF24_DEFS.h"
 809              		.file 7 "Generated_Source\\PSoC5\\nRF24_HAL.h"
 810              		.section	.debug_info,"",%progbits
 811              	.Ldebug_info0:
 812 0000 62050000 		.4byte	0x562
 813 0004 0400     		.2byte	0x4
 814 0006 00000000 		.4byte	.Ldebug_abbrev0
 815 000a 04       		.byte	0x4
 816 000b 01       		.uleb128 0x1
 817 000c 72000000 		.4byte	.LASF82
 818 0010 0C       		.byte	0xc
 819 0011 3B020000 		.4byte	.LASF83
 820 0015 08050000 		.4byte	.LASF84
 821 0019 00000000 		.4byte	.Ldebug_ranges0+0
 822 001d 00000000 		.4byte	0
 823 0021 00000000 		.4byte	.Ldebug_line0
 824 0025 02       		.uleb128 0x2
 825 0026 01       		.byte	0x1
 826 0027 06       		.byte	0x6
 827 0028 A8030000 		.4byte	.LASF0
 828 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 21


 829 002d 95020000 		.4byte	.LASF9
 830 0031 02       		.byte	0x2
 831 0032 1D       		.byte	0x1d
 832 0033 37000000 		.4byte	0x37
 833 0037 02       		.uleb128 0x2
 834 0038 01       		.byte	0x1
 835 0039 08       		.byte	0x8
 836 003a D2020000 		.4byte	.LASF1
 837 003e 02       		.uleb128 0x2
 838 003f 02       		.byte	0x2
 839 0040 05       		.byte	0x5
 840 0041 48010000 		.4byte	.LASF2
 841 0045 02       		.uleb128 0x2
 842 0046 02       		.byte	0x2
 843 0047 07       		.byte	0x7
 844 0048 39040000 		.4byte	.LASF3
 845 004c 02       		.uleb128 0x2
 846 004d 04       		.byte	0x4
 847 004e 05       		.byte	0x5
 848 004f 5E020000 		.4byte	.LASF4
 849 0053 02       		.uleb128 0x2
 850 0054 04       		.byte	0x4
 851 0055 07       		.byte	0x7
 852 0056 89040000 		.4byte	.LASF5
 853 005a 02       		.uleb128 0x2
 854 005b 08       		.byte	0x8
 855 005c 05       		.byte	0x5
 856 005d 23020000 		.4byte	.LASF6
 857 0061 02       		.uleb128 0x2
 858 0062 08       		.byte	0x8
 859 0063 07       		.byte	0x7
 860 0064 B4030000 		.4byte	.LASF7
 861 0068 04       		.uleb128 0x4
 862 0069 04       		.byte	0x4
 863 006a 05       		.byte	0x5
 864 006b 696E7400 		.ascii	"int\000"
 865 006f 02       		.uleb128 0x2
 866 0070 04       		.byte	0x4
 867 0071 07       		.byte	0x7
 868 0072 E0030000 		.4byte	.LASF8
 869 0076 03       		.uleb128 0x3
 870 0077 88010000 		.4byte	.LASF10
 871 007b 03       		.byte	0x3
 872 007c 18       		.byte	0x18
 873 007d 2C000000 		.4byte	0x2c
 874 0081 03       		.uleb128 0x3
 875 0082 62000000 		.4byte	.LASF11
 876 0086 04       		.byte	0x4
 877 0087 D8       		.byte	0xd8
 878 0088 6F000000 		.4byte	0x6f
 879 008c 02       		.uleb128 0x2
 880 008d 08       		.byte	0x8
 881 008e 04       		.byte	0x4
 882 008f EF020000 		.4byte	.LASF12
 883 0093 02       		.uleb128 0x2
 884 0094 04       		.byte	0x4
 885 0095 07       		.byte	0x7
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 22


 886 0096 69000000 		.4byte	.LASF13
 887 009a 02       		.uleb128 0x2
 888 009b 01       		.byte	0x1
 889 009c 08       		.byte	0x8
 890 009d 34040000 		.4byte	.LASF14
 891 00a1 05       		.uleb128 0x5
 892 00a2 AD010000 		.4byte	.LASF15
 893 00a6 05       		.byte	0x5
 894 00a7 9201     		.2byte	0x192
 895 00a9 37000000 		.4byte	0x37
 896 00ad 02       		.uleb128 0x2
 897 00ae 04       		.byte	0x4
 898 00af 04       		.byte	0x4
 899 00b0 09020000 		.4byte	.LASF16
 900 00b4 02       		.uleb128 0x2
 901 00b5 08       		.byte	0x8
 902 00b6 04       		.byte	0x4
 903 00b7 9B040000 		.4byte	.LASF17
 904 00bb 06       		.uleb128 0x6
 905 00bc 01       		.byte	0x1
 906 00bd 37000000 		.4byte	0x37
 907 00c1 06       		.byte	0x6
 908 00c2 1E       		.byte	0x1e
 909 00c3 64010000 		.4byte	0x164
 910 00c7 07       		.uleb128 0x7
 911 00c8 BF040000 		.4byte	.LASF18
 912 00cc 00       		.byte	0
 913 00cd 07       		.uleb128 0x7
 914 00ce 7A010000 		.4byte	.LASF19
 915 00d2 01       		.byte	0x1
 916 00d3 07       		.uleb128 0x7
 917 00d4 38000000 		.4byte	.LASF20
 918 00d8 02       		.byte	0x2
 919 00d9 07       		.uleb128 0x7
 920 00da F7040000 		.4byte	.LASF21
 921 00de 03       		.byte	0x3
 922 00df 07       		.uleb128 0x7
 923 00e0 CE040000 		.4byte	.LASF22
 924 00e4 04       		.byte	0x4
 925 00e5 07       		.uleb128 0x7
 926 00e6 B3010000 		.4byte	.LASF23
 927 00ea 05       		.byte	0x5
 928 00eb 07       		.uleb128 0x7
 929 00ec 11000000 		.4byte	.LASF24
 930 00f0 06       		.byte	0x6
 931 00f1 07       		.uleb128 0x7
 932 00f2 9E010000 		.4byte	.LASF25
 933 00f6 07       		.byte	0x7
 934 00f7 07       		.uleb128 0x7
 935 00f8 4F000000 		.4byte	.LASF26
 936 00fc 08       		.byte	0x8
 937 00fd 07       		.uleb128 0x7
 938 00fe 67020000 		.4byte	.LASF27
 939 0102 09       		.byte	0x9
 940 0103 07       		.uleb128 0x7
 941 0104 FB020000 		.4byte	.LASF28
 942 0108 0A       		.byte	0xa
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 23


 943 0109 07       		.uleb128 0x7
 944 010a 0E030000 		.4byte	.LASF29
 945 010e 0B       		.byte	0xb
 946 010f 07       		.uleb128 0x7
 947 0110 21030000 		.4byte	.LASF30
 948 0114 0C       		.byte	0xc
 949 0115 07       		.uleb128 0x7
 950 0116 34030000 		.4byte	.LASF31
 951 011a 0D       		.byte	0xd
 952 011b 07       		.uleb128 0x7
 953 011c 47030000 		.4byte	.LASF32
 954 0120 0E       		.byte	0xe
 955 0121 07       		.uleb128 0x7
 956 0122 5A030000 		.4byte	.LASF33
 957 0126 0F       		.byte	0xf
 958 0127 07       		.uleb128 0x7
 959 0128 85020000 		.4byte	.LASF34
 960 012c 10       		.byte	0x10
 961 012d 07       		.uleb128 0x7
 962 012e 98050000 		.4byte	.LASF35
 963 0132 11       		.byte	0x11
 964 0133 07       		.uleb128 0x7
 965 0134 26010000 		.4byte	.LASF36
 966 0138 12       		.byte	0x12
 967 0139 07       		.uleb128 0x7
 968 013a 37010000 		.4byte	.LASF37
 969 013e 13       		.byte	0x13
 970 013f 07       		.uleb128 0x7
 971 0140 B2050000 		.4byte	.LASF38
 972 0144 14       		.byte	0x14
 973 0145 07       		.uleb128 0x7
 974 0146 52010000 		.4byte	.LASF39
 975 014a 15       		.byte	0x15
 976 014b 07       		.uleb128 0x7
 977 014c 63010000 		.4byte	.LASF40
 978 0150 16       		.byte	0x16
 979 0151 07       		.uleb128 0x7
 980 0152 12010000 		.4byte	.LASF41
 981 0156 17       		.byte	0x17
 982 0157 07       		.uleb128 0x7
 983 0158 52040000 		.4byte	.LASF42
 984 015c 1C       		.byte	0x1c
 985 015d 07       		.uleb128 0x7
 986 015e 22000000 		.4byte	.LASF43
 987 0162 1D       		.byte	0x1d
 988 0163 00       		.byte	0
 989 0164 03       		.uleb128 0x3
 990 0165 ED030000 		.4byte	.LASF44
 991 0169 06       		.byte	0x6
 992 016a 39       		.byte	0x39
 993 016b BB000000 		.4byte	0xbb
 994 016f 06       		.uleb128 0x6
 995 0170 01       		.byte	0x1
 996 0171 37000000 		.4byte	0x37
 997 0175 06       		.byte	0x6
 998 0176 3C       		.byte	0x3c
 999 0177 BE010000 		.4byte	0x1be
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 24


 1000 017b 07       		.uleb128 0x7
 1001 017c 09040000 		.4byte	.LASF45
 1002 0180 00       		.byte	0
 1003 0181 07       		.uleb128 0x7
 1004 0182 1C040000 		.4byte	.LASF46
 1005 0186 20       		.byte	0x20
 1006 0187 07       		.uleb128 0x7
 1007 0188 93030000 		.4byte	.LASF47
 1008 018c 61       		.byte	0x61
 1009 018d 07       		.uleb128 0x7
 1010 018e C1010000 		.4byte	.LASF48
 1011 0192 A0       		.byte	0xa0
 1012 0193 07       		.uleb128 0x7
 1013 0194 00000000 		.4byte	.LASF49
 1014 0198 E1       		.byte	0xe1
 1015 0199 07       		.uleb128 0x7
 1016 019a 6D030000 		.4byte	.LASF50
 1017 019e E2       		.byte	0xe2
 1018 019f 07       		.uleb128 0x7
 1019 01a0 AB040000 		.4byte	.LASF51
 1020 01a4 E3       		.byte	0xe3
 1021 01a5 07       		.uleb128 0x7
 1022 01a6 65040000 		.4byte	.LASF52
 1023 01aa 60       		.byte	0x60
 1024 01ab 07       		.uleb128 0x7
 1025 01ac E1040000 		.4byte	.LASF53
 1026 01b0 A8       		.byte	0xa8
 1027 01b1 07       		.uleb128 0x7
 1028 01b2 64050000 		.4byte	.LASF54
 1029 01b6 B0       		.byte	0xb0
 1030 01b7 07       		.uleb128 0x7
 1031 01b8 73020000 		.4byte	.LASF55
 1032 01bc FF       		.byte	0xff
 1033 01bd 00       		.byte	0
 1034 01be 06       		.uleb128 0x6
 1035 01bf 01       		.byte	0x1
 1036 01c0 37000000 		.4byte	0x37
 1037 01c4 07       		.byte	0x7
 1038 01c5 2A       		.byte	0x2a
 1039 01c6 D7010000 		.4byte	0x1d7
 1040 01ca 07       		.uleb128 0x7
 1041 01cb FE010000 		.4byte	.LASF56
 1042 01cf 00       		.byte	0
 1043 01d0 07       		.uleb128 0x7
 1044 01d1 A9050000 		.4byte	.LASF57
 1045 01d5 01       		.byte	0x1
 1046 01d6 00       		.byte	0
 1047 01d7 03       		.uleb128 0x3
 1048 01d8 09010000 		.4byte	.LASF58
 1049 01dc 07       		.byte	0x7
 1050 01dd 2D       		.byte	0x2d
 1051 01de BE010000 		.4byte	0x1be
 1052 01e2 08       		.uleb128 0x8
 1053 01e3 FA030000 		.4byte	.LASF59
 1054 01e7 01       		.byte	0x1
 1055 01e8 32       		.byte	0x32
 1056 01e9 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 25


 1057 01ed 26000000 		.4byte	.LFE0-.LFB0
 1058 01f1 01       		.uleb128 0x1
 1059 01f2 9C       		.byte	0x9c
 1060 01f3 06020000 		.4byte	0x206
 1061 01f7 09       		.uleb128 0x9
 1062 01f8 32000000 		.4byte	.LASF61
 1063 01fc 01       		.byte	0x1
 1064 01fd 32       		.byte	0x32
 1065 01fe D7010000 		.4byte	0x1d7
 1066 0202 02       		.uleb128 0x2
 1067 0203 91       		.byte	0x91
 1068 0204 77       		.sleb128 -9
 1069 0205 00       		.byte	0
 1070 0206 08       		.uleb128 0x8
 1071 0207 C3050000 		.4byte	.LASF60
 1072 020b 01       		.byte	0x1
 1073 020c 43       		.byte	0x43
 1074 020d 00000000 		.4byte	.LFB1
 1075 0211 26000000 		.4byte	.LFE1-.LFB1
 1076 0215 01       		.uleb128 0x1
 1077 0216 9C       		.byte	0x9c
 1078 0217 2A020000 		.4byte	0x22a
 1079 021b 09       		.uleb128 0x9
 1080 021c 32000000 		.4byte	.LASF61
 1081 0220 01       		.byte	0x1
 1082 0221 43       		.byte	0x43
 1083 0222 D7010000 		.4byte	0x1d7
 1084 0226 02       		.uleb128 0x2
 1085 0227 91       		.byte	0x91
 1086 0228 77       		.sleb128 -9
 1087 0229 00       		.byte	0
 1088 022a 08       		.uleb128 0x8
 1089 022b 7F050000 		.4byte	.LASF62
 1090 022f 01       		.byte	0x1
 1091 0230 65       		.byte	0x65
 1092 0231 00000000 		.4byte	.LFB2
 1093 0235 64000000 		.4byte	.LFE2-.LFB2
 1094 0239 01       		.uleb128 0x1
 1095 023a 9C       		.byte	0x9c
 1096 023b 7F020000 		.4byte	0x27f
 1097 023f 0A       		.uleb128 0xa
 1098 0240 696E00   		.ascii	"in\000"
 1099 0243 01       		.byte	0x1
 1100 0244 65       		.byte	0x65
 1101 0245 7F020000 		.4byte	0x27f
 1102 0249 02       		.uleb128 0x2
 1103 024a 91       		.byte	0x91
 1104 024b 64       		.sleb128 -28
 1105 024c 0A       		.uleb128 0xa
 1106 024d 6F757400 		.ascii	"out\000"
 1107 0251 01       		.byte	0x1
 1108 0252 65       		.byte	0x65
 1109 0253 8A020000 		.4byte	0x28a
 1110 0257 02       		.uleb128 0x2
 1111 0258 91       		.byte	0x91
 1112 0259 60       		.sleb128 -32
 1113 025a 09       		.uleb128 0x9
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 26


 1114 025b 8E050000 		.4byte	.LASF63
 1115 025f 01       		.byte	0x1
 1116 0260 65       		.byte	0x65
 1117 0261 90020000 		.4byte	0x290
 1118 0265 02       		.uleb128 0x2
 1119 0266 91       		.byte	0x91
 1120 0267 5C       		.sleb128 -36
 1121 0268 0B       		.uleb128 0xb
 1122 0269 16000000 		.4byte	.LBB2
 1123 026d 40000000 		.4byte	.LBE2-.LBB2
 1124 0271 0C       		.uleb128 0xc
 1125 0272 6900     		.ascii	"i\000"
 1126 0274 01       		.byte	0x1
 1127 0275 78       		.byte	0x78
 1128 0276 81000000 		.4byte	0x81
 1129 027a 02       		.uleb128 0x2
 1130 027b 91       		.byte	0x91
 1131 027c 6C       		.sleb128 -20
 1132 027d 00       		.byte	0
 1133 027e 00       		.byte	0
 1134 027f 0D       		.uleb128 0xd
 1135 0280 04       		.byte	0x4
 1136 0281 85020000 		.4byte	0x285
 1137 0285 0E       		.uleb128 0xe
 1138 0286 76000000 		.4byte	0x76
 1139 028a 0D       		.uleb128 0xd
 1140 028b 04       		.byte	0x4
 1141 028c 76000000 		.4byte	0x76
 1142 0290 0E       		.uleb128 0xe
 1143 0291 81000000 		.4byte	0x81
 1144 0295 0F       		.uleb128 0xf
 1145 0296 7E030000 		.4byte	.LASF85
 1146 029a 01       		.byte	0x1
 1147 029b 85       		.byte	0x85
 1148 029c 00000000 		.4byte	.LFB3
 1149 02a0 0C000000 		.4byte	.LFE3-.LFB3
 1150 02a4 01       		.uleb128 0x1
 1151 02a5 9C       		.byte	0x9c
 1152 02a6 10       		.uleb128 0x10
 1153 02a7 0F020000 		.4byte	.LASF76
 1154 02ab 01       		.byte	0x1
 1155 02ac 9E       		.byte	0x9e
 1156 02ad 76000000 		.4byte	0x76
 1157 02b1 00000000 		.4byte	.LFB4
 1158 02b5 30000000 		.4byte	.LFE4-.LFB4
 1159 02b9 01       		.uleb128 0x1
 1160 02ba 9C       		.byte	0x9c
 1161 02bb EA020000 		.4byte	0x2ea
 1162 02bf 0A       		.uleb128 0xa
 1163 02c0 72656700 		.ascii	"reg\000"
 1164 02c4 01       		.byte	0x1
 1165 02c5 9E       		.byte	0x9e
 1166 02c6 EA020000 		.4byte	0x2ea
 1167 02ca 02       		.uleb128 0x2
 1168 02cb 91       		.byte	0x91
 1169 02cc 6F       		.sleb128 -17
 1170 02cd 11       		.uleb128 0x11
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 27


 1171 02ce 00010000 		.4byte	.LASF64
 1172 02d2 01       		.byte	0x1
 1173 02d3 A0       		.byte	0xa0
 1174 02d4 FF020000 		.4byte	0x2ff
 1175 02d8 02       		.uleb128 0x2
 1176 02d9 91       		.byte	0x91
 1177 02da 74       		.sleb128 -12
 1178 02db 11       		.uleb128 0x11
 1179 02dc 31020000 		.4byte	.LASF65
 1180 02e0 01       		.byte	0x1
 1181 02e1 A3       		.byte	0xa3
 1182 02e2 04030000 		.4byte	0x304
 1183 02e6 02       		.uleb128 0x2
 1184 02e7 91       		.byte	0x91
 1185 02e8 70       		.sleb128 -16
 1186 02e9 00       		.byte	0
 1187 02ea 0E       		.uleb128 0xe
 1188 02eb 64010000 		.4byte	0x164
 1189 02ef 12       		.uleb128 0x12
 1190 02f0 85020000 		.4byte	0x285
 1191 02f4 FF020000 		.4byte	0x2ff
 1192 02f8 13       		.uleb128 0x13
 1193 02f9 93000000 		.4byte	0x93
 1194 02fd 01       		.byte	0x1
 1195 02fe 00       		.byte	0
 1196 02ff 0E       		.uleb128 0xe
 1197 0300 EF020000 		.4byte	0x2ef
 1198 0304 12       		.uleb128 0x12
 1199 0305 76000000 		.4byte	0x76
 1200 0309 14030000 		.4byte	0x314
 1201 030d 13       		.uleb128 0x13
 1202 030e 93000000 		.4byte	0x93
 1203 0312 01       		.byte	0x1
 1204 0313 00       		.byte	0
 1205 0314 08       		.uleb128 0x8
 1206 0315 B9020000 		.4byte	.LASF66
 1207 0319 01       		.byte	0x1
 1208 031a B2       		.byte	0xb2
 1209 031b 00000000 		.4byte	.LFB5
 1210 031f BC000000 		.4byte	.LFE5-.LFB5
 1211 0323 01       		.uleb128 0x1
 1212 0324 9C       		.byte	0x9c
 1213 0325 72030000 		.4byte	0x372
 1214 0329 0A       		.uleb128 0xa
 1215 032a 72656700 		.ascii	"reg\000"
 1216 032e 01       		.byte	0x1
 1217 032f B2       		.byte	0xb2
 1218 0330 EA020000 		.4byte	0x2ea
 1219 0334 02       		.uleb128 0x2
 1220 0335 91       		.byte	0x91
 1221 0336 4F       		.sleb128 -49
 1222 0337 09       		.uleb128 0x9
 1223 0338 60040000 		.4byte	.LASF67
 1224 033c 01       		.byte	0x1
 1225 033d B3       		.byte	0xb3
 1226 033e 8A020000 		.4byte	0x28a
 1227 0342 02       		.uleb128 0x2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 28


 1228 0343 91       		.byte	0x91
 1229 0344 48       		.sleb128 -56
 1230 0345 09       		.uleb128 0x9
 1231 0346 2F040000 		.4byte	.LASF68
 1232 034a 01       		.byte	0x1
 1233 034b B3       		.byte	0xb3
 1234 034c 90020000 		.4byte	0x290
 1235 0350 02       		.uleb128 0x2
 1236 0351 91       		.byte	0x91
 1237 0352 44       		.sleb128 -60
 1238 0353 11       		.uleb128 0x11
 1239 0354 A2040000 		.4byte	.LASF69
 1240 0358 01       		.byte	0x1
 1241 0359 B5       		.byte	0xb5
 1242 035a 72030000 		.4byte	0x372
 1243 035e 03       		.uleb128 0x3
 1244 035f 91       		.byte	0x91
 1245 0360 54       		.sleb128 -44
 1246 0361 06       		.byte	0x6
 1247 0362 11       		.uleb128 0x11
 1248 0363 7F020000 		.4byte	.LASF70
 1249 0367 01       		.byte	0x1
 1250 0368 B6       		.byte	0xb6
 1251 0369 85030000 		.4byte	0x385
 1252 036d 03       		.uleb128 0x3
 1253 036e 91       		.byte	0x91
 1254 036f 50       		.sleb128 -48
 1255 0370 06       		.byte	0x6
 1256 0371 00       		.byte	0
 1257 0372 12       		.uleb128 0x12
 1258 0373 76000000 		.4byte	0x76
 1259 0377 85030000 		.4byte	0x385
 1260 037b 14       		.uleb128 0x14
 1261 037c 93000000 		.4byte	0x93
 1262 0380 45030000 		.4byte	0x345
 1263 0384 00       		.byte	0
 1264 0385 12       		.uleb128 0x12
 1265 0386 76000000 		.4byte	0x76
 1266 038a 98030000 		.4byte	0x398
 1267 038e 14       		.uleb128 0x14
 1268 038f 93000000 		.4byte	0x93
 1269 0393 45030000 		.4byte	0x345
 1270 0397 00       		.byte	0
 1271 0398 08       		.uleb128 0x8
 1272 0399 CB030000 		.4byte	.LASF71
 1273 039d 01       		.byte	0x1
 1274 039e C7       		.byte	0xc7
 1275 039f 00000000 		.4byte	.LFB6
 1276 03a3 3A000000 		.4byte	.LFE6-.LFB6
 1277 03a7 01       		.uleb128 0x1
 1278 03a8 9C       		.byte	0x9c
 1279 03a9 E6030000 		.4byte	0x3e6
 1280 03ad 0A       		.uleb128 0xa
 1281 03ae 72656700 		.ascii	"reg\000"
 1282 03b2 01       		.byte	0x1
 1283 03b3 C7       		.byte	0xc7
 1284 03b4 EA020000 		.4byte	0x2ea
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 29


 1285 03b8 02       		.uleb128 0x2
 1286 03b9 91       		.byte	0x91
 1287 03ba 6F       		.sleb128 -17
 1288 03bb 09       		.uleb128 0x9
 1289 03bc 60040000 		.4byte	.LASF67
 1290 03c0 01       		.byte	0x1
 1291 03c1 C7       		.byte	0xc7
 1292 03c2 85020000 		.4byte	0x285
 1293 03c6 02       		.uleb128 0x2
 1294 03c7 91       		.byte	0x91
 1295 03c8 6E       		.sleb128 -18
 1296 03c9 11       		.uleb128 0x11
 1297 03ca 90010000 		.4byte	.LASF72
 1298 03ce 01       		.byte	0x1
 1299 03cf C9       		.byte	0xc9
 1300 03d0 E6030000 		.4byte	0x3e6
 1301 03d4 02       		.uleb128 0x2
 1302 03d5 91       		.byte	0x91
 1303 03d6 74       		.sleb128 -12
 1304 03d7 11       		.uleb128 0x11
 1305 03d8 A2040000 		.4byte	.LASF69
 1306 03dc 01       		.byte	0x1
 1307 03dd CA       		.byte	0xca
 1308 03de 04030000 		.4byte	0x304
 1309 03e2 02       		.uleb128 0x2
 1310 03e3 91       		.byte	0x91
 1311 03e4 70       		.sleb128 -16
 1312 03e5 00       		.byte	0
 1313 03e6 0E       		.uleb128 0xe
 1314 03e7 EF020000 		.4byte	0x2ef
 1315 03eb 08       		.uleb128 0x8
 1316 03ec E4010000 		.4byte	.LASF73
 1317 03f0 01       		.byte	0x1
 1318 03f1 D6       		.byte	0xd6
 1319 03f2 00000000 		.4byte	.LFB7
 1320 03f6 C2000000 		.4byte	.LFE7-.LFB7
 1321 03fa 01       		.uleb128 0x1
 1322 03fb 9C       		.byte	0x9c
 1323 03fc 49040000 		.4byte	0x449
 1324 0400 0A       		.uleb128 0xa
 1325 0401 72656700 		.ascii	"reg\000"
 1326 0405 01       		.byte	0x1
 1327 0406 D6       		.byte	0xd6
 1328 0407 EA020000 		.4byte	0x2ea
 1329 040b 02       		.uleb128 0x2
 1330 040c 91       		.byte	0x91
 1331 040d 4F       		.sleb128 -49
 1332 040e 09       		.uleb128 0x9
 1333 040f 60040000 		.4byte	.LASF67
 1334 0413 01       		.byte	0x1
 1335 0414 D7       		.byte	0xd7
 1336 0415 7F020000 		.4byte	0x27f
 1337 0419 02       		.uleb128 0x2
 1338 041a 91       		.byte	0x91
 1339 041b 48       		.sleb128 -56
 1340 041c 09       		.uleb128 0x9
 1341 041d 2F040000 		.4byte	.LASF68
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 30


 1342 0421 01       		.byte	0x1
 1343 0422 D7       		.byte	0xd7
 1344 0423 90020000 		.4byte	0x290
 1345 0427 02       		.uleb128 0x2
 1346 0428 91       		.byte	0x91
 1347 0429 44       		.sleb128 -60
 1348 042a 11       		.uleb128 0x11
 1349 042b AD020000 		.4byte	.LASF74
 1350 042f 01       		.byte	0x1
 1351 0430 D9       		.byte	0xd9
 1352 0431 49040000 		.4byte	0x449
 1353 0435 03       		.uleb128 0x3
 1354 0436 91       		.byte	0x91
 1355 0437 54       		.sleb128 -44
 1356 0438 06       		.byte	0x6
 1357 0439 11       		.uleb128 0x11
 1358 043a 9F020000 		.4byte	.LASF75
 1359 043e 01       		.byte	0x1
 1360 043f DA       		.byte	0xda
 1361 0440 5C040000 		.4byte	0x45c
 1362 0444 03       		.uleb128 0x3
 1363 0445 91       		.byte	0x91
 1364 0446 50       		.sleb128 -48
 1365 0447 06       		.byte	0x6
 1366 0448 00       		.byte	0
 1367 0449 12       		.uleb128 0x12
 1368 044a 76000000 		.4byte	0x76
 1369 044e 5C040000 		.4byte	0x45c
 1370 0452 14       		.uleb128 0x14
 1371 0453 93000000 		.4byte	0x93
 1372 0457 1C040000 		.4byte	0x41c
 1373 045b 00       		.byte	0
 1374 045c 12       		.uleb128 0x12
 1375 045d 76000000 		.4byte	0x76
 1376 0461 6F040000 		.4byte	0x46f
 1377 0465 14       		.uleb128 0x14
 1378 0466 93000000 		.4byte	0x93
 1379 046a 1C040000 		.4byte	0x41c
 1380 046e 00       		.byte	0
 1381 046f 10       		.uleb128 0x10
 1382 0470 E0020000 		.4byte	.LASF77
 1383 0474 01       		.byte	0x1
 1384 0475 EC       		.byte	0xec
 1385 0476 A5040000 		.4byte	0x4a5
 1386 047a 00000000 		.4byte	.LFB8
 1387 047e 38000000 		.4byte	.LFE8-.LFB8
 1388 0482 01       		.uleb128 0x1
 1389 0483 9C       		.byte	0x9c
 1390 0484 A5040000 		.4byte	0x4a5
 1391 0488 0A       		.uleb128 0xa
 1392 0489 72656700 		.ascii	"reg\000"
 1393 048d 01       		.byte	0x1
 1394 048e EC       		.byte	0xec
 1395 048f EA020000 		.4byte	0x2ea
 1396 0493 02       		.uleb128 0x2
 1397 0494 91       		.byte	0x91
 1398 0495 77       		.sleb128 -9
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 31


 1399 0496 0A       		.uleb128 0xa
 1400 0497 62697400 		.ascii	"bit\000"
 1401 049b 01       		.byte	0x1
 1402 049c EC       		.byte	0xec
 1403 049d 85020000 		.4byte	0x285
 1404 04a1 02       		.uleb128 0x2
 1405 04a2 91       		.byte	0x91
 1406 04a3 76       		.sleb128 -10
 1407 04a4 00       		.byte	0
 1408 04a5 02       		.uleb128 0x2
 1409 04a6 01       		.byte	0x1
 1410 04a7 02       		.byte	0x2
 1411 04a8 4C040000 		.4byte	.LASF78
 1412 04ac 15       		.uleb128 0x15
 1413 04ad 79040000 		.4byte	.LASF86
 1414 04b1 01       		.byte	0x1
 1415 04b2 FC       		.byte	0xfc
 1416 04b3 00000000 		.4byte	.LFB9
 1417 04b7 8E000000 		.4byte	.LFE9-.LFB9
 1418 04bb 01       		.uleb128 0x1
 1419 04bc 9C       		.byte	0x9c
 1420 04bd FA040000 		.4byte	0x4fa
 1421 04c1 0A       		.uleb128 0xa
 1422 04c2 72656700 		.ascii	"reg\000"
 1423 04c6 01       		.byte	0x1
 1424 04c7 FC       		.byte	0xfc
 1425 04c8 EA020000 		.4byte	0x2ea
 1426 04cc 02       		.uleb128 0x2
 1427 04cd 91       		.byte	0x91
 1428 04ce 6F       		.sleb128 -17
 1429 04cf 0A       		.uleb128 0xa
 1430 04d0 62697400 		.ascii	"bit\000"
 1431 04d4 01       		.byte	0x1
 1432 04d5 FD       		.byte	0xfd
 1433 04d6 85020000 		.4byte	0x285
 1434 04da 02       		.uleb128 0x2
 1435 04db 91       		.byte	0x91
 1436 04dc 6E       		.sleb128 -18
 1437 04dd 09       		.uleb128 0x9
 1438 04de 74010000 		.4byte	.LASF79
 1439 04e2 01       		.byte	0x1
 1440 04e3 FD       		.byte	0xfd
 1441 04e4 FA040000 		.4byte	0x4fa
 1442 04e8 02       		.uleb128 0x2
 1443 04e9 91       		.byte	0x91
 1444 04ea 6D       		.sleb128 -19
 1445 04eb 11       		.uleb128 0x11
 1446 04ec 4A000000 		.4byte	.LASF80
 1447 04f0 01       		.byte	0x1
 1448 04f1 FF       		.byte	0xff
 1449 04f2 76000000 		.4byte	0x76
 1450 04f6 02       		.uleb128 0x2
 1451 04f7 91       		.byte	0x91
 1452 04f8 77       		.sleb128 -9
 1453 04f9 00       		.byte	0
 1454 04fa 0E       		.uleb128 0xe
 1455 04fb A5040000 		.4byte	0x4a5
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 32


 1456 04ff 16       		.uleb128 0x16
 1457 0500 D2050000 		.4byte	.LASF81
 1458 0504 01       		.byte	0x1
 1459 0505 1B01     		.2byte	0x11b
 1460 0507 00000000 		.4byte	.LFB10
 1461 050b 2C000000 		.4byte	.LFE10-.LFB10
 1462 050f 01       		.uleb128 0x1
 1463 0510 9C       		.byte	0x9c
 1464 0511 34050000 		.4byte	0x534
 1465 0515 17       		.uleb128 0x17
 1466 0516 72656700 		.ascii	"reg\000"
 1467 051a 01       		.byte	0x1
 1468 051b 1B01     		.2byte	0x11b
 1469 051d EA020000 		.4byte	0x2ea
 1470 0521 02       		.uleb128 0x2
 1471 0522 91       		.byte	0x91
 1472 0523 77       		.sleb128 -9
 1473 0524 17       		.uleb128 0x17
 1474 0525 62697400 		.ascii	"bit\000"
 1475 0529 01       		.byte	0x1
 1476 052a 1B01     		.2byte	0x11b
 1477 052c 85020000 		.4byte	0x285
 1478 0530 02       		.uleb128 0x2
 1479 0531 91       		.byte	0x91
 1480 0532 76       		.sleb128 -10
 1481 0533 00       		.byte	0
 1482 0534 18       		.uleb128 0x18
 1483 0535 D6010000 		.4byte	.LASF87
 1484 0539 01       		.byte	0x1
 1485 053a 2A01     		.2byte	0x12a
 1486 053c 00000000 		.4byte	.LFB11
 1487 0540 2C000000 		.4byte	.LFE11-.LFB11
 1488 0544 01       		.uleb128 0x1
 1489 0545 9C       		.byte	0x9c
 1490 0546 17       		.uleb128 0x17
 1491 0547 72656700 		.ascii	"reg\000"
 1492 054b 01       		.byte	0x1
 1493 054c 2A01     		.2byte	0x12a
 1494 054e EA020000 		.4byte	0x2ea
 1495 0552 02       		.uleb128 0x2
 1496 0553 91       		.byte	0x91
 1497 0554 77       		.sleb128 -9
 1498 0555 17       		.uleb128 0x17
 1499 0556 62697400 		.ascii	"bit\000"
 1500 055a 01       		.byte	0x1
 1501 055b 2A01     		.2byte	0x12a
 1502 055d 85020000 		.4byte	0x285
 1503 0561 02       		.uleb128 0x2
 1504 0562 91       		.byte	0x91
 1505 0563 76       		.sleb128 -10
 1506 0564 00       		.byte	0
 1507 0565 00       		.byte	0
 1508              		.section	.debug_abbrev,"",%progbits
 1509              	.Ldebug_abbrev0:
 1510 0000 01       		.uleb128 0x1
 1511 0001 11       		.uleb128 0x11
 1512 0002 01       		.byte	0x1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 33


 1513 0003 25       		.uleb128 0x25
 1514 0004 0E       		.uleb128 0xe
 1515 0005 13       		.uleb128 0x13
 1516 0006 0B       		.uleb128 0xb
 1517 0007 03       		.uleb128 0x3
 1518 0008 0E       		.uleb128 0xe
 1519 0009 1B       		.uleb128 0x1b
 1520 000a 0E       		.uleb128 0xe
 1521 000b 55       		.uleb128 0x55
 1522 000c 17       		.uleb128 0x17
 1523 000d 11       		.uleb128 0x11
 1524 000e 01       		.uleb128 0x1
 1525 000f 10       		.uleb128 0x10
 1526 0010 17       		.uleb128 0x17
 1527 0011 00       		.byte	0
 1528 0012 00       		.byte	0
 1529 0013 02       		.uleb128 0x2
 1530 0014 24       		.uleb128 0x24
 1531 0015 00       		.byte	0
 1532 0016 0B       		.uleb128 0xb
 1533 0017 0B       		.uleb128 0xb
 1534 0018 3E       		.uleb128 0x3e
 1535 0019 0B       		.uleb128 0xb
 1536 001a 03       		.uleb128 0x3
 1537 001b 0E       		.uleb128 0xe
 1538 001c 00       		.byte	0
 1539 001d 00       		.byte	0
 1540 001e 03       		.uleb128 0x3
 1541 001f 16       		.uleb128 0x16
 1542 0020 00       		.byte	0
 1543 0021 03       		.uleb128 0x3
 1544 0022 0E       		.uleb128 0xe
 1545 0023 3A       		.uleb128 0x3a
 1546 0024 0B       		.uleb128 0xb
 1547 0025 3B       		.uleb128 0x3b
 1548 0026 0B       		.uleb128 0xb
 1549 0027 49       		.uleb128 0x49
 1550 0028 13       		.uleb128 0x13
 1551 0029 00       		.byte	0
 1552 002a 00       		.byte	0
 1553 002b 04       		.uleb128 0x4
 1554 002c 24       		.uleb128 0x24
 1555 002d 00       		.byte	0
 1556 002e 0B       		.uleb128 0xb
 1557 002f 0B       		.uleb128 0xb
 1558 0030 3E       		.uleb128 0x3e
 1559 0031 0B       		.uleb128 0xb
 1560 0032 03       		.uleb128 0x3
 1561 0033 08       		.uleb128 0x8
 1562 0034 00       		.byte	0
 1563 0035 00       		.byte	0
 1564 0036 05       		.uleb128 0x5
 1565 0037 16       		.uleb128 0x16
 1566 0038 00       		.byte	0
 1567 0039 03       		.uleb128 0x3
 1568 003a 0E       		.uleb128 0xe
 1569 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 34


 1570 003c 0B       		.uleb128 0xb
 1571 003d 3B       		.uleb128 0x3b
 1572 003e 05       		.uleb128 0x5
 1573 003f 49       		.uleb128 0x49
 1574 0040 13       		.uleb128 0x13
 1575 0041 00       		.byte	0
 1576 0042 00       		.byte	0
 1577 0043 06       		.uleb128 0x6
 1578 0044 04       		.uleb128 0x4
 1579 0045 01       		.byte	0x1
 1580 0046 0B       		.uleb128 0xb
 1581 0047 0B       		.uleb128 0xb
 1582 0048 49       		.uleb128 0x49
 1583 0049 13       		.uleb128 0x13
 1584 004a 3A       		.uleb128 0x3a
 1585 004b 0B       		.uleb128 0xb
 1586 004c 3B       		.uleb128 0x3b
 1587 004d 0B       		.uleb128 0xb
 1588 004e 01       		.uleb128 0x1
 1589 004f 13       		.uleb128 0x13
 1590 0050 00       		.byte	0
 1591 0051 00       		.byte	0
 1592 0052 07       		.uleb128 0x7
 1593 0053 28       		.uleb128 0x28
 1594 0054 00       		.byte	0
 1595 0055 03       		.uleb128 0x3
 1596 0056 0E       		.uleb128 0xe
 1597 0057 1C       		.uleb128 0x1c
 1598 0058 0B       		.uleb128 0xb
 1599 0059 00       		.byte	0
 1600 005a 00       		.byte	0
 1601 005b 08       		.uleb128 0x8
 1602 005c 2E       		.uleb128 0x2e
 1603 005d 01       		.byte	0x1
 1604 005e 3F       		.uleb128 0x3f
 1605 005f 19       		.uleb128 0x19
 1606 0060 03       		.uleb128 0x3
 1607 0061 0E       		.uleb128 0xe
 1608 0062 3A       		.uleb128 0x3a
 1609 0063 0B       		.uleb128 0xb
 1610 0064 3B       		.uleb128 0x3b
 1611 0065 0B       		.uleb128 0xb
 1612 0066 27       		.uleb128 0x27
 1613 0067 19       		.uleb128 0x19
 1614 0068 11       		.uleb128 0x11
 1615 0069 01       		.uleb128 0x1
 1616 006a 12       		.uleb128 0x12
 1617 006b 06       		.uleb128 0x6
 1618 006c 40       		.uleb128 0x40
 1619 006d 18       		.uleb128 0x18
 1620 006e 9642     		.uleb128 0x2116
 1621 0070 19       		.uleb128 0x19
 1622 0071 01       		.uleb128 0x1
 1623 0072 13       		.uleb128 0x13
 1624 0073 00       		.byte	0
 1625 0074 00       		.byte	0
 1626 0075 09       		.uleb128 0x9
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 35


 1627 0076 05       		.uleb128 0x5
 1628 0077 00       		.byte	0
 1629 0078 03       		.uleb128 0x3
 1630 0079 0E       		.uleb128 0xe
 1631 007a 3A       		.uleb128 0x3a
 1632 007b 0B       		.uleb128 0xb
 1633 007c 3B       		.uleb128 0x3b
 1634 007d 0B       		.uleb128 0xb
 1635 007e 49       		.uleb128 0x49
 1636 007f 13       		.uleb128 0x13
 1637 0080 02       		.uleb128 0x2
 1638 0081 18       		.uleb128 0x18
 1639 0082 00       		.byte	0
 1640 0083 00       		.byte	0
 1641 0084 0A       		.uleb128 0xa
 1642 0085 05       		.uleb128 0x5
 1643 0086 00       		.byte	0
 1644 0087 03       		.uleb128 0x3
 1645 0088 08       		.uleb128 0x8
 1646 0089 3A       		.uleb128 0x3a
 1647 008a 0B       		.uleb128 0xb
 1648 008b 3B       		.uleb128 0x3b
 1649 008c 0B       		.uleb128 0xb
 1650 008d 49       		.uleb128 0x49
 1651 008e 13       		.uleb128 0x13
 1652 008f 02       		.uleb128 0x2
 1653 0090 18       		.uleb128 0x18
 1654 0091 00       		.byte	0
 1655 0092 00       		.byte	0
 1656 0093 0B       		.uleb128 0xb
 1657 0094 0B       		.uleb128 0xb
 1658 0095 01       		.byte	0x1
 1659 0096 11       		.uleb128 0x11
 1660 0097 01       		.uleb128 0x1
 1661 0098 12       		.uleb128 0x12
 1662 0099 06       		.uleb128 0x6
 1663 009a 00       		.byte	0
 1664 009b 00       		.byte	0
 1665 009c 0C       		.uleb128 0xc
 1666 009d 34       		.uleb128 0x34
 1667 009e 00       		.byte	0
 1668 009f 03       		.uleb128 0x3
 1669 00a0 08       		.uleb128 0x8
 1670 00a1 3A       		.uleb128 0x3a
 1671 00a2 0B       		.uleb128 0xb
 1672 00a3 3B       		.uleb128 0x3b
 1673 00a4 0B       		.uleb128 0xb
 1674 00a5 49       		.uleb128 0x49
 1675 00a6 13       		.uleb128 0x13
 1676 00a7 02       		.uleb128 0x2
 1677 00a8 18       		.uleb128 0x18
 1678 00a9 00       		.byte	0
 1679 00aa 00       		.byte	0
 1680 00ab 0D       		.uleb128 0xd
 1681 00ac 0F       		.uleb128 0xf
 1682 00ad 00       		.byte	0
 1683 00ae 0B       		.uleb128 0xb
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 36


 1684 00af 0B       		.uleb128 0xb
 1685 00b0 49       		.uleb128 0x49
 1686 00b1 13       		.uleb128 0x13
 1687 00b2 00       		.byte	0
 1688 00b3 00       		.byte	0
 1689 00b4 0E       		.uleb128 0xe
 1690 00b5 26       		.uleb128 0x26
 1691 00b6 00       		.byte	0
 1692 00b7 49       		.uleb128 0x49
 1693 00b8 13       		.uleb128 0x13
 1694 00b9 00       		.byte	0
 1695 00ba 00       		.byte	0
 1696 00bb 0F       		.uleb128 0xf
 1697 00bc 2E       		.uleb128 0x2e
 1698 00bd 00       		.byte	0
 1699 00be 3F       		.uleb128 0x3f
 1700 00bf 19       		.uleb128 0x19
 1701 00c0 03       		.uleb128 0x3
 1702 00c1 0E       		.uleb128 0xe
 1703 00c2 3A       		.uleb128 0x3a
 1704 00c3 0B       		.uleb128 0xb
 1705 00c4 3B       		.uleb128 0x3b
 1706 00c5 0B       		.uleb128 0xb
 1707 00c6 27       		.uleb128 0x27
 1708 00c7 19       		.uleb128 0x19
 1709 00c8 11       		.uleb128 0x11
 1710 00c9 01       		.uleb128 0x1
 1711 00ca 12       		.uleb128 0x12
 1712 00cb 06       		.uleb128 0x6
 1713 00cc 40       		.uleb128 0x40
 1714 00cd 18       		.uleb128 0x18
 1715 00ce 9642     		.uleb128 0x2116
 1716 00d0 19       		.uleb128 0x19
 1717 00d1 00       		.byte	0
 1718 00d2 00       		.byte	0
 1719 00d3 10       		.uleb128 0x10
 1720 00d4 2E       		.uleb128 0x2e
 1721 00d5 01       		.byte	0x1
 1722 00d6 3F       		.uleb128 0x3f
 1723 00d7 19       		.uleb128 0x19
 1724 00d8 03       		.uleb128 0x3
 1725 00d9 0E       		.uleb128 0xe
 1726 00da 3A       		.uleb128 0x3a
 1727 00db 0B       		.uleb128 0xb
 1728 00dc 3B       		.uleb128 0x3b
 1729 00dd 0B       		.uleb128 0xb
 1730 00de 27       		.uleb128 0x27
 1731 00df 19       		.uleb128 0x19
 1732 00e0 49       		.uleb128 0x49
 1733 00e1 13       		.uleb128 0x13
 1734 00e2 11       		.uleb128 0x11
 1735 00e3 01       		.uleb128 0x1
 1736 00e4 12       		.uleb128 0x12
 1737 00e5 06       		.uleb128 0x6
 1738 00e6 40       		.uleb128 0x40
 1739 00e7 18       		.uleb128 0x18
 1740 00e8 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 37


 1741 00ea 19       		.uleb128 0x19
 1742 00eb 01       		.uleb128 0x1
 1743 00ec 13       		.uleb128 0x13
 1744 00ed 00       		.byte	0
 1745 00ee 00       		.byte	0
 1746 00ef 11       		.uleb128 0x11
 1747 00f0 34       		.uleb128 0x34
 1748 00f1 00       		.byte	0
 1749 00f2 03       		.uleb128 0x3
 1750 00f3 0E       		.uleb128 0xe
 1751 00f4 3A       		.uleb128 0x3a
 1752 00f5 0B       		.uleb128 0xb
 1753 00f6 3B       		.uleb128 0x3b
 1754 00f7 0B       		.uleb128 0xb
 1755 00f8 49       		.uleb128 0x49
 1756 00f9 13       		.uleb128 0x13
 1757 00fa 02       		.uleb128 0x2
 1758 00fb 18       		.uleb128 0x18
 1759 00fc 00       		.byte	0
 1760 00fd 00       		.byte	0
 1761 00fe 12       		.uleb128 0x12
 1762 00ff 01       		.uleb128 0x1
 1763 0100 01       		.byte	0x1
 1764 0101 49       		.uleb128 0x49
 1765 0102 13       		.uleb128 0x13
 1766 0103 01       		.uleb128 0x1
 1767 0104 13       		.uleb128 0x13
 1768 0105 00       		.byte	0
 1769 0106 00       		.byte	0
 1770 0107 13       		.uleb128 0x13
 1771 0108 21       		.uleb128 0x21
 1772 0109 00       		.byte	0
 1773 010a 49       		.uleb128 0x49
 1774 010b 13       		.uleb128 0x13
 1775 010c 2F       		.uleb128 0x2f
 1776 010d 0B       		.uleb128 0xb
 1777 010e 00       		.byte	0
 1778 010f 00       		.byte	0
 1779 0110 14       		.uleb128 0x14
 1780 0111 21       		.uleb128 0x21
 1781 0112 00       		.byte	0
 1782 0113 49       		.uleb128 0x49
 1783 0114 13       		.uleb128 0x13
 1784 0115 2F       		.uleb128 0x2f
 1785 0116 13       		.uleb128 0x13
 1786 0117 00       		.byte	0
 1787 0118 00       		.byte	0
 1788 0119 15       		.uleb128 0x15
 1789 011a 2E       		.uleb128 0x2e
 1790 011b 01       		.byte	0x1
 1791 011c 03       		.uleb128 0x3
 1792 011d 0E       		.uleb128 0xe
 1793 011e 3A       		.uleb128 0x3a
 1794 011f 0B       		.uleb128 0xb
 1795 0120 3B       		.uleb128 0x3b
 1796 0121 0B       		.uleb128 0xb
 1797 0122 27       		.uleb128 0x27
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 38


 1798 0123 19       		.uleb128 0x19
 1799 0124 11       		.uleb128 0x11
 1800 0125 01       		.uleb128 0x1
 1801 0126 12       		.uleb128 0x12
 1802 0127 06       		.uleb128 0x6
 1803 0128 40       		.uleb128 0x40
 1804 0129 18       		.uleb128 0x18
 1805 012a 9642     		.uleb128 0x2116
 1806 012c 19       		.uleb128 0x19
 1807 012d 01       		.uleb128 0x1
 1808 012e 13       		.uleb128 0x13
 1809 012f 00       		.byte	0
 1810 0130 00       		.byte	0
 1811 0131 16       		.uleb128 0x16
 1812 0132 2E       		.uleb128 0x2e
 1813 0133 01       		.byte	0x1
 1814 0134 3F       		.uleb128 0x3f
 1815 0135 19       		.uleb128 0x19
 1816 0136 03       		.uleb128 0x3
 1817 0137 0E       		.uleb128 0xe
 1818 0138 3A       		.uleb128 0x3a
 1819 0139 0B       		.uleb128 0xb
 1820 013a 3B       		.uleb128 0x3b
 1821 013b 05       		.uleb128 0x5
 1822 013c 27       		.uleb128 0x27
 1823 013d 19       		.uleb128 0x19
 1824 013e 11       		.uleb128 0x11
 1825 013f 01       		.uleb128 0x1
 1826 0140 12       		.uleb128 0x12
 1827 0141 06       		.uleb128 0x6
 1828 0142 40       		.uleb128 0x40
 1829 0143 18       		.uleb128 0x18
 1830 0144 9642     		.uleb128 0x2116
 1831 0146 19       		.uleb128 0x19
 1832 0147 01       		.uleb128 0x1
 1833 0148 13       		.uleb128 0x13
 1834 0149 00       		.byte	0
 1835 014a 00       		.byte	0
 1836 014b 17       		.uleb128 0x17
 1837 014c 05       		.uleb128 0x5
 1838 014d 00       		.byte	0
 1839 014e 03       		.uleb128 0x3
 1840 014f 08       		.uleb128 0x8
 1841 0150 3A       		.uleb128 0x3a
 1842 0151 0B       		.uleb128 0xb
 1843 0152 3B       		.uleb128 0x3b
 1844 0153 05       		.uleb128 0x5
 1845 0154 49       		.uleb128 0x49
 1846 0155 13       		.uleb128 0x13
 1847 0156 02       		.uleb128 0x2
 1848 0157 18       		.uleb128 0x18
 1849 0158 00       		.byte	0
 1850 0159 00       		.byte	0
 1851 015a 18       		.uleb128 0x18
 1852 015b 2E       		.uleb128 0x2e
 1853 015c 01       		.byte	0x1
 1854 015d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 39


 1855 015e 19       		.uleb128 0x19
 1856 015f 03       		.uleb128 0x3
 1857 0160 0E       		.uleb128 0xe
 1858 0161 3A       		.uleb128 0x3a
 1859 0162 0B       		.uleb128 0xb
 1860 0163 3B       		.uleb128 0x3b
 1861 0164 05       		.uleb128 0x5
 1862 0165 27       		.uleb128 0x27
 1863 0166 19       		.uleb128 0x19
 1864 0167 11       		.uleb128 0x11
 1865 0168 01       		.uleb128 0x1
 1866 0169 12       		.uleb128 0x12
 1867 016a 06       		.uleb128 0x6
 1868 016b 40       		.uleb128 0x40
 1869 016c 18       		.uleb128 0x18
 1870 016d 9642     		.uleb128 0x2116
 1871 016f 19       		.uleb128 0x19
 1872 0170 00       		.byte	0
 1873 0171 00       		.byte	0
 1874 0172 00       		.byte	0
 1875              		.section	.debug_aranges,"",%progbits
 1876 0000 74000000 		.4byte	0x74
 1877 0004 0200     		.2byte	0x2
 1878 0006 00000000 		.4byte	.Ldebug_info0
 1879 000a 04       		.byte	0x4
 1880 000b 00       		.byte	0
 1881 000c 0000     		.2byte	0
 1882 000e 0000     		.2byte	0
 1883 0010 00000000 		.4byte	.LFB0
 1884 0014 26000000 		.4byte	.LFE0-.LFB0
 1885 0018 00000000 		.4byte	.LFB1
 1886 001c 26000000 		.4byte	.LFE1-.LFB1
 1887 0020 00000000 		.4byte	.LFB2
 1888 0024 64000000 		.4byte	.LFE2-.LFB2
 1889 0028 00000000 		.4byte	.LFB3
 1890 002c 0C000000 		.4byte	.LFE3-.LFB3
 1891 0030 00000000 		.4byte	.LFB4
 1892 0034 30000000 		.4byte	.LFE4-.LFB4
 1893 0038 00000000 		.4byte	.LFB5
 1894 003c BC000000 		.4byte	.LFE5-.LFB5
 1895 0040 00000000 		.4byte	.LFB6
 1896 0044 3A000000 		.4byte	.LFE6-.LFB6
 1897 0048 00000000 		.4byte	.LFB7
 1898 004c C2000000 		.4byte	.LFE7-.LFB7
 1899 0050 00000000 		.4byte	.LFB8
 1900 0054 38000000 		.4byte	.LFE8-.LFB8
 1901 0058 00000000 		.4byte	.LFB9
 1902 005c 8E000000 		.4byte	.LFE9-.LFB9
 1903 0060 00000000 		.4byte	.LFB10
 1904 0064 2C000000 		.4byte	.LFE10-.LFB10
 1905 0068 00000000 		.4byte	.LFB11
 1906 006c 2C000000 		.4byte	.LFE11-.LFB11
 1907 0070 00000000 		.4byte	0
 1908 0074 00000000 		.4byte	0
 1909              		.section	.debug_ranges,"",%progbits
 1910              	.Ldebug_ranges0:
 1911 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 40


 1912 0004 26000000 		.4byte	.LFE0
 1913 0008 00000000 		.4byte	.LFB1
 1914 000c 26000000 		.4byte	.LFE1
 1915 0010 00000000 		.4byte	.LFB2
 1916 0014 64000000 		.4byte	.LFE2
 1917 0018 00000000 		.4byte	.LFB3
 1918 001c 0C000000 		.4byte	.LFE3
 1919 0020 00000000 		.4byte	.LFB4
 1920 0024 30000000 		.4byte	.LFE4
 1921 0028 00000000 		.4byte	.LFB5
 1922 002c BC000000 		.4byte	.LFE5
 1923 0030 00000000 		.4byte	.LFB6
 1924 0034 3A000000 		.4byte	.LFE6
 1925 0038 00000000 		.4byte	.LFB7
 1926 003c C2000000 		.4byte	.LFE7
 1927 0040 00000000 		.4byte	.LFB8
 1928 0044 38000000 		.4byte	.LFE8
 1929 0048 00000000 		.4byte	.LFB9
 1930 004c 8E000000 		.4byte	.LFE9
 1931 0050 00000000 		.4byte	.LFB10
 1932 0054 2C000000 		.4byte	.LFE10
 1933 0058 00000000 		.4byte	.LFB11
 1934 005c 2C000000 		.4byte	.LFE11
 1935 0060 00000000 		.4byte	0
 1936 0064 00000000 		.4byte	0
 1937              		.section	.debug_line,"",%progbits
 1938              	.Ldebug_line0:
 1939 0000 21030000 		.section	.debug_str,"MS",%progbits,1
 1939      0200E401 
 1939      00000201 
 1939      FB0E0D00 
 1939      01010101 
 1940              	.LASF49:
 1941 0000 4E52465F 		.ascii	"NRF_CMD_FLUSH_TX\000"
 1941      434D445F 
 1941      464C5553 
 1941      485F5458 
 1941      00
 1942              	.LASF24:
 1943 0011 4E52465F 		.ascii	"NRF_REG_RF_SETUP\000"
 1943      5245475F 
 1943      52465F53 
 1943      45545550 
 1943      00
 1944              	.LASF43:
 1945 0022 4E52465F 		.ascii	"NRF_REG_FEATURE\000"
 1945      5245475F 
 1945      46454154 
 1945      55524500 
 1946              	.LASF61:
 1947 0032 73746174 		.ascii	"state\000"
 1947      6500
 1948              	.LASF20:
 1949 0038 4E52465F 		.ascii	"NRF_REG_EN_RXADDR\000"
 1949      5245475F 
 1949      454E5F52 
 1949      58414444 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 41


 1949      5200
 1950              	.LASF80:
 1951 004a 74656D70 		.ascii	"temp\000"
 1951      00
 1952              	.LASF26:
 1953 004f 4E52465F 		.ascii	"NRF_REG_OBSERVE_TX\000"
 1953      5245475F 
 1953      4F425345 
 1953      5256455F 
 1953      545800
 1954              	.LASF11:
 1955 0062 73697A65 		.ascii	"size_t\000"
 1955      5F7400
 1956              	.LASF13:
 1957 0069 73697A65 		.ascii	"sizetype\000"
 1957      74797065 
 1957      00
 1958              	.LASF82:
 1959 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1959      43313120 
 1959      352E342E 
 1959      31203230 
 1959      31363036 
 1960 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1960      20726576 
 1960      6973696F 
 1960      6E203233 
 1960      37373135 
 1961 00d8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1961      66756E63 
 1961      74696F6E 
 1961      2D736563 
 1961      74696F6E 
 1962              	.LASF64:
 1963 0100 5F6E7266 		.ascii	"_nrf_cmd\000"
 1963      5F636D64 
 1963      00
 1964              	.LASF58:
 1965 0109 6E72665F 		.ascii	"nrf_gpio\000"
 1965      6770696F 
 1965      00
 1966              	.LASF41:
 1967 0112 4E52465F 		.ascii	"NRF_REG_FIFO_STATUS\000"
 1967      5245475F 
 1967      4649464F 
 1967      5F535441 
 1967      54555300 
 1968              	.LASF36:
 1969 0126 4E52465F 		.ascii	"NRF_REG_RX_PW_P1\000"
 1969      5245475F 
 1969      52585F50 
 1969      575F5031 
 1969      00
 1970              	.LASF37:
 1971 0137 4E52465F 		.ascii	"NRF_REG_RX_PW_P2\000"
 1971      5245475F 
 1971      52585F50 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 42


 1971      575F5032 
 1971      00
 1972              	.LASF2:
 1973 0148 73686F72 		.ascii	"short int\000"
 1973      7420696E 
 1973      7400
 1974              	.LASF39:
 1975 0152 4E52465F 		.ascii	"NRF_REG_RX_PW_P4\000"
 1975      5245475F 
 1975      52585F50 
 1975      575F5034 
 1975      00
 1976              	.LASF40:
 1977 0163 4E52465F 		.ascii	"NRF_REG_RX_PW_P5\000"
 1977      5245475F 
 1977      52585F50 
 1977      575F5035 
 1977      00
 1978              	.LASF79:
 1979 0174 76616C75 		.ascii	"value\000"
 1979      6500
 1980              	.LASF19:
 1981 017a 4E52465F 		.ascii	"NRF_REG_EN_AA\000"
 1981      5245475F 
 1981      454E5F41 
 1981      4100
 1982              	.LASF10:
 1983 0188 75696E74 		.ascii	"uint8_t\000"
 1983      385F7400 
 1984              	.LASF72:
 1985 0190 64617461 		.ascii	"data_to_write\000"
 1985      5F746F5F 
 1985      77726974 
 1985      6500
 1986              	.LASF25:
 1987 019e 4E52465F 		.ascii	"NRF_REG_STATUS\000"
 1987      5245475F 
 1987      53544154 
 1987      555300
 1988              	.LASF15:
 1989 01ad 75696E74 		.ascii	"uint8\000"
 1989      3800
 1990              	.LASF23:
 1991 01b3 4E52465F 		.ascii	"NRF_REG_RF_CH\000"
 1991      5245475F 
 1991      52465F43 
 1991      4800
 1992              	.LASF48:
 1993 01c1 4E52465F 		.ascii	"NRF_CMD_W_TX_PAYLOAD\000"
 1993      434D445F 
 1993      575F5458 
 1993      5F504159 
 1993      4C4F4144 
 1994              	.LASF87:
 1995 01d6 6E524632 		.ascii	"nRF24_set_bit\000"
 1995      345F7365 
 1995      745F6269 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 43


 1995      7400
 1996              	.LASF73:
 1997 01e4 6E524632 		.ascii	"nRF24_write_long_register\000"
 1997      345F7772 
 1997      6974655F 
 1997      6C6F6E67 
 1997      5F726567 
 1998              	.LASF56:
 1999 01fe 4750494F 		.ascii	"GPIO_CLEAR\000"
 1999      5F434C45 
 1999      415200
 2000              	.LASF16:
 2001 0209 666C6F61 		.ascii	"float\000"
 2001      7400
 2002              	.LASF76:
 2003 020f 6E524632 		.ascii	"nRF24_read_register\000"
 2003      345F7265 
 2003      61645F72 
 2003      65676973 
 2003      74657200 
 2004              	.LASF6:
 2005 0223 6C6F6E67 		.ascii	"long long int\000"
 2005      206C6F6E 
 2005      6720696E 
 2005      7400
 2006              	.LASF65:
 2007 0231 5F6E7266 		.ascii	"_nrf_data\000"
 2007      5F646174 
 2007      6100
 2008              	.LASF83:
 2009 023b 47656E65 		.ascii	"Generated_Source\\PSoC5\\nRF24_HAL.c\000"
 2009      72617465 
 2009      645F536F 
 2009      75726365 
 2009      5C50536F 
 2010              	.LASF4:
 2011 025e 6C6F6E67 		.ascii	"long int\000"
 2011      20696E74 
 2011      00
 2012              	.LASF27:
 2013 0267 4E52465F 		.ascii	"NRF_REG_RPD\000"
 2013      5245475F 
 2013      52504400 
 2014              	.LASF55:
 2015 0273 4E52465F 		.ascii	"NRF_CMD_NOP\000"
 2015      434D445F 
 2015      4E4F5000 
 2016              	.LASF70:
 2017 027f 64756D6D 		.ascii	"dummy\000"
 2017      7900
 2018              	.LASF34:
 2019 0285 4E52465F 		.ascii	"NRF_REG_TX_ADDR\000"
 2019      5245475F 
 2019      54585F41 
 2019      44445200 
 2020              	.LASF9:
 2021 0295 5F5F7569 		.ascii	"__uint8_t\000"
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 44


 2021      6E74385F 
 2021      7400
 2022              	.LASF75:
 2023 029f 64617461 		.ascii	"data_from_nrf\000"
 2023      5F66726F 
 2023      6D5F6E72 
 2023      6600
 2024              	.LASF74:
 2025 02ad 64617461 		.ascii	"data_to_nrf\000"
 2025      5F746F5F 
 2025      6E726600 
 2026              	.LASF66:
 2027 02b9 6E524632 		.ascii	"nRF24_read_long_register\000"
 2027      345F7265 
 2027      61645F6C 
 2027      6F6E675F 
 2027      72656769 
 2028              	.LASF1:
 2029 02d2 756E7369 		.ascii	"unsigned char\000"
 2029      676E6564 
 2029      20636861 
 2029      7200
 2030              	.LASF77:
 2031 02e0 6E524632 		.ascii	"nRF24_read_bit\000"
 2031      345F7265 
 2031      61645F62 
 2031      697400
 2032              	.LASF12:
 2033 02ef 6C6F6E67 		.ascii	"long double\000"
 2033      20646F75 
 2033      626C6500 
 2034              	.LASF28:
 2035 02fb 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P0\000"
 2035      5245475F 
 2035      52585F41 
 2035      4444525F 
 2035      503000
 2036              	.LASF29:
 2037 030e 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P1\000"
 2037      5245475F 
 2037      52585F41 
 2037      4444525F 
 2037      503100
 2038              	.LASF30:
 2039 0321 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P2\000"
 2039      5245475F 
 2039      52585F41 
 2039      4444525F 
 2039      503200
 2040              	.LASF31:
 2041 0334 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P3\000"
 2041      5245475F 
 2041      52585F41 
 2041      4444525F 
 2041      503300
 2042              	.LASF32:
 2043 0347 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P4\000"
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 45


 2043      5245475F 
 2043      52585F41 
 2043      4444525F 
 2043      503400
 2044              	.LASF33:
 2045 035a 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P5\000"
 2045      5245475F 
 2045      52585F41 
 2045      4444525F 
 2045      503500
 2046              	.LASF50:
 2047 036d 4E52465F 		.ascii	"NRF_CMD_FLUSH_RX\000"
 2047      434D445F 
 2047      464C5553 
 2047      485F5258 
 2047      00
 2048              	.LASF85:
 2049 037e 6E524632 		.ascii	"nRF24_spi_clear_fifo\000"
 2049      345F7370 
 2049      695F636C 
 2049      6561725F 
 2049      6669666F 
 2050              	.LASF47:
 2051 0393 4E52465F 		.ascii	"NRF_CMD_R_RX_PAYLOAD\000"
 2051      434D445F 
 2051      525F5258 
 2051      5F504159 
 2051      4C4F4144 
 2052              	.LASF0:
 2053 03a8 7369676E 		.ascii	"signed char\000"
 2053      65642063 
 2053      68617200 
 2054              	.LASF7:
 2055 03b4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2055      206C6F6E 
 2055      6720756E 
 2055      7369676E 
 2055      65642069 
 2056              	.LASF71:
 2057 03cb 6E524632 		.ascii	"nRF24_write_register\000"
 2057      345F7772 
 2057      6974655F 
 2057      72656769 
 2057      73746572 
 2058              	.LASF8:
 2059 03e0 756E7369 		.ascii	"unsigned int\000"
 2059      676E6564 
 2059      20696E74 
 2059      00
 2060              	.LASF44:
 2061 03ed 6E72665F 		.ascii	"nrf_register\000"
 2061      72656769 
 2061      73746572 
 2061      00
 2062              	.LASF59:
 2063 03fa 6E524632 		.ascii	"nRF24_ss_write\000"
 2063      345F7373 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 46


 2063      5F777269 
 2063      746500
 2064              	.LASF45:
 2065 0409 4E52465F 		.ascii	"NRF_CMD_R_REGISTER\000"
 2065      434D445F 
 2065      525F5245 
 2065      47495354 
 2065      455200
 2066              	.LASF46:
 2067 041c 4E52465F 		.ascii	"NRF_CMD_W_REGISTER\000"
 2067      434D445F 
 2067      575F5245 
 2067      47495354 
 2067      455200
 2068              	.LASF68:
 2069 042f 73697A65 		.ascii	"size\000"
 2069      00
 2070              	.LASF14:
 2071 0434 63686172 		.ascii	"char\000"
 2071      00
 2072              	.LASF3:
 2073 0439 73686F72 		.ascii	"short unsigned int\000"
 2073      7420756E 
 2073      7369676E 
 2073      65642069 
 2073      6E7400
 2074              	.LASF78:
 2075 044c 5F426F6F 		.ascii	"_Bool\000"
 2075      6C00
 2076              	.LASF42:
 2077 0452 4E52465F 		.ascii	"NRF_REG_DYNPD\000"
 2077      5245475F 
 2077      44594E50 
 2077      4400
 2078              	.LASF67:
 2079 0460 64617461 		.ascii	"data\000"
 2079      00
 2080              	.LASF52:
 2081 0465 4E52465F 		.ascii	"NRF_CMD_R_RX_PL_WID\000"
 2081      434D445F 
 2081      525F5258 
 2081      5F504C5F 
 2081      57494400 
 2082              	.LASF86:
 2083 0479 6E524632 		.ascii	"nRF24_write_bit\000"
 2083      345F7772 
 2083      6974655F 
 2083      62697400 
 2084              	.LASF5:
 2085 0489 6C6F6E67 		.ascii	"long unsigned int\000"
 2085      20756E73 
 2085      69676E65 
 2085      6420696E 
 2085      7400
 2086              	.LASF17:
 2087 049b 646F7562 		.ascii	"double\000"
 2087      6C6500
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 47


 2088              	.LASF69:
 2089 04a2 6E72665F 		.ascii	"nrf_data\000"
 2089      64617461 
 2089      00
 2090              	.LASF51:
 2091 04ab 4E52465F 		.ascii	"NRF_CMD_REUSE_TX_PL\000"
 2091      434D445F 
 2091      52455553 
 2091      455F5458 
 2091      5F504C00 
 2092              	.LASF18:
 2093 04bf 4E52465F 		.ascii	"NRF_REG_CONFIG\000"
 2093      5245475F 
 2093      434F4E46 
 2093      494700
 2094              	.LASF22:
 2095 04ce 4E52465F 		.ascii	"NRF_REG_SETUP_RETR\000"
 2095      5245475F 
 2095      53455455 
 2095      505F5245 
 2095      545200
 2096              	.LASF53:
 2097 04e1 4E52465F 		.ascii	"NRF_CMD_W_ACK_PAYLOAD\000"
 2097      434D445F 
 2097      575F4143 
 2097      4B5F5041 
 2097      594C4F41 
 2098              	.LASF21:
 2099 04f7 4E52465F 		.ascii	"NRF_REG_SETUP_AW\000"
 2099      5245475F 
 2099      53455455 
 2099      505F4157 
 2099      00
 2100              	.LASF84:
 2101 0508 433A5C55 		.ascii	"C:\\Users\\Krist\\OneDrive\\Dokumenter\\GitHub\\pla"
 2101      73657273 
 2101      5C4B7269 
 2101      73745C4F 
 2101      6E654472 
 2102 0535 746F6F6E 		.ascii	"tooning\\PSoC\\Platooning\\AngleMeasurement.cydsn\000"
 2102      696E675C 
 2102      50536F43 
 2102      5C506C61 
 2102      746F6F6E 
 2103              	.LASF54:
 2104 0564 4E52465F 		.ascii	"NRF_CMD_W_TX_PAYLOAD_NOACK\000"
 2104      434D445F 
 2104      575F5458 
 2104      5F504159 
 2104      4C4F4144 
 2105              	.LASF62:
 2106 057f 6E524632 		.ascii	"nRF24_spi_xfer\000"
 2106      345F7370 
 2106      695F7866 
 2106      657200
 2107              	.LASF63:
 2108 058e 78666572 		.ascii	"xfer_size\000"
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccnov2rZ.s 			page 48


 2108      5F73697A 
 2108      6500
 2109              	.LASF35:
 2110 0598 4E52465F 		.ascii	"NRF_REG_RX_PW_P0\000"
 2110      5245475F 
 2110      52585F50 
 2110      575F5030 
 2110      00
 2111              	.LASF57:
 2112 05a9 4750494F 		.ascii	"GPIO_SET\000"
 2112      5F534554 
 2112      00
 2113              	.LASF38:
 2114 05b2 4E52465F 		.ascii	"NRF_REG_RX_PW_P3\000"
 2114      5245475F 
 2114      52585F50 
 2114      575F5033 
 2114      00
 2115              	.LASF60:
 2116 05c3 6E524632 		.ascii	"nRF24_ce_write\000"
 2116      345F6365 
 2116      5F777269 
 2116      746500
 2117              	.LASF81:
 2118 05d2 6E524632 		.ascii	"nRF24_clear_bit\000"
 2118      345F636C 
 2118      6561725F 
 2118      62697400 
 2119              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
