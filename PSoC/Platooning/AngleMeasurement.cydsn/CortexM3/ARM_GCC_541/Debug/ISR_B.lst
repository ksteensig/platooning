ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ISR_B.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ISR_B_Start,"ax",%progbits
  20              		.align	2
  21              		.global	ISR_B_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	ISR_B_Start, %function
  25              	ISR_B_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\ISR_B.c"
   1:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ISR_B.c **** * File Name: ISR_B.c  
   3:Generated_Source\PSoC5/ISR_B.c **** * Version 1.70
   4:Generated_Source\PSoC5/ISR_B.c **** *
   5:Generated_Source\PSoC5/ISR_B.c **** *  Description:
   6:Generated_Source\PSoC5/ISR_B.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/ISR_B.c **** *
   8:Generated_Source\PSoC5/ISR_B.c **** *
   9:Generated_Source\PSoC5/ISR_B.c **** *  Note:
  10:Generated_Source\PSoC5/ISR_B.c **** *
  11:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ISR_B.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ISR_B.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/ISR_B.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/ISR_B.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ISR_B.c **** 
  18:Generated_Source\PSoC5/ISR_B.c **** 
  19:Generated_Source\PSoC5/ISR_B.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/ISR_B.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/ISR_B.c **** #include <ISR_B.h>
  22:Generated_Source\PSoC5/ISR_B.c **** 
  23:Generated_Source\PSoC5/ISR_B.c **** 
  24:Generated_Source\PSoC5/ISR_B.c **** #if !defined(ISR_B__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/ISR_B.c **** 
  26:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/ISR_B.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/ISR_B.c **** /* `#START ISR_B_intc` */
  30:Generated_Source\PSoC5/ISR_B.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 2


  31:Generated_Source\PSoC5/ISR_B.c **** /* `#END` */
  32:Generated_Source\PSoC5/ISR_B.c **** 
  33:Generated_Source\PSoC5/ISR_B.c **** #ifndef CYINT_IRQ_BASE
  34:Generated_Source\PSoC5/ISR_B.c **** #define CYINT_IRQ_BASE      16
  35:Generated_Source\PSoC5/ISR_B.c **** #endif /* CYINT_IRQ_BASE */
  36:Generated_Source\PSoC5/ISR_B.c **** #ifndef CYINT_VECT_TABLE
  37:Generated_Source\PSoC5/ISR_B.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  38:Generated_Source\PSoC5/ISR_B.c **** #endif /* CYINT_VECT_TABLE */
  39:Generated_Source\PSoC5/ISR_B.c **** 
  40:Generated_Source\PSoC5/ISR_B.c **** /* Declared in startup, used to set unused interrupts to. */
  41:Generated_Source\PSoC5/ISR_B.c **** CY_ISR_PROTO(IntDefaultHandler);
  42:Generated_Source\PSoC5/ISR_B.c **** 
  43:Generated_Source\PSoC5/ISR_B.c **** 
  44:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_Start
  46:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
  47:Generated_Source\PSoC5/ISR_B.c **** *
  48:Generated_Source\PSoC5/ISR_B.c **** * Summary:
  49:Generated_Source\PSoC5/ISR_B.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  50:Generated_Source\PSoC5/ISR_B.c **** *  sets the default interrupt vector, sets the priority from the value in the
  51:Generated_Source\PSoC5/ISR_B.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  52:Generated_Source\PSoC5/ISR_B.c **** *  interrupt controller.
  53:Generated_Source\PSoC5/ISR_B.c **** *
  54:Generated_Source\PSoC5/ISR_B.c **** * Parameters:  
  55:Generated_Source\PSoC5/ISR_B.c **** *   None
  56:Generated_Source\PSoC5/ISR_B.c **** *
  57:Generated_Source\PSoC5/ISR_B.c **** * Return:
  58:Generated_Source\PSoC5/ISR_B.c **** *   None
  59:Generated_Source\PSoC5/ISR_B.c **** *
  60:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
  61:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_Start(void)
  62:Generated_Source\PSoC5/ISR_B.c **** {
  28              		.loc 1 62 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  63:Generated_Source\PSoC5/ISR_B.c ****     /* For all we know the interrupt is active. */
  64:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_Disable();
  38              		.loc 1 64 0
  39 0004 FFF7FEFF 		bl	ISR_B_Disable
  65:Generated_Source\PSoC5/ISR_B.c **** 
  66:Generated_Source\PSoC5/ISR_B.c ****     /* Set the ISR to point to the ISR_B Interrupt. */
  67:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_SetVector(&ISR_B_Interrupt);
  40              		.loc 1 67 0
  41 0008 0448     		ldr	r0, .L2
  42 000a FFF7FEFF 		bl	ISR_B_SetVector
  68:Generated_Source\PSoC5/ISR_B.c **** 
  69:Generated_Source\PSoC5/ISR_B.c ****     /* Set the priority. */
  70:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_SetPriority((uint8)ISR_B_INTC_PRIOR_NUMBER);
  43              		.loc 1 70 0
  44 000e 0720     		movs	r0, #7
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 3


  45 0010 FFF7FEFF 		bl	ISR_B_SetPriority
  71:Generated_Source\PSoC5/ISR_B.c **** 
  72:Generated_Source\PSoC5/ISR_B.c ****     /* Enable it. */
  73:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_Enable();
  46              		.loc 1 73 0
  47 0014 FFF7FEFF 		bl	ISR_B_Enable
  74:Generated_Source\PSoC5/ISR_B.c **** }
  48              		.loc 1 74 0
  49 0018 00BF     		nop
  50 001a 80BD     		pop	{r7, pc}
  51              	.L3:
  52              		.align	2
  53              	.L2:
  54 001c 00000000 		.word	ISR_B_Interrupt
  55              		.cfi_endproc
  56              	.LFE0:
  57              		.size	ISR_B_Start, .-ISR_B_Start
  58              		.section	.text.ISR_B_StartEx,"ax",%progbits
  59              		.align	2
  60              		.global	ISR_B_StartEx
  61              		.thumb
  62              		.thumb_func
  63              		.type	ISR_B_StartEx, %function
  64              	ISR_B_StartEx:
  65              	.LFB1:
  75:Generated_Source\PSoC5/ISR_B.c **** 
  76:Generated_Source\PSoC5/ISR_B.c **** 
  77:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
  78:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_StartEx
  79:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
  80:Generated_Source\PSoC5/ISR_B.c **** *
  81:Generated_Source\PSoC5/ISR_B.c **** * Summary:
  82:Generated_Source\PSoC5/ISR_B.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  83:Generated_Source\PSoC5/ISR_B.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  84:Generated_Source\PSoC5/ISR_B.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  85:Generated_Source\PSoC5/ISR_B.c **** *  the interrupt to the interrupt controller.
  86:Generated_Source\PSoC5/ISR_B.c **** *  
  87:Generated_Source\PSoC5/ISR_B.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  88:Generated_Source\PSoC5/ISR_B.c **** *  used to provide consistent definition across compilers:
  89:Generated_Source\PSoC5/ISR_B.c **** *  
  90:Generated_Source\PSoC5/ISR_B.c **** *  Function definition example:
  91:Generated_Source\PSoC5/ISR_B.c **** *   CY_ISR(MyISR)
  92:Generated_Source\PSoC5/ISR_B.c **** *   {
  93:Generated_Source\PSoC5/ISR_B.c **** *   }
  94:Generated_Source\PSoC5/ISR_B.c **** *   Function prototype example:
  95:Generated_Source\PSoC5/ISR_B.c **** *   CY_ISR_PROTO(MyISR);
  96:Generated_Source\PSoC5/ISR_B.c **** *
  97:Generated_Source\PSoC5/ISR_B.c **** * Parameters:  
  98:Generated_Source\PSoC5/ISR_B.c **** *   address: Address of the ISR to set in the interrupt vector table.
  99:Generated_Source\PSoC5/ISR_B.c **** *
 100:Generated_Source\PSoC5/ISR_B.c **** * Return:
 101:Generated_Source\PSoC5/ISR_B.c **** *   None
 102:Generated_Source\PSoC5/ISR_B.c **** *
 103:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 104:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_StartEx(cyisraddress address)
 105:Generated_Source\PSoC5/ISR_B.c **** {
  66              		.loc 1 105 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 4


  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
 106:Generated_Source\PSoC5/ISR_B.c ****     /* For all we know the interrupt is active. */
 107:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_Disable();
  79              		.loc 1 107 0
  80 0008 FFF7FEFF 		bl	ISR_B_Disable
 108:Generated_Source\PSoC5/ISR_B.c **** 
 109:Generated_Source\PSoC5/ISR_B.c ****     /* Set the ISR to point to the ISR_B Interrupt. */
 110:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_SetVector(address);
  81              		.loc 1 110 0
  82 000c 7868     		ldr	r0, [r7, #4]
  83 000e FFF7FEFF 		bl	ISR_B_SetVector
 111:Generated_Source\PSoC5/ISR_B.c **** 
 112:Generated_Source\PSoC5/ISR_B.c ****     /* Set the priority. */
 113:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_SetPriority((uint8)ISR_B_INTC_PRIOR_NUMBER);
  84              		.loc 1 113 0
  85 0012 0720     		movs	r0, #7
  86 0014 FFF7FEFF 		bl	ISR_B_SetPriority
 114:Generated_Source\PSoC5/ISR_B.c **** 
 115:Generated_Source\PSoC5/ISR_B.c ****     /* Enable it. */
 116:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_Enable();
  87              		.loc 1 116 0
  88 0018 FFF7FEFF 		bl	ISR_B_Enable
 117:Generated_Source\PSoC5/ISR_B.c **** }
  89              		.loc 1 117 0
  90 001c 00BF     		nop
  91 001e 0837     		adds	r7, r7, #8
  92              		.cfi_def_cfa_offset 8
  93 0020 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0022 80BD     		pop	{r7, pc}
  97              		.cfi_endproc
  98              	.LFE1:
  99              		.size	ISR_B_StartEx, .-ISR_B_StartEx
 100              		.section	.text.ISR_B_Stop,"ax",%progbits
 101              		.align	2
 102              		.global	ISR_B_Stop
 103              		.thumb
 104              		.thumb_func
 105              		.type	ISR_B_Stop, %function
 106              	ISR_B_Stop:
 107              	.LFB2:
 118:Generated_Source\PSoC5/ISR_B.c **** 
 119:Generated_Source\PSoC5/ISR_B.c **** 
 120:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 121:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_Stop
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 5


 122:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 123:Generated_Source\PSoC5/ISR_B.c **** *
 124:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 125:Generated_Source\PSoC5/ISR_B.c **** *   Disables and removes the interrupt.
 126:Generated_Source\PSoC5/ISR_B.c **** *
 127:Generated_Source\PSoC5/ISR_B.c **** * Parameters:  
 128:Generated_Source\PSoC5/ISR_B.c **** *   None
 129:Generated_Source\PSoC5/ISR_B.c **** *
 130:Generated_Source\PSoC5/ISR_B.c **** * Return:
 131:Generated_Source\PSoC5/ISR_B.c **** *   None
 132:Generated_Source\PSoC5/ISR_B.c **** *
 133:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 134:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_Stop(void)
 135:Generated_Source\PSoC5/ISR_B.c **** {
 108              		.loc 1 135 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 136:Generated_Source\PSoC5/ISR_B.c ****     /* Disable this interrupt. */
 137:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_Disable();
 118              		.loc 1 137 0
 119 0004 FFF7FEFF 		bl	ISR_B_Disable
 138:Generated_Source\PSoC5/ISR_B.c **** 
 139:Generated_Source\PSoC5/ISR_B.c ****     /* Set the ISR to point to the passive one. */
 140:Generated_Source\PSoC5/ISR_B.c ****     ISR_B_SetVector(&IntDefaultHandler);
 120              		.loc 1 140 0
 121 0008 0248     		ldr	r0, .L6
 122 000a FFF7FEFF 		bl	ISR_B_SetVector
 141:Generated_Source\PSoC5/ISR_B.c **** }
 123              		.loc 1 141 0
 124 000e 00BF     		nop
 125 0010 80BD     		pop	{r7, pc}
 126              	.L7:
 127 0012 00BF     		.align	2
 128              	.L6:
 129 0014 00000000 		.word	IntDefaultHandler
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	ISR_B_Stop, .-ISR_B_Stop
 133              		.section	.text.ISR_B_Interrupt,"ax",%progbits
 134              		.align	2
 135              		.global	ISR_B_Interrupt
 136              		.thumb
 137              		.thumb_func
 138              		.type	ISR_B_Interrupt, %function
 139              	ISR_B_Interrupt:
 140              	.LFB3:
 142:Generated_Source\PSoC5/ISR_B.c **** 
 143:Generated_Source\PSoC5/ISR_B.c **** 
 144:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 145:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_Interrupt
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 6


 146:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 147:Generated_Source\PSoC5/ISR_B.c **** *
 148:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 149:Generated_Source\PSoC5/ISR_B.c **** *   The default Interrupt Service Routine for ISR_B.
 150:Generated_Source\PSoC5/ISR_B.c **** *
 151:Generated_Source\PSoC5/ISR_B.c **** *   Add custom code between the coments to keep the next version of this file
 152:Generated_Source\PSoC5/ISR_B.c **** *   from over writting your code.
 153:Generated_Source\PSoC5/ISR_B.c **** *
 154:Generated_Source\PSoC5/ISR_B.c **** * Parameters:  
 155:Generated_Source\PSoC5/ISR_B.c **** *
 156:Generated_Source\PSoC5/ISR_B.c **** * Return:
 157:Generated_Source\PSoC5/ISR_B.c **** *   None
 158:Generated_Source\PSoC5/ISR_B.c **** *
 159:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 160:Generated_Source\PSoC5/ISR_B.c **** CY_ISR(ISR_B_Interrupt)
 161:Generated_Source\PSoC5/ISR_B.c **** {
 141              		.loc 1 161 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC5/ISR_B.c ****     #ifdef ISR_B_INTERRUPT_INTERRUPT_CALLBACK
 163:Generated_Source\PSoC5/ISR_B.c ****         ISR_B_Interrupt_InterruptCallback();
 164:Generated_Source\PSoC5/ISR_B.c ****     #endif /* ISR_B_INTERRUPT_INTERRUPT_CALLBACK */ 
 165:Generated_Source\PSoC5/ISR_B.c **** 
 166:Generated_Source\PSoC5/ISR_B.c ****     /*  Place your Interrupt code here. */
 167:Generated_Source\PSoC5/ISR_B.c ****     /* `#START ISR_B_Interrupt` */
 168:Generated_Source\PSoC5/ISR_B.c **** 
 169:Generated_Source\PSoC5/ISR_B.c ****     /* `#END` */
 170:Generated_Source\PSoC5/ISR_B.c **** }
 151              		.loc 1 170 0
 152 0004 00BF     		nop
 153 0006 BD46     		mov	sp, r7
 154              		.cfi_def_cfa_register 13
 155              		@ sp needed
 156 0008 80BC     		pop	{r7}
 157              		.cfi_restore 7
 158              		.cfi_def_cfa_offset 0
 159 000a 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE3:
 162              		.size	ISR_B_Interrupt, .-ISR_B_Interrupt
 163              		.section	.text.ISR_B_SetVector,"ax",%progbits
 164              		.align	2
 165              		.global	ISR_B_SetVector
 166              		.thumb
 167              		.thumb_func
 168              		.type	ISR_B_SetVector, %function
 169              	ISR_B_SetVector:
 170              	.LFB4:
 171:Generated_Source\PSoC5/ISR_B.c **** 
 172:Generated_Source\PSoC5/ISR_B.c **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 7


 173:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 174:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_SetVector
 175:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 176:Generated_Source\PSoC5/ISR_B.c **** *
 177:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 178:Generated_Source\PSoC5/ISR_B.c **** *   Change the ISR vector for the Interrupt. Note calling ISR_B_Start
 179:Generated_Source\PSoC5/ISR_B.c **** *   will override any effect this method would have had. To set the vector 
 180:Generated_Source\PSoC5/ISR_B.c **** *   before the component has been started use ISR_B_StartEx instead.
 181:Generated_Source\PSoC5/ISR_B.c **** * 
 182:Generated_Source\PSoC5/ISR_B.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 183:Generated_Source\PSoC5/ISR_B.c **** *   used to provide consistent definition across compilers:
 184:Generated_Source\PSoC5/ISR_B.c **** *
 185:Generated_Source\PSoC5/ISR_B.c **** *   Function definition example:
 186:Generated_Source\PSoC5/ISR_B.c **** *   CY_ISR(MyISR)
 187:Generated_Source\PSoC5/ISR_B.c **** *   {
 188:Generated_Source\PSoC5/ISR_B.c **** *   }
 189:Generated_Source\PSoC5/ISR_B.c **** *
 190:Generated_Source\PSoC5/ISR_B.c **** *   Function prototype example:
 191:Generated_Source\PSoC5/ISR_B.c **** *     CY_ISR_PROTO(MyISR);
 192:Generated_Source\PSoC5/ISR_B.c **** *
 193:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 194:Generated_Source\PSoC5/ISR_B.c **** *   address: Address of the ISR to set in the interrupt vector table.
 195:Generated_Source\PSoC5/ISR_B.c **** *
 196:Generated_Source\PSoC5/ISR_B.c **** * Return:
 197:Generated_Source\PSoC5/ISR_B.c **** *   None
 198:Generated_Source\PSoC5/ISR_B.c **** *
 199:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 200:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_SetVector(cyisraddress address)
 201:Generated_Source\PSoC5/ISR_B.c **** {
 171              		.loc 1 201 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 80B4     		push	{r7}
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 85B0     		sub	sp, sp, #20
 180              		.cfi_def_cfa_offset 24
 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 0006 7860     		str	r0, [r7, #4]
 202:Generated_Source\PSoC5/ISR_B.c ****     cyisraddress * ramVectorTable;
 203:Generated_Source\PSoC5/ISR_B.c **** 
 204:Generated_Source\PSoC5/ISR_B.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 184              		.loc 1 204 0
 185 0008 054B     		ldr	r3, .L10
 186 000a 1B68     		ldr	r3, [r3]
 187 000c FB60     		str	r3, [r7, #12]
 205:Generated_Source\PSoC5/ISR_B.c **** 
 206:Generated_Source\PSoC5/ISR_B.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)ISR_B__INTC_NUMBER] = address;
 188              		.loc 1 206 0
 189 000e FB68     		ldr	r3, [r7, #12]
 190 0010 4433     		adds	r3, r3, #68
 191 0012 7A68     		ldr	r2, [r7, #4]
 192 0014 1A60     		str	r2, [r3]
 207:Generated_Source\PSoC5/ISR_B.c **** }
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 8


 193              		.loc 1 207 0
 194 0016 00BF     		nop
 195 0018 1437     		adds	r7, r7, #20
 196              		.cfi_def_cfa_offset 4
 197 001a BD46     		mov	sp, r7
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 001c 80BC     		pop	{r7}
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 001e 7047     		bx	lr
 204              	.L11:
 205              		.align	2
 206              	.L10:
 207 0020 08ED00E0 		.word	-536810232
 208              		.cfi_endproc
 209              	.LFE4:
 210              		.size	ISR_B_SetVector, .-ISR_B_SetVector
 211              		.section	.text.ISR_B_GetVector,"ax",%progbits
 212              		.align	2
 213              		.global	ISR_B_GetVector
 214              		.thumb
 215              		.thumb_func
 216              		.type	ISR_B_GetVector, %function
 217              	ISR_B_GetVector:
 218              	.LFB5:
 208:Generated_Source\PSoC5/ISR_B.c **** 
 209:Generated_Source\PSoC5/ISR_B.c **** 
 210:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_GetVector
 212:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 213:Generated_Source\PSoC5/ISR_B.c **** *
 214:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 215:Generated_Source\PSoC5/ISR_B.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 216:Generated_Source\PSoC5/ISR_B.c **** *
 217:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 218:Generated_Source\PSoC5/ISR_B.c **** *   None
 219:Generated_Source\PSoC5/ISR_B.c **** *
 220:Generated_Source\PSoC5/ISR_B.c **** * Return:
 221:Generated_Source\PSoC5/ISR_B.c **** *   Address of the ISR in the interrupt vector table.
 222:Generated_Source\PSoC5/ISR_B.c **** *
 223:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 224:Generated_Source\PSoC5/ISR_B.c **** cyisraddress ISR_B_GetVector(void)
 225:Generated_Source\PSoC5/ISR_B.c **** {
 219              		.loc 1 225 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0000 80B4     		push	{r7}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 226:Generated_Source\PSoC5/ISR_B.c ****     cyisraddress * ramVectorTable;
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 9


 227:Generated_Source\PSoC5/ISR_B.c **** 
 228:Generated_Source\PSoC5/ISR_B.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 231              		.loc 1 228 0
 232 0006 054B     		ldr	r3, .L14
 233 0008 1B68     		ldr	r3, [r3]
 234 000a 7B60     		str	r3, [r7, #4]
 229:Generated_Source\PSoC5/ISR_B.c **** 
 230:Generated_Source\PSoC5/ISR_B.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)ISR_B__INTC_NUMBER];
 235              		.loc 1 230 0
 236 000c 7B68     		ldr	r3, [r7, #4]
 237 000e 5B6C     		ldr	r3, [r3, #68]
 231:Generated_Source\PSoC5/ISR_B.c **** }
 238              		.loc 1 231 0
 239 0010 1846     		mov	r0, r3
 240 0012 0C37     		adds	r7, r7, #12
 241              		.cfi_def_cfa_offset 4
 242 0014 BD46     		mov	sp, r7
 243              		.cfi_def_cfa_register 13
 244              		@ sp needed
 245 0016 80BC     		pop	{r7}
 246              		.cfi_restore 7
 247              		.cfi_def_cfa_offset 0
 248 0018 7047     		bx	lr
 249              	.L15:
 250 001a 00BF     		.align	2
 251              	.L14:
 252 001c 08ED00E0 		.word	-536810232
 253              		.cfi_endproc
 254              	.LFE5:
 255              		.size	ISR_B_GetVector, .-ISR_B_GetVector
 256              		.section	.text.ISR_B_SetPriority,"ax",%progbits
 257              		.align	2
 258              		.global	ISR_B_SetPriority
 259              		.thumb
 260              		.thumb_func
 261              		.type	ISR_B_SetPriority, %function
 262              	ISR_B_SetPriority:
 263              	.LFB6:
 232:Generated_Source\PSoC5/ISR_B.c **** 
 233:Generated_Source\PSoC5/ISR_B.c **** 
 234:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_SetPriority
 236:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ISR_B.c **** *
 238:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 239:Generated_Source\PSoC5/ISR_B.c **** *   Sets the Priority of the Interrupt. 
 240:Generated_Source\PSoC5/ISR_B.c **** *
 241:Generated_Source\PSoC5/ISR_B.c **** *   Note calling ISR_B_Start or ISR_B_StartEx will 
 242:Generated_Source\PSoC5/ISR_B.c **** *   override any effect this API would have had. This API should only be called
 243:Generated_Source\PSoC5/ISR_B.c **** *   after ISR_B_Start or ISR_B_StartEx has been called. 
 244:Generated_Source\PSoC5/ISR_B.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 245:Generated_Source\PSoC5/ISR_B.c **** *   Interrupt Editor.
 246:Generated_Source\PSoC5/ISR_B.c **** *
 247:Generated_Source\PSoC5/ISR_B.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 248:Generated_Source\PSoC5/ISR_B.c **** *
 249:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 250:Generated_Source\PSoC5/ISR_B.c **** *   priority: Priority of the interrupt, 0 being the highest priority
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 10


 251:Generated_Source\PSoC5/ISR_B.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 252:Generated_Source\PSoC5/ISR_B.c **** *             PSoC 4: Priority is from 0 to 3.
 253:Generated_Source\PSoC5/ISR_B.c **** *
 254:Generated_Source\PSoC5/ISR_B.c **** * Return:
 255:Generated_Source\PSoC5/ISR_B.c **** *   None
 256:Generated_Source\PSoC5/ISR_B.c **** *
 257:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 258:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_SetPriority(uint8 priority)
 259:Generated_Source\PSoC5/ISR_B.c **** {
 264              		.loc 1 259 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 8
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 80B4     		push	{r7}
 270              		.cfi_def_cfa_offset 4
 271              		.cfi_offset 7, -4
 272 0002 83B0     		sub	sp, sp, #12
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 276 0006 0346     		mov	r3, r0
 277 0008 FB71     		strb	r3, [r7, #7]
 260:Generated_Source\PSoC5/ISR_B.c ****     *ISR_B_INTC_PRIOR = priority << 5;
 278              		.loc 1 260 0
 279 000a 054A     		ldr	r2, .L17
 280 000c FB79     		ldrb	r3, [r7, #7]
 281 000e 5B01     		lsls	r3, r3, #5
 282 0010 DBB2     		uxtb	r3, r3
 283 0012 1370     		strb	r3, [r2]
 261:Generated_Source\PSoC5/ISR_B.c **** }
 284              		.loc 1 261 0
 285 0014 00BF     		nop
 286 0016 0C37     		adds	r7, r7, #12
 287              		.cfi_def_cfa_offset 4
 288 0018 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 001a 80BC     		pop	{r7}
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 001c 7047     		bx	lr
 295              	.L18:
 296 001e 00BF     		.align	2
 297              	.L17:
 298 0020 01E400E0 		.word	-536812543
 299              		.cfi_endproc
 300              	.LFE6:
 301              		.size	ISR_B_SetPriority, .-ISR_B_SetPriority
 302              		.section	.text.ISR_B_GetPriority,"ax",%progbits
 303              		.align	2
 304              		.global	ISR_B_GetPriority
 305              		.thumb
 306              		.thumb_func
 307              		.type	ISR_B_GetPriority, %function
 308              	ISR_B_GetPriority:
 309              	.LFB7:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 11


 262:Generated_Source\PSoC5/ISR_B.c **** 
 263:Generated_Source\PSoC5/ISR_B.c **** 
 264:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 265:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_GetPriority
 266:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 267:Generated_Source\PSoC5/ISR_B.c **** *
 268:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 269:Generated_Source\PSoC5/ISR_B.c **** *   Gets the Priority of the Interrupt.
 270:Generated_Source\PSoC5/ISR_B.c **** *
 271:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 272:Generated_Source\PSoC5/ISR_B.c **** *   None
 273:Generated_Source\PSoC5/ISR_B.c **** *
 274:Generated_Source\PSoC5/ISR_B.c **** * Return:
 275:Generated_Source\PSoC5/ISR_B.c **** *   Priority of the interrupt, 0 being the highest priority
 276:Generated_Source\PSoC5/ISR_B.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 277:Generated_Source\PSoC5/ISR_B.c **** *    PSoC 4: Priority is from 0 to 3.
 278:Generated_Source\PSoC5/ISR_B.c **** *
 279:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 280:Generated_Source\PSoC5/ISR_B.c **** uint8 ISR_B_GetPriority(void)
 281:Generated_Source\PSoC5/ISR_B.c **** {
 310              		.loc 1 281 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 8
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315 0000 80B4     		push	{r7}
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 7, -4
 318 0002 83B0     		sub	sp, sp, #12
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              		.cfi_def_cfa_register 7
 282:Generated_Source\PSoC5/ISR_B.c ****     uint8 priority;
 283:Generated_Source\PSoC5/ISR_B.c **** 
 284:Generated_Source\PSoC5/ISR_B.c **** 
 285:Generated_Source\PSoC5/ISR_B.c ****     priority = *ISR_B_INTC_PRIOR >> 5;
 322              		.loc 1 285 0
 323 0006 054B     		ldr	r3, .L21
 324 0008 1B78     		ldrb	r3, [r3]
 325 000a DBB2     		uxtb	r3, r3
 326 000c 5B09     		lsrs	r3, r3, #5
 327 000e FB71     		strb	r3, [r7, #7]
 286:Generated_Source\PSoC5/ISR_B.c **** 
 287:Generated_Source\PSoC5/ISR_B.c ****     return priority;
 328              		.loc 1 287 0
 329 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288:Generated_Source\PSoC5/ISR_B.c **** }
 330              		.loc 1 288 0
 331 0012 1846     		mov	r0, r3
 332 0014 0C37     		adds	r7, r7, #12
 333              		.cfi_def_cfa_offset 4
 334 0016 BD46     		mov	sp, r7
 335              		.cfi_def_cfa_register 13
 336              		@ sp needed
 337 0018 80BC     		pop	{r7}
 338              		.cfi_restore 7
 339              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 12


 340 001a 7047     		bx	lr
 341              	.L22:
 342              		.align	2
 343              	.L21:
 344 001c 01E400E0 		.word	-536812543
 345              		.cfi_endproc
 346              	.LFE7:
 347              		.size	ISR_B_GetPriority, .-ISR_B_GetPriority
 348              		.section	.text.ISR_B_Enable,"ax",%progbits
 349              		.align	2
 350              		.global	ISR_B_Enable
 351              		.thumb
 352              		.thumb_func
 353              		.type	ISR_B_Enable, %function
 354              	ISR_B_Enable:
 355              	.LFB8:
 289:Generated_Source\PSoC5/ISR_B.c **** 
 290:Generated_Source\PSoC5/ISR_B.c **** 
 291:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 292:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_Enable
 293:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 294:Generated_Source\PSoC5/ISR_B.c **** *
 295:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 296:Generated_Source\PSoC5/ISR_B.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 297:Generated_Source\PSoC5/ISR_B.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 298:Generated_Source\PSoC5/ISR_B.c **** *   function, which sets the vector and the priority, has been called.
 299:Generated_Source\PSoC5/ISR_B.c **** *
 300:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 301:Generated_Source\PSoC5/ISR_B.c **** *   None
 302:Generated_Source\PSoC5/ISR_B.c **** *
 303:Generated_Source\PSoC5/ISR_B.c **** * Return:
 304:Generated_Source\PSoC5/ISR_B.c **** *   None
 305:Generated_Source\PSoC5/ISR_B.c **** *
 306:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 307:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_Enable(void)
 308:Generated_Source\PSoC5/ISR_B.c **** {
 356              		.loc 1 308 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 309:Generated_Source\PSoC5/ISR_B.c ****     /* Enable the general interrupt. */
 310:Generated_Source\PSoC5/ISR_B.c ****     *ISR_B_INTC_SET_EN = ISR_B__INTC_MASK;
 366              		.loc 1 310 0
 367 0004 034B     		ldr	r3, .L24
 368 0006 0222     		movs	r2, #2
 369 0008 1A60     		str	r2, [r3]
 311:Generated_Source\PSoC5/ISR_B.c **** }
 370              		.loc 1 311 0
 371 000a 00BF     		nop
 372 000c BD46     		mov	sp, r7
 373              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 13


 374              		@ sp needed
 375 000e 80BC     		pop	{r7}
 376              		.cfi_restore 7
 377              		.cfi_def_cfa_offset 0
 378 0010 7047     		bx	lr
 379              	.L25:
 380 0012 00BF     		.align	2
 381              	.L24:
 382 0014 00E100E0 		.word	-536813312
 383              		.cfi_endproc
 384              	.LFE8:
 385              		.size	ISR_B_Enable, .-ISR_B_Enable
 386              		.section	.text.ISR_B_GetState,"ax",%progbits
 387              		.align	2
 388              		.global	ISR_B_GetState
 389              		.thumb
 390              		.thumb_func
 391              		.type	ISR_B_GetState, %function
 392              	ISR_B_GetState:
 393              	.LFB9:
 312:Generated_Source\PSoC5/ISR_B.c **** 
 313:Generated_Source\PSoC5/ISR_B.c **** 
 314:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_GetState
 316:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 317:Generated_Source\PSoC5/ISR_B.c **** *
 318:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 319:Generated_Source\PSoC5/ISR_B.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 320:Generated_Source\PSoC5/ISR_B.c **** *
 321:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 322:Generated_Source\PSoC5/ISR_B.c **** *   None
 323:Generated_Source\PSoC5/ISR_B.c **** *
 324:Generated_Source\PSoC5/ISR_B.c **** * Return:
 325:Generated_Source\PSoC5/ISR_B.c **** *   1 if enabled, 0 if disabled.
 326:Generated_Source\PSoC5/ISR_B.c **** *
 327:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/ISR_B.c **** uint8 ISR_B_GetState(void)
 329:Generated_Source\PSoC5/ISR_B.c **** {
 394              		.loc 1 329 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399 0000 80B4     		push	{r7}
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 0002 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 330:Generated_Source\PSoC5/ISR_B.c ****     /* Get the state of the general interrupt. */
 331:Generated_Source\PSoC5/ISR_B.c ****     return ((*ISR_B_INTC_SET_EN & (uint32)ISR_B__INTC_MASK) != 0u) ? 1u:0u;
 404              		.loc 1 331 0
 405 0004 064B     		ldr	r3, .L30
 406 0006 1B68     		ldr	r3, [r3]
 407 0008 03F00203 		and	r3, r3, #2
 408 000c 002B     		cmp	r3, #0
 409 000e 01D0     		beq	.L27
 410              		.loc 1 331 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 14


 411 0010 0123     		movs	r3, #1
 412 0012 00E0     		b	.L28
 413              	.L27:
 414              		.loc 1 331 0 discriminator 2
 415 0014 0023     		movs	r3, #0
 416              	.L28:
 332:Generated_Source\PSoC5/ISR_B.c **** }
 417              		.loc 1 332 0 is_stmt 1 discriminator 4
 418 0016 1846     		mov	r0, r3
 419 0018 BD46     		mov	sp, r7
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 001a 80BC     		pop	{r7}
 423              		.cfi_restore 7
 424              		.cfi_def_cfa_offset 0
 425 001c 7047     		bx	lr
 426              	.L31:
 427 001e 00BF     		.align	2
 428              	.L30:
 429 0020 00E100E0 		.word	-536813312
 430              		.cfi_endproc
 431              	.LFE9:
 432              		.size	ISR_B_GetState, .-ISR_B_GetState
 433              		.section	.text.ISR_B_Disable,"ax",%progbits
 434              		.align	2
 435              		.global	ISR_B_Disable
 436              		.thumb
 437              		.thumb_func
 438              		.type	ISR_B_Disable, %function
 439              	ISR_B_Disable:
 440              	.LFB10:
 333:Generated_Source\PSoC5/ISR_B.c **** 
 334:Generated_Source\PSoC5/ISR_B.c **** 
 335:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 336:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_Disable
 337:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 338:Generated_Source\PSoC5/ISR_B.c **** *
 339:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 340:Generated_Source\PSoC5/ISR_B.c **** *   Disables the Interrupt in the interrupt controller.
 341:Generated_Source\PSoC5/ISR_B.c **** *
 342:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 343:Generated_Source\PSoC5/ISR_B.c **** *   None
 344:Generated_Source\PSoC5/ISR_B.c **** *
 345:Generated_Source\PSoC5/ISR_B.c **** * Return:
 346:Generated_Source\PSoC5/ISR_B.c **** *   None
 347:Generated_Source\PSoC5/ISR_B.c **** *
 348:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 349:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_Disable(void)
 350:Generated_Source\PSoC5/ISR_B.c **** {
 441              		.loc 1 350 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 15


 449 0002 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 351:Generated_Source\PSoC5/ISR_B.c ****     /* Disable the general interrupt. */
 352:Generated_Source\PSoC5/ISR_B.c ****     *ISR_B_INTC_CLR_EN = ISR_B__INTC_MASK;
 451              		.loc 1 352 0
 452 0004 034B     		ldr	r3, .L33
 453 0006 0222     		movs	r2, #2
 454 0008 1A60     		str	r2, [r3]
 353:Generated_Source\PSoC5/ISR_B.c **** }
 455              		.loc 1 353 0
 456 000a 00BF     		nop
 457 000c BD46     		mov	sp, r7
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 000e 80BC     		pop	{r7}
 461              		.cfi_restore 7
 462              		.cfi_def_cfa_offset 0
 463 0010 7047     		bx	lr
 464              	.L34:
 465 0012 00BF     		.align	2
 466              	.L33:
 467 0014 80E100E0 		.word	-536813184
 468              		.cfi_endproc
 469              	.LFE10:
 470              		.size	ISR_B_Disable, .-ISR_B_Disable
 471              		.section	.text.ISR_B_SetPending,"ax",%progbits
 472              		.align	2
 473              		.global	ISR_B_SetPending
 474              		.thumb
 475              		.thumb_func
 476              		.type	ISR_B_SetPending, %function
 477              	ISR_B_SetPending:
 478              	.LFB11:
 354:Generated_Source\PSoC5/ISR_B.c **** 
 355:Generated_Source\PSoC5/ISR_B.c **** 
 356:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 357:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_SetPending
 358:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 359:Generated_Source\PSoC5/ISR_B.c **** *
 360:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 361:Generated_Source\PSoC5/ISR_B.c **** *   Causes the Interrupt to enter the pending state, a software method of
 362:Generated_Source\PSoC5/ISR_B.c **** *   generating the interrupt.
 363:Generated_Source\PSoC5/ISR_B.c **** *
 364:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 365:Generated_Source\PSoC5/ISR_B.c **** *   None
 366:Generated_Source\PSoC5/ISR_B.c **** *
 367:Generated_Source\PSoC5/ISR_B.c **** * Return:
 368:Generated_Source\PSoC5/ISR_B.c **** *   None
 369:Generated_Source\PSoC5/ISR_B.c **** *
 370:Generated_Source\PSoC5/ISR_B.c **** * Side Effects:
 371:Generated_Source\PSoC5/ISR_B.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 372:Generated_Source\PSoC5/ISR_B.c **** *   entered (depending on the priority of this interrupt and other pending 
 373:Generated_Source\PSoC5/ISR_B.c **** *   interrupts).
 374:Generated_Source\PSoC5/ISR_B.c **** *
 375:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 376:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_SetPending(void)
 377:Generated_Source\PSoC5/ISR_B.c **** {
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 16


 479              		.loc 1 377 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 80B4     		push	{r7}
 485              		.cfi_def_cfa_offset 4
 486              		.cfi_offset 7, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 378:Generated_Source\PSoC5/ISR_B.c ****     *ISR_B_INTC_SET_PD = ISR_B__INTC_MASK;
 489              		.loc 1 378 0
 490 0004 034B     		ldr	r3, .L36
 491 0006 0222     		movs	r2, #2
 492 0008 1A60     		str	r2, [r3]
 379:Generated_Source\PSoC5/ISR_B.c **** }
 493              		.loc 1 379 0
 494 000a 00BF     		nop
 495 000c BD46     		mov	sp, r7
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 000e 80BC     		pop	{r7}
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 0
 501 0010 7047     		bx	lr
 502              	.L37:
 503 0012 00BF     		.align	2
 504              	.L36:
 505 0014 00E200E0 		.word	-536813056
 506              		.cfi_endproc
 507              	.LFE11:
 508              		.size	ISR_B_SetPending, .-ISR_B_SetPending
 509              		.section	.text.ISR_B_ClearPending,"ax",%progbits
 510              		.align	2
 511              		.global	ISR_B_ClearPending
 512              		.thumb
 513              		.thumb_func
 514              		.type	ISR_B_ClearPending, %function
 515              	ISR_B_ClearPending:
 516              	.LFB12:
 380:Generated_Source\PSoC5/ISR_B.c **** 
 381:Generated_Source\PSoC5/ISR_B.c **** 
 382:Generated_Source\PSoC5/ISR_B.c **** /*******************************************************************************
 383:Generated_Source\PSoC5/ISR_B.c **** * Function Name: ISR_B_ClearPending
 384:Generated_Source\PSoC5/ISR_B.c **** ********************************************************************************
 385:Generated_Source\PSoC5/ISR_B.c **** *
 386:Generated_Source\PSoC5/ISR_B.c **** * Summary:
 387:Generated_Source\PSoC5/ISR_B.c **** *   Clears a pending interrupt in the interrupt controller.
 388:Generated_Source\PSoC5/ISR_B.c **** *
 389:Generated_Source\PSoC5/ISR_B.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 390:Generated_Source\PSoC5/ISR_B.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 391:Generated_Source\PSoC5/ISR_B.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 392:Generated_Source\PSoC5/ISR_B.c **** *   pending state even though the interrupt itself is cleared using this API.
 393:Generated_Source\PSoC5/ISR_B.c **** *
 394:Generated_Source\PSoC5/ISR_B.c **** * Parameters:
 395:Generated_Source\PSoC5/ISR_B.c **** *   None
 396:Generated_Source\PSoC5/ISR_B.c **** *
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 17


 397:Generated_Source\PSoC5/ISR_B.c **** * Return:
 398:Generated_Source\PSoC5/ISR_B.c **** *   None
 399:Generated_Source\PSoC5/ISR_B.c **** *
 400:Generated_Source\PSoC5/ISR_B.c **** *******************************************************************************/
 401:Generated_Source\PSoC5/ISR_B.c **** void ISR_B_ClearPending(void)
 402:Generated_Source\PSoC5/ISR_B.c **** {
 517              		.loc 1 402 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0000 80B4     		push	{r7}
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
 525 0002 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/ISR_B.c ****     *ISR_B_INTC_CLR_PD = ISR_B__INTC_MASK;
 527              		.loc 1 403 0
 528 0004 034B     		ldr	r3, .L39
 529 0006 0222     		movs	r2, #2
 530 0008 1A60     		str	r2, [r3]
 404:Generated_Source\PSoC5/ISR_B.c **** }
 531              		.loc 1 404 0
 532 000a 00BF     		nop
 533 000c BD46     		mov	sp, r7
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 000e 80BC     		pop	{r7}
 537              		.cfi_restore 7
 538              		.cfi_def_cfa_offset 0
 539 0010 7047     		bx	lr
 540              	.L40:
 541 0012 00BF     		.align	2
 542              	.L39:
 543 0014 80E200E0 		.word	-536812928
 544              		.cfi_endproc
 545              	.LFE12:
 546              		.size	ISR_B_ClearPending, .-ISR_B_ClearPending
 547              		.text
 548              	.Letext0:
 549              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 550              		.section	.debug_info,"",%progbits
 551              	.Ldebug_info0:
 552 0000 3B020000 		.4byte	0x23b
 553 0004 0400     		.2byte	0x4
 554 0006 00000000 		.4byte	.Ldebug_abbrev0
 555 000a 04       		.byte	0x4
 556 000b 01       		.uleb128 0x1
 557 000c 06000000 		.4byte	.LASF34
 558 0010 0C       		.byte	0xc
 559 0011 75020000 		.4byte	.LASF35
 560 0015 94000000 		.4byte	.LASF36
 561 0019 00000000 		.4byte	.Ldebug_ranges0+0
 562 001d 00000000 		.4byte	0
 563 0021 00000000 		.4byte	.Ldebug_line0
 564 0025 02       		.uleb128 0x2
 565 0026 04       		.byte	0x4
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 18


 566 0027 05       		.byte	0x5
 567 0028 696E7400 		.ascii	"int\000"
 568 002c 03       		.uleb128 0x3
 569 002d 04       		.byte	0x4
 570 002e 07       		.byte	0x7
 571 002f 93010000 		.4byte	.LASF0
 572 0033 03       		.uleb128 0x3
 573 0034 08       		.byte	0x8
 574 0035 05       		.byte	0x5
 575 0036 24020000 		.4byte	.LASF1
 576 003a 03       		.uleb128 0x3
 577 003b 08       		.byte	0x8
 578 003c 04       		.byte	0x4
 579 003d A7020000 		.4byte	.LASF2
 580 0041 03       		.uleb128 0x3
 581 0042 01       		.byte	0x1
 582 0043 06       		.byte	0x6
 583 0044 B3020000 		.4byte	.LASF3
 584 0048 03       		.uleb128 0x3
 585 0049 01       		.byte	0x1
 586 004a 08       		.byte	0x8
 587 004b 6B010000 		.4byte	.LASF4
 588 004f 03       		.uleb128 0x3
 589 0050 02       		.byte	0x2
 590 0051 05       		.byte	0x5
 591 0052 51020000 		.4byte	.LASF5
 592 0056 03       		.uleb128 0x3
 593 0057 02       		.byte	0x2
 594 0058 07       		.byte	0x7
 595 0059 EF000000 		.4byte	.LASF6
 596 005d 03       		.uleb128 0x3
 597 005e 04       		.byte	0x4
 598 005f 05       		.byte	0x5
 599 0060 6C020000 		.4byte	.LASF7
 600 0064 03       		.uleb128 0x3
 601 0065 04       		.byte	0x4
 602 0066 07       		.byte	0x7
 603 0067 3C010000 		.4byte	.LASF8
 604 006b 03       		.uleb128 0x3
 605 006c 08       		.byte	0x8
 606 006d 07       		.byte	0x7
 607 006e C8010000 		.4byte	.LASF9
 608 0072 03       		.uleb128 0x3
 609 0073 04       		.byte	0x4
 610 0074 07       		.byte	0x7
 611 0075 1B020000 		.4byte	.LASF10
 612 0079 03       		.uleb128 0x3
 613 007a 01       		.byte	0x1
 614 007b 08       		.byte	0x8
 615 007c 32020000 		.4byte	.LASF11
 616 0080 04       		.uleb128 0x4
 617 0081 04       		.byte	0x4
 618 0082 86000000 		.4byte	0x86
 619 0086 05       		.uleb128 0x5
 620 0087 06       		.uleb128 0x6
 621 0088 4E010000 		.4byte	.LASF12
 622 008c 02       		.byte	0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 19


 623 008d A1       		.byte	0xa1
 624 008e 48000000 		.4byte	0x48
 625 0092 06       		.uleb128 0x6
 626 0093 8C010000 		.4byte	.LASF13
 627 0097 02       		.byte	0x2
 628 0098 A3       		.byte	0xa3
 629 0099 64000000 		.4byte	0x64
 630 009d 03       		.uleb128 0x3
 631 009e 04       		.byte	0x4
 632 009f 04       		.byte	0x4
 633 00a0 12010000 		.4byte	.LASF14
 634 00a4 03       		.uleb128 0x3
 635 00a5 08       		.byte	0x8
 636 00a6 04       		.byte	0x4
 637 00a7 79010000 		.4byte	.LASF15
 638 00ab 07       		.uleb128 0x7
 639 00ac 2A010000 		.4byte	.LASF16
 640 00b0 02       		.byte	0x2
 641 00b1 4B01     		.2byte	0x14b
 642 00b3 B7000000 		.4byte	0xb7
 643 00b7 08       		.uleb128 0x8
 644 00b8 87000000 		.4byte	0x87
 645 00bc 07       		.uleb128 0x7
 646 00bd 00000000 		.4byte	.LASF17
 647 00c1 02       		.byte	0x2
 648 00c2 4D01     		.2byte	0x14d
 649 00c4 C8000000 		.4byte	0xc8
 650 00c8 08       		.uleb128 0x8
 651 00c9 92000000 		.4byte	0x92
 652 00cd 07       		.uleb128 0x7
 653 00ce 0E020000 		.4byte	.LASF18
 654 00d2 02       		.byte	0x2
 655 00d3 5D01     		.2byte	0x15d
 656 00d5 80000000 		.4byte	0x80
 657 00d9 09       		.uleb128 0x9
 658 00da 80010000 		.4byte	.LASF19
 659 00de 01       		.byte	0x1
 660 00df 3D       		.byte	0x3d
 661 00e0 00000000 		.4byte	.LFB0
 662 00e4 20000000 		.4byte	.LFE0-.LFB0
 663 00e8 01       		.uleb128 0x1
 664 00e9 9C       		.byte	0x9c
 665 00ea 0A       		.uleb128 0xa
 666 00eb 5D010000 		.4byte	.LASF22
 667 00ef 01       		.byte	0x1
 668 00f0 68       		.byte	0x68
 669 00f1 00000000 		.4byte	.LFB1
 670 00f5 24000000 		.4byte	.LFE1-.LFB1
 671 00f9 01       		.uleb128 0x1
 672 00fa 9C       		.byte	0x9c
 673 00fb 0E010000 		.4byte	0x10e
 674 00ff 0B       		.uleb128 0xb
 675 0100 C0010000 		.4byte	.LASF24
 676 0104 01       		.byte	0x1
 677 0105 68       		.byte	0x68
 678 0106 CD000000 		.4byte	0xcd
 679 010a 02       		.uleb128 0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 20


 680 010b 91       		.byte	0x91
 681 010c 74       		.sleb128 -12
 682 010d 00       		.byte	0
 683 010e 09       		.uleb128 0x9
 684 010f 46020000 		.4byte	.LASF20
 685 0113 01       		.byte	0x1
 686 0114 86       		.byte	0x86
 687 0115 00000000 		.4byte	.LFB2
 688 0119 18000000 		.4byte	.LFE2-.LFB2
 689 011d 01       		.uleb128 0x1
 690 011e 9C       		.byte	0x9c
 691 011f 0C       		.uleb128 0xc
 692 0120 EE010000 		.4byte	.LASF21
 693 0124 01       		.byte	0x1
 694 0125 A0       		.byte	0xa0
 695 0126 00000000 		.4byte	.LFB3
 696 012a 0C000000 		.4byte	.LFE3-.LFB3
 697 012e 01       		.uleb128 0x1
 698 012f 9C       		.byte	0x9c
 699 0130 0D       		.uleb128 0xd
 700 0131 02010000 		.4byte	.LASF23
 701 0135 01       		.byte	0x1
 702 0136 C8       		.byte	0xc8
 703 0137 00000000 		.4byte	.LFB4
 704 013b 24000000 		.4byte	.LFE4-.LFB4
 705 013f 01       		.uleb128 0x1
 706 0140 9C       		.byte	0x9c
 707 0141 62010000 		.4byte	0x162
 708 0145 0B       		.uleb128 0xb
 709 0146 C0010000 		.4byte	.LASF24
 710 014a 01       		.byte	0x1
 711 014b C8       		.byte	0xc8
 712 014c CD000000 		.4byte	0xcd
 713 0150 02       		.uleb128 0x2
 714 0151 91       		.byte	0x91
 715 0152 6C       		.sleb128 -20
 716 0153 0E       		.uleb128 0xe
 717 0154 37020000 		.4byte	.LASF25
 718 0158 01       		.byte	0x1
 719 0159 CA       		.byte	0xca
 720 015a 62010000 		.4byte	0x162
 721 015e 02       		.uleb128 0x2
 722 015f 91       		.byte	0x91
 723 0160 74       		.sleb128 -12
 724 0161 00       		.byte	0
 725 0162 04       		.uleb128 0x4
 726 0163 04       		.byte	0x4
 727 0164 CD000000 		.4byte	0xcd
 728 0168 0F       		.uleb128 0xf
 729 0169 FE010000 		.4byte	.LASF28
 730 016d 01       		.byte	0x1
 731 016e E0       		.byte	0xe0
 732 016f CD000000 		.4byte	0xcd
 733 0173 00000000 		.4byte	.LFB5
 734 0177 20000000 		.4byte	.LFE5-.LFB5
 735 017b 01       		.uleb128 0x1
 736 017c 9C       		.byte	0x9c
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 21


 737 017d 90010000 		.4byte	0x190
 738 0181 0E       		.uleb128 0xe
 739 0182 37020000 		.4byte	.LASF25
 740 0186 01       		.byte	0x1
 741 0187 E2       		.byte	0xe2
 742 0188 62010000 		.4byte	0x162
 743 018c 02       		.uleb128 0x2
 744 018d 91       		.byte	0x91
 745 018e 74       		.sleb128 -12
 746 018f 00       		.byte	0
 747 0190 10       		.uleb128 0x10
 748 0191 18010000 		.4byte	.LASF26
 749 0195 01       		.byte	0x1
 750 0196 0201     		.2byte	0x102
 751 0198 00000000 		.4byte	.LFB6
 752 019c 24000000 		.4byte	.LFE6-.LFB6
 753 01a0 01       		.uleb128 0x1
 754 01a1 9C       		.byte	0x9c
 755 01a2 B6010000 		.4byte	0x1b6
 756 01a6 11       		.uleb128 0x11
 757 01a7 54010000 		.4byte	.LASF27
 758 01ab 01       		.byte	0x1
 759 01ac 0201     		.2byte	0x102
 760 01ae 87000000 		.4byte	0x87
 761 01b2 02       		.uleb128 0x2
 762 01b3 91       		.byte	0x91
 763 01b4 77       		.sleb128 -9
 764 01b5 00       		.byte	0
 765 01b6 12       		.uleb128 0x12
 766 01b7 AE010000 		.4byte	.LASF29
 767 01bb 01       		.byte	0x1
 768 01bc 1801     		.2byte	0x118
 769 01be 87000000 		.4byte	0x87
 770 01c2 00000000 		.4byte	.LFB7
 771 01c6 20000000 		.4byte	.LFE7-.LFB7
 772 01ca 01       		.uleb128 0x1
 773 01cb 9C       		.byte	0x9c
 774 01cc E0010000 		.4byte	0x1e0
 775 01d0 13       		.uleb128 0x13
 776 01d1 54010000 		.4byte	.LASF27
 777 01d5 01       		.byte	0x1
 778 01d6 1A01     		.2byte	0x11a
 779 01d8 87000000 		.4byte	0x87
 780 01dc 02       		.uleb128 0x2
 781 01dd 91       		.byte	0x91
 782 01de 77       		.sleb128 -9
 783 01df 00       		.byte	0
 784 01e0 14       		.uleb128 0x14
 785 01e1 2F010000 		.4byte	.LASF30
 786 01e5 01       		.byte	0x1
 787 01e6 3301     		.2byte	0x133
 788 01e8 00000000 		.4byte	.LFB8
 789 01ec 18000000 		.4byte	.LFE8-.LFB8
 790 01f0 01       		.uleb128 0x1
 791 01f1 9C       		.byte	0x9c
 792 01f2 15       		.uleb128 0x15
 793 01f3 DF010000 		.4byte	.LASF37
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 22


 794 01f7 01       		.byte	0x1
 795 01f8 4801     		.2byte	0x148
 796 01fa 87000000 		.4byte	0x87
 797 01fe 00000000 		.4byte	.LFB9
 798 0202 24000000 		.4byte	.LFE9-.LFB9
 799 0206 01       		.uleb128 0x1
 800 0207 9C       		.byte	0x9c
 801 0208 14       		.uleb128 0x14
 802 0209 A0010000 		.4byte	.LASF31
 803 020d 01       		.byte	0x1
 804 020e 5D01     		.2byte	0x15d
 805 0210 00000000 		.4byte	.LFB10
 806 0214 18000000 		.4byte	.LFE10-.LFB10
 807 0218 01       		.uleb128 0x1
 808 0219 9C       		.byte	0x9c
 809 021a 14       		.uleb128 0x14
 810 021b 5B020000 		.4byte	.LASF32
 811 021f 01       		.byte	0x1
 812 0220 7801     		.2byte	0x178
 813 0222 00000000 		.4byte	.LFB11
 814 0226 18000000 		.4byte	.LFE11-.LFB11
 815 022a 01       		.uleb128 0x1
 816 022b 9C       		.byte	0x9c
 817 022c 14       		.uleb128 0x14
 818 022d 94020000 		.4byte	.LASF33
 819 0231 01       		.byte	0x1
 820 0232 9101     		.2byte	0x191
 821 0234 00000000 		.4byte	.LFB12
 822 0238 18000000 		.4byte	.LFE12-.LFB12
 823 023c 01       		.uleb128 0x1
 824 023d 9C       		.byte	0x9c
 825 023e 00       		.byte	0
 826              		.section	.debug_abbrev,"",%progbits
 827              	.Ldebug_abbrev0:
 828 0000 01       		.uleb128 0x1
 829 0001 11       		.uleb128 0x11
 830 0002 01       		.byte	0x1
 831 0003 25       		.uleb128 0x25
 832 0004 0E       		.uleb128 0xe
 833 0005 13       		.uleb128 0x13
 834 0006 0B       		.uleb128 0xb
 835 0007 03       		.uleb128 0x3
 836 0008 0E       		.uleb128 0xe
 837 0009 1B       		.uleb128 0x1b
 838 000a 0E       		.uleb128 0xe
 839 000b 55       		.uleb128 0x55
 840 000c 17       		.uleb128 0x17
 841 000d 11       		.uleb128 0x11
 842 000e 01       		.uleb128 0x1
 843 000f 10       		.uleb128 0x10
 844 0010 17       		.uleb128 0x17
 845 0011 00       		.byte	0
 846 0012 00       		.byte	0
 847 0013 02       		.uleb128 0x2
 848 0014 24       		.uleb128 0x24
 849 0015 00       		.byte	0
 850 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 23


 851 0017 0B       		.uleb128 0xb
 852 0018 3E       		.uleb128 0x3e
 853 0019 0B       		.uleb128 0xb
 854 001a 03       		.uleb128 0x3
 855 001b 08       		.uleb128 0x8
 856 001c 00       		.byte	0
 857 001d 00       		.byte	0
 858 001e 03       		.uleb128 0x3
 859 001f 24       		.uleb128 0x24
 860 0020 00       		.byte	0
 861 0021 0B       		.uleb128 0xb
 862 0022 0B       		.uleb128 0xb
 863 0023 3E       		.uleb128 0x3e
 864 0024 0B       		.uleb128 0xb
 865 0025 03       		.uleb128 0x3
 866 0026 0E       		.uleb128 0xe
 867 0027 00       		.byte	0
 868 0028 00       		.byte	0
 869 0029 04       		.uleb128 0x4
 870 002a 0F       		.uleb128 0xf
 871 002b 00       		.byte	0
 872 002c 0B       		.uleb128 0xb
 873 002d 0B       		.uleb128 0xb
 874 002e 49       		.uleb128 0x49
 875 002f 13       		.uleb128 0x13
 876 0030 00       		.byte	0
 877 0031 00       		.byte	0
 878 0032 05       		.uleb128 0x5
 879 0033 15       		.uleb128 0x15
 880 0034 00       		.byte	0
 881 0035 27       		.uleb128 0x27
 882 0036 19       		.uleb128 0x19
 883 0037 00       		.byte	0
 884 0038 00       		.byte	0
 885 0039 06       		.uleb128 0x6
 886 003a 16       		.uleb128 0x16
 887 003b 00       		.byte	0
 888 003c 03       		.uleb128 0x3
 889 003d 0E       		.uleb128 0xe
 890 003e 3A       		.uleb128 0x3a
 891 003f 0B       		.uleb128 0xb
 892 0040 3B       		.uleb128 0x3b
 893 0041 0B       		.uleb128 0xb
 894 0042 49       		.uleb128 0x49
 895 0043 13       		.uleb128 0x13
 896 0044 00       		.byte	0
 897 0045 00       		.byte	0
 898 0046 07       		.uleb128 0x7
 899 0047 16       		.uleb128 0x16
 900 0048 00       		.byte	0
 901 0049 03       		.uleb128 0x3
 902 004a 0E       		.uleb128 0xe
 903 004b 3A       		.uleb128 0x3a
 904 004c 0B       		.uleb128 0xb
 905 004d 3B       		.uleb128 0x3b
 906 004e 05       		.uleb128 0x5
 907 004f 49       		.uleb128 0x49
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 24


 908 0050 13       		.uleb128 0x13
 909 0051 00       		.byte	0
 910 0052 00       		.byte	0
 911 0053 08       		.uleb128 0x8
 912 0054 35       		.uleb128 0x35
 913 0055 00       		.byte	0
 914 0056 49       		.uleb128 0x49
 915 0057 13       		.uleb128 0x13
 916 0058 00       		.byte	0
 917 0059 00       		.byte	0
 918 005a 09       		.uleb128 0x9
 919 005b 2E       		.uleb128 0x2e
 920 005c 00       		.byte	0
 921 005d 3F       		.uleb128 0x3f
 922 005e 19       		.uleb128 0x19
 923 005f 03       		.uleb128 0x3
 924 0060 0E       		.uleb128 0xe
 925 0061 3A       		.uleb128 0x3a
 926 0062 0B       		.uleb128 0xb
 927 0063 3B       		.uleb128 0x3b
 928 0064 0B       		.uleb128 0xb
 929 0065 27       		.uleb128 0x27
 930 0066 19       		.uleb128 0x19
 931 0067 11       		.uleb128 0x11
 932 0068 01       		.uleb128 0x1
 933 0069 12       		.uleb128 0x12
 934 006a 06       		.uleb128 0x6
 935 006b 40       		.uleb128 0x40
 936 006c 18       		.uleb128 0x18
 937 006d 9642     		.uleb128 0x2116
 938 006f 19       		.uleb128 0x19
 939 0070 00       		.byte	0
 940 0071 00       		.byte	0
 941 0072 0A       		.uleb128 0xa
 942 0073 2E       		.uleb128 0x2e
 943 0074 01       		.byte	0x1
 944 0075 3F       		.uleb128 0x3f
 945 0076 19       		.uleb128 0x19
 946 0077 03       		.uleb128 0x3
 947 0078 0E       		.uleb128 0xe
 948 0079 3A       		.uleb128 0x3a
 949 007a 0B       		.uleb128 0xb
 950 007b 3B       		.uleb128 0x3b
 951 007c 0B       		.uleb128 0xb
 952 007d 27       		.uleb128 0x27
 953 007e 19       		.uleb128 0x19
 954 007f 11       		.uleb128 0x11
 955 0080 01       		.uleb128 0x1
 956 0081 12       		.uleb128 0x12
 957 0082 06       		.uleb128 0x6
 958 0083 40       		.uleb128 0x40
 959 0084 18       		.uleb128 0x18
 960 0085 9642     		.uleb128 0x2116
 961 0087 19       		.uleb128 0x19
 962 0088 01       		.uleb128 0x1
 963 0089 13       		.uleb128 0x13
 964 008a 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 25


 965 008b 00       		.byte	0
 966 008c 0B       		.uleb128 0xb
 967 008d 05       		.uleb128 0x5
 968 008e 00       		.byte	0
 969 008f 03       		.uleb128 0x3
 970 0090 0E       		.uleb128 0xe
 971 0091 3A       		.uleb128 0x3a
 972 0092 0B       		.uleb128 0xb
 973 0093 3B       		.uleb128 0x3b
 974 0094 0B       		.uleb128 0xb
 975 0095 49       		.uleb128 0x49
 976 0096 13       		.uleb128 0x13
 977 0097 02       		.uleb128 0x2
 978 0098 18       		.uleb128 0x18
 979 0099 00       		.byte	0
 980 009a 00       		.byte	0
 981 009b 0C       		.uleb128 0xc
 982 009c 2E       		.uleb128 0x2e
 983 009d 00       		.byte	0
 984 009e 3F       		.uleb128 0x3f
 985 009f 19       		.uleb128 0x19
 986 00a0 03       		.uleb128 0x3
 987 00a1 0E       		.uleb128 0xe
 988 00a2 3A       		.uleb128 0x3a
 989 00a3 0B       		.uleb128 0xb
 990 00a4 3B       		.uleb128 0x3b
 991 00a5 0B       		.uleb128 0xb
 992 00a6 27       		.uleb128 0x27
 993 00a7 19       		.uleb128 0x19
 994 00a8 11       		.uleb128 0x11
 995 00a9 01       		.uleb128 0x1
 996 00aa 12       		.uleb128 0x12
 997 00ab 06       		.uleb128 0x6
 998 00ac 40       		.uleb128 0x40
 999 00ad 18       		.uleb128 0x18
 1000 00ae 9742     		.uleb128 0x2117
 1001 00b0 19       		.uleb128 0x19
 1002 00b1 00       		.byte	0
 1003 00b2 00       		.byte	0
 1004 00b3 0D       		.uleb128 0xd
 1005 00b4 2E       		.uleb128 0x2e
 1006 00b5 01       		.byte	0x1
 1007 00b6 3F       		.uleb128 0x3f
 1008 00b7 19       		.uleb128 0x19
 1009 00b8 03       		.uleb128 0x3
 1010 00b9 0E       		.uleb128 0xe
 1011 00ba 3A       		.uleb128 0x3a
 1012 00bb 0B       		.uleb128 0xb
 1013 00bc 3B       		.uleb128 0x3b
 1014 00bd 0B       		.uleb128 0xb
 1015 00be 27       		.uleb128 0x27
 1016 00bf 19       		.uleb128 0x19
 1017 00c0 11       		.uleb128 0x11
 1018 00c1 01       		.uleb128 0x1
 1019 00c2 12       		.uleb128 0x12
 1020 00c3 06       		.uleb128 0x6
 1021 00c4 40       		.uleb128 0x40
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 26


 1022 00c5 18       		.uleb128 0x18
 1023 00c6 9742     		.uleb128 0x2117
 1024 00c8 19       		.uleb128 0x19
 1025 00c9 01       		.uleb128 0x1
 1026 00ca 13       		.uleb128 0x13
 1027 00cb 00       		.byte	0
 1028 00cc 00       		.byte	0
 1029 00cd 0E       		.uleb128 0xe
 1030 00ce 34       		.uleb128 0x34
 1031 00cf 00       		.byte	0
 1032 00d0 03       		.uleb128 0x3
 1033 00d1 0E       		.uleb128 0xe
 1034 00d2 3A       		.uleb128 0x3a
 1035 00d3 0B       		.uleb128 0xb
 1036 00d4 3B       		.uleb128 0x3b
 1037 00d5 0B       		.uleb128 0xb
 1038 00d6 49       		.uleb128 0x49
 1039 00d7 13       		.uleb128 0x13
 1040 00d8 02       		.uleb128 0x2
 1041 00d9 18       		.uleb128 0x18
 1042 00da 00       		.byte	0
 1043 00db 00       		.byte	0
 1044 00dc 0F       		.uleb128 0xf
 1045 00dd 2E       		.uleb128 0x2e
 1046 00de 01       		.byte	0x1
 1047 00df 3F       		.uleb128 0x3f
 1048 00e0 19       		.uleb128 0x19
 1049 00e1 03       		.uleb128 0x3
 1050 00e2 0E       		.uleb128 0xe
 1051 00e3 3A       		.uleb128 0x3a
 1052 00e4 0B       		.uleb128 0xb
 1053 00e5 3B       		.uleb128 0x3b
 1054 00e6 0B       		.uleb128 0xb
 1055 00e7 27       		.uleb128 0x27
 1056 00e8 19       		.uleb128 0x19
 1057 00e9 49       		.uleb128 0x49
 1058 00ea 13       		.uleb128 0x13
 1059 00eb 11       		.uleb128 0x11
 1060 00ec 01       		.uleb128 0x1
 1061 00ed 12       		.uleb128 0x12
 1062 00ee 06       		.uleb128 0x6
 1063 00ef 40       		.uleb128 0x40
 1064 00f0 18       		.uleb128 0x18
 1065 00f1 9742     		.uleb128 0x2117
 1066 00f3 19       		.uleb128 0x19
 1067 00f4 01       		.uleb128 0x1
 1068 00f5 13       		.uleb128 0x13
 1069 00f6 00       		.byte	0
 1070 00f7 00       		.byte	0
 1071 00f8 10       		.uleb128 0x10
 1072 00f9 2E       		.uleb128 0x2e
 1073 00fa 01       		.byte	0x1
 1074 00fb 3F       		.uleb128 0x3f
 1075 00fc 19       		.uleb128 0x19
 1076 00fd 03       		.uleb128 0x3
 1077 00fe 0E       		.uleb128 0xe
 1078 00ff 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 27


 1079 0100 0B       		.uleb128 0xb
 1080 0101 3B       		.uleb128 0x3b
 1081 0102 05       		.uleb128 0x5
 1082 0103 27       		.uleb128 0x27
 1083 0104 19       		.uleb128 0x19
 1084 0105 11       		.uleb128 0x11
 1085 0106 01       		.uleb128 0x1
 1086 0107 12       		.uleb128 0x12
 1087 0108 06       		.uleb128 0x6
 1088 0109 40       		.uleb128 0x40
 1089 010a 18       		.uleb128 0x18
 1090 010b 9742     		.uleb128 0x2117
 1091 010d 19       		.uleb128 0x19
 1092 010e 01       		.uleb128 0x1
 1093 010f 13       		.uleb128 0x13
 1094 0110 00       		.byte	0
 1095 0111 00       		.byte	0
 1096 0112 11       		.uleb128 0x11
 1097 0113 05       		.uleb128 0x5
 1098 0114 00       		.byte	0
 1099 0115 03       		.uleb128 0x3
 1100 0116 0E       		.uleb128 0xe
 1101 0117 3A       		.uleb128 0x3a
 1102 0118 0B       		.uleb128 0xb
 1103 0119 3B       		.uleb128 0x3b
 1104 011a 05       		.uleb128 0x5
 1105 011b 49       		.uleb128 0x49
 1106 011c 13       		.uleb128 0x13
 1107 011d 02       		.uleb128 0x2
 1108 011e 18       		.uleb128 0x18
 1109 011f 00       		.byte	0
 1110 0120 00       		.byte	0
 1111 0121 12       		.uleb128 0x12
 1112 0122 2E       		.uleb128 0x2e
 1113 0123 01       		.byte	0x1
 1114 0124 3F       		.uleb128 0x3f
 1115 0125 19       		.uleb128 0x19
 1116 0126 03       		.uleb128 0x3
 1117 0127 0E       		.uleb128 0xe
 1118 0128 3A       		.uleb128 0x3a
 1119 0129 0B       		.uleb128 0xb
 1120 012a 3B       		.uleb128 0x3b
 1121 012b 05       		.uleb128 0x5
 1122 012c 27       		.uleb128 0x27
 1123 012d 19       		.uleb128 0x19
 1124 012e 49       		.uleb128 0x49
 1125 012f 13       		.uleb128 0x13
 1126 0130 11       		.uleb128 0x11
 1127 0131 01       		.uleb128 0x1
 1128 0132 12       		.uleb128 0x12
 1129 0133 06       		.uleb128 0x6
 1130 0134 40       		.uleb128 0x40
 1131 0135 18       		.uleb128 0x18
 1132 0136 9742     		.uleb128 0x2117
 1133 0138 19       		.uleb128 0x19
 1134 0139 01       		.uleb128 0x1
 1135 013a 13       		.uleb128 0x13
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 28


 1136 013b 00       		.byte	0
 1137 013c 00       		.byte	0
 1138 013d 13       		.uleb128 0x13
 1139 013e 34       		.uleb128 0x34
 1140 013f 00       		.byte	0
 1141 0140 03       		.uleb128 0x3
 1142 0141 0E       		.uleb128 0xe
 1143 0142 3A       		.uleb128 0x3a
 1144 0143 0B       		.uleb128 0xb
 1145 0144 3B       		.uleb128 0x3b
 1146 0145 05       		.uleb128 0x5
 1147 0146 49       		.uleb128 0x49
 1148 0147 13       		.uleb128 0x13
 1149 0148 02       		.uleb128 0x2
 1150 0149 18       		.uleb128 0x18
 1151 014a 00       		.byte	0
 1152 014b 00       		.byte	0
 1153 014c 14       		.uleb128 0x14
 1154 014d 2E       		.uleb128 0x2e
 1155 014e 00       		.byte	0
 1156 014f 3F       		.uleb128 0x3f
 1157 0150 19       		.uleb128 0x19
 1158 0151 03       		.uleb128 0x3
 1159 0152 0E       		.uleb128 0xe
 1160 0153 3A       		.uleb128 0x3a
 1161 0154 0B       		.uleb128 0xb
 1162 0155 3B       		.uleb128 0x3b
 1163 0156 05       		.uleb128 0x5
 1164 0157 27       		.uleb128 0x27
 1165 0158 19       		.uleb128 0x19
 1166 0159 11       		.uleb128 0x11
 1167 015a 01       		.uleb128 0x1
 1168 015b 12       		.uleb128 0x12
 1169 015c 06       		.uleb128 0x6
 1170 015d 40       		.uleb128 0x40
 1171 015e 18       		.uleb128 0x18
 1172 015f 9742     		.uleb128 0x2117
 1173 0161 19       		.uleb128 0x19
 1174 0162 00       		.byte	0
 1175 0163 00       		.byte	0
 1176 0164 15       		.uleb128 0x15
 1177 0165 2E       		.uleb128 0x2e
 1178 0166 00       		.byte	0
 1179 0167 3F       		.uleb128 0x3f
 1180 0168 19       		.uleb128 0x19
 1181 0169 03       		.uleb128 0x3
 1182 016a 0E       		.uleb128 0xe
 1183 016b 3A       		.uleb128 0x3a
 1184 016c 0B       		.uleb128 0xb
 1185 016d 3B       		.uleb128 0x3b
 1186 016e 05       		.uleb128 0x5
 1187 016f 27       		.uleb128 0x27
 1188 0170 19       		.uleb128 0x19
 1189 0171 49       		.uleb128 0x49
 1190 0172 13       		.uleb128 0x13
 1191 0173 11       		.uleb128 0x11
 1192 0174 01       		.uleb128 0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 29


 1193 0175 12       		.uleb128 0x12
 1194 0176 06       		.uleb128 0x6
 1195 0177 40       		.uleb128 0x40
 1196 0178 18       		.uleb128 0x18
 1197 0179 9742     		.uleb128 0x2117
 1198 017b 19       		.uleb128 0x19
 1199 017c 00       		.byte	0
 1200 017d 00       		.byte	0
 1201 017e 00       		.byte	0
 1202              		.section	.debug_aranges,"",%progbits
 1203 0000 7C000000 		.4byte	0x7c
 1204 0004 0200     		.2byte	0x2
 1205 0006 00000000 		.4byte	.Ldebug_info0
 1206 000a 04       		.byte	0x4
 1207 000b 00       		.byte	0
 1208 000c 0000     		.2byte	0
 1209 000e 0000     		.2byte	0
 1210 0010 00000000 		.4byte	.LFB0
 1211 0014 20000000 		.4byte	.LFE0-.LFB0
 1212 0018 00000000 		.4byte	.LFB1
 1213 001c 24000000 		.4byte	.LFE1-.LFB1
 1214 0020 00000000 		.4byte	.LFB2
 1215 0024 18000000 		.4byte	.LFE2-.LFB2
 1216 0028 00000000 		.4byte	.LFB3
 1217 002c 0C000000 		.4byte	.LFE3-.LFB3
 1218 0030 00000000 		.4byte	.LFB4
 1219 0034 24000000 		.4byte	.LFE4-.LFB4
 1220 0038 00000000 		.4byte	.LFB5
 1221 003c 20000000 		.4byte	.LFE5-.LFB5
 1222 0040 00000000 		.4byte	.LFB6
 1223 0044 24000000 		.4byte	.LFE6-.LFB6
 1224 0048 00000000 		.4byte	.LFB7
 1225 004c 20000000 		.4byte	.LFE7-.LFB7
 1226 0050 00000000 		.4byte	.LFB8
 1227 0054 18000000 		.4byte	.LFE8-.LFB8
 1228 0058 00000000 		.4byte	.LFB9
 1229 005c 24000000 		.4byte	.LFE9-.LFB9
 1230 0060 00000000 		.4byte	.LFB10
 1231 0064 18000000 		.4byte	.LFE10-.LFB10
 1232 0068 00000000 		.4byte	.LFB11
 1233 006c 18000000 		.4byte	.LFE11-.LFB11
 1234 0070 00000000 		.4byte	.LFB12
 1235 0074 18000000 		.4byte	.LFE12-.LFB12
 1236 0078 00000000 		.4byte	0
 1237 007c 00000000 		.4byte	0
 1238              		.section	.debug_ranges,"",%progbits
 1239              	.Ldebug_ranges0:
 1240 0000 00000000 		.4byte	.LFB0
 1241 0004 20000000 		.4byte	.LFE0
 1242 0008 00000000 		.4byte	.LFB1
 1243 000c 24000000 		.4byte	.LFE1
 1244 0010 00000000 		.4byte	.LFB2
 1245 0014 18000000 		.4byte	.LFE2
 1246 0018 00000000 		.4byte	.LFB3
 1247 001c 0C000000 		.4byte	.LFE3
 1248 0020 00000000 		.4byte	.LFB4
 1249 0024 24000000 		.4byte	.LFE4
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 30


 1250 0028 00000000 		.4byte	.LFB5
 1251 002c 20000000 		.4byte	.LFE5
 1252 0030 00000000 		.4byte	.LFB6
 1253 0034 24000000 		.4byte	.LFE6
 1254 0038 00000000 		.4byte	.LFB7
 1255 003c 20000000 		.4byte	.LFE7
 1256 0040 00000000 		.4byte	.LFB8
 1257 0044 18000000 		.4byte	.LFE8
 1258 0048 00000000 		.4byte	.LFB9
 1259 004c 24000000 		.4byte	.LFE9
 1260 0050 00000000 		.4byte	.LFB10
 1261 0054 18000000 		.4byte	.LFE10
 1262 0058 00000000 		.4byte	.LFB11
 1263 005c 18000000 		.4byte	.LFE11
 1264 0060 00000000 		.4byte	.LFB12
 1265 0064 18000000 		.4byte	.LFE12
 1266 0068 00000000 		.4byte	0
 1267 006c 00000000 		.4byte	0
 1268              		.section	.debug_line,"",%progbits
 1269              	.Ldebug_line0:
 1270 0000 4C010000 		.section	.debug_str,"MS",%progbits,1
 1270      02004200 
 1270      00000201 
 1270      FB0E0D00 
 1270      01010101 
 1271              	.LASF17:
 1272 0000 72656733 		.ascii	"reg32\000"
 1272      3200
 1273              	.LASF34:
 1274 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1274      43313120 
 1274      352E342E 
 1274      31203230 
 1274      31363036 
 1275 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1275      20726576 
 1275      6973696F 
 1275      6E203233 
 1275      37373135 
 1276 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1276      66756E63 
 1276      74696F6E 
 1276      2D736563 
 1276      74696F6E 
 1277              	.LASF36:
 1278 0094 433A5C55 		.ascii	"C:\\Users\\mikke\\OneDrive\\Documents\\GitHub\\plat"
 1278      73657273 
 1278      5C6D696B 
 1278      6B655C4F 
 1278      6E654472 
 1279 00c1 6F6F6E69 		.ascii	"ooning\\PSoC\\Platooning\\AngleMeasurement.cydsn\000"
 1279      6E675C50 
 1279      536F435C 
 1279      506C6174 
 1279      6F6F6E69 
 1280              	.LASF6:
 1281 00ef 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 31


 1281      7420756E 
 1281      7369676E 
 1281      65642069 
 1281      6E7400
 1282              	.LASF23:
 1283 0102 4953525F 		.ascii	"ISR_B_SetVector\000"
 1283      425F5365 
 1283      74566563 
 1283      746F7200 
 1284              	.LASF14:
 1285 0112 666C6F61 		.ascii	"float\000"
 1285      7400
 1286              	.LASF26:
 1287 0118 4953525F 		.ascii	"ISR_B_SetPriority\000"
 1287      425F5365 
 1287      74507269 
 1287      6F726974 
 1287      7900
 1288              	.LASF16:
 1289 012a 72656738 		.ascii	"reg8\000"
 1289      00
 1290              	.LASF30:
 1291 012f 4953525F 		.ascii	"ISR_B_Enable\000"
 1291      425F456E 
 1291      61626C65 
 1291      00
 1292              	.LASF8:
 1293 013c 6C6F6E67 		.ascii	"long unsigned int\000"
 1293      20756E73 
 1293      69676E65 
 1293      6420696E 
 1293      7400
 1294              	.LASF12:
 1295 014e 75696E74 		.ascii	"uint8\000"
 1295      3800
 1296              	.LASF27:
 1297 0154 7072696F 		.ascii	"priority\000"
 1297      72697479 
 1297      00
 1298              	.LASF22:
 1299 015d 4953525F 		.ascii	"ISR_B_StartEx\000"
 1299      425F5374 
 1299      61727445 
 1299      7800
 1300              	.LASF4:
 1301 016b 756E7369 		.ascii	"unsigned char\000"
 1301      676E6564 
 1301      20636861 
 1301      7200
 1302              	.LASF15:
 1303 0179 646F7562 		.ascii	"double\000"
 1303      6C6500
 1304              	.LASF19:
 1305 0180 4953525F 		.ascii	"ISR_B_Start\000"
 1305      425F5374 
 1305      61727400 
 1306              	.LASF13:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 32


 1307 018c 75696E74 		.ascii	"uint32\000"
 1307      333200
 1308              	.LASF0:
 1309 0193 756E7369 		.ascii	"unsigned int\000"
 1309      676E6564 
 1309      20696E74 
 1309      00
 1310              	.LASF31:
 1311 01a0 4953525F 		.ascii	"ISR_B_Disable\000"
 1311      425F4469 
 1311      7361626C 
 1311      6500
 1312              	.LASF29:
 1313 01ae 4953525F 		.ascii	"ISR_B_GetPriority\000"
 1313      425F4765 
 1313      74507269 
 1313      6F726974 
 1313      7900
 1314              	.LASF24:
 1315 01c0 61646472 		.ascii	"address\000"
 1315      65737300 
 1316              	.LASF9:
 1317 01c8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1317      206C6F6E 
 1317      6720756E 
 1317      7369676E 
 1317      65642069 
 1318              	.LASF37:
 1319 01df 4953525F 		.ascii	"ISR_B_GetState\000"
 1319      425F4765 
 1319      74537461 
 1319      746500
 1320              	.LASF21:
 1321 01ee 4953525F 		.ascii	"ISR_B_Interrupt\000"
 1321      425F496E 
 1321      74657272 
 1321      75707400 
 1322              	.LASF28:
 1323 01fe 4953525F 		.ascii	"ISR_B_GetVector\000"
 1323      425F4765 
 1323      74566563 
 1323      746F7200 
 1324              	.LASF18:
 1325 020e 63796973 		.ascii	"cyisraddress\000"
 1325      72616464 
 1325      72657373 
 1325      00
 1326              	.LASF10:
 1327 021b 73697A65 		.ascii	"sizetype\000"
 1327      74797065 
 1327      00
 1328              	.LASF1:
 1329 0224 6C6F6E67 		.ascii	"long long int\000"
 1329      206C6F6E 
 1329      6720696E 
 1329      7400
 1330              	.LASF11:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccfokpch.s 			page 33


 1331 0232 63686172 		.ascii	"char\000"
 1331      00
 1332              	.LASF25:
 1333 0237 72616D56 		.ascii	"ramVectorTable\000"
 1333      6563746F 
 1333      72546162 
 1333      6C6500
 1334              	.LASF20:
 1335 0246 4953525F 		.ascii	"ISR_B_Stop\000"
 1335      425F5374 
 1335      6F7000
 1336              	.LASF5:
 1337 0251 73686F72 		.ascii	"short int\000"
 1337      7420696E 
 1337      7400
 1338              	.LASF32:
 1339 025b 4953525F 		.ascii	"ISR_B_SetPending\000"
 1339      425F5365 
 1339      7450656E 
 1339      64696E67 
 1339      00
 1340              	.LASF7:
 1341 026c 6C6F6E67 		.ascii	"long int\000"
 1341      20696E74 
 1341      00
 1342              	.LASF35:
 1343 0275 47656E65 		.ascii	"Generated_Source\\PSoC5\\ISR_B.c\000"
 1343      72617465 
 1343      645F536F 
 1343      75726365 
 1343      5C50536F 
 1344              	.LASF33:
 1345 0294 4953525F 		.ascii	"ISR_B_ClearPending\000"
 1345      425F436C 
 1345      65617250 
 1345      656E6469 
 1345      6E6700
 1346              	.LASF2:
 1347 02a7 6C6F6E67 		.ascii	"long double\000"
 1347      20646F75 
 1347      626C6500 
 1348              	.LASF3:
 1349 02b3 7369676E 		.ascii	"signed char\000"
 1349      65642063 
 1349      68617200 
 1350              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
