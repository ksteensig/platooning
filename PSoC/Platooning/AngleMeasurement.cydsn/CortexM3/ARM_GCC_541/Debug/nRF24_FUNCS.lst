ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"nRF24_FUNCS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.data
  20              		.type	_nrf_addr_width, %object
  21              		.size	_nrf_addr_width, 1
  22              	_nrf_addr_width:
  23 0000 05       		.byte	5
  24              		.section	.text._addr_width_conf_to_bytes,"ax",%progbits
  25              		.align	2
  26              		.thumb
  27              		.thumb_func
  28              		.type	_addr_width_conf_to_bytes, %function
  29              	_addr_width_conf_to_bytes:
  30              	.LFB0:
  31              		.file 1 "Generated_Source\\PSoC5\\nRF24_FUNCS.c"
   1:Generated_Source\PSoC5/nRF24_FUNCS.c **** /****************************************************************************
   2:Generated_Source\PSoC5/nRF24_FUNCS.c **** * This file is part of the nRF24 Custom Component for PSoC Devices.
   3:Generated_Source\PSoC5/nRF24_FUNCS.c **** *
   4:Generated_Source\PSoC5/nRF24_FUNCS.c **** * Copyright (C) 2017 Carlos Diaz <carlos.santiago.diaz@gmail.com>
   5:Generated_Source\PSoC5/nRF24_FUNCS.c **** *
   6:Generated_Source\PSoC5/nRF24_FUNCS.c **** * Permission to use, copy, modify, and/or distribute this software for any
   7:Generated_Source\PSoC5/nRF24_FUNCS.c **** * purpose with or without fee is hereby granted, provided that the above
   8:Generated_Source\PSoC5/nRF24_FUNCS.c **** * copyright notice and this permission notice appear in all copies.
   9:Generated_Source\PSoC5/nRF24_FUNCS.c **** *
  10:Generated_Source\PSoC5/nRF24_FUNCS.c **** * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  11:Generated_Source\PSoC5/nRF24_FUNCS.c **** * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  12:Generated_Source\PSoC5/nRF24_FUNCS.c **** * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  13:Generated_Source\PSoC5/nRF24_FUNCS.c **** * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  14:Generated_Source\PSoC5/nRF24_FUNCS.c **** * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  15:Generated_Source\PSoC5/nRF24_FUNCS.c **** * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  16:Generated_Source\PSoC5/nRF24_FUNCS.c **** * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  17:Generated_Source\PSoC5/nRF24_FUNCS.c **** ****************************************************************************/
  18:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  19:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
  20:Generated_Source\PSoC5/nRF24_FUNCS.c **** * @file nRF24_NRF_FUNCS.c
  21:Generated_Source\PSoC5/nRF24_FUNCS.c **** *
  22:Generated_Source\PSoC5/nRF24_FUNCS.c **** * @brief This file define all the functions available to the user.
  23:Generated_Source\PSoC5/nRF24_FUNCS.c **** */
  24:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  25:Generated_Source\PSoC5/nRF24_FUNCS.c **** #include "nRF24_CONFIG.h"
  26:Generated_Source\PSoC5/nRF24_FUNCS.c **** #include "nRF24_HAL.h"
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 2


  27:Generated_Source\PSoC5/nRF24_FUNCS.c **** #include "nRF24_COMMANDS.h"
  28:Generated_Source\PSoC5/nRF24_FUNCS.c **** #include "nRF24_FUNCS.h"
  29:Generated_Source\PSoC5/nRF24_FUNCS.c **** #include "nRF24_DEFS.h"
  30:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  31:Generated_Source\PSoC5/nRF24_FUNCS.c **** /* "Helper" global variables */
  32:Generated_Source\PSoC5/nRF24_FUNCS.c **** /* _nrf_addr_width expresed in bytes, declared with the default value */
  33:Generated_Source\PSoC5/nRF24_FUNCS.c **** static nrf_pipe_addr_width _nrf_addr_width = NRF_PIPE_ADDR_WIDTH_5BYTES;
  34:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  35:Generated_Source\PSoC5/nRF24_FUNCS.c **** static void
  36:Generated_Source\PSoC5/nRF24_FUNCS.c **** _addr_width_conf_to_bytes(nrf_addr_width addr_width)
  37:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
  32              		.loc 1 37 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 7, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 16
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  44 0006 0346     		mov	r3, r0
  45 0008 FB71     		strb	r3, [r7, #7]
  38:Generated_Source\PSoC5/nRF24_FUNCS.c ****     switch(addr_width)
  46              		.loc 1 38 0
  47 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  48 000c 022B     		cmp	r3, #2
  49 000e 08D0     		beq	.L3
  50 0010 032B     		cmp	r3, #3
  51 0012 0AD0     		beq	.L4
  52 0014 012B     		cmp	r3, #1
  53 0016 00D0     		beq	.L5
  39:Generated_Source\PSoC5/nRF24_FUNCS.c ****     {
  40:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_SETUP_AW_3BYTES:
  41:Generated_Source\PSoC5/nRF24_FUNCS.c ****         _nrf_addr_width = NRF_PIPE_ADDR_WIDTH_3BYTES;
  42:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
  43:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_SETUP_AW_4BYTES:
  44:Generated_Source\PSoC5/nRF24_FUNCS.c ****         _nrf_addr_width = NRF_PIPE_ADDR_WIDTH_4BYTES;
  45:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
  46:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_SETUP_AW_5BYTES:
  47:Generated_Source\PSoC5/nRF24_FUNCS.c ****         _nrf_addr_width = NRF_PIPE_ADDR_WIDTH_5BYTES;
  48:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
  49:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
  50:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
  54              		.loc 1 50 0
  55 0018 0BE0     		b	.L6
  56              	.L5:
  41:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
  57              		.loc 1 41 0
  58 001a 084B     		ldr	r3, .L7
  59 001c 0322     		movs	r2, #3
  60 001e 1A70     		strb	r2, [r3]
  42:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_SETUP_AW_4BYTES:
  61              		.loc 1 42 0
  62 0020 07E0     		b	.L2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 3


  63              	.L3:
  44:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
  64              		.loc 1 44 0
  65 0022 064B     		ldr	r3, .L7
  66 0024 0422     		movs	r2, #4
  67 0026 1A70     		strb	r2, [r3]
  45:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_SETUP_AW_5BYTES:
  68              		.loc 1 45 0
  69 0028 03E0     		b	.L2
  70              	.L4:
  47:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
  71              		.loc 1 47 0
  72 002a 044B     		ldr	r3, .L7
  73 002c 0522     		movs	r2, #5
  74 002e 1A70     		strb	r2, [r3]
  48:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
  75              		.loc 1 48 0
  76 0030 00BF     		nop
  77              	.L2:
  78              	.L6:
  79              		.loc 1 50 0
  80 0032 00BF     		nop
  81 0034 0C37     		adds	r7, r7, #12
  82              		.cfi_def_cfa_offset 4
  83 0036 BD46     		mov	sp, r7
  84              		.cfi_def_cfa_register 13
  85              		@ sp needed
  86 0038 80BC     		pop	{r7}
  87              		.cfi_restore 7
  88              		.cfi_def_cfa_offset 0
  89 003a 7047     		bx	lr
  90              	.L8:
  91              		.align	2
  92              	.L7:
  93 003c 00000000 		.word	_nrf_addr_width
  94              		.cfi_endproc
  95              	.LFE0:
  96              		.size	_addr_width_conf_to_bytes, .-_addr_width_conf_to_bytes
  97              		.section	.text.nRF24_start,"ax",%progbits
  98              		.align	2
  99              		.global	nRF24_start
 100              		.thumb
 101              		.thumb_func
 102              		.type	nRF24_start, %function
 103              	nRF24_start:
 104              	.LFB1:
  51:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  52:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
  53:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Configure the radio and clear IRQs, TX and RX FIFOs.
  54:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
  55:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_start(void)
  56:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 105              		.loc 1 56 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 4


 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Recommended delay before start using the nRF24
  58:Generated_Source\PSoC5/nRF24_FUNCS.c ****     CyDelay(NRF_POWER_UP_DELAY_MS);
 115              		.loc 1 58 0
 116 0004 6420     		movs	r0, #100
 117 0006 FFF7FEFF 		bl	CyDelay
  59:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  60:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Now the radio is in Power Down mode
  61:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  62:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if defined (_PSOC6)
  63:Generated_Source\PSoC5/nRF24_FUNCS.c ****     /* We are using the low level driver, so pass NULL to the context */
  64:Generated_Source\PSoC5/nRF24_FUNCS.c ****     (void) Cy_SCB_SPI_Init(SPI_HW, &SPI_config, NULL);
  65:Generated_Source\PSoC5/nRF24_FUNCS.c ****     Cy_SCB_SPI_Enable(SPI_HW);
  66:Generated_Source\PSoC5/nRF24_FUNCS.c **** #else // _PSoC4_SCB and _PSOC_UDB
  67:Generated_Source\PSoC5/nRF24_FUNCS.c ****     SPI_Start();
 118              		.loc 1 67 0
 119 000a FFF7FEFF 		bl	SPI_Start
  68:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
  69:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ss_write(GPIO_SET);
 120              		.loc 1 69 0
 121 000e 0120     		movs	r0, #1
 122 0010 FFF7FEFF 		bl	nRF24_ss_write
  70:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_CLEAR);
 123              		.loc 1 70 0
 124 0014 0020     		movs	r0, #0
 125 0016 FFF7FEFF 		bl	nRF24_ce_write
  71:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  72:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Flush both nRF24 FIFOs
  73:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_flush_rx_cmd();
 126              		.loc 1 73 0
 127 001a FFF7FEFF 		bl	nRF24_flush_rx_cmd
  74:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_flush_tx_cmd();
 128              		.loc 1 74 0
 129 001e FFF7FEFF 		bl	nRF24_flush_tx_cmd
  75:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Clear IRQ flags
  76:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_all_irqs();
 130              		.loc 1 76 0
 131 0022 FFF7FEFF 		bl	nRF24_clear_all_irqs
  77:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  78:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Configure the nRF24 with the data from the customizer
  79:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_init();
 132              		.loc 1 79 0
 133 0026 FFF7FEFF 		bl	nRF24_init
  80:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  81:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // After PWR_UP = 1 the radio is in Standby-I mode, 130us of delay for settling
  82:Generated_Source\PSoC5/nRF24_FUNCS.c ****     CyDelayUs(150);
 134              		.loc 1 82 0
 135 002a 9620     		movs	r0, #150
 136 002c FFF7FEFF 		bl	CyDelayUs
  83:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 137              		.loc 1 83 0
 138 0030 00BF     		nop
 139 0032 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 5


 140              		.cfi_endproc
 141              	.LFE1:
 142              		.size	nRF24_start, .-nRF24_start
 143              		.section	.text.nRF24_init,"ax",%progbits
 144              		.align	2
 145              		.global	nRF24_init
 146              		.thumb
 147              		.thumb_func
 148              		.type	nRF24_init, %function
 149              	nRF24_init:
 150              	.LFB2:
  84:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  85:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
  86:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Configure the nRF radio with the data from the customizer.
  87:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
  88:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_init(void)
  89:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 151              		.loc 1 89 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 80B5     		push	{r7, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
  90:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_EN_AA, CUSTOMIZER_EN_AA);
 161              		.loc 1 90 0
 162 0004 0021     		movs	r1, #0
 163 0006 0120     		movs	r0, #1
 164 0008 FFF7FEFF 		bl	nRF24_write_register
  91:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_EN_RXADDR, CUSTOMIZER_EN_RXADDR);
 165              		.loc 1 91 0
 166 000c 0121     		movs	r1, #1
 167 000e 0220     		movs	r0, #2
 168 0010 FFF7FEFF 		bl	nRF24_write_register
  92:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_SETUP_AW, CUSTOMIZER_SETUP_AW);
 169              		.loc 1 92 0
 170 0014 0321     		movs	r1, #3
 171 0016 0320     		movs	r0, #3
 172 0018 FFF7FEFF 		bl	nRF24_write_register
  93:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_SETUP_RETR, CUSTOMIZER_SETUP_RETR);
 173              		.loc 1 93 0
 174 001c 0021     		movs	r1, #0
 175 001e 0420     		movs	r0, #4
 176 0020 FFF7FEFF 		bl	nRF24_write_register
  94:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RF_CH, CUSTOMIZER_RF_CH);
 177              		.loc 1 94 0
 178 0024 4B21     		movs	r1, #75
 179 0026 0520     		movs	r0, #5
 180 0028 FFF7FEFF 		bl	nRF24_write_register
  95:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RF_SETUP, CUSTOMIZER_RF_SETUP);
 181              		.loc 1 95 0
 182 002c 0E21     		movs	r1, #14
 183 002e 0620     		movs	r0, #6
 184 0030 FFF7FEFF 		bl	nRF24_write_register
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 6


  96:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_DYNPD, CUSTOMIZER_DYNPD);
 185              		.loc 1 96 0
 186 0034 0021     		movs	r1, #0
 187 0036 1C20     		movs	r0, #28
 188 0038 FFF7FEFF 		bl	nRF24_write_register
  97:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_FEATURE, CUSTOMIZER_FEATURE);
 189              		.loc 1 97 0
 190 003c 0021     		movs	r1, #0
 191 003e 1D20     		movs	r0, #29
 192 0040 FFF7FEFF 		bl	nRF24_write_register
  98:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
  99:Generated_Source\PSoC5/nRF24_FUNCS.c **** // Configuring data pipes
 100:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if (ENABLE_PIPE0 == 1)
 101:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_PW_P0, CUSTOMIZER_RX_PW_P0);
 193              		.loc 1 101 0
 194 0044 0121     		movs	r1, #1
 195 0046 1120     		movs	r0, #17
 196 0048 FFF7FEFF 		bl	nRF24_write_register
 102:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
 103:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if (ENABLE_PIPE1 == 1)
 104:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_PW_P1, CUSTOMIZER_RX_PW_P1);
 105:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
 106:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if (ENABLE_PIPE2 == 1)
 107:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_ADDR_P2, CUSTOMIZER_RX_ADDR_P2);
 108:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_PW_P2, CUSTOMIZER_RX_PW_P2);
 109:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
 110:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if (ENABLE_PIPE3 == 1)
 111:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_ADDR_P3, CUSTOMIZER_RX_ADDR_P3);
 112:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_PW_P3, CUSTOMIZER_RX_PW_P3);
 113:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
 114:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if (ENABLE_PIPE4 == 1)
 115:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_ADDR_P4, CUSTOMIZER_RX_ADDR_P4);
 116:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_PW_P4, CUSTOMIZER_RX_PW_P4);
 117:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
 118:Generated_Source\PSoC5/nRF24_FUNCS.c **** #if (ENABLE_PIPE5 == 1)
 119:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_ADDR_P5, CUSTOMIZER_RX_ADDR_P5);
 120:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RX_PW_P5, CUSTOMIZER_RX_PW_P5);
 121:Generated_Source\PSoC5/nRF24_FUNCS.c **** #endif
 122:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 123:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_CONFIG, CUSTOMIZER_CONFIG);
 197              		.loc 1 123 0
 198 004c 3B21     		movs	r1, #59
 199 004e 0020     		movs	r0, #0
 200 0050 FFF7FEFF 		bl	nRF24_write_register
 124:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 125:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Set the _nrf_addr_width variable
 126:Generated_Source\PSoC5/nRF24_FUNCS.c ****     _addr_width_conf_to_bytes(CUSTOMIZER_SETUP_AW);
 201              		.loc 1 126 0
 202 0054 0320     		movs	r0, #3
 203 0056 FFF7FEFF 		bl	_addr_width_conf_to_bytes
 127:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 204              		.loc 1 127 0
 205 005a 00BF     		nop
 206 005c 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE2:
 209              		.size	nRF24_init, .-nRF24_init
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 7


 210 005e 00BF     		.section	.text.nRF24_enable,"ax",%progbits
 211              		.align	2
 212              		.global	nRF24_enable
 213              		.thumb
 214              		.thumb_func
 215              		.type	nRF24_enable, %function
 216              	nRF24_enable:
 217              	.LFB3:
 128:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 129:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 130:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Enable the nRF24 radio.
 131:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 132:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @todo Implement this function
 133:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 134:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable(void)
 135:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 218              		.loc 1 135 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 136:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 228              		.loc 1 136 0
 229 0004 00BF     		nop
 230 0006 BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 0008 80BC     		pop	{r7}
 234              		.cfi_restore 7
 235              		.cfi_def_cfa_offset 0
 236 000a 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE3:
 239              		.size	nRF24_enable, .-nRF24_enable
 240              		.section	.text.nRF24_stop,"ax",%progbits
 241              		.align	2
 242              		.global	nRF24_stop
 243              		.thumb
 244              		.thumb_func
 245              		.type	nRF24_stop, %function
 246              	nRF24_stop:
 247              	.LFB4:
 137:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 138:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 139:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Stop the nRF24 radio.
 140:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 141:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @todo Implement this function
 142:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 143:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_stop(void)
 144:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 248              		.loc 1 144 0
 249              		.cfi_startproc
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 8


 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 258              		.loc 1 145 0
 259 0004 00BF     		nop
 260 0006 BD46     		mov	sp, r7
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 0008 80BC     		pop	{r7}
 264              		.cfi_restore 7
 265              		.cfi_def_cfa_offset 0
 266 000a 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE4:
 269              		.size	nRF24_stop, .-nRF24_stop
 270              		.section	.text.nRF24_sleep,"ax",%progbits
 271              		.align	2
 272              		.global	nRF24_sleep
 273              		.thumb
 274              		.thumb_func
 275              		.type	nRF24_sleep, %function
 276              	nRF24_sleep:
 277              	.LFB5:
 146:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 147:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 148:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Put the nRF24 radio on Standby-I mode.
 149:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This function doesn't put the SPI, MCU nor pins to sleep
 150:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 151:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_sleep(void)
 152:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 278              		.loc 1 152 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 153:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // is standby.I the lowest power mode?
 154:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_standby_i_mode();
 288              		.loc 1 154 0
 289 0004 FFF7FEFF 		bl	nRF24_set_standby_i_mode
 155:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 290              		.loc 1 155 0
 291 0008 00BF     		nop
 292 000a 80BD     		pop	{r7, pc}
 293              		.cfi_endproc
 294              	.LFE5:
 295              		.size	nRF24_sleep, .-nRF24_sleep
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 9


 296              		.section	.text.nRF24_wakeup,"ax",%progbits
 297              		.align	2
 298              		.global	nRF24_wakeup
 299              		.thumb
 300              		.thumb_func
 301              		.type	nRF24_wakeup, %function
 302              	nRF24_wakeup:
 303              	.LFB6:
 156:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 157:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 158:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Wakeup the nRF24 radio, and restore the configuration.
 159:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 160:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @todo Implement this function.
 161:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 162:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_wakeup(void)
 163:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 304              		.loc 1 163 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 164:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // after leaving standby-I mode the radio need a time to
 165:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // return to TX or RX Mode
 166:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_CONFIG, NRF_CONFIG_PWR_UP);
 314              		.loc 1 166 0
 315 0004 0221     		movs	r1, #2
 316 0006 0020     		movs	r0, #0
 317 0008 FFF7FEFF 		bl	nRF24_set_bit
 167:Generated_Source\PSoC5/nRF24_FUNCS.c ****     CyDelay(5);
 318              		.loc 1 167 0
 319 000c 0520     		movs	r0, #5
 320 000e FFF7FEFF 		bl	CyDelay
 168:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 321              		.loc 1 168 0
 322 0012 00BF     		nop
 323 0014 80BD     		pop	{r7, pc}
 324              		.cfi_endproc
 325              	.LFE6:
 326              		.size	nRF24_wakeup, .-nRF24_wakeup
 327 0016 00BF     		.section	.text.nRF24_save_config,"ax",%progbits
 328              		.align	2
 329              		.global	nRF24_save_config
 330              		.thumb
 331              		.thumb_func
 332              		.type	nRF24_save_config, %function
 333              	nRF24_save_config:
 334              	.LFB7:
 169:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 170:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 171:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Save the nRF24 radio configuration.
 172:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 173:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @todo Implement this function.
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 10


 174:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 175:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_save_config(void)
 176:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 335              		.loc 1 176 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340 0000 80B4     		push	{r7}
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 177:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 345              		.loc 1 177 0
 346 0004 00BF     		nop
 347 0006 BD46     		mov	sp, r7
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 0008 80BC     		pop	{r7}
 351              		.cfi_restore 7
 352              		.cfi_def_cfa_offset 0
 353 000a 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE7:
 356              		.size	nRF24_save_config, .-nRF24_save_config
 357              		.section	.text.nRF24_restore_config,"ax",%progbits
 358              		.align	2
 359              		.global	nRF24_restore_config
 360              		.thumb
 361              		.thumb_func
 362              		.type	nRF24_restore_config, %function
 363              	nRF24_restore_config:
 364              	.LFB8:
 178:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 179:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 180:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Restore the nRF24 radio configuration.
 181:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 182:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @todo Implement this function.
 183:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 184:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_restore_config(void)
 185:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 365              		.loc 1 185 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              		.cfi_def_cfa_offset 4
 372              		.cfi_offset 7, -4
 373 0002 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 186:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 375              		.loc 1 186 0
 376 0004 00BF     		nop
 377 0006 BD46     		mov	sp, r7
 378              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 11


 379              		@ sp needed
 380 0008 80BC     		pop	{r7}
 381              		.cfi_restore 7
 382              		.cfi_def_cfa_offset 0
 383 000a 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE8:
 386              		.size	nRF24_restore_config, .-nRF24_restore_config
 387              		.section	.text.nRF24_set_mode,"ax",%progbits
 388              		.align	2
 389              		.global	nRF24_set_mode
 390              		.thumb
 391              		.thumb_func
 392              		.type	nRF24_set_mode, %function
 393              	nRF24_set_mode:
 394              	.LFB9:
 187:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 188:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 189:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Configure the radio as Receiver or Transmitter.
 190:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 191:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_mode mode: The radio can be configured as Receiver (PRX)
 192:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * or Transmitter (PTX).
 193:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 194:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_mode(const nrf_mode mode)
 195:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 395              		.loc 1 195 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 82B0     		sub	sp, sp, #8
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 407 0006 0346     		mov	r3, r0
 408 0008 FB71     		strb	r3, [r7, #7]
 196:Generated_Source\PSoC5/nRF24_FUNCS.c ****     mode ? nRF24_set_rx_mode() : nRF24_set_tx_mode();
 409              		.loc 1 196 0
 410 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 411 000c 002B     		cmp	r3, #0
 412 000e 02D0     		beq	.L18
 413              		.loc 1 196 0 is_stmt 0 discriminator 1
 414 0010 FFF7FEFF 		bl	nRF24_set_rx_mode
 197:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 415              		.loc 1 197 0 is_stmt 1 discriminator 1
 416 0014 01E0     		b	.L20
 417              	.L18:
 196:Generated_Source\PSoC5/nRF24_FUNCS.c ****     mode ? nRF24_set_rx_mode() : nRF24_set_tx_mode();
 418              		.loc 1 196 0 discriminator 2
 419 0016 FFF7FEFF 		bl	nRF24_set_tx_mode
 420              	.L20:
 421              		.loc 1 197 0
 422 001a 00BF     		nop
 423 001c 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 12


 424              		.cfi_def_cfa_offset 8
 425 001e BD46     		mov	sp, r7
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 0020 80BD     		pop	{r7, pc}
 429              		.cfi_endproc
 430              	.LFE9:
 431              		.size	nRF24_set_mode, .-nRF24_set_mode
 432 0022 00BF     		.section	.text.nRF24_set_power_down_mode,"ax",%progbits
 433              		.align	2
 434              		.global	nRF24_set_power_down_mode
 435              		.thumb
 436              		.thumb_func
 437              		.type	nRF24_set_power_down_mode, %function
 438              	nRF24_set_power_down_mode:
 439              	.LFB10:
 198:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 199:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 200:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set radio in Power Down Mode.
 201:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 202:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * In power down mode nRF24 is disabled using minimal current consumption.
 203:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * All register values available are maintained and the SPI is kept active,
 204:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * enabling change of configuration and the uploading/downloading of data
 205:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * registers.
 206:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Power down mode is entered by setting the PWR_UP bit (CONFIG register) to 0.
 207:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 208:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_power_down_mode(void)
 209:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 440              		.loc 1 209 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 210:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_CONFIG, NRF_CONFIG_PWR_UP);
 450              		.loc 1 210 0
 451 0004 0221     		movs	r1, #2
 452 0006 0020     		movs	r0, #0
 453 0008 FFF7FEFF 		bl	nRF24_clear_bit
 211:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 454              		.loc 1 211 0
 455 000c 00BF     		nop
 456 000e 80BD     		pop	{r7, pc}
 457              		.cfi_endproc
 458              	.LFE10:
 459              		.size	nRF24_set_power_down_mode, .-nRF24_set_power_down_mode
 460              		.section	.text.nRF24_set_standby_i_mode,"ax",%progbits
 461              		.align	2
 462              		.global	nRF24_set_standby_i_mode
 463              		.thumb
 464              		.thumb_func
 465              		.type	nRF24_set_standby_i_mode, %function
 466              	nRF24_set_standby_i_mode:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 13


 467              	.LFB11:
 212:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 213:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 214:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the radio in Standby I Mode.
 215:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 216:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * By setting the PWR_UP bit in the CONFIG register to 1, the device enters
 217:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * standby-I mode. Standby-I mode is used to minimize average current
 218:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * consumption while maintaining short start up times.
 219:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * In this mode only part of the crystal oscillator is active. Change to
 220:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * active modes only happens if CE is set high and when CE is set low,
 221:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * the nRF24 returns to standby-I mode from both the TX and RX modes.
 222:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 223:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_standby_i_mode(void)
 224:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 468              		.loc 1 224 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472 0000 80B5     		push	{r7, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 225:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_stop_listening();
 478              		.loc 1 225 0
 479 0004 FFF7FEFF 		bl	nRF24_stop_listening
 226:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_CONFIG, NRF_CONFIG_PWR_UP);
 480              		.loc 1 226 0
 481 0008 0221     		movs	r1, #2
 482 000a 0020     		movs	r0, #0
 483 000c FFF7FEFF 		bl	nRF24_set_bit
 227:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 484              		.loc 1 227 0
 485 0010 00BF     		nop
 486 0012 80BD     		pop	{r7, pc}
 487              		.cfi_endproc
 488              	.LFE11:
 489              		.size	nRF24_set_standby_i_mode, .-nRF24_set_standby_i_mode
 490              		.section	.text.nRF24_set_standby_ii_mode,"ax",%progbits
 491              		.align	2
 492              		.global	nRF24_set_standby_ii_mode
 493              		.thumb
 494              		.thumb_func
 495              		.type	nRF24_set_standby_ii_mode, %function
 496              	nRF24_set_standby_ii_mode:
 497              	.LFB12:
 228:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 229:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 230:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the radio in Standby II Mode.
 231:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 232:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * In standby-II mode extra clock buffers are active and more current is used
 233:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * compared to standby-I mode. nRF24 enters standby-II mode if CE is held high
 234:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * on a TX device with an empty TX FIFO.
 235:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * If a new packet is uploaded to the TX FIFO, the PLL immediately starts and
 236:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * the packet is transmitted after the normal PLL settling  delay (130us).
 237:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 14


 238:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_standby_ii_mode(void)
 239:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 498              		.loc 1 239 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_start_listening();
 508              		.loc 1 240 0
 509 0004 FFF7FEFF 		bl	nRF24_start_listening
 241:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_CONFIG, NRF_CONFIG_PWR_UP);
 510              		.loc 1 241 0
 511 0008 0221     		movs	r1, #2
 512 000a 0020     		movs	r0, #0
 513 000c FFF7FEFF 		bl	nRF24_set_bit
 242:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 514              		.loc 1 242 0
 515 0010 00BF     		nop
 516 0012 80BD     		pop	{r7, pc}
 517              		.cfi_endproc
 518              	.LFE12:
 519              		.size	nRF24_set_standby_ii_mode, .-nRF24_set_standby_ii_mode
 520              		.section	.text.nRF24_set_rx_mode,"ax",%progbits
 521              		.align	2
 522              		.global	nRF24_set_rx_mode
 523              		.thumb
 524              		.thumb_func
 525              		.type	nRF24_set_rx_mode, %function
 526              	nRF24_set_rx_mode:
 527              	.LFB13:
 243:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 244:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 245:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the radio in Receiver (Rx) Mode.
 246:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 247:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * RX mode is an active mode where the nRF24 radio is used as receiver. To
 248:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * enter this mode, the nRF24 must have the PWR_UP bit, PRIM_RX bit and the CE
 249:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * pin set high.
 250:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 251:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_rx_mode(void)
 252:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 528              		.loc 1 252 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 253:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_CONFIG, NRF_CONFIG_BIT_PRIM_RX);
 538              		.loc 1 253 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 15


 539 0004 0021     		movs	r1, #0
 540 0006 0020     		movs	r0, #0
 541 0008 FFF7FEFF 		bl	nRF24_set_bit
 254:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 542              		.loc 1 254 0
 543 000c 00BF     		nop
 544 000e 80BD     		pop	{r7, pc}
 545              		.cfi_endproc
 546              	.LFE13:
 547              		.size	nRF24_set_rx_mode, .-nRF24_set_rx_mode
 548              		.section	.text.nRF24_set_tx_mode,"ax",%progbits
 549              		.align	2
 550              		.global	nRF24_set_tx_mode
 551              		.thumb
 552              		.thumb_func
 553              		.type	nRF24_set_tx_mode, %function
 554              	nRF24_set_tx_mode:
 555              	.LFB14:
 255:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 256:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 257:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the radio in Transmitted (Tx) Mode.
 258:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 259:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * TX mode is an active mode for transmitting packets. To enter this mode,
 260:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * the nRF24 must have the PWR_UP bit set high, PRIM_RX bit set low, a payload
 261:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * in the TX FIFO and a high pulse on the CE for more than 10us.
 262:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 263:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_tx_mode(void)
 264:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 556              		.loc 1 264 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560 0000 80B5     		push	{r7, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 265:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_CONFIG, NRF_CONFIG_BIT_PRIM_RX);
 566              		.loc 1 265 0
 567 0004 0021     		movs	r1, #0
 568 0006 0020     		movs	r0, #0
 569 0008 FFF7FEFF 		bl	nRF24_clear_bit
 266:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 570              		.loc 1 266 0
 571 000c 00BF     		nop
 572 000e 80BD     		pop	{r7, pc}
 573              		.cfi_endproc
 574              	.LFE14:
 575              		.size	nRF24_set_tx_mode, .-nRF24_set_tx_mode
 576              		.section	.text.nRF24_enable_auto_ack,"ax",%progbits
 577              		.align	2
 578              		.global	nRF24_enable_auto_ack
 579              		.thumb
 580              		.thumb_func
 581              		.type	nRF24_enable_auto_ack, %function
 582              	nRF24_enable_auto_ack:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 16


 583              	.LFB15:
 267:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 268:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 269:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Enable AutoACK in the given pipe.
 270:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 271:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param pipe: Enable AutoACK in the given pipe.
 272:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 273:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable_auto_ack(const nrf_pipe pipe)
 274:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 584              		.loc 1 274 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 8
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588 0000 80B5     		push	{r7, lr}
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 7, -8
 591              		.cfi_offset 14, -4
 592 0002 82B0     		sub	sp, sp, #8
 593              		.cfi_def_cfa_offset 16
 594 0004 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 596 0006 0346     		mov	r3, r0
 597 0008 FB71     		strb	r3, [r7, #7]
 275:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_EN_AA, pipe);
 598              		.loc 1 275 0
 599 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 600 000c 1946     		mov	r1, r3
 601 000e 0120     		movs	r0, #1
 602 0010 FFF7FEFF 		bl	nRF24_set_bit
 276:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 603              		.loc 1 276 0
 604 0014 00BF     		nop
 605 0016 0837     		adds	r7, r7, #8
 606              		.cfi_def_cfa_offset 8
 607 0018 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 001a 80BD     		pop	{r7, pc}
 611              		.cfi_endproc
 612              	.LFE15:
 613              		.size	nRF24_enable_auto_ack, .-nRF24_enable_auto_ack
 614              		.section	.text.nRF24_disable_auto_ack,"ax",%progbits
 615              		.align	2
 616              		.global	nRF24_disable_auto_ack
 617              		.thumb
 618              		.thumb_func
 619              		.type	nRF24_disable_auto_ack, %function
 620              	nRF24_disable_auto_ack:
 621              	.LFB16:
 277:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 278:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 279:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Disable AutoACK in the given pipe.
 280:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 281:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param pipe: Disable AutoACK in the given pipe.
 282:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 283:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_disable_auto_ack(const nrf_pipe pipe)
 284:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 17


 622              		.loc 1 284 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 8
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626 0000 80B5     		push	{r7, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 82B0     		sub	sp, sp, #8
 631              		.cfi_def_cfa_offset 16
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 0346     		mov	r3, r0
 635 0008 FB71     		strb	r3, [r7, #7]
 285:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_EN_AA, pipe);
 636              		.loc 1 285 0
 637 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638 000c 1946     		mov	r1, r3
 639 000e 0120     		movs	r0, #1
 640 0010 FFF7FEFF 		bl	nRF24_clear_bit
 286:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 641              		.loc 1 286 0
 642 0014 00BF     		nop
 643 0016 0837     		adds	r7, r7, #8
 644              		.cfi_def_cfa_offset 8
 645 0018 BD46     		mov	sp, r7
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 001a 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE16:
 651              		.size	nRF24_disable_auto_ack, .-nRF24_disable_auto_ack
 652              		.section	.text.nRF24_set_channel,"ax",%progbits
 653              		.align	2
 654              		.global	nRF24_set_channel
 655              		.thumb
 656              		.thumb_func
 657              		.type	nRF24_set_channel, %function
 658              	nRF24_set_channel:
 659              	.LFB17:
 287:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 288:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 289:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the channel where the radio will work.
 290:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 291:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param uint8_t channel: Channel where the radio will work.
 292:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 293:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_channel(uint8_t channel)
 294:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 660              		.loc 1 294 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 18


 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 0346     		mov	r3, r0
 673 0008 FB71     		strb	r3, [r7, #7]
 295:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_MAX_RF_CHANNEL < channel) {
 674              		.loc 1 295 0
 675 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 676 000c 7D2B     		cmp	r3, #125
 677 000e 01D9     		bls	.L29
 296:Generated_Source\PSoC5/nRF24_FUNCS.c ****         channel = NRF_MAX_RF_CHANNEL;
 678              		.loc 1 296 0
 679 0010 7D23     		movs	r3, #125
 680 0012 FB71     		strb	r3, [r7, #7]
 681              	.L29:
 297:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 298:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 299:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_RF_CH, channel);
 682              		.loc 1 299 0
 683 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684 0016 1946     		mov	r1, r3
 685 0018 0520     		movs	r0, #5
 686 001a FFF7FEFF 		bl	nRF24_write_register
 300:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 301:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Flush both nRF24 FIFOs, from mcuoneclipse nrf24 component
 302:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_flush_rx_cmd();
 687              		.loc 1 302 0
 688 001e FFF7FEFF 		bl	nRF24_flush_rx_cmd
 303:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_flush_tx_cmd();
 689              		.loc 1 303 0
 690 0022 FFF7FEFF 		bl	nRF24_flush_tx_cmd
 304:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 691              		.loc 1 304 0
 692 0026 00BF     		nop
 693 0028 0837     		adds	r7, r7, #8
 694              		.cfi_def_cfa_offset 8
 695 002a BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 002c 80BD     		pop	{r7, pc}
 699              		.cfi_endproc
 700              	.LFE17:
 701              		.size	nRF24_set_channel, .-nRF24_set_channel
 702 002e 00BF     		.section	.text.nRF24_get_channel,"ax",%progbits
 703              		.align	2
 704              		.global	nRF24_get_channel
 705              		.thumb
 706              		.thumb_func
 707              		.type	nRF24_get_channel, %function
 708              	nRF24_get_channel:
 709              	.LFB18:
 305:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 306:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 307:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the data pipes address width.
 308:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 309:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_setup_address_width addr_width:
 310:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 19


 311:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_channel(void)
 312:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 710              		.loc 1 312 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 00AF     		add	r7, sp, #0
 719              		.cfi_def_cfa_register 7
 313:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_register(NRF_REG_RF_CH);
 720              		.loc 1 313 0
 721 0004 0520     		movs	r0, #5
 722 0006 FFF7FEFF 		bl	nRF24_read_register
 723 000a 0346     		mov	r3, r0
 314:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 724              		.loc 1 314 0
 725 000c 1846     		mov	r0, r3
 726 000e 80BD     		pop	{r7, pc}
 727              		.cfi_endproc
 728              	.LFE18:
 729              		.size	nRF24_get_channel, .-nRF24_get_channel
 730              		.section	.text.nRF24_set_address_width,"ax",%progbits
 731              		.align	2
 732              		.global	nRF24_set_address_width
 733              		.thumb
 734              		.thumb_func
 735              		.type	nRF24_set_address_width, %function
 736              	nRF24_set_address_width:
 737              	.LFB19:
 315:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 316:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 317:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the data pipes address width.
 318:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 319:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_addr_width addr_width:
 320:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 321:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_address_width(const nrf_addr_width addr_width)
 322:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 738              		.loc 1 322 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 82B0     		sub	sp, sp, #8
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 750 0006 0346     		mov	r3, r0
 751 0008 FB71     		strb	r3, [r7, #7]
 323:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_SETUP_AW, (uint8_t)addr_width);
 752              		.loc 1 323 0
 753 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 20


 754 000c 1946     		mov	r1, r3
 755 000e 0320     		movs	r0, #3
 756 0010 FFF7FEFF 		bl	nRF24_write_register
 324:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // update the _nrf_addr_width variable
 325:Generated_Source\PSoC5/nRF24_FUNCS.c ****     _addr_width_conf_to_bytes(addr_width);
 757              		.loc 1 325 0
 758 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 759 0016 1846     		mov	r0, r3
 760 0018 FFF7FEFF 		bl	_addr_width_conf_to_bytes
 326:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 761              		.loc 1 326 0
 762 001c 00BF     		nop
 763 001e 0837     		adds	r7, r7, #8
 764              		.cfi_def_cfa_offset 8
 765 0020 BD46     		mov	sp, r7
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 0022 80BD     		pop	{r7, pc}
 769              		.cfi_endproc
 770              	.LFE19:
 771              		.size	nRF24_set_address_width, .-nRF24_set_address_width
 772              		.section	.text.nRF24_get_address_width,"ax",%progbits
 773              		.align	2
 774              		.global	nRF24_get_address_width
 775              		.thumb
 776              		.thumb_func
 777              		.type	nRF24_get_address_width, %function
 778              	nRF24_get_address_width:
 779              	.LFB20:
 327:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 328:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 329:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the address width of the data pipes.
 330:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 331:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t: Address width in bytes.
 332:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 333:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_address_width(void)
 334:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 780              		.loc 1 334 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785 0000 80B4     		push	{r7}
 786              		.cfi_def_cfa_offset 4
 787              		.cfi_offset 7, -4
 788 0002 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return _nrf_addr_width;
 790              		.loc 1 335 0
 791 0004 024B     		ldr	r3, .L35
 792 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 793              		.loc 1 336 0
 794 0008 1846     		mov	r0, r3
 795 000a BD46     		mov	sp, r7
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 21


 798 000c 80BC     		pop	{r7}
 799              		.cfi_restore 7
 800              		.cfi_def_cfa_offset 0
 801 000e 7047     		bx	lr
 802              	.L36:
 803              		.align	2
 804              	.L35:
 805 0010 00000000 		.word	_nrf_addr_width
 806              		.cfi_endproc
 807              	.LFE20:
 808              		.size	nRF24_get_address_width, .-nRF24_get_address_width
 809              		.section	.text.nRF24_set_rx_pipe_address,"ax",%progbits
 810              		.align	2
 811              		.global	nRF24_set_rx_pipe_address
 812              		.thumb
 813              		.thumb_func
 814              		.type	nRF24_set_rx_pipe_address, %function
 815              	nRF24_set_rx_pipe_address:
 816              	.LFB21:
 337:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 338:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 339:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the address of the RX Pipe 0 in the radio.
 340:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 341:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This function configure the address of the Rx Pipe 0 of the radio.
 342:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 343:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* addr:
 344:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param size_t size:
 345:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 346:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_rx_pipe_address(const nrf_addr_rx_pipe pipe,
 347:Generated_Source\PSoC5/nRF24_FUNCS.c ****                                             const uint8_t *addr, size_t size)
 348:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 817              		.loc 1 348 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 16
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 84B0     		sub	sp, sp, #16
 826              		.cfi_def_cfa_offset 24
 827 0004 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 829 0006 0346     		mov	r3, r0
 830 0008 B960     		str	r1, [r7, #8]
 831 000a 7A60     		str	r2, [r7, #4]
 832 000c FB73     		strb	r3, [r7, #15]
 349:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == addr) {
 833              		.loc 1 349 0
 834 000e BB68     		ldr	r3, [r7, #8]
 835 0010 002B     		cmp	r3, #0
 836 0012 2BD0     		beq	.L44
 350:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 351:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 352:Generated_Source\PSoC5/nRF24_FUNCS.c ****     
 353:Generated_Source\PSoC5/nRF24_FUNCS.c ****     switch(pipe) {
 837              		.loc 1 353 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 22


 838 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 839 0016 0A3B     		subs	r3, r3, #10
 840 0018 052B     		cmp	r3, #5
 841 001a 28D8     		bhi	.L37
 842 001c 01A2     		adr	r2, .L41
 843 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 844 0022 00BF     		.p2align 2
 845              	.L41:
 846 0024 3D000000 		.word	.L40+1
 847 0028 3D000000 		.word	.L40+1
 848 002c 5D000000 		.word	.L42+1
 849 0030 5D000000 		.word	.L42+1
 850 0034 5D000000 		.word	.L42+1
 851 0038 5D000000 		.word	.L42+1
 852              		.p2align 1
 853              	.L40:
 354:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // For pipes 0 and 1 we can change up to 5 bytes of it's addresses
 355:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE0:
 356:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE1:
 357:Generated_Source\PSoC5/nRF24_FUNCS.c ****         // The smaller address is 3 bytes
 358:Generated_Source\PSoC5/nRF24_FUNCS.c ****         if (NRF_PIPE_ADDR_WIDTH_3BYTES > size) {
 359:Generated_Source\PSoC5/nRF24_FUNCS.c ****             // TODO
 360:Generated_Source\PSoC5/nRF24_FUNCS.c ****         }
 361:Generated_Source\PSoC5/nRF24_FUNCS.c ****         
 362:Generated_Source\PSoC5/nRF24_FUNCS.c ****         if (_nrf_addr_width < size) {
 854              		.loc 1 362 0
 855 003c 0D4B     		ldr	r3, .L45
 856 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 0040 1A46     		mov	r2, r3
 858 0042 7B68     		ldr	r3, [r7, #4]
 859 0044 9A42     		cmp	r2, r3
 860 0046 02D2     		bcs	.L43
 363:Generated_Source\PSoC5/nRF24_FUNCS.c ****             size = _nrf_addr_width;
 861              		.loc 1 363 0
 862 0048 0A4B     		ldr	r3, .L45
 863 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 004c 7B60     		str	r3, [r7, #4]
 865              	.L43:
 364:Generated_Source\PSoC5/nRF24_FUNCS.c ****         }
 365:Generated_Source\PSoC5/nRF24_FUNCS.c ****             
 366:Generated_Source\PSoC5/nRF24_FUNCS.c ****         nRF24_write_long_register(pipe, addr, size);
 866              		.loc 1 366 0
 867 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 868 0050 7A68     		ldr	r2, [r7, #4]
 869 0052 B968     		ldr	r1, [r7, #8]
 870 0054 1846     		mov	r0, r3
 871 0056 FFF7FEFF 		bl	nRF24_write_long_register
 367:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 872              		.loc 1 367 0
 873 005a 08E0     		b	.L37
 874              	.L42:
 368:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // For pipes 2, 3, 4 and 5 we can change only the LSB of it's address
 369:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE2:
 370:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE3:
 371:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE4:
 372:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE5:
 373:Generated_Source\PSoC5/nRF24_FUNCS.c ****         (void)size; // so we don't get a warning on unused variable
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 23


 374:Generated_Source\PSoC5/nRF24_FUNCS.c ****         
 375:Generated_Source\PSoC5/nRF24_FUNCS.c ****         nRF24_write_long_register(pipe, addr, 1);
 875              		.loc 1 375 0
 876 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 877 005e 0122     		movs	r2, #1
 878 0060 B968     		ldr	r1, [r7, #8]
 879 0062 1846     		mov	r0, r3
 880 0064 FFF7FEFF 		bl	nRF24_write_long_register
 376:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 881              		.loc 1 376 0
 882 0068 00BF     		nop
 883 006a 00E0     		b	.L37
 884              	.L44:
 350:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 885              		.loc 1 350 0
 886 006c 00BF     		nop
 887              	.L37:
 377:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 378:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 888              		.loc 1 378 0
 889 006e 1037     		adds	r7, r7, #16
 890              		.cfi_def_cfa_offset 8
 891 0070 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 0072 80BD     		pop	{r7, pc}
 895              	.L46:
 896              		.align	2
 897              	.L45:
 898 0074 00000000 		.word	_nrf_addr_width
 899              		.cfi_endproc
 900              	.LFE21:
 901              		.size	nRF24_set_rx_pipe_address, .-nRF24_set_rx_pipe_address
 902              		.section	.text.nRF24_get_rx_pipe_address,"ax",%progbits
 903              		.align	2
 904              		.global	nRF24_get_rx_pipe_address
 905              		.thumb
 906              		.thumb_func
 907              		.type	nRF24_get_rx_pipe_address, %function
 908              	nRF24_get_rx_pipe_address:
 909              	.LFB22:
 379:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 380:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 381:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the address of the RX Pipe 0 in the radio.
 382:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 383:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param uint8_t* addr:
 384:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param size_t size:
 385:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 386:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_get_rx_pipe_address(const nrf_addr_rx_pipe pipe,
 387:Generated_Source\PSoC5/nRF24_FUNCS.c ****                                             uint8_t *addr, size_t size)
 388:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 910              		.loc 1 388 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 16
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914 0000 90B5     		push	{r4, r7, lr}
 915              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 24


 916              		.cfi_offset 4, -12
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 85B0     		sub	sp, sp, #20
 920              		.cfi_def_cfa_offset 32
 921 0004 00AF     		add	r7, sp, #0
 922              		.cfi_def_cfa_register 7
 923 0006 0346     		mov	r3, r0
 924 0008 B960     		str	r1, [r7, #8]
 925 000a 7A60     		str	r2, [r7, #4]
 926 000c FB73     		strb	r3, [r7, #15]
 389:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == addr) {
 927              		.loc 1 389 0
 928 000e BB68     		ldr	r3, [r7, #8]
 929 0010 002B     		cmp	r3, #0
 930 0012 35D0     		beq	.L54
 390:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 391:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 392:Generated_Source\PSoC5/nRF24_FUNCS.c ****     
 393:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // The smaller address is 3 bytes
 394:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_PIPE_ADDR_WIDTH_3BYTES > size) {
 395:Generated_Source\PSoC5/nRF24_FUNCS.c ****         // TODO
 396:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 397:Generated_Source\PSoC5/nRF24_FUNCS.c ****     
 398:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (_nrf_addr_width < size) {
 931              		.loc 1 398 0
 932 0014 1C4B     		ldr	r3, .L55
 933 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 934 0018 1A46     		mov	r2, r3
 935 001a 7B68     		ldr	r3, [r7, #4]
 936 001c 9A42     		cmp	r2, r3
 937 001e 02D2     		bcs	.L50
 399:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = _nrf_addr_width;
 938              		.loc 1 399 0
 939 0020 194B     		ldr	r3, .L55
 940 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 941 0024 7B60     		str	r3, [r7, #4]
 942              	.L50:
 400:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 401:Generated_Source\PSoC5/nRF24_FUNCS.c ****     
 402:Generated_Source\PSoC5/nRF24_FUNCS.c ****     switch(pipe) {
 943              		.loc 1 402 0
 944 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 945 0028 0A3B     		subs	r3, r3, #10
 946 002a 052B     		cmp	r3, #5
 947 002c 29D8     		bhi	.L47
 948 002e 01A2     		adr	r2, .L52
 949 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 950              		.p2align 2
 951              	.L52:
 952 0034 4D000000 		.word	.L51+1
 953 0038 4D000000 		.word	.L51+1
 954 003c 5B000000 		.word	.L53+1
 955 0040 5B000000 		.word	.L53+1
 956 0044 5B000000 		.word	.L53+1
 957 0048 5B000000 		.word	.L53+1
 958              		.p2align 1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 25


 959              	.L51:
 403:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // For pipes 0 and 1 we can read up to 5 bytes of it's addresses
 404:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE0:
 405:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE1:
 406:Generated_Source\PSoC5/nRF24_FUNCS.c ****         nRF24_read_long_register(pipe, addr, size);
 960              		.loc 1 406 0
 961 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 962 004e 7A68     		ldr	r2, [r7, #4]
 963 0050 B968     		ldr	r1, [r7, #8]
 964 0052 1846     		mov	r0, r3
 965 0054 FFF7FEFF 		bl	nRF24_read_long_register
 407:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 966              		.loc 1 407 0
 967 0058 13E0     		b	.L47
 968              	.L53:
 408:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // For pipes 2, 3, 4 and 5 the address is the same to pipe1 except the LSB
 409:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE2:
 410:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE3:
 411:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE4:
 412:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_ADDR_PIPE5:
 413:Generated_Source\PSoC5/nRF24_FUNCS.c ****         nRF24_read_long_register(NRF_REG_RX_ADDR_P1, addr, size - 1);
 969              		.loc 1 413 0
 970 005a 7B68     		ldr	r3, [r7, #4]
 971 005c 013B     		subs	r3, r3, #1
 972 005e 1A46     		mov	r2, r3
 973 0060 B968     		ldr	r1, [r7, #8]
 974 0062 0B20     		movs	r0, #11
 975 0064 FFF7FEFF 		bl	nRF24_read_long_register
 414:Generated_Source\PSoC5/nRF24_FUNCS.c ****         addr[size - 1] = nRF24_read_register(pipe);
 976              		.loc 1 414 0
 977 0068 7B68     		ldr	r3, [r7, #4]
 978 006a 013B     		subs	r3, r3, #1
 979 006c BA68     		ldr	r2, [r7, #8]
 980 006e D418     		adds	r4, r2, r3
 981 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 982 0072 1846     		mov	r0, r3
 983 0074 FFF7FEFF 		bl	nRF24_read_register
 984 0078 0346     		mov	r3, r0
 985 007a 2370     		strb	r3, [r4]
 415:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 986              		.loc 1 415 0
 987 007c 00BF     		nop
 988 007e 00E0     		b	.L47
 989              	.L54:
 390:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 990              		.loc 1 390 0
 991 0080 00BF     		nop
 992              	.L47:
 416:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 417:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 993              		.loc 1 417 0
 994 0082 1437     		adds	r7, r7, #20
 995              		.cfi_def_cfa_offset 12
 996 0084 BD46     		mov	sp, r7
 997              		.cfi_def_cfa_register 13
 998              		@ sp needed
 999 0086 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 26


 1000              	.L56:
 1001              		.align	2
 1002              	.L55:
 1003 0088 00000000 		.word	_nrf_addr_width
 1004              		.cfi_endproc
 1005              	.LFE22:
 1006              		.size	nRF24_get_rx_pipe_address, .-nRF24_get_rx_pipe_address
 1007              		.section	.text.nRF24_set_tx_address,"ax",%progbits
 1008              		.align	2
 1009              		.global	nRF24_set_tx_address
 1010              		.thumb
 1011              		.thumb_func
 1012              		.type	nRF24_set_tx_address, %function
 1013              	nRF24_set_tx_address:
 1014              	.LFB23:
 418:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 419:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 420:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the TX Address of the radio.
 421:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 422:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* addr:
 423:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param size_t size:
 424:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 425:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_tx_address(const uint8_t *const addr, size_t size)
 426:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1015              		.loc 1 426 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 8
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019 0000 80B5     		push	{r7, lr}
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 7, -8
 1022              		.cfi_offset 14, -4
 1023 0002 82B0     		sub	sp, sp, #8
 1024              		.cfi_def_cfa_offset 16
 1025 0004 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
 1027 0006 7860     		str	r0, [r7, #4]
 1028 0008 3960     		str	r1, [r7]
 427:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == addr) {
 1029              		.loc 1 427 0
 1030 000a 7B68     		ldr	r3, [r7, #4]
 1031 000c 002B     		cmp	r3, #0
 1032 000e 0ED0     		beq	.L61
 428:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 429:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 430:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 431:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (_nrf_addr_width < size) {
 1033              		.loc 1 431 0
 1034 0010 094B     		ldr	r3, .L62
 1035 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1036 0014 1A46     		mov	r2, r3
 1037 0016 3B68     		ldr	r3, [r7]
 1038 0018 9A42     		cmp	r2, r3
 1039 001a 02D2     		bcs	.L60
 432:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = _nrf_addr_width;
 1040              		.loc 1 432 0
 1041 001c 064B     		ldr	r3, .L62
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 27


 1042 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1043 0020 3B60     		str	r3, [r7]
 1044              	.L60:
 433:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 434:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 435:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_long_register(NRF_REG_TX_ADDR, addr, size);
 1045              		.loc 1 435 0
 1046 0022 3A68     		ldr	r2, [r7]
 1047 0024 7968     		ldr	r1, [r7, #4]
 1048 0026 1020     		movs	r0, #16
 1049 0028 FFF7FEFF 		bl	nRF24_write_long_register
 1050 002c 00E0     		b	.L57
 1051              	.L61:
 428:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 1052              		.loc 1 428 0
 1053 002e 00BF     		nop
 1054              	.L57:
 436:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1055              		.loc 1 436 0
 1056 0030 0837     		adds	r7, r7, #8
 1057              		.cfi_def_cfa_offset 8
 1058 0032 BD46     		mov	sp, r7
 1059              		.cfi_def_cfa_register 13
 1060              		@ sp needed
 1061 0034 80BD     		pop	{r7, pc}
 1062              	.L63:
 1063 0036 00BF     		.align	2
 1064              	.L62:
 1065 0038 00000000 		.word	_nrf_addr_width
 1066              		.cfi_endproc
 1067              	.LFE23:
 1068              		.size	nRF24_set_tx_address, .-nRF24_set_tx_address
 1069              		.section	.text.nRF24_get_tx_address,"ax",%progbits
 1070              		.align	2
 1071              		.global	nRF24_get_tx_address
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	nRF24_get_tx_address, %function
 1075              	nRF24_get_tx_address:
 1076              	.LFB24:
 437:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 438:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 439:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the TX Address of the radio.
 440:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 441:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* addr:
 442:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const size_t size:
 443:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 444:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_get_tx_address(uint8_t* addr, size_t size)
 445:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1077              		.loc 1 445 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081 0000 80B5     		push	{r7, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 28


 1085 0002 82B0     		sub	sp, sp, #8
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 0006 7860     		str	r0, [r7, #4]
 1090 0008 3960     		str	r1, [r7]
 446:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == addr) {
 1091              		.loc 1 446 0
 1092 000a 7B68     		ldr	r3, [r7, #4]
 1093 000c 002B     		cmp	r3, #0
 1094 000e 0ED0     		beq	.L68
 447:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 448:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 449:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 450:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (_nrf_addr_width < size) {
 1095              		.loc 1 450 0
 1096 0010 094B     		ldr	r3, .L69
 1097 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 0014 1A46     		mov	r2, r3
 1099 0016 3B68     		ldr	r3, [r7]
 1100 0018 9A42     		cmp	r2, r3
 1101 001a 02D2     		bcs	.L67
 451:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = _nrf_addr_width;
 1102              		.loc 1 451 0
 1103 001c 064B     		ldr	r3, .L69
 1104 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1105 0020 3B60     		str	r3, [r7]
 1106              	.L67:
 452:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 453:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 454:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_read_long_register(NRF_REG_TX_ADDR, addr, size);
 1107              		.loc 1 454 0
 1108 0022 3A68     		ldr	r2, [r7]
 1109 0024 7968     		ldr	r1, [r7, #4]
 1110 0026 1020     		movs	r0, #16
 1111 0028 FFF7FEFF 		bl	nRF24_read_long_register
 1112 002c 00E0     		b	.L64
 1113              	.L68:
 447:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 1114              		.loc 1 447 0
 1115 002e 00BF     		nop
 1116              	.L64:
 455:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1117              		.loc 1 455 0
 1118 0030 0837     		adds	r7, r7, #8
 1119              		.cfi_def_cfa_offset 8
 1120 0032 BD46     		mov	sp, r7
 1121              		.cfi_def_cfa_register 13
 1122              		@ sp needed
 1123 0034 80BD     		pop	{r7, pc}
 1124              	.L70:
 1125 0036 00BF     		.align	2
 1126              	.L69:
 1127 0038 00000000 		.word	_nrf_addr_width
 1128              		.cfi_endproc
 1129              	.LFE24:
 1130              		.size	nRF24_get_tx_address, .-nRF24_get_tx_address
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 29


 1131              		.section	.text.nRF24_set_payload_size,"ax",%progbits
 1132              		.align	2
 1133              		.global	nRF24_set_payload_size
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	nRF24_set_payload_size, %function
 1137              	nRF24_set_payload_size:
 1138              	.LFB25:
 456:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 457:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 458:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Set the payload size of the given pipe.
 459:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 460:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Configure the payload size of the given pipe.
 461:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 462:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe:
 463:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param uint8_t size:
 464:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 465:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_set_payload_size(const nrf_pld_size pipe, uint8_t size)
 466:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1139              		.loc 1 466 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 8
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 80B5     		push	{r7, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 82B0     		sub	sp, sp, #8
 1148              		.cfi_def_cfa_offset 16
 1149 0004 00AF     		add	r7, sp, #0
 1150              		.cfi_def_cfa_register 7
 1151 0006 0346     		mov	r3, r0
 1152 0008 0A46     		mov	r2, r1
 1153 000a FB71     		strb	r3, [r7, #7]
 1154 000c 1346     		mov	r3, r2
 1155 000e BB71     		strb	r3, [r7, #6]
 467:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_PAYLOAD_SIZE_MAX < size) {
 1156              		.loc 1 467 0
 1157 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1158 0012 202B     		cmp	r3, #32
 1159 0014 01D9     		bls	.L72
 468:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = NRF_PAYLOAD_SIZE_MAX;
 1160              		.loc 1 468 0
 1161 0016 2023     		movs	r3, #32
 1162 0018 BB71     		strb	r3, [r7, #6]
 1163              	.L72:
 469:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 470:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 471:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(pipe, size);
 1164              		.loc 1 471 0
 1165 001a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1166 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1167 001e 1146     		mov	r1, r2
 1168 0020 1846     		mov	r0, r3
 1169 0022 FFF7FEFF 		bl	nRF24_write_register
 472:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1170              		.loc 1 472 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 30


 1171 0026 00BF     		nop
 1172 0028 0837     		adds	r7, r7, #8
 1173              		.cfi_def_cfa_offset 8
 1174 002a BD46     		mov	sp, r7
 1175              		.cfi_def_cfa_register 13
 1176              		@ sp needed
 1177 002c 80BD     		pop	{r7, pc}
 1178              		.cfi_endproc
 1179              	.LFE25:
 1180              		.size	nRF24_set_payload_size, .-nRF24_set_payload_size
 1181 002e 00BF     		.section	.text.nRF24_get_payload_size,"ax",%progbits
 1182              		.align	2
 1183              		.global	nRF24_get_payload_size
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	nRF24_get_payload_size, %function
 1187              	nRF24_get_payload_size:
 1188              	.LFB26:
 473:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 474:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 475:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Get the payload size of the given pipe.
 476:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 477:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe: Pipe to be read.
 478:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 479:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t: Configured payload size of the given pipe.
 480:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 481:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_payload_size(const nrf_pld_size pipe)
 482:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1189              		.loc 1 482 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 8
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193 0000 80B5     		push	{r7, lr}
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 7, -8
 1196              		.cfi_offset 14, -4
 1197 0002 82B0     		sub	sp, sp, #8
 1198              		.cfi_def_cfa_offset 16
 1199 0004 00AF     		add	r7, sp, #0
 1200              		.cfi_def_cfa_register 7
 1201 0006 0346     		mov	r3, r0
 1202 0008 FB71     		strb	r3, [r7, #7]
 483:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_register(pipe);
 1203              		.loc 1 483 0
 1204 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1205 000c 1846     		mov	r0, r3
 1206 000e FFF7FEFF 		bl	nRF24_read_register
 1207 0012 0346     		mov	r3, r0
 484:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1208              		.loc 1 484 0
 1209 0014 1846     		mov	r0, r3
 1210 0016 0837     		adds	r7, r7, #8
 1211              		.cfi_def_cfa_offset 8
 1212 0018 BD46     		mov	sp, r7
 1213              		.cfi_def_cfa_register 13
 1214              		@ sp needed
 1215 001a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 31


 1216              		.cfi_endproc
 1217              	.LFE26:
 1218              		.size	nRF24_get_payload_size, .-nRF24_get_payload_size
 1219              		.section	.text.nRF24_reuse_last_transmitted_payload,"ax",%progbits
 1220              		.align	2
 1221              		.global	nRF24_reuse_last_transmitted_payload
 1222              		.thumb
 1223              		.thumb_func
 1224              		.type	nRF24_reuse_last_transmitted_payload, %function
 1225              	nRF24_reuse_last_transmitted_payload:
 1226              	.LFB27:
 485:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 486:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 487:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Reuse last transmitted payload.
 488:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 489:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This function issue the command ReuseTxPayload and then toggle the CE pin
 490:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * to transmit the last transmitted payload.
 491:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 492:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_reuse_last_transmitted_payload(void)
 493:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1227              		.loc 1 493 0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 1, uses_anonymous_args = 0
 1231 0000 80B5     		push	{r7, lr}
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 00AF     		add	r7, sp, #0
 1236              		.cfi_def_cfa_register 7
 494:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_reuse_tx_payload_cmd();
 1237              		.loc 1 494 0
 1238 0004 FFF7FEFF 		bl	nRF24_reuse_tx_payload_cmd
 495:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_transmit_pulse();
 1239              		.loc 1 495 0
 1240 0008 FFF7FEFF 		bl	nRF24_transmit_pulse
 496:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1241              		.loc 1 496 0
 1242 000c 00BF     		nop
 1243 000e 80BD     		pop	{r7, pc}
 1244              		.cfi_endproc
 1245              	.LFE27:
 1246              		.size	nRF24_reuse_last_transmitted_payload, .-nRF24_reuse_last_transmitted_payload
 1247              		.section	.text.nRF24_enable_dynamic_payload,"ax",%progbits
 1248              		.align	2
 1249              		.global	nRF24_enable_dynamic_payload
 1250              		.thumb
 1251              		.thumb_func
 1252              		.type	nRF24_enable_dynamic_payload, %function
 1253              	nRF24_enable_dynamic_payload:
 1254              	.LFB28:
 497:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 498:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 499:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Enable dynamic payload on the given pipe.
 500:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 501:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe:
 502:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 32


 503:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable_dynamic_payload(void)
 504:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1255              		.loc 1 504 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0000 80B5     		push	{r7, lr}
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 00AF     		add	r7, sp, #0
 1264              		.cfi_def_cfa_register 7
 505:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // TODO: Read the FEATURE register, check the needed values and set
 506:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // the bits if not set already
 507:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_ACK_PAY);
 1265              		.loc 1 507 0
 1266 0004 0121     		movs	r1, #1
 1267 0006 1D20     		movs	r0, #29
 1268 0008 FFF7FEFF 		bl	nRF24_set_bit
 508:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_DPL);
 1269              		.loc 1 508 0
 1270 000c 0221     		movs	r1, #2
 1271 000e 1D20     		movs	r0, #29
 1272 0010 FFF7FEFF 		bl	nRF24_set_bit
 509:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1273              		.loc 1 509 0
 1274 0014 00BF     		nop
 1275 0016 80BD     		pop	{r7, pc}
 1276              		.cfi_endproc
 1277              	.LFE28:
 1278              		.size	nRF24_enable_dynamic_payload, .-nRF24_enable_dynamic_payload
 1279              		.section	.text.nRF24_enable_dynamic_payload_on_pipe,"ax",%progbits
 1280              		.align	2
 1281              		.global	nRF24_enable_dynamic_payload_on_pipe
 1282              		.thumb
 1283              		.thumb_func
 1284              		.type	nRF24_enable_dynamic_payload_on_pipe, %function
 1285              	nRF24_enable_dynamic_payload_on_pipe:
 1286              	.LFB29:
 510:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 511:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 512:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Enable dynamic payload on the given pipe.
 513:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 514:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe:
 515:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 516:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable_dynamic_payload_on_pipe(const nrf_pipe pipe)
 517:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1287              		.loc 1 517 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 8
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291 0000 80B5     		push	{r7, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 82B0     		sub	sp, sp, #8
 1296              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 33


 1297 0004 00AF     		add	r7, sp, #0
 1298              		.cfi_def_cfa_register 7
 1299 0006 0346     		mov	r3, r0
 1300 0008 FB71     		strb	r3, [r7, #7]
 518:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_EN_AA, pipe);
 1301              		.loc 1 518 0
 1302 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1303 000c 1946     		mov	r1, r3
 1304 000e 0120     		movs	r0, #1
 1305 0010 FFF7FEFF 		bl	nRF24_set_bit
 519:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_DYNPD, pipe);
 1306              		.loc 1 519 0
 1307 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1308 0016 1946     		mov	r1, r3
 1309 0018 1C20     		movs	r0, #28
 1310 001a FFF7FEFF 		bl	nRF24_set_bit
 520:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1311              		.loc 1 520 0
 1312 001e 00BF     		nop
 1313 0020 0837     		adds	r7, r7, #8
 1314              		.cfi_def_cfa_offset 8
 1315 0022 BD46     		mov	sp, r7
 1316              		.cfi_def_cfa_register 13
 1317              		@ sp needed
 1318 0024 80BD     		pop	{r7, pc}
 1319              		.cfi_endproc
 1320              	.LFE29:
 1321              		.size	nRF24_enable_dynamic_payload_on_pipe, .-nRF24_enable_dynamic_payload_on_pipe
 1322 0026 00BF     		.section	.text.nRF24_disable_dynamic_payload,"ax",%progbits
 1323              		.align	2
 1324              		.global	nRF24_disable_dynamic_payload
 1325              		.thumb
 1326              		.thumb_func
 1327              		.type	nRF24_disable_dynamic_payload, %function
 1328              	nRF24_disable_dynamic_payload:
 1329              	.LFB30:
 521:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 522:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 523:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Disable dynamic payload on the given pipe.
 524:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 525:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe:
 526:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 527:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_disable_dynamic_payload()
 528:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1330              		.loc 1 528 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334 0000 80B5     		push	{r7, lr}
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 7, -8
 1337              		.cfi_offset 14, -4
 1338 0002 00AF     		add	r7, sp, #0
 1339              		.cfi_def_cfa_register 7
 529:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // TODO: Read the FEATURE register, check the needed values and clear
 530:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // the bits if not clear already
 531:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_ACK_PAY);
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 34


 1340              		.loc 1 531 0
 1341 0004 0121     		movs	r1, #1
 1342 0006 1D20     		movs	r0, #29
 1343 0008 FFF7FEFF 		bl	nRF24_clear_bit
 532:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_DPL);
 1344              		.loc 1 532 0
 1345 000c 0221     		movs	r1, #2
 1346 000e 1D20     		movs	r0, #29
 1347 0010 FFF7FEFF 		bl	nRF24_clear_bit
 533:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1348              		.loc 1 533 0
 1349 0014 00BF     		nop
 1350 0016 80BD     		pop	{r7, pc}
 1351              		.cfi_endproc
 1352              	.LFE30:
 1353              		.size	nRF24_disable_dynamic_payload, .-nRF24_disable_dynamic_payload
 1354              		.section	.text.nRF24_disable_dynamic_payload_on_pipe,"ax",%progbits
 1355              		.align	2
 1356              		.global	nRF24_disable_dynamic_payload_on_pipe
 1357              		.thumb
 1358              		.thumb_func
 1359              		.type	nRF24_disable_dynamic_payload_on_pipe, %function
 1360              	nRF24_disable_dynamic_payload_on_pipe:
 1361              	.LFB31:
 534:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 535:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 536:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Disable dynamic payload on the given pipe.
 537:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 538:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe:
 539:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 540:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_disable_dynamic_payload_on_pipe(const nrf_pipe pipe)
 541:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1362              		.loc 1 541 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366 0000 80B5     		push	{r7, lr}
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 7, -8
 1369              		.cfi_offset 14, -4
 1370 0002 82B0     		sub	sp, sp, #8
 1371              		.cfi_def_cfa_offset 16
 1372 0004 00AF     		add	r7, sp, #0
 1373              		.cfi_def_cfa_register 7
 1374 0006 0346     		mov	r3, r0
 1375 0008 FB71     		strb	r3, [r7, #7]
 542:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_EN_AA, pipe);
 1376              		.loc 1 542 0
 1377 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1378 000c 1946     		mov	r1, r3
 1379 000e 0120     		movs	r0, #1
 1380 0010 FFF7FEFF 		bl	nRF24_clear_bit
 543:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_DYNPD, pipe);
 1381              		.loc 1 543 0
 1382 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1383 0016 1946     		mov	r1, r3
 1384 0018 1C20     		movs	r0, #28
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 35


 1385 001a FFF7FEFF 		bl	nRF24_clear_bit
 544:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1386              		.loc 1 544 0
 1387 001e 00BF     		nop
 1388 0020 0837     		adds	r7, r7, #8
 1389              		.cfi_def_cfa_offset 8
 1390 0022 BD46     		mov	sp, r7
 1391              		.cfi_def_cfa_register 13
 1392              		@ sp needed
 1393 0024 80BD     		pop	{r7, pc}
 1394              		.cfi_endproc
 1395              	.LFE31:
 1396              		.size	nRF24_disable_dynamic_payload_on_pipe, .-nRF24_disable_dynamic_payload_on_pipe
 1397 0026 00BF     		.section	.text.nRF24_enable_dynamic_payload_length,"ax",%progbits
 1398              		.align	2
 1399              		.global	nRF24_enable_dynamic_payload_length
 1400              		.thumb
 1401              		.thumb_func
 1402              		.type	nRF24_enable_dynamic_payload_length, %function
 1403              	nRF24_enable_dynamic_payload_length:
 1404              	.LFB32:
 545:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 546:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 547:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Enable dinamic payload length.
 548:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 549:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable_dynamic_payload_length(void)
 550:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1405              		.loc 1 550 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 00AF     		add	r7, sp, #0
 1414              		.cfi_def_cfa_register 7
 551:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_DPL);
 1415              		.loc 1 551 0
 1416 0004 0221     		movs	r1, #2
 1417 0006 1D20     		movs	r0, #29
 1418 0008 FFF7FEFF 		bl	nRF24_set_bit
 552:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1419              		.loc 1 552 0
 1420 000c 00BF     		nop
 1421 000e 80BD     		pop	{r7, pc}
 1422              		.cfi_endproc
 1423              	.LFE32:
 1424              		.size	nRF24_enable_dynamic_payload_length, .-nRF24_enable_dynamic_payload_length
 1425              		.section	.text.nRF24_disable_dynamic_payload_length,"ax",%progbits
 1426              		.align	2
 1427              		.global	nRF24_disable_dynamic_payload_length
 1428              		.thumb
 1429              		.thumb_func
 1430              		.type	nRF24_disable_dynamic_payload_length, %function
 1431              	nRF24_disable_dynamic_payload_length:
 1432              	.LFB33:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 36


 553:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 554:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 555:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Disable dynamic payload length.
 556:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 557:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_disable_dynamic_payload_length(void)
 558:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1433              		.loc 1 558 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 1, uses_anonymous_args = 0
 1437 0000 80B5     		push	{r7, lr}
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 00AF     		add	r7, sp, #0
 1442              		.cfi_def_cfa_register 7
 559:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_DPL);
 1443              		.loc 1 559 0
 1444 0004 0221     		movs	r1, #2
 1445 0006 1D20     		movs	r0, #29
 1446 0008 FFF7FEFF 		bl	nRF24_clear_bit
 560:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1447              		.loc 1 560 0
 1448 000c 00BF     		nop
 1449 000e 80BD     		pop	{r7, pc}
 1450              		.cfi_endproc
 1451              	.LFE33:
 1452              		.size	nRF24_disable_dynamic_payload_length, .-nRF24_disable_dynamic_payload_length
 1453              		.section	.text.nRF24_enable_payload_with_ack,"ax",%progbits
 1454              		.align	2
 1455              		.global	nRF24_enable_payload_with_ack
 1456              		.thumb
 1457              		.thumb_func
 1458              		.type	nRF24_enable_payload_with_ack, %function
 1459              	nRF24_enable_payload_with_ack:
 1460              	.LFB34:
 561:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 562:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 563:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Enable payload with ACK.
 564:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 565:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable_payload_with_ack(void)
 566:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1461              		.loc 1 566 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 0
 1464              		@ frame_needed = 1, uses_anonymous_args = 0
 1465 0000 80B5     		push	{r7, lr}
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 7, -8
 1468              		.cfi_offset 14, -4
 1469 0002 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 567:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_ACK_PAY);
 1471              		.loc 1 567 0
 1472 0004 0121     		movs	r1, #1
 1473 0006 1D20     		movs	r0, #29
 1474 0008 FFF7FEFF 		bl	nRF24_set_bit
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 37


 568:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1475              		.loc 1 568 0
 1476 000c 00BF     		nop
 1477 000e 80BD     		pop	{r7, pc}
 1478              		.cfi_endproc
 1479              	.LFE34:
 1480              		.size	nRF24_enable_payload_with_ack, .-nRF24_enable_payload_with_ack
 1481              		.section	.text.nRF24_disable_payload_with_ack,"ax",%progbits
 1482              		.align	2
 1483              		.global	nRF24_disable_payload_with_ack
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	nRF24_disable_payload_with_ack, %function
 1487              	nRF24_disable_payload_with_ack:
 1488              	.LFB35:
 569:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 570:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 571:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Disable Payload with ACK.
 572:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 573:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_disable_payload_with_ack(void)
 574:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1489              		.loc 1 574 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493 0000 80B5     		push	{r7, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
 575:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_ACK_PAY);
 1499              		.loc 1 575 0
 1500 0004 0121     		movs	r1, #1
 1501 0006 1D20     		movs	r0, #29
 1502 0008 FFF7FEFF 		bl	nRF24_clear_bit
 576:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1503              		.loc 1 576 0
 1504 000c 00BF     		nop
 1505 000e 80BD     		pop	{r7, pc}
 1506              		.cfi_endproc
 1507              	.LFE35:
 1508              		.size	nRF24_disable_payload_with_ack, .-nRF24_disable_payload_with_ack
 1509              		.section	.text.nRF24_enable_payload_with_no_ack,"ax",%progbits
 1510              		.align	2
 1511              		.global	nRF24_enable_payload_with_no_ack
 1512              		.thumb
 1513              		.thumb_func
 1514              		.type	nRF24_enable_payload_with_no_ack, %function
 1515              	nRF24_enable_payload_with_no_ack:
 1516              	.LFB36:
 577:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 578:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 579:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Enable dynamic payload length.
 580:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 581:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_enable_payload_with_no_ack(void)
 582:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 38


 1517              		.loc 1 582 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 1, uses_anonymous_args = 0
 1521 0000 80B5     		push	{r7, lr}
 1522              		.cfi_def_cfa_offset 8
 1523              		.cfi_offset 7, -8
 1524              		.cfi_offset 14, -4
 1525 0002 00AF     		add	r7, sp, #0
 1526              		.cfi_def_cfa_register 7
 583:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_set_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_DYN_ACK);
 1527              		.loc 1 583 0
 1528 0004 0021     		movs	r1, #0
 1529 0006 1D20     		movs	r0, #29
 1530 0008 FFF7FEFF 		bl	nRF24_set_bit
 584:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1531              		.loc 1 584 0
 1532 000c 00BF     		nop
 1533 000e 80BD     		pop	{r7, pc}
 1534              		.cfi_endproc
 1535              	.LFE36:
 1536              		.size	nRF24_enable_payload_with_no_ack, .-nRF24_enable_payload_with_no_ack
 1537              		.section	.text.nRF24_disable_payload_with_no_ack,"ax",%progbits
 1538              		.align	2
 1539              		.global	nRF24_disable_payload_with_no_ack
 1540              		.thumb
 1541              		.thumb_func
 1542              		.type	nRF24_disable_payload_with_no_ack, %function
 1543              	nRF24_disable_payload_with_no_ack:
 1544              	.LFB37:
 585:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 586:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 587:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Disable Payload with no ACK.
 588:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 589:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_disable_payload_with_no_ack(void)
 590:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1545              		.loc 1 590 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 1, uses_anonymous_args = 0
 1549 0000 80B5     		push	{r7, lr}
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 7, -8
 1552              		.cfi_offset 14, -4
 1553 0002 00AF     		add	r7, sp, #0
 1554              		.cfi_def_cfa_register 7
 591:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_clear_bit(NRF_REG_FEATURE, NRF_FEATURE_BIT_EN_DYN_ACK);
 1555              		.loc 1 591 0
 1556 0004 0021     		movs	r1, #0
 1557 0006 1D20     		movs	r0, #29
 1558 0008 FFF7FEFF 		bl	nRF24_clear_bit
 592:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1559              		.loc 1 592 0
 1560 000c 00BF     		nop
 1561 000e 80BD     		pop	{r7, pc}
 1562              		.cfi_endproc
 1563              	.LFE37:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 39


 1564              		.size	nRF24_disable_payload_with_no_ack, .-nRF24_disable_payload_with_no_ack
 1565              		.section	.text.nRF24_start_listening,"ax",%progbits
 1566              		.align	2
 1567              		.global	nRF24_start_listening
 1568              		.thumb
 1569              		.thumb_func
 1570              		.type	nRF24_start_listening, %function
 1571              	nRF24_start_listening:
 1572              	.LFB38:
 593:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 594:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 595:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief The nRF24 radio will start listening.
 596:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 597:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This function set the pin CE to logic high, this enable the radio for
 598:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * listening.
 599:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 600:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_start_listening(void)
 601:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1573              		.loc 1 601 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 1, uses_anonymous_args = 0
 1577 0000 80B5     		push	{r7, lr}
 1578              		.cfi_def_cfa_offset 8
 1579              		.cfi_offset 7, -8
 1580              		.cfi_offset 14, -4
 1581 0002 00AF     		add	r7, sp, #0
 1582              		.cfi_def_cfa_register 7
 602:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_SET);
 1583              		.loc 1 602 0
 1584 0004 0120     		movs	r0, #1
 1585 0006 FFF7FEFF 		bl	nRF24_ce_write
 603:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1586              		.loc 1 603 0
 1587 000a 00BF     		nop
 1588 000c 80BD     		pop	{r7, pc}
 1589              		.cfi_endproc
 1590              	.LFE38:
 1591              		.size	nRF24_start_listening, .-nRF24_start_listening
 1592 000e 00BF     		.section	.text.nRF24_stop_listening,"ax",%progbits
 1593              		.align	2
 1594              		.global	nRF24_stop_listening
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	nRF24_stop_listening, %function
 1598              	nRF24_stop_listening:
 1599              	.LFB39:
 604:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 605:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 606:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief The nRF24 radio will stop listening.
 607:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 608:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This function the pin CE of the nRF24 radio will be set to logic low,
 609:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * this disable the radio for listening.
 610:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 611:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_stop_listening(void)
 612:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1600              		.loc 1 612 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 40


 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 0
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604 0000 80B5     		push	{r7, lr}
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 00AF     		add	r7, sp, #0
 1609              		.cfi_def_cfa_register 7
 613:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_CLEAR);
 1610              		.loc 1 613 0
 1611 0004 0020     		movs	r0, #0
 1612 0006 FFF7FEFF 		bl	nRF24_ce_write
 614:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1613              		.loc 1 614 0
 1614 000a 00BF     		nop
 1615 000c 80BD     		pop	{r7, pc}
 1616              		.cfi_endproc
 1617              	.LFE39:
 1618              		.size	nRF24_stop_listening, .-nRF24_stop_listening
 1619 000e 00BF     		.section	.text.nRF24_transmit_pulse,"ax",%progbits
 1620              		.align	2
 1621              		.global	nRF24_transmit_pulse
 1622              		.thumb
 1623              		.thumb_func
 1624              		.type	nRF24_transmit_pulse, %function
 1625              	nRF24_transmit_pulse:
 1626              	.LFB40:
 615:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 616:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 617:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Transmit pulse on the CE pin.
 618:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 619:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * With this function the CE pin of the nRF24 radio will have a pulse of 15us,
 620:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * this pulse trigger a transmission of the content of the TX FIFO.
 621:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 622:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_transmit_pulse(void)
 623:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1627              		.loc 1 623 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 1, uses_anonymous_args = 0
 1631 0000 80B5     		push	{r7, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 624:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_SET);
 1637              		.loc 1 624 0
 1638 0004 0120     		movs	r0, #1
 1639 0006 FFF7FEFF 		bl	nRF24_ce_write
 625:Generated_Source\PSoC5/nRF24_FUNCS.c ****     CyDelayUs(NRF_CE_PULSE_WIDTH_US);
 1640              		.loc 1 625 0
 1641 000a 0F20     		movs	r0, #15
 1642 000c FFF7FEFF 		bl	CyDelayUs
 626:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_CLEAR);
 1643              		.loc 1 626 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 41


 1644 0010 0020     		movs	r0, #0
 1645 0012 FFF7FEFF 		bl	nRF24_ce_write
 627:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1646              		.loc 1 627 0
 1647 0016 00BF     		nop
 1648 0018 80BD     		pop	{r7, pc}
 1649              		.cfi_endproc
 1650              	.LFE40:
 1651              		.size	nRF24_transmit_pulse, .-nRF24_transmit_pulse
 1652 001a 00BF     		.section	.text.nRF24_get_status,"ax",%progbits
 1653              		.align	2
 1654              		.global	nRF24_get_status
 1655              		.thumb
 1656              		.thumb_func
 1657              		.type	nRF24_get_status, %function
 1658              	nRF24_get_status:
 1659              	.LFB41:
 628:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 629:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 630:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the STATUS register of the nRF24.
 631:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 632:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t: STATUS register of the nRF24.
 633:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 634:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_status(void)
 635:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1660              		.loc 1 635 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 0
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664 0000 80B5     		push	{r7, lr}
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 00AF     		add	r7, sp, #0
 1669              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_nop_cmd();
 1670              		.loc 1 636 0
 1671 0004 FFF7FEFF 		bl	nRF24_nop_cmd
 1672 0008 0346     		mov	r3, r0
 637:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1673              		.loc 1 637 0
 1674 000a 1846     		mov	r0, r3
 1675 000c 80BD     		pop	{r7, pc}
 1676              		.cfi_endproc
 1677              	.LFE41:
 1678              		.size	nRF24_get_status, .-nRF24_get_status
 1679 000e 00BF     		.section	.text.nRF24_get_fifo_status,"ax",%progbits
 1680              		.align	2
 1681              		.global	nRF24_get_fifo_status
 1682              		.thumb
 1683              		.thumb_func
 1684              		.type	nRF24_get_fifo_status, %function
 1685              	nRF24_get_fifo_status:
 1686              	.LFB42:
 638:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 639:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 640:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the STATUS register of the nRF24.
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 42


 641:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 642:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t: STATUS register of the nRF24.
 643:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 644:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_fifo_status(void)
 645:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1687              		.loc 1 645 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691 0000 80B5     		push	{r7, lr}
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 7, -8
 1694              		.cfi_offset 14, -4
 1695 0002 00AF     		add	r7, sp, #0
 1696              		.cfi_def_cfa_register 7
 646:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_register(NRF_REG_FIFO_STATUS);
 1697              		.loc 1 646 0
 1698 0004 1720     		movs	r0, #23
 1699 0006 FFF7FEFF 		bl	nRF24_read_register
 1700 000a 0346     		mov	r3, r0
 647:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1701              		.loc 1 647 0
 1702 000c 1846     		mov	r0, r3
 1703 000e 80BD     		pop	{r7, pc}
 1704              		.cfi_endproc
 1705              	.LFE42:
 1706              		.size	nRF24_get_fifo_status, .-nRF24_get_fifo_status
 1707              		.section	.text.nRF24_get_retransmissions_count,"ax",%progbits
 1708              		.align	2
 1709              		.global	nRF24_get_retransmissions_count
 1710              		.thumb
 1711              		.thumb_func
 1712              		.type	nRF24_get_retransmissions_count, %function
 1713              	nRF24_get_retransmissions_count:
 1714              	.LFB43:
 648:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 649:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 650:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the number of retransmissions.
 651:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 652:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t: Retransmissions count.
 653:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 654:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_retransmissions_count(void)
 655:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1715              		.loc 1 655 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 8
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719 0000 80B5     		push	{r7, lr}
 1720              		.cfi_def_cfa_offset 8
 1721              		.cfi_offset 7, -8
 1722              		.cfi_offset 14, -4
 1723 0002 82B0     		sub	sp, sp, #8
 1724              		.cfi_def_cfa_offset 16
 1725 0004 00AF     		add	r7, sp, #0
 1726              		.cfi_def_cfa_register 7
 656:Generated_Source\PSoC5/nRF24_FUNCS.c ****     uint8_t count = nRF24_read_register(NRF_REG_OBSERVE_TX);
 1727              		.loc 1 656 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 43


 1728 0006 0820     		movs	r0, #8
 1729 0008 FFF7FEFF 		bl	nRF24_read_register
 1730 000c 0346     		mov	r3, r0
 1731 000e FB71     		strb	r3, [r7, #7]
 657:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return count & NRF_OBSERVE_TX_ARC_CNT_MASK;
 1732              		.loc 1 657 0
 1733 0010 FB79     		ldrb	r3, [r7, #7]
 1734 0012 03F00F03 		and	r3, r3, #15
 1735 0016 DBB2     		uxtb	r3, r3
 658:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1736              		.loc 1 658 0
 1737 0018 1846     		mov	r0, r3
 1738 001a 0837     		adds	r7, r7, #8
 1739              		.cfi_def_cfa_offset 8
 1740 001c BD46     		mov	sp, r7
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed
 1743 001e 80BD     		pop	{r7, pc}
 1744              		.cfi_endproc
 1745              	.LFE43:
 1746              		.size	nRF24_get_retransmissions_count, .-nRF24_get_retransmissions_count
 1747              		.section	.text.nRF24_get_lost_packets_count,"ax",%progbits
 1748              		.align	2
 1749              		.global	nRF24_get_lost_packets_count
 1750              		.thumb
 1751              		.thumb_func
 1752              		.type	nRF24_get_lost_packets_count, %function
 1753              	nRF24_get_lost_packets_count:
 1754              	.LFB44:
 659:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 660:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 661:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Get the number of lost packets.
 662:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 663:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t: Lost packets.
 664:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 665:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_lost_packets_count(void)
 666:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1755              		.loc 1 666 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 8
 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759 0000 80B5     		push	{r7, lr}
 1760              		.cfi_def_cfa_offset 8
 1761              		.cfi_offset 7, -8
 1762              		.cfi_offset 14, -4
 1763 0002 82B0     		sub	sp, sp, #8
 1764              		.cfi_def_cfa_offset 16
 1765 0004 00AF     		add	r7, sp, #0
 1766              		.cfi_def_cfa_register 7
 667:Generated_Source\PSoC5/nRF24_FUNCS.c ****     uint8_t lostPackets = nRF24_read_register(NRF_REG_OBSERVE_TX);
 1767              		.loc 1 667 0
 1768 0006 0820     		movs	r0, #8
 1769 0008 FFF7FEFF 		bl	nRF24_read_register
 1770 000c 0346     		mov	r3, r0
 1771 000e FB71     		strb	r3, [r7, #7]
 668:Generated_Source\PSoC5/nRF24_FUNCS.c ****     lostPackets = lostPackets & NRF_OBSERVE_TX_PLOS_CNT_MASK;
 1772              		.loc 1 668 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 44


 1773 0010 FB79     		ldrb	r3, [r7, #7]
 1774 0012 23F00F03 		bic	r3, r3, #15
 1775 0016 FB71     		strb	r3, [r7, #7]
 669:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return lostPackets >> NRF_OBSERVE_TX_BIT_PLOS_CNT;
 1776              		.loc 1 669 0
 1777 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1778 001a 1B09     		lsrs	r3, r3, #4
 1779 001c DBB2     		uxtb	r3, r3
 670:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1780              		.loc 1 670 0
 1781 001e 1846     		mov	r0, r3
 1782 0020 0837     		adds	r7, r7, #8
 1783              		.cfi_def_cfa_offset 8
 1784 0022 BD46     		mov	sp, r7
 1785              		.cfi_def_cfa_register 13
 1786              		@ sp needed
 1787 0024 80BD     		pop	{r7, pc}
 1788              		.cfi_endproc
 1789              	.LFE44:
 1790              		.size	nRF24_get_lost_packets_count, .-nRF24_get_lost_packets_count
 1791 0026 00BF     		.section	.text.nRF24_put_in_tx_fifo,"ax",%progbits
 1792              		.align	2
 1793              		.global	nRF24_put_in_tx_fifo
 1794              		.thumb
 1795              		.thumb_func
 1796              		.type	nRF24_put_in_tx_fifo, %function
 1797              	nRF24_put_in_tx_fifo:
 1798              	.LFB45:
 671:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 672:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 673:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Put data into the TX FIFO wihout sending it.
 674:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 675:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* data:
 676:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const size_t size:
 677:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 678:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_put_in_tx_fifo(const uint8_t* data, size_t size)
 679:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1799              		.loc 1 679 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 8
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 82B0     		sub	sp, sp, #8
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 7860     		str	r0, [r7, #4]
 1812 0008 3960     		str	r1, [r7]
 680:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == data) {
 1813              		.loc 1 680 0
 1814 000a 7B68     		ldr	r3, [r7, #4]
 1815 000c 002B     		cmp	r3, #0
 1816 000e 09D0     		beq	.L101
 681:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 45


 682:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 683:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 684:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_PAYLOAD_SIZE_MAX < size) {
 1817              		.loc 1 684 0
 1818 0010 3B68     		ldr	r3, [r7]
 1819 0012 202B     		cmp	r3, #32
 1820 0014 01D9     		bls	.L100
 685:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = NRF_PAYLOAD_SIZE_MAX;
 1821              		.loc 1 685 0
 1822 0016 2023     		movs	r3, #32
 1823 0018 3B60     		str	r3, [r7]
 1824              	.L100:
 686:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 687:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 688:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_tx_payload_cmd(data, size);
 1825              		.loc 1 688 0
 1826 001a 3968     		ldr	r1, [r7]
 1827 001c 7868     		ldr	r0, [r7, #4]
 1828 001e FFF7FEFF 		bl	nRF24_write_tx_payload_cmd
 1829 0022 00E0     		b	.L97
 1830              	.L101:
 681:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 1831              		.loc 1 681 0
 1832 0024 00BF     		nop
 1833              	.L97:
 689:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1834              		.loc 1 689 0
 1835 0026 0837     		adds	r7, r7, #8
 1836              		.cfi_def_cfa_offset 8
 1837 0028 BD46     		mov	sp, r7
 1838              		.cfi_def_cfa_register 13
 1839              		@ sp needed
 1840 002a 80BD     		pop	{r7, pc}
 1841              		.cfi_endproc
 1842              	.LFE45:
 1843              		.size	nRF24_put_in_tx_fifo, .-nRF24_put_in_tx_fifo
 1844              		.section	.text.nRF24_transmit,"ax",%progbits
 1845              		.align	2
 1846              		.global	nRF24_transmit
 1847              		.thumb
 1848              		.thumb_func
 1849              		.type	nRF24_transmit, %function
 1850              	nRF24_transmit:
 1851              	.LFB46:
 690:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 691:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 692:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Put data in TX FIFO and transmit it.
 693:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 694:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* data:
 695:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const size_t size:
 696:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 697:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_transmit(const uint8_t* data, size_t size)
 698:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1852              		.loc 1 698 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 8
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 46


 1856 0000 80B5     		push	{r7, lr}
 1857              		.cfi_def_cfa_offset 8
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0002 82B0     		sub	sp, sp, #8
 1861              		.cfi_def_cfa_offset 16
 1862 0004 00AF     		add	r7, sp, #0
 1863              		.cfi_def_cfa_register 7
 1864 0006 7860     		str	r0, [r7, #4]
 1865 0008 3960     		str	r1, [r7]
 699:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == data) {
 1866              		.loc 1 699 0
 1867 000a 7B68     		ldr	r3, [r7, #4]
 1868 000c 002B     		cmp	r3, #0
 1869 000e 0BD0     		beq	.L106
 700:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 701:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 702:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 703:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_PAYLOAD_SIZE_MAX < size) {
 1870              		.loc 1 703 0
 1871 0010 3B68     		ldr	r3, [r7]
 1872 0012 202B     		cmp	r3, #32
 1873 0014 01D9     		bls	.L105
 704:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = NRF_PAYLOAD_SIZE_MAX;
 1874              		.loc 1 704 0
 1875 0016 2023     		movs	r3, #32
 1876 0018 3B60     		str	r3, [r7]
 1877              	.L105:
 705:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 706:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 707:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_put_in_tx_fifo(data, size);
 1878              		.loc 1 707 0
 1879 001a 3968     		ldr	r1, [r7]
 1880 001c 7868     		ldr	r0, [r7, #4]
 1881 001e FFF7FEFF 		bl	nRF24_put_in_tx_fifo
 708:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_transmit_pulse();
 1882              		.loc 1 708 0
 1883 0022 FFF7FEFF 		bl	nRF24_transmit_pulse
 1884 0026 00E0     		b	.L102
 1885              	.L106:
 700:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 1886              		.loc 1 700 0
 1887 0028 00BF     		nop
 1888              	.L102:
 709:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1889              		.loc 1 709 0
 1890 002a 0837     		adds	r7, r7, #8
 1891              		.cfi_def_cfa_offset 8
 1892 002c BD46     		mov	sp, r7
 1893              		.cfi_def_cfa_register 13
 1894              		@ sp needed
 1895 002e 80BD     		pop	{r7, pc}
 1896              		.cfi_endproc
 1897              	.LFE46:
 1898              		.size	nRF24_transmit, .-nRF24_transmit
 1899              		.section	.text.nRF24_is_data_ready,"ax",%progbits
 1900              		.align	2
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 47


 1901              		.global	nRF24_is_data_ready
 1902              		.thumb
 1903              		.thumb_func
 1904              		.type	nRF24_is_data_ready, %function
 1905              	nRF24_is_data_ready:
 1906              	.LFB47:
 710:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 711:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 712:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief
 713:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 714:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return bool: True if there's data ready.
 715:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 716:Generated_Source\PSoC5/nRF24_FUNCS.c **** bool nRF24_is_data_ready(void)
 717:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1907              		.loc 1 717 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 0
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 7, -8
 1914              		.cfi_offset 14, -4
 1915 0002 00AF     		add	r7, sp, #0
 1916              		.cfi_def_cfa_register 7
 718:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return NRF_STATUS_RX_DR_MASK & nRF24_get_status();
 1917              		.loc 1 718 0
 1918 0004 FFF7FEFF 		bl	nRF24_get_status
 1919 0008 0346     		mov	r3, r0
 1920 000a 03F04003 		and	r3, r3, #64
 1921 000e 002B     		cmp	r3, #0
 1922 0010 14BF     		ite	ne
 1923 0012 0123     		movne	r3, #1
 1924 0014 0023     		moveq	r3, #0
 1925 0016 DBB2     		uxtb	r3, r3
 719:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1926              		.loc 1 719 0
 1927 0018 1846     		mov	r0, r3
 1928 001a 80BD     		pop	{r7, pc}
 1929              		.cfi_endproc
 1930              	.LFE47:
 1931              		.size	nRF24_is_data_ready, .-nRF24_is_data_ready
 1932              		.section	.text.nRF24_get_rx_payload,"ax",%progbits
 1933              		.align	2
 1934              		.global	nRF24_get_rx_payload
 1935              		.thumb
 1936              		.thumb_func
 1937              		.type	nRF24_get_rx_payload, %function
 1938              	nRF24_get_rx_payload:
 1939              	.LFB48:
 720:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 721:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 722:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief
 723:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 724:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param uint8_t* data:
 725:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const size_t size:
 726:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 727:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_get_rx_payload(uint8_t *data, const size_t size)
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 48


 728:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1940              		.loc 1 728 0
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 8
 1943              		@ frame_needed = 1, uses_anonymous_args = 0
 1944 0000 80B5     		push	{r7, lr}
 1945              		.cfi_def_cfa_offset 8
 1946              		.cfi_offset 7, -8
 1947              		.cfi_offset 14, -4
 1948 0002 82B0     		sub	sp, sp, #8
 1949              		.cfi_def_cfa_offset 16
 1950 0004 00AF     		add	r7, sp, #0
 1951              		.cfi_def_cfa_register 7
 1952 0006 7860     		str	r0, [r7, #4]
 1953 0008 3960     		str	r1, [r7]
 729:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == data) {
 1954              		.loc 1 729 0
 1955 000a 7B68     		ldr	r3, [r7, #4]
 1956 000c 002B     		cmp	r3, #0
 1957 000e 0AD0     		beq	.L112
 730:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 731:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 732:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 733:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_CLEAR);
 1958              		.loc 1 733 0
 1959 0010 0020     		movs	r0, #0
 1960 0012 FFF7FEFF 		bl	nRF24_ce_write
 734:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_read_rx_payload_cmd(data, size);
 1961              		.loc 1 734 0
 1962 0016 3968     		ldr	r1, [r7]
 1963 0018 7868     		ldr	r0, [r7, #4]
 1964 001a FFF7FEFF 		bl	nRF24_read_rx_payload_cmd
 735:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_ce_write(GPIO_SET);
 1965              		.loc 1 735 0
 1966 001e 0120     		movs	r0, #1
 1967 0020 FFF7FEFF 		bl	nRF24_ce_write
 1968 0024 00E0     		b	.L109
 1969              	.L112:
 730:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 1970              		.loc 1 730 0
 1971 0026 00BF     		nop
 1972              	.L109:
 736:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 1973              		.loc 1 736 0
 1974 0028 0837     		adds	r7, r7, #8
 1975              		.cfi_def_cfa_offset 8
 1976 002a BD46     		mov	sp, r7
 1977              		.cfi_def_cfa_register 13
 1978              		@ sp needed
 1979 002c 80BD     		pop	{r7, pc}
 1980              		.cfi_endproc
 1981              	.LFE48:
 1982              		.size	nRF24_get_rx_payload, .-nRF24_get_rx_payload
 1983 002e 00BF     		.section	.text.nRF24_tx_transmit_no_ack,"ax",%progbits
 1984              		.align	2
 1985              		.global	nRF24_tx_transmit_no_ack
 1986              		.thumb
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 49


 1987              		.thumb_func
 1988              		.type	nRF24_tx_transmit_no_ack, %function
 1989              	nRF24_tx_transmit_no_ack:
 1990              	.LFB49:
 737:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 738:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 739:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief
 740:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 741:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* data:
 742:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param size_t size:
 743:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 744:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_tx_transmit_no_ack(const uint8_t *data, size_t size)
 745:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 1991              		.loc 1 745 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 8
 1994              		@ frame_needed = 1, uses_anonymous_args = 0
 1995 0000 80B5     		push	{r7, lr}
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 7, -8
 1998              		.cfi_offset 14, -4
 1999 0002 82B0     		sub	sp, sp, #8
 2000              		.cfi_def_cfa_offset 16
 2001 0004 00AF     		add	r7, sp, #0
 2002              		.cfi_def_cfa_register 7
 2003 0006 7860     		str	r0, [r7, #4]
 2004 0008 3960     		str	r1, [r7]
 746:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == data) {
 2005              		.loc 1 746 0
 2006 000a 7B68     		ldr	r3, [r7, #4]
 2007 000c 002B     		cmp	r3, #0
 2008 000e 09D0     		beq	.L117
 747:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 748:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 749:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 750:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_PAYLOAD_SIZE_MAX < size) {
 2009              		.loc 1 750 0
 2010 0010 3B68     		ldr	r3, [r7]
 2011 0012 202B     		cmp	r3, #32
 2012 0014 08D8     		bhi	.L118
 751:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 752:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 753:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 754:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_no_ack_payload_cmd(data, size);
 2013              		.loc 1 754 0
 2014 0016 3968     		ldr	r1, [r7]
 2015 0018 7868     		ldr	r0, [r7, #4]
 2016 001a FFF7FEFF 		bl	nRF24_no_ack_payload_cmd
 755:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_transmit_pulse();
 2017              		.loc 1 755 0
 2018 001e FFF7FEFF 		bl	nRF24_transmit_pulse
 2019 0022 02E0     		b	.L113
 2020              	.L117:
 747:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 2021              		.loc 1 747 0
 2022 0024 00BF     		nop
 2023 0026 00E0     		b	.L113
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 50


 2024              	.L118:
 751:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
 2025              		.loc 1 751 0
 2026 0028 00BF     		nop
 2027              	.L113:
 756:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2028              		.loc 1 756 0
 2029 002a 0837     		adds	r7, r7, #8
 2030              		.cfi_def_cfa_offset 8
 2031 002c BD46     		mov	sp, r7
 2032              		.cfi_def_cfa_register 13
 2033              		@ sp needed
 2034 002e 80BD     		pop	{r7, pc}
 2035              		.cfi_endproc
 2036              	.LFE49:
 2037              		.size	nRF24_tx_transmit_no_ack, .-nRF24_tx_transmit_no_ack
 2038              		.section	.text.nRF24_rx_write_payload,"ax",%progbits
 2039              		.align	2
 2040              		.global	nRF24_rx_write_payload
 2041              		.thumb
 2042              		.thumb_func
 2043              		.type	nRF24_rx_write_payload, %function
 2044              	nRF24_rx_write_payload:
 2045              	.LFB50:
 757:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 758:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 759:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief
 760:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 761:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const nrf_pipe pipe:
 762:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param const uint8_t* data:
 763:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param size_t size:
 764:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 765:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_rx_write_payload(const nrf_pipe pipe,
 766:Generated_Source\PSoC5/nRF24_FUNCS.c ****                                         const uint8_t *data, size_t size)
 767:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2046              		.loc 1 767 0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 16
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050 0000 80B5     		push	{r7, lr}
 2051              		.cfi_def_cfa_offset 8
 2052              		.cfi_offset 7, -8
 2053              		.cfi_offset 14, -4
 2054 0002 84B0     		sub	sp, sp, #16
 2055              		.cfi_def_cfa_offset 24
 2056 0004 00AF     		add	r7, sp, #0
 2057              		.cfi_def_cfa_register 7
 2058 0006 0346     		mov	r3, r0
 2059 0008 B960     		str	r1, [r7, #8]
 2060 000a 7A60     		str	r2, [r7, #4]
 2061 000c FB73     		strb	r3, [r7, #15]
 768:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NULL == data) {
 2062              		.loc 1 768 0
 2063 000e BB68     		ldr	r3, [r7, #8]
 2064 0010 002B     		cmp	r3, #0
 2065 0012 0BD0     		beq	.L123
 769:Generated_Source\PSoC5/nRF24_FUNCS.c ****         return;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 51


 770:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 771:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 772:Generated_Source\PSoC5/nRF24_FUNCS.c ****     if (NRF_PAYLOAD_SIZE_MAX < size) {
 2066              		.loc 1 772 0
 2067 0014 7B68     		ldr	r3, [r7, #4]
 2068 0016 202B     		cmp	r3, #32
 2069 0018 01D9     		bls	.L122
 773:Generated_Source\PSoC5/nRF24_FUNCS.c ****         size = NRF_PAYLOAD_SIZE_MAX;
 2070              		.loc 1 773 0
 2071 001a 2023     		movs	r3, #32
 2072 001c 7B60     		str	r3, [r7, #4]
 2073              	.L122:
 774:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 775:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 776:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_ack_payload_cmd(pipe, data, size);
 2074              		.loc 1 776 0
 2075 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2076 0020 7A68     		ldr	r2, [r7, #4]
 2077 0022 B968     		ldr	r1, [r7, #8]
 2078 0024 1846     		mov	r0, r3
 2079 0026 FFF7FEFF 		bl	nRF24_write_ack_payload_cmd
 2080 002a 00E0     		b	.L119
 2081              	.L123:
 769:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 2082              		.loc 1 769 0
 2083 002c 00BF     		nop
 2084              	.L119:
 777:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2085              		.loc 1 777 0
 2086 002e 1037     		adds	r7, r7, #16
 2087              		.cfi_def_cfa_offset 8
 2088 0030 BD46     		mov	sp, r7
 2089              		.cfi_def_cfa_register 13
 2090              		@ sp needed
 2091 0032 80BD     		pop	{r7, pc}
 2092              		.cfi_endproc
 2093              	.LFE50:
 2094              		.size	nRF24_rx_write_payload, .-nRF24_rx_write_payload
 2095              		.section	.text.nRF24_get_data_pipe_with_payload,"ax",%progbits
 2096              		.align	2
 2097              		.global	nRF24_get_data_pipe_with_payload
 2098              		.thumb
 2099              		.thumb_func
 2100              		.type	nRF24_get_data_pipe_with_payload, %function
 2101              	nRF24_get_data_pipe_with_payload:
 2102              	.LFB51:
 778:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 779:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 780:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Return the pipe number with data.
 781:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 782:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t:
 783:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 784:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_data_pipe_with_payload(void)
 785:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2103              		.loc 1 785 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 52


 2106              		@ frame_needed = 1, uses_anonymous_args = 0
 2107 0000 80B5     		push	{r7, lr}
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 7, -8
 2110              		.cfi_offset 14, -4
 2111 0002 82B0     		sub	sp, sp, #8
 2112              		.cfi_def_cfa_offset 16
 2113 0004 00AF     		add	r7, sp, #0
 2114              		.cfi_def_cfa_register 7
 786:Generated_Source\PSoC5/nRF24_FUNCS.c ****     uint8_t pipe = nRF24_read_register(NRF_REG_STATUS);
 2115              		.loc 1 786 0
 2116 0006 0720     		movs	r0, #7
 2117 0008 FFF7FEFF 		bl	nRF24_read_register
 2118 000c 0346     		mov	r3, r0
 2119 000e FB71     		strb	r3, [r7, #7]
 787:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return (pipe & NRF_STATUS_PIPES_MASK) >> NRF_STATUS_PIPES_SHIFT;
 2120              		.loc 1 787 0
 2121 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2122 0012 5B10     		asrs	r3, r3, #1
 2123 0014 DBB2     		uxtb	r3, r3
 2124 0016 03F00703 		and	r3, r3, #7
 2125 001a DBB2     		uxtb	r3, r3
 788:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2126              		.loc 1 788 0
 2127 001c 1846     		mov	r0, r3
 2128 001e 0837     		adds	r7, r7, #8
 2129              		.cfi_def_cfa_offset 8
 2130 0020 BD46     		mov	sp, r7
 2131              		.cfi_def_cfa_register 13
 2132              		@ sp needed
 2133 0022 80BD     		pop	{r7, pc}
 2134              		.cfi_endproc
 2135              	.LFE51:
 2136              		.size	nRF24_get_data_pipe_with_payload, .-nRF24_get_data_pipe_with_payload
 2137              		.section	.text.nRF24_received_power_detector,"ax",%progbits
 2138              		.align	2
 2139              		.global	nRF24_received_power_detector
 2140              		.thumb
 2141              		.thumb_func
 2142              		.type	nRF24_received_power_detector, %function
 2143              	nRF24_received_power_detector:
 2144              	.LFB52:
 789:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 790:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 791:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief
 792:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 793:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return uint8_t:
 794:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 795:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_received_power_detector(void)
 796:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2145              		.loc 1 796 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 0
 2148              		@ frame_needed = 1, uses_anonymous_args = 0
 2149 0000 80B5     		push	{r7, lr}
 2150              		.cfi_def_cfa_offset 8
 2151              		.cfi_offset 7, -8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 53


 2152              		.cfi_offset 14, -4
 2153 0002 00AF     		add	r7, sp, #0
 2154              		.cfi_def_cfa_register 7
 797:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_bit(NRF_REG_RPD, NRF_RPD_BIT_RPD);
 2155              		.loc 1 797 0
 2156 0004 0021     		movs	r1, #0
 2157 0006 0920     		movs	r0, #9
 2158 0008 FFF7FEFF 		bl	nRF24_read_bit
 2159 000c 0346     		mov	r3, r0
 798:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2160              		.loc 1 798 0
 2161 000e 1846     		mov	r0, r3
 2162 0010 80BD     		pop	{r7, pc}
 2163              		.cfi_endproc
 2164              	.LFE52:
 2165              		.size	nRF24_received_power_detector, .-nRF24_received_power_detector
 2166 0012 00BF     		.section	.text.nRF24_is_tx_fifo_full,"ax",%progbits
 2167              		.align	2
 2168              		.global	nRF24_is_tx_fifo_full
 2169              		.thumb
 2170              		.thumb_func
 2171              		.type	nRF24_is_tx_fifo_full, %function
 2172              	nRF24_is_tx_fifo_full:
 2173              	.LFB53:
 799:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 800:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 801:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return bool: true if the TX FIFO is full, false if it have available
 802:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * locations.
 803:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 804:Generated_Source\PSoC5/nRF24_FUNCS.c **** bool nRF24_is_tx_fifo_full(void)
 805:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2174              		.loc 1 805 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 1, uses_anonymous_args = 0
 2178 0000 80B5     		push	{r7, lr}
 2179              		.cfi_def_cfa_offset 8
 2180              		.cfi_offset 7, -8
 2181              		.cfi_offset 14, -4
 2182 0002 00AF     		add	r7, sp, #0
 2183              		.cfi_def_cfa_register 7
 806:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_bit(NRF_REG_FIFO_STATUS, NRF_FIFO_STATUS_BIT_TX_FULL);
 2184              		.loc 1 806 0
 2185 0004 0521     		movs	r1, #5
 2186 0006 1720     		movs	r0, #23
 2187 0008 FFF7FEFF 		bl	nRF24_read_bit
 2188 000c 0346     		mov	r3, r0
 807:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2189              		.loc 1 807 0
 2190 000e 1846     		mov	r0, r3
 2191 0010 80BD     		pop	{r7, pc}
 2192              		.cfi_endproc
 2193              	.LFE53:
 2194              		.size	nRF24_is_tx_fifo_full, .-nRF24_is_tx_fifo_full
 2195 0012 00BF     		.section	.text.nRF24_is_rx_fifo_empty,"ax",%progbits
 2196              		.align	2
 2197              		.global	nRF24_is_rx_fifo_empty
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 54


 2198              		.thumb
 2199              		.thumb_func
 2200              		.type	nRF24_is_rx_fifo_empty, %function
 2201              	nRF24_is_rx_fifo_empty:
 2202              	.LFB54:
 808:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 809:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 810:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return bool: true if the RX FIFO es empty, false if any pipe have data.
 811:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 812:Generated_Source\PSoC5/nRF24_FUNCS.c **** bool nRF24_is_rx_fifo_empty(void)
 813:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2203              		.loc 1 813 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 0
 2206              		@ frame_needed = 1, uses_anonymous_args = 0
 2207 0000 80B5     		push	{r7, lr}
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_offset 7, -8
 2210              		.cfi_offset 14, -4
 2211 0002 00AF     		add	r7, sp, #0
 2212              		.cfi_def_cfa_register 7
 814:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_bit(NRF_REG_FIFO_STATUS, NRF_FIFO_STATUS_BIT_RX_EMPTY);
 2213              		.loc 1 814 0
 2214 0004 0021     		movs	r1, #0
 2215 0006 1720     		movs	r0, #23
 2216 0008 FFF7FEFF 		bl	nRF24_read_bit
 2217 000c 0346     		mov	r3, r0
 815:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2218              		.loc 1 815 0
 2219 000e 1846     		mov	r0, r3
 2220 0010 80BD     		pop	{r7, pc}
 2221              		.cfi_endproc
 2222              	.LFE54:
 2223              		.size	nRF24_is_rx_fifo_empty, .-nRF24_is_rx_fifo_empty
 2224 0012 00BF     		.section	.text.nRF24_test_carrier,"ax",%progbits
 2225              		.align	2
 2226              		.global	nRF24_test_carrier
 2227              		.thumb
 2228              		.thumb_func
 2229              		.type	nRF24_test_carrier, %function
 2230              	nRF24_test_carrier:
 2231              	.LFB55:
 816:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 817:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 818:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Received Power Detector triggers at received power levels above -64dBm that
 819:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * are present in the RF channel you receive on. If the received power is less
 820:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * than -64dBm, RDP = 0.
 821:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * The RPD can be read out at any time while nRF24L01+ is in receive mode.
 822:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 823:Generated_Source\PSoC5/nRF24_FUNCS.c **** bool nRF24_test_carrier(void)
 824:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2232              		.loc 1 824 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 1, uses_anonymous_args = 0
 2236 0000 80B5     		push	{r7, lr}
 2237              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 55


 2238              		.cfi_offset 7, -8
 2239              		.cfi_offset 14, -4
 2240 0002 00AF     		add	r7, sp, #0
 2241              		.cfi_def_cfa_register 7
 825:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return nRF24_read_bit(NRF_REG_RPD, NRF_RPD_BIT_RPD);
 2242              		.loc 1 825 0
 2243 0004 0021     		movs	r1, #0
 2244 0006 0920     		movs	r0, #9
 2245 0008 FFF7FEFF 		bl	nRF24_read_bit
 2246 000c 0346     		mov	r3, r0
 826:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2247              		.loc 1 826 0
 2248 000e 1846     		mov	r0, r3
 2249 0010 80BD     		pop	{r7, pc}
 2250              		.cfi_endproc
 2251              	.LFE55:
 2252              		.size	nRF24_test_carrier, .-nRF24_test_carrier
 2253 0012 00BF     		.section	.text.nRF24_clear_all_irqs,"ax",%progbits
 2254              		.align	2
 2255              		.global	nRF24_clear_all_irqs
 2256              		.thumb
 2257              		.thumb_func
 2258              		.type	nRF24_clear_all_irqs, %function
 2259              	nRF24_clear_all_irqs:
 2260              	.LFB56:
 827:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 828:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 829:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This function will write 1 to all the three IRQ "flag" bits on the
 830:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * STATUS register.
 831:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 832:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_clear_all_irqs(void)
 833:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2261              		.loc 1 833 0
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 0
 2264              		@ frame_needed = 1, uses_anonymous_args = 0
 2265 0000 80B5     		push	{r7, lr}
 2266              		.cfi_def_cfa_offset 8
 2267              		.cfi_offset 7, -8
 2268              		.cfi_offset 14, -4
 2269 0002 00AF     		add	r7, sp, #0
 2270              		.cfi_def_cfa_register 7
 834:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_STATUS, NRF_ALL_IRQ_MASK);
 2271              		.loc 1 834 0
 2272 0004 7021     		movs	r1, #112
 2273 0006 0720     		movs	r0, #7
 2274 0008 FFF7FEFF 		bl	nRF24_write_register
 835:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2275              		.loc 1 835 0
 2276 000c 00BF     		nop
 2277 000e 80BD     		pop	{r7, pc}
 2278              		.cfi_endproc
 2279              	.LFE56:
 2280              		.size	nRF24_clear_all_irqs, .-nRF24_clear_all_irqs
 2281              		.section	.text.nRF24_clear_irq_flag,"ax",%progbits
 2282              		.align	2
 2283              		.global	nRF24_clear_irq_flag
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 56


 2284              		.thumb
 2285              		.thumb_func
 2286              		.type	nRF24_clear_irq_flag, %function
 2287              	nRF24_clear_irq_flag:
 2288              	.LFB57:
 836:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 837:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 838:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @brief Clears the specific IRQ flag.
 839:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 840:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * Clear the flag by writing 1 to the interrupt flag bit.
 841:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 842:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @param nrf_irq irq_flag: Interrupt flag to clear.
 843:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 844:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_clear_irq_flag(const nrf_irq irq_flag)
 845:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2289              		.loc 1 845 0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 8
 2292              		@ frame_needed = 1, uses_anonymous_args = 0
 2293 0000 80B5     		push	{r7, lr}
 2294              		.cfi_def_cfa_offset 8
 2295              		.cfi_offset 7, -8
 2296              		.cfi_offset 14, -4
 2297 0002 82B0     		sub	sp, sp, #8
 2298              		.cfi_def_cfa_offset 16
 2299 0004 00AF     		add	r7, sp, #0
 2300              		.cfi_def_cfa_register 7
 2301 0006 0346     		mov	r3, r0
 2302 0008 FB71     		strb	r3, [r7, #7]
 846:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_STATUS, (1 << irq_flag));
 2303              		.loc 1 846 0
 2304 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2305 000c 0122     		movs	r2, #1
 2306 000e 02FA03F3 		lsl	r3, r2, r3
 2307 0012 DBB2     		uxtb	r3, r3
 2308 0014 1946     		mov	r1, r3
 2309 0016 0720     		movs	r0, #7
 2310 0018 FFF7FEFF 		bl	nRF24_write_register
 847:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2311              		.loc 1 847 0
 2312 001c 00BF     		nop
 2313 001e 0837     		adds	r7, r7, #8
 2314              		.cfi_def_cfa_offset 8
 2315 0020 BD46     		mov	sp, r7
 2316              		.cfi_def_cfa_register 13
 2317              		@ sp needed
 2318 0022 80BD     		pop	{r7, pc}
 2319              		.cfi_endproc
 2320              	.LFE57:
 2321              		.size	nRF24_clear_irq_flag, .-nRF24_clear_irq_flag
 2322              		.section	.text.nRF24_get_irq_flag,"ax",%progbits
 2323              		.align	2
 2324              		.global	nRF24_get_irq_flag
 2325              		.thumb
 2326              		.thumb_func
 2327              		.type	nRF24_get_irq_flag, %function
 2328              	nRF24_get_irq_flag:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 57


 2329              	.LFB58:
 848:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 849:Generated_Source\PSoC5/nRF24_FUNCS.c **** /**
 850:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * This method is used to get if any of the IRQ "flag" bits on the STATUS
 851:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * register is set to 1. This function returns 0 is none of the flag bits
 852:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * is not set to 1.
 853:Generated_Source\PSoC5/nRF24_FUNCS.c ****  *
 854:Generated_Source\PSoC5/nRF24_FUNCS.c ****  * @return nrf_irq: Asserted bit of the interrupt flags.
 855:Generated_Source\PSoC5/nRF24_FUNCS.c ****  */
 856:Generated_Source\PSoC5/nRF24_FUNCS.c **** nrf_irq nRF24_get_irq_flag(void)
 857:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2330              		.loc 1 857 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 8
 2333              		@ frame_needed = 1, uses_anonymous_args = 0
 2334 0000 80B5     		push	{r7, lr}
 2335              		.cfi_def_cfa_offset 8
 2336              		.cfi_offset 7, -8
 2337              		.cfi_offset 14, -4
 2338 0002 82B0     		sub	sp, sp, #8
 2339              		.cfi_def_cfa_offset 16
 2340 0004 00AF     		add	r7, sp, #0
 2341              		.cfi_def_cfa_register 7
 858:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nrf_irq irq = NRF_NONE_IRQ;
 2342              		.loc 1 858 0
 2343 0006 0023     		movs	r3, #0
 2344 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 860:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // Get the STATUS register
 861:Generated_Source\PSoC5/nRF24_FUNCS.c ****     uint8_t sts = nRF24_nop_cmd();
 2345              		.loc 1 861 0
 2346 000a FFF7FEFF 		bl	nRF24_nop_cmd
 2347 000e 0346     		mov	r3, r0
 2348 0010 BB71     		strb	r3, [r7, #6]
 862:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 863:Generated_Source\PSoC5/nRF24_FUNCS.c ****     // We only care if bits 4, 5 or 6 are set, so we mask the STATUS with 0x0111_0000
 864:Generated_Source\PSoC5/nRF24_FUNCS.c ****     switch (sts & NRF_ALL_IRQ_MASK) {
 2349              		.loc 1 864 0
 2350 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2351 0014 03F07003 		and	r3, r3, #112
 2352 0018 202B     		cmp	r3, #32
 2353 001a 07D0     		beq	.L138
 2354 001c 402B     		cmp	r3, #64
 2355 001e 02D0     		beq	.L139
 2356 0020 102B     		cmp	r3, #16
 2357 0022 06D0     		beq	.L140
 2358 0024 08E0     		b	.L143
 2359              	.L139:
 865:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_STATUS_RX_DR_MASK:
 866:Generated_Source\PSoC5/nRF24_FUNCS.c ****         irq = NRF_RX_DR_IRQ;
 2360              		.loc 1 866 0
 2361 0026 0623     		movs	r3, #6
 2362 0028 FB71     		strb	r3, [r7, #7]
 867:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 2363              		.loc 1 867 0
 2364 002a 08E0     		b	.L141
 2365              	.L138:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 58


 868:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_STATUS_TX_DS_MASK:
 869:Generated_Source\PSoC5/nRF24_FUNCS.c ****         irq = NRF_TX_DS_IRQ;
 2366              		.loc 1 869 0
 2367 002c 0523     		movs	r3, #5
 2368 002e FB71     		strb	r3, [r7, #7]
 870:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 2369              		.loc 1 870 0
 2370 0030 05E0     		b	.L141
 2371              	.L140:
 871:Generated_Source\PSoC5/nRF24_FUNCS.c ****     case NRF_STATUS_MAX_RT_MASK:
 872:Generated_Source\PSoC5/nRF24_FUNCS.c ****         irq = NRF_MAX_RT_IRQ;
 2372              		.loc 1 872 0
 2373 0032 0423     		movs	r3, #4
 2374 0034 FB71     		strb	r3, [r7, #7]
 873:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 2375              		.loc 1 873 0
 2376 0036 02E0     		b	.L141
 2377              	.L143:
 874:Generated_Source\PSoC5/nRF24_FUNCS.c ****     default:
 875:Generated_Source\PSoC5/nRF24_FUNCS.c ****         irq = NRF_ALL_IRQ_MASK;
 2378              		.loc 1 875 0
 2379 0038 7023     		movs	r3, #112
 2380 003a FB71     		strb	r3, [r7, #7]
 876:Generated_Source\PSoC5/nRF24_FUNCS.c ****         break;
 2381              		.loc 1 876 0
 2382 003c 00BF     		nop
 2383              	.L141:
 877:Generated_Source\PSoC5/nRF24_FUNCS.c ****     }
 878:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 879:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return irq;
 2384              		.loc 1 879 0
 2385 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 880:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2386              		.loc 1 880 0
 2387 0040 1846     		mov	r0, r3
 2388 0042 0837     		adds	r7, r7, #8
 2389              		.cfi_def_cfa_offset 8
 2390 0044 BD46     		mov	sp, r7
 2391              		.cfi_def_cfa_register 13
 2392              		@ sp needed
 2393 0046 80BD     		pop	{r7, pc}
 2394              		.cfi_endproc
 2395              	.LFE58:
 2396              		.size	nRF24_get_irq_flag, .-nRF24_get_irq_flag
 2397              		.section	.text.nRF24_poll_interrupt,"ax",%progbits
 2398              		.align	2
 2399              		.global	nRF24_poll_interrupt
 2400              		.thumb
 2401              		.thumb_func
 2402              		.type	nRF24_poll_interrupt, %function
 2403              	nRF24_poll_interrupt:
 2404              	.LFB59:
 881:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 882:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_poll_interrupt(void)
 883:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2405              		.loc 1 883 0
 2406              		.cfi_startproc
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 59


 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 1, uses_anonymous_args = 0
 2409              		@ link register save eliminated.
 2410 0000 80B4     		push	{r7}
 2411              		.cfi_def_cfa_offset 4
 2412              		.cfi_offset 7, -4
 2413 0002 00AF     		add	r7, sp, #0
 2414              		.cfi_def_cfa_register 7
 884:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 885:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2415              		.loc 1 885 0
 2416 0004 00BF     		nop
 2417 0006 BD46     		mov	sp, r7
 2418              		.cfi_def_cfa_register 13
 2419              		@ sp needed
 2420 0008 80BC     		pop	{r7}
 2421              		.cfi_restore 7
 2422              		.cfi_def_cfa_offset 0
 2423 000a 7047     		bx	lr
 2424              		.cfi_endproc
 2425              	.LFE59:
 2426              		.size	nRF24_poll_interrupt, .-nRF24_poll_interrupt
 2427              		.section	.text.nRF24_get_status_clear_irq,"ax",%progbits
 2428              		.align	2
 2429              		.global	nRF24_get_status_clear_irq
 2430              		.thumb
 2431              		.thumb_func
 2432              		.type	nRF24_get_status_clear_irq, %function
 2433              	nRF24_get_status_clear_irq:
 2434              	.LFB60:
 886:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 887:Generated_Source\PSoC5/nRF24_FUNCS.c **** uint8_t nRF24_get_status_clear_irq(void)
 888:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2435              		.loc 1 888 0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 8
 2438              		@ frame_needed = 1, uses_anonymous_args = 0
 2439 0000 80B5     		push	{r7, lr}
 2440              		.cfi_def_cfa_offset 8
 2441              		.cfi_offset 7, -8
 2442              		.cfi_offset 14, -4
 2443 0002 82B0     		sub	sp, sp, #8
 2444              		.cfi_def_cfa_offset 16
 2445 0004 00AF     		add	r7, sp, #0
 2446              		.cfi_def_cfa_register 7
 889:Generated_Source\PSoC5/nRF24_FUNCS.c ****     uint8_t sts = nRF24_nop_cmd();
 2447              		.loc 1 889 0
 2448 0006 FFF7FEFF 		bl	nRF24_nop_cmd
 2449 000a 0346     		mov	r3, r0
 2450 000c FB71     		strb	r3, [r7, #7]
 890:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_write_register(NRF_REG_STATUS, NRF_ALL_IRQ_MASK);
 2451              		.loc 1 890 0
 2452 000e 7021     		movs	r1, #112
 2453 0010 0720     		movs	r0, #7
 2454 0012 FFF7FEFF 		bl	nRF24_write_register
 891:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 892:Generated_Source\PSoC5/nRF24_FUNCS.c ****     return sts;
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 60


 2455              		.loc 1 892 0
 2456 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 893:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2457              		.loc 1 893 0
 2458 0018 1846     		mov	r0, r3
 2459 001a 0837     		adds	r7, r7, #8
 2460              		.cfi_def_cfa_offset 8
 2461 001c BD46     		mov	sp, r7
 2462              		.cfi_def_cfa_register 13
 2463              		@ sp needed
 2464 001e 80BD     		pop	{r7, pc}
 2465              		.cfi_endproc
 2466              	.LFE60:
 2467              		.size	nRF24_get_status_clear_irq, .-nRF24_get_status_clear_irq
 2468              		.section	.text.nRF24_flush_rx,"ax",%progbits
 2469              		.align	2
 2470              		.global	nRF24_flush_rx
 2471              		.thumb
 2472              		.thumb_func
 2473              		.type	nRF24_flush_rx, %function
 2474              	nRF24_flush_rx:
 2475              	.LFB61:
 894:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 895:Generated_Source\PSoC5/nRF24_FUNCS.c **** // command wrappers
 896:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_flush_rx(void)
 897:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
 2476              		.loc 1 897 0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 1, uses_anonymous_args = 0
 2480 0000 80B5     		push	{r7, lr}
 2481              		.cfi_def_cfa_offset 8
 2482              		.cfi_offset 7, -8
 2483              		.cfi_offset 14, -4
 2484 0002 00AF     		add	r7, sp, #0
 2485              		.cfi_def_cfa_register 7
 898:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_flush_rx_cmd();
 2486              		.loc 1 898 0
 2487 0004 FFF7FEFF 		bl	nRF24_flush_rx_cmd
 899:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2488              		.loc 1 899 0
 2489 0008 00BF     		nop
 2490 000a 80BD     		pop	{r7, pc}
 2491              		.cfi_endproc
 2492              	.LFE61:
 2493              		.size	nRF24_flush_rx, .-nRF24_flush_rx
 2494              		.section	.text.nRF24_flush_tx,"ax",%progbits
 2495              		.align	2
 2496              		.global	nRF24_flush_tx
 2497              		.thumb
 2498              		.thumb_func
 2499              		.type	nRF24_flush_tx, %function
 2500              	nRF24_flush_tx:
 2501              	.LFB62:
 900:Generated_Source\PSoC5/nRF24_FUNCS.c **** 
 901:Generated_Source\PSoC5/nRF24_FUNCS.c **** void nRF24_flush_tx(void)
 902:Generated_Source\PSoC5/nRF24_FUNCS.c **** {
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 61


 2502              		.loc 1 902 0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 0
 2505              		@ frame_needed = 1, uses_anonymous_args = 0
 2506 0000 80B5     		push	{r7, lr}
 2507              		.cfi_def_cfa_offset 8
 2508              		.cfi_offset 7, -8
 2509              		.cfi_offset 14, -4
 2510 0002 00AF     		add	r7, sp, #0
 2511              		.cfi_def_cfa_register 7
 903:Generated_Source\PSoC5/nRF24_FUNCS.c ****     nRF24_flush_tx_cmd();
 2512              		.loc 1 903 0
 2513 0004 FFF7FEFF 		bl	nRF24_flush_tx_cmd
 904:Generated_Source\PSoC5/nRF24_FUNCS.c **** }
 2514              		.loc 1 904 0
 2515 0008 00BF     		nop
 2516 000a 80BD     		pop	{r7, pc}
 2517              		.cfi_endproc
 2518              	.LFE62:
 2519              		.size	nRF24_flush_tx, .-nRF24_flush_tx
 2520              		.text
 2521              	.Letext0:
 2522              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2523              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2524              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2525              		.file 5 "Generated_Source\\PSoC5\\nRF24_DEFS.h"
 2526              		.file 6 "Generated_Source\\PSoC5\\nRF24_HAL.h"
 2527              		.section	.debug_info,"",%progbits
 2528              	.Ldebug_info0:
 2529 0000 DD0C0000 		.4byte	0xcdd
 2530 0004 0400     		.2byte	0x4
 2531 0006 00000000 		.4byte	.Ldebug_abbrev0
 2532 000a 04       		.byte	0x4
 2533 000b 01       		.uleb128 0x1
 2534 000c 22020000 		.4byte	.LASF226
 2535 0010 0C       		.byte	0xc
 2536 0011 890C0000 		.4byte	.LASF227
 2537 0015 0E0E0000 		.4byte	.LASF228
 2538 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2539 001d 00000000 		.4byte	0
 2540 0021 00000000 		.4byte	.Ldebug_line0
 2541 0025 02       		.uleb128 0x2
 2542 0026 01       		.byte	0x1
 2543 0027 06       		.byte	0x6
 2544 0028 4F100000 		.4byte	.LASF0
 2545 002c 03       		.uleb128 0x3
 2546 002d 0C0D0000 		.4byte	.LASF9
 2547 0031 02       		.byte	0x2
 2548 0032 1D       		.byte	0x1d
 2549 0033 37000000 		.4byte	0x37
 2550 0037 02       		.uleb128 0x2
 2551 0038 01       		.byte	0x1
 2552 0039 08       		.byte	0x8
 2553 003a 8C0E0000 		.4byte	.LASF1
 2554 003e 02       		.uleb128 0x2
 2555 003f 02       		.byte	0x2
 2556 0040 05       		.byte	0x5
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 62


 2557 0041 7B0B0000 		.4byte	.LASF2
 2558 0045 02       		.uleb128 0x2
 2559 0046 02       		.byte	0x2
 2560 0047 07       		.byte	0x7
 2561 0048 5B100000 		.4byte	.LASF3
 2562 004c 02       		.uleb128 0x2
 2563 004d 04       		.byte	0x4
 2564 004e 05       		.byte	0x5
 2565 004f FE0B0000 		.4byte	.LASF4
 2566 0053 02       		.uleb128 0x2
 2567 0054 04       		.byte	0x4
 2568 0055 07       		.byte	0x7
 2569 0056 E60D0000 		.4byte	.LASF5
 2570 005a 02       		.uleb128 0x2
 2571 005b 08       		.byte	0x8
 2572 005c 05       		.byte	0x5
 2573 005d 53080000 		.4byte	.LASF6
 2574 0061 02       		.uleb128 0x2
 2575 0062 08       		.byte	0x8
 2576 0063 07       		.byte	0x7
 2577 0064 7A040000 		.4byte	.LASF7
 2578 0068 04       		.uleb128 0x4
 2579 0069 04       		.byte	0x4
 2580 006a 05       		.byte	0x5
 2581 006b 696E7400 		.ascii	"int\000"
 2582 006f 02       		.uleb128 0x2
 2583 0070 04       		.byte	0x4
 2584 0071 07       		.byte	0x7
 2585 0072 57010000 		.4byte	.LASF8
 2586 0076 03       		.uleb128 0x3
 2587 0077 BD070000 		.4byte	.LASF10
 2588 007b 03       		.byte	0x3
 2589 007c 18       		.byte	0x18
 2590 007d 2C000000 		.4byte	0x2c
 2591 0081 02       		.uleb128 0x2
 2592 0082 04       		.byte	0x4
 2593 0083 04       		.byte	0x4
 2594 0084 CB030000 		.4byte	.LASF11
 2595 0088 02       		.uleb128 0x2
 2596 0089 08       		.byte	0x8
 2597 008a 04       		.byte	0x4
 2598 008b 0F110000 		.4byte	.LASF12
 2599 008f 02       		.uleb128 0x2
 2600 0090 01       		.byte	0x1
 2601 0091 08       		.byte	0x8
 2602 0092 4F070000 		.4byte	.LASF13
 2603 0096 03       		.uleb128 0x3
 2604 0097 D4050000 		.4byte	.LASF14
 2605 009b 04       		.byte	0x4
 2606 009c D8       		.byte	0xd8
 2607 009d 6F000000 		.4byte	0x6f
 2608 00a1 02       		.uleb128 0x2
 2609 00a2 08       		.byte	0x8
 2610 00a3 04       		.byte	0x4
 2611 00a4 7C0A0000 		.4byte	.LASF15
 2612 00a8 02       		.uleb128 0x2
 2613 00a9 04       		.byte	0x4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 63


 2614 00aa 07       		.byte	0x7
 2615 00ab AD0D0000 		.4byte	.LASF16
 2616 00af 05       		.uleb128 0x5
 2617 00b0 01       		.byte	0x1
 2618 00b1 37000000 		.4byte	0x37
 2619 00b5 05       		.byte	0x5
 2620 00b6 1E       		.byte	0x1e
 2621 00b7 58010000 		.4byte	0x158
 2622 00bb 06       		.uleb128 0x6
 2623 00bc D3040000 		.4byte	.LASF17
 2624 00c0 00       		.byte	0
 2625 00c1 06       		.uleb128 0x6
 2626 00c2 FE0E0000 		.4byte	.LASF18
 2627 00c6 01       		.byte	0x1
 2628 00c7 06       		.uleb128 0x6
 2629 00c8 E80F0000 		.4byte	.LASF19
 2630 00cc 02       		.byte	0x2
 2631 00cd 06       		.uleb128 0x6
 2632 00ce 9C040000 		.4byte	.LASF20
 2633 00d2 03       		.byte	0x3
 2634 00d3 06       		.uleb128 0x6
 2635 00d4 DA010000 		.4byte	.LASF21
 2636 00d8 04       		.byte	0x4
 2637 00d9 06       		.uleb128 0x6
 2638 00da 650E0000 		.4byte	.LASF22
 2639 00de 05       		.byte	0x5
 2640 00df 06       		.uleb128 0x6
 2641 00e0 AC070000 		.4byte	.LASF23
 2642 00e4 06       		.byte	0x6
 2643 00e5 06       		.uleb128 0x6
 2644 00e6 F0000000 		.4byte	.LASF24
 2645 00ea 07       		.byte	0x7
 2646 00eb 06       		.uleb128 0x6
 2647 00ec 28050000 		.4byte	.LASF25
 2648 00f0 08       		.byte	0x8
 2649 00f1 06       		.uleb128 0x6
 2650 00f2 590E0000 		.4byte	.LASF26
 2651 00f6 09       		.byte	0x9
 2652 00f7 06       		.uleb128 0x6
 2653 00f8 52060000 		.4byte	.LASF27
 2654 00fc 0A       		.byte	0xa
 2655 00fd 06       		.uleb128 0x6
 2656 00fe 65060000 		.4byte	.LASF28
 2657 0102 0B       		.byte	0xb
 2658 0103 06       		.uleb128 0x6
 2659 0104 78060000 		.4byte	.LASF29
 2660 0108 0C       		.byte	0xc
 2661 0109 06       		.uleb128 0x6
 2662 010a 8B060000 		.4byte	.LASF30
 2663 010e 0D       		.byte	0xd
 2664 010f 06       		.uleb128 0x6
 2665 0110 9E060000 		.4byte	.LASF31
 2666 0114 0E       		.byte	0xe
 2667 0115 06       		.uleb128 0x6
 2668 0116 B1060000 		.4byte	.LASF32
 2669 011a 0F       		.byte	0xf
 2670 011b 06       		.uleb128 0x6
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 64


 2671 011c 28100000 		.4byte	.LASF33
 2672 0120 10       		.byte	0x10
 2673 0121 06       		.uleb128 0x6
 2674 0122 7D100000 		.4byte	.LASF34
 2675 0126 11       		.byte	0x11
 2676 0127 06       		.uleb128 0x6
 2677 0128 8E100000 		.4byte	.LASF35
 2678 012c 12       		.byte	0x12
 2679 012d 06       		.uleb128 0x6
 2680 012e 9F100000 		.4byte	.LASF36
 2681 0132 13       		.byte	0x13
 2682 0133 06       		.uleb128 0x6
 2683 0134 B0100000 		.4byte	.LASF37
 2684 0138 14       		.byte	0x14
 2685 0139 06       		.uleb128 0x6
 2686 013a C1100000 		.4byte	.LASF38
 2687 013e 15       		.byte	0x15
 2688 013f 06       		.uleb128 0x6
 2689 0140 D2100000 		.4byte	.LASF39
 2690 0144 16       		.byte	0x16
 2691 0145 06       		.uleb128 0x6
 2692 0146 CB0C0000 		.4byte	.LASF40
 2693 014a 17       		.byte	0x17
 2694 014b 06       		.uleb128 0x6
 2695 014c 570D0000 		.4byte	.LASF41
 2696 0150 1C       		.byte	0x1c
 2697 0151 06       		.uleb128 0x6
 2698 0152 070C0000 		.4byte	.LASF42
 2699 0156 1D       		.byte	0x1d
 2700 0157 00       		.byte	0
 2701 0158 05       		.uleb128 0x5
 2702 0159 01       		.byte	0x1
 2703 015a 37000000 		.4byte	0x37
 2704 015e 05       		.byte	0x5
 2705 015f 4B       		.byte	0x4b
 2706 0160 89010000 		.4byte	0x189
 2707 0164 06       		.uleb128 0x6
 2708 0165 16060000 		.4byte	.LASF43
 2709 0169 00       		.byte	0
 2710 016a 06       		.uleb128 0x6
 2711 016b 20060000 		.4byte	.LASF44
 2712 016f 01       		.byte	0x1
 2713 0170 06       		.uleb128 0x6
 2714 0171 2A060000 		.4byte	.LASF45
 2715 0175 02       		.byte	0x2
 2716 0176 06       		.uleb128 0x6
 2717 0177 34060000 		.4byte	.LASF46
 2718 017b 03       		.byte	0x3
 2719 017c 06       		.uleb128 0x6
 2720 017d 3E060000 		.4byte	.LASF47
 2721 0181 04       		.byte	0x4
 2722 0182 06       		.uleb128 0x6
 2723 0183 48060000 		.4byte	.LASF48
 2724 0187 05       		.byte	0x5
 2725 0188 00       		.byte	0
 2726 0189 03       		.uleb128 0x3
 2727 018a 40050000 		.4byte	.LASF49
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 65


 2728 018e 05       		.byte	0x5
 2729 018f 52       		.byte	0x52
 2730 0190 58010000 		.4byte	0x158
 2731 0194 05       		.uleb128 0x5
 2732 0195 01       		.byte	0x1
 2733 0196 37000000 		.4byte	0x37
 2734 019a 05       		.byte	0x5
 2735 019b 55       		.byte	0x55
 2736 019c C5010000 		.4byte	0x1c5
 2737 01a0 06       		.uleb128 0x6
 2738 01a1 44000000 		.4byte	.LASF50
 2739 01a5 0A       		.byte	0xa
 2740 01a6 06       		.uleb128 0x6
 2741 01a7 53000000 		.4byte	.LASF51
 2742 01ab 0B       		.byte	0xb
 2743 01ac 06       		.uleb128 0x6
 2744 01ad 62000000 		.4byte	.LASF52
 2745 01b1 0C       		.byte	0xc
 2746 01b2 06       		.uleb128 0x6
 2747 01b3 71000000 		.4byte	.LASF53
 2748 01b7 0D       		.byte	0xd
 2749 01b8 06       		.uleb128 0x6
 2750 01b9 80000000 		.4byte	.LASF54
 2751 01bd 0E       		.byte	0xe
 2752 01be 06       		.uleb128 0x6
 2753 01bf 8F000000 		.4byte	.LASF55
 2754 01c3 0F       		.byte	0xf
 2755 01c4 00       		.byte	0
 2756 01c5 03       		.uleb128 0x3
 2757 01c6 0D030000 		.4byte	.LASF56
 2758 01ca 05       		.byte	0x5
 2759 01cb 5C       		.byte	0x5c
 2760 01cc 94010000 		.4byte	0x194
 2761 01d0 05       		.uleb128 0x5
 2762 01d1 01       		.byte	0x1
 2763 01d2 37000000 		.4byte	0x37
 2764 01d6 05       		.byte	0x5
 2765 01d7 5E       		.byte	0x5e
 2766 01d8 01020000 		.4byte	0x201
 2767 01dc 06       		.uleb128 0x6
 2768 01dd 78080000 		.4byte	.LASF57
 2769 01e1 11       		.byte	0x11
 2770 01e2 06       		.uleb128 0x6
 2771 01e3 8B080000 		.4byte	.LASF58
 2772 01e7 12       		.byte	0x12
 2773 01e8 06       		.uleb128 0x6
 2774 01e9 9E080000 		.4byte	.LASF59
 2775 01ed 13       		.byte	0x13
 2776 01ee 06       		.uleb128 0x6
 2777 01ef B1080000 		.4byte	.LASF60
 2778 01f3 14       		.byte	0x14
 2779 01f4 06       		.uleb128 0x6
 2780 01f5 C4080000 		.4byte	.LASF61
 2781 01f9 15       		.byte	0x15
 2782 01fa 06       		.uleb128 0x6
 2783 01fb D7080000 		.4byte	.LASF62
 2784 01ff 16       		.byte	0x16
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 66


 2785 0200 00       		.byte	0
 2786 0201 03       		.uleb128 0x3
 2787 0202 560F0000 		.4byte	.LASF63
 2788 0206 05       		.byte	0x5
 2789 0207 65       		.byte	0x65
 2790 0208 D0010000 		.4byte	0x1d0
 2791 020c 05       		.uleb128 0x5
 2792 020d 01       		.byte	0x1
 2793 020e 37000000 		.4byte	0x37
 2794 0212 05       		.byte	0x5
 2795 0213 68       		.byte	0x68
 2796 0214 25020000 		.4byte	0x225
 2797 0218 06       		.uleb128 0x6
 2798 0219 72090000 		.4byte	.LASF64
 2799 021d 00       		.byte	0
 2800 021e 06       		.uleb128 0x6
 2801 021f 72070000 		.4byte	.LASF65
 2802 0223 01       		.byte	0x1
 2803 0224 00       		.byte	0
 2804 0225 03       		.uleb128 0x3
 2805 0226 1E030000 		.4byte	.LASF66
 2806 022a 05       		.byte	0x5
 2807 022b 6B       		.byte	0x6b
 2808 022c 0C020000 		.4byte	0x20c
 2809 0230 05       		.uleb128 0x5
 2810 0231 01       		.byte	0x1
 2811 0232 37000000 		.4byte	0x37
 2812 0236 05       		.byte	0x5
 2813 0237 6D       		.byte	0x6d
 2814 0238 55020000 		.4byte	0x255
 2815 023c 06       		.uleb128 0x6
 2816 023d 7A010000 		.4byte	.LASF67
 2817 0241 00       		.byte	0
 2818 0242 06       		.uleb128 0x6
 2819 0243 B5000000 		.4byte	.LASF68
 2820 0247 04       		.byte	0x4
 2821 0248 06       		.uleb128 0x6
 2822 0249 2B0C0000 		.4byte	.LASF69
 2823 024d 05       		.byte	0x5
 2824 024e 06       		.uleb128 0x6
 2825 024f F5070000 		.4byte	.LASF70
 2826 0253 06       		.byte	0x6
 2827 0254 00       		.byte	0
 2828 0255 03       		.uleb128 0x3
 2829 0256 75050000 		.4byte	.LASF71
 2830 025a 05       		.byte	0x5
 2831 025b 72       		.byte	0x72
 2832 025c 30020000 		.4byte	0x230
 2833 0260 05       		.uleb128 0x5
 2834 0261 01       		.byte	0x1
 2835 0262 37000000 		.4byte	0x37
 2836 0266 05       		.byte	0x5
 2837 0267 75       		.byte	0x75
 2838 0268 97020000 		.4byte	0x297
 2839 026c 06       		.uleb128 0x6
 2840 026d A0110000 		.4byte	.LASF72
 2841 0271 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 67


 2842 0272 06       		.uleb128 0x6
 2843 0273 DF0C0000 		.4byte	.LASF73
 2844 0277 01       		.byte	0x1
 2845 0278 06       		.uleb128 0x6
 2846 0279 34040000 		.4byte	.LASF74
 2847 027d 02       		.byte	0x2
 2848 027e 06       		.uleb128 0x6
 2849 027f C5070000 		.4byte	.LASF75
 2850 0283 03       		.byte	0x3
 2851 0284 06       		.uleb128 0x6
 2852 0285 03070000 		.4byte	.LASF76
 2853 0289 04       		.byte	0x4
 2854 028a 06       		.uleb128 0x6
 2855 028b 0C0F0000 		.4byte	.LASF77
 2856 028f 05       		.byte	0x5
 2857 0290 06       		.uleb128 0x6
 2858 0291 3B090000 		.4byte	.LASF78
 2859 0295 06       		.byte	0x6
 2860 0296 00       		.byte	0
 2861 0297 05       		.uleb128 0x5
 2862 0298 01       		.byte	0x1
 2863 0299 37000000 		.4byte	0x37
 2864 029d 05       		.byte	0x5
 2865 029e 7F       		.byte	0x7f
 2866 029f F8020000 		.4byte	0x2f8
 2867 02a3 06       		.uleb128 0x6
 2868 02a4 2A0D0000 		.4byte	.LASF79
 2869 02a8 00       		.byte	0
 2870 02a9 06       		.uleb128 0x6
 2871 02aa 170C0000 		.4byte	.LASF80
 2872 02ae 01       		.byte	0x1
 2873 02af 06       		.uleb128 0x6
 2874 02b0 EF090000 		.4byte	.LASF81
 2875 02b4 00       		.byte	0
 2876 02b5 06       		.uleb128 0x6
 2877 02b6 ED050000 		.4byte	.LASF82
 2878 02ba 02       		.byte	0x2
 2879 02bb 06       		.uleb128 0x6
 2880 02bc 0B010000 		.4byte	.LASF83
 2881 02c0 00       		.byte	0
 2882 02c1 06       		.uleb128 0x6
 2883 02c2 7D050000 		.4byte	.LASF84
 2884 02c6 04       		.byte	0x4
 2885 02c7 06       		.uleb128 0x6
 2886 02c8 1C0A0000 		.4byte	.LASF85
 2887 02cc 00       		.byte	0
 2888 02cd 06       		.uleb128 0x6
 2889 02ce 12100000 		.4byte	.LASF86
 2890 02d2 08       		.byte	0x8
 2891 02d3 06       		.uleb128 0x6
 2892 02d4 030A0000 		.4byte	.LASF87
 2893 02d8 00       		.byte	0
 2894 02d9 06       		.uleb128 0x6
 2895 02da 2A120000 		.4byte	.LASF88
 2896 02de 10       		.byte	0x10
 2897 02df 06       		.uleb128 0x6
 2898 02e0 27030000 		.4byte	.LASF89
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 68


 2899 02e4 00       		.byte	0
 2900 02e5 06       		.uleb128 0x6
 2901 02e6 22090000 		.4byte	.LASF90
 2902 02ea 20       		.byte	0x20
 2903 02eb 06       		.uleb128 0x6
 2904 02ec 3E0F0000 		.4byte	.LASF91
 2905 02f0 00       		.byte	0
 2906 02f1 06       		.uleb128 0x6
 2907 02f2 1B040000 		.4byte	.LASF92
 2908 02f6 40       		.byte	0x40
 2909 02f7 00       		.byte	0
 2910 02f8 05       		.uleb128 0x5
 2911 02f9 01       		.byte	0x1
 2912 02fa 37000000 		.4byte	0x37
 2913 02fe 05       		.byte	0x5
 2914 02ff 91       		.byte	0x91
 2915 0300 29030000 		.4byte	0x329
 2916 0304 06       		.uleb128 0x6
 2917 0305 49050000 		.4byte	.LASF93
 2918 0309 00       		.byte	0
 2919 030a 06       		.uleb128 0x6
 2920 030b 5F050000 		.4byte	.LASF94
 2921 030f 01       		.byte	0x1
 2922 0310 06       		.uleb128 0x6
 2923 0311 850B0000 		.4byte	.LASF95
 2924 0315 02       		.byte	0x2
 2925 0316 06       		.uleb128 0x6
 2926 0317 9B0B0000 		.4byte	.LASF96
 2927 031b 03       		.byte	0x3
 2928 031c 06       		.uleb128 0x6
 2929 031d 93050000 		.4byte	.LASF97
 2930 0321 04       		.byte	0x4
 2931 0322 06       		.uleb128 0x6
 2932 0323 A9050000 		.4byte	.LASF98
 2933 0327 05       		.byte	0x5
 2934 0328 00       		.byte	0
 2935 0329 05       		.uleb128 0x5
 2936 032a 01       		.byte	0x1
 2937 032b 37000000 		.4byte	0x37
 2938 032f 05       		.byte	0x5
 2939 0330 AA       		.byte	0xaa
 2940 0331 5A030000 		.4byte	0x35a
 2941 0335 06       		.uleb128 0x6
 2942 0336 730E0000 		.4byte	.LASF99
 2943 033a 00       		.byte	0
 2944 033b 06       		.uleb128 0x6
 2945 033c 480A0000 		.4byte	.LASF100
 2946 0340 01       		.byte	0x1
 2947 0341 06       		.uleb128 0x6
 2948 0342 9A0E0000 		.4byte	.LASF101
 2949 0346 02       		.byte	0x2
 2950 0347 06       		.uleb128 0x6
 2951 0348 B30E0000 		.4byte	.LASF102
 2952 034c 03       		.byte	0x3
 2953 034d 06       		.uleb128 0x6
 2954 034e CC0E0000 		.4byte	.LASF103
 2955 0352 04       		.byte	0x4
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 69


 2956 0353 06       		.uleb128 0x6
 2957 0354 E50E0000 		.4byte	.LASF104
 2958 0358 05       		.byte	0x5
 2959 0359 00       		.byte	0
 2960 035a 05       		.uleb128 0x5
 2961 035b 01       		.byte	0x1
 2962 035c 37000000 		.4byte	0x37
 2963 0360 05       		.byte	0x5
 2964 0361 C3       		.byte	0xc3
 2965 0362 79030000 		.4byte	0x379
 2966 0366 06       		.uleb128 0x6
 2967 0367 0E020000 		.4byte	.LASF105
 2968 036b 01       		.byte	0x1
 2969 036c 06       		.uleb128 0x6
 2970 036d 160D0000 		.4byte	.LASF106
 2971 0371 02       		.byte	0x2
 2972 0372 06       		.uleb128 0x6
 2973 0373 DA060000 		.4byte	.LASF107
 2974 0377 03       		.byte	0x3
 2975 0378 00       		.byte	0
 2976 0379 03       		.uleb128 0x3
 2977 037a 5A0B0000 		.4byte	.LASF108
 2978 037e 05       		.byte	0x5
 2979 037f C7       		.byte	0xc7
 2980 0380 5A030000 		.4byte	0x35a
 2981 0384 05       		.uleb128 0x5
 2982 0385 01       		.byte	0x1
 2983 0386 37000000 		.4byte	0x37
 2984 038a 05       		.byte	0x5
 2985 038b CA       		.byte	0xca
 2986 038c A3030000 		.4byte	0x3a3
 2987 0390 06       		.uleb128 0x6
 2988 0391 BD090000 		.4byte	.LASF109
 2989 0395 03       		.byte	0x3
 2990 0396 06       		.uleb128 0x6
 2991 0397 FA030000 		.4byte	.LASF110
 2992 039b 04       		.byte	0x4
 2993 039c 06       		.uleb128 0x6
 2994 039d 630F0000 		.4byte	.LASF111
 2995 03a1 05       		.byte	0x5
 2996 03a2 00       		.byte	0
 2997 03a3 03       		.uleb128 0x3
 2998 03a4 55090000 		.4byte	.LASF112
 2999 03a8 05       		.byte	0x5
 3000 03a9 CE       		.byte	0xce
 3001 03aa 84030000 		.4byte	0x384
 3002 03ae 05       		.uleb128 0x5
 3003 03af 01       		.byte	0x1
 3004 03b0 37000000 		.4byte	0x37
 3005 03b4 05       		.byte	0x5
 3006 03b5 D1       		.byte	0xd1
 3007 03b6 C7030000 		.4byte	0x3c7
 3008 03ba 06       		.uleb128 0x6
 3009 03bb A00F0000 		.4byte	.LASF113
 3010 03bf 00       		.byte	0
 3011 03c0 06       		.uleb128 0x6
 3012 03c1 B70F0000 		.4byte	.LASF114
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 70


 3013 03c5 04       		.byte	0x4
 3014 03c6 00       		.byte	0
 3015 03c7 05       		.uleb128 0x5
 3016 03c8 01       		.byte	0x1
 3017 03c9 37000000 		.4byte	0x37
 3018 03cd 05       		.byte	0x5
 3019 03ce FF       		.byte	0xff
 3020 03cf F8030000 		.4byte	0x3f8
 3021 03d3 06       		.uleb128 0x6
 3022 03d4 B3030000 		.4byte	.LASF115
 3023 03d8 01       		.byte	0x1
 3024 03d9 06       		.uleb128 0x6
 3025 03da F50C0000 		.4byte	.LASF116
 3026 03de 03       		.byte	0x3
 3027 03df 06       		.uleb128 0x6
 3028 03e0 DE030000 		.4byte	.LASF117
 3029 03e4 03       		.byte	0x3
 3030 03e5 06       		.uleb128 0x6
 3031 03e6 CB020000 		.4byte	.LASF118
 3032 03ea 04       		.byte	0x4
 3033 03eb 06       		.uleb128 0x6
 3034 03ec 880A0000 		.4byte	.LASF119
 3035 03f0 05       		.byte	0x5
 3036 03f1 06       		.uleb128 0x6
 3037 03f2 6E0C0000 		.4byte	.LASF120
 3038 03f6 07       		.byte	0x7
 3039 03f7 00       		.byte	0
 3040 03f8 07       		.uleb128 0x7
 3041 03f9 01       		.byte	0x1
 3042 03fa 37000000 		.4byte	0x37
 3043 03fe 05       		.byte	0x5
 3044 03ff 1E01     		.2byte	0x11e
 3045 0401 18040000 		.4byte	0x418
 3046 0405 06       		.uleb128 0x6
 3047 0406 00000000 		.4byte	.LASF121
 3048 040a 10       		.byte	0x10
 3049 040b 06       		.uleb128 0x6
 3050 040c 3F030000 		.4byte	.LASF122
 3051 0410 20       		.byte	0x20
 3052 0411 06       		.uleb128 0x6
 3053 0412 64010000 		.4byte	.LASF123
 3054 0416 40       		.byte	0x40
 3055 0417 00       		.byte	0
 3056 0418 07       		.uleb128 0x7
 3057 0419 01       		.byte	0x1
 3058 041a 37000000 		.4byte	0x37
 3059 041e 05       		.byte	0x5
 3060 041f 3501     		.2byte	0x135
 3061 0421 32040000 		.4byte	0x432
 3062 0425 06       		.uleb128 0x6
 3063 0426 FB040000 		.4byte	.LASF124
 3064 042a 00       		.byte	0
 3065 042b 06       		.uleb128 0x6
 3066 042c 5E040000 		.4byte	.LASF125
 3067 0430 04       		.byte	0x4
 3068 0431 00       		.byte	0
 3069 0432 07       		.uleb128 0x7
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 71


 3070 0433 01       		.byte	0x1
 3071 0434 37000000 		.4byte	0x37
 3072 0438 05       		.byte	0x5
 3073 0439 3A01     		.2byte	0x13a
 3074 043b 4C040000 		.4byte	0x44c
 3075 043f 06       		.uleb128 0x6
 3076 0440 C00A0000 		.4byte	.LASF126
 3077 0444 0F       		.byte	0xf
 3078 0445 06       		.uleb128 0x6
 3079 0446 16110000 		.4byte	.LASF127
 3080 044a F0       		.byte	0xf0
 3081 044b 00       		.byte	0
 3082 044c 07       		.uleb128 0x7
 3083 044d 01       		.byte	0x1
 3084 044e 37000000 		.4byte	0x37
 3085 0452 05       		.byte	0x5
 3086 0453 4001     		.2byte	0x140
 3087 0455 60040000 		.4byte	0x460
 3088 0459 06       		.uleb128 0x6
 3089 045a 17000000 		.4byte	.LASF128
 3090 045e 00       		.byte	0
 3091 045f 00       		.byte	0
 3092 0460 07       		.uleb128 0x7
 3093 0461 01       		.byte	0x1
 3094 0462 37000000 		.4byte	0x37
 3095 0466 05       		.byte	0x5
 3096 0467 4A01     		.2byte	0x14a
 3097 0469 8C040000 		.4byte	0x48c
 3098 046d 06       		.uleb128 0x6
 3099 046e 87010000 		.4byte	.LASF129
 3100 0472 00       		.byte	0
 3101 0473 06       		.uleb128 0x6
 3102 0474 6A110000 		.4byte	.LASF130
 3103 0478 01       		.byte	0x1
 3104 0479 06       		.uleb128 0x6
 3105 047a AE0C0000 		.4byte	.LASF131
 3106 047e 04       		.byte	0x4
 3107 047f 06       		.uleb128 0x6
 3108 0480 1A080000 		.4byte	.LASF132
 3109 0484 05       		.byte	0x5
 3110 0485 06       		.uleb128 0x6
 3111 0486 36080000 		.4byte	.LASF133
 3112 048a 06       		.byte	0x6
 3113 048b 00       		.byte	0
 3114 048c 07       		.uleb128 0x7
 3115 048d 01       		.byte	0x1
 3116 048e 37000000 		.4byte	0x37
 3117 0492 05       		.byte	0x5
 3118 0493 5B01     		.2byte	0x15b
 3119 0495 BE040000 		.4byte	0x4be
 3120 0499 06       		.uleb128 0x6
 3121 049a DC0A0000 		.4byte	.LASF134
 3122 049e 00       		.byte	0
 3123 049f 06       		.uleb128 0x6
 3124 04a0 F10A0000 		.4byte	.LASF135
 3125 04a4 01       		.byte	0x1
 3126 04a5 06       		.uleb128 0x6
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 72


 3127 04a6 060B0000 		.4byte	.LASF136
 3128 04aa 02       		.byte	0x2
 3129 04ab 06       		.uleb128 0x6
 3130 04ac 1B0B0000 		.4byte	.LASF137
 3131 04b0 03       		.byte	0x3
 3132 04b1 06       		.uleb128 0x6
 3133 04b2 300B0000 		.4byte	.LASF138
 3134 04b6 04       		.byte	0x4
 3135 04b7 06       		.uleb128 0x6
 3136 04b8 450B0000 		.4byte	.LASF139
 3137 04bc 05       		.byte	0x5
 3138 04bd 00       		.byte	0
 3139 04be 07       		.uleb128 0x7
 3140 04bf 01       		.byte	0x1
 3141 04c0 37000000 		.4byte	0x37
 3142 04c4 05       		.byte	0x5
 3143 04c5 7401     		.2byte	0x174
 3144 04c7 DE040000 		.4byte	0x4de
 3145 04cb 06       		.uleb128 0x6
 3146 04cc 07090000 		.4byte	.LASF140
 3147 04d0 00       		.byte	0
 3148 04d1 06       		.uleb128 0x6
 3149 04d2 1E070000 		.4byte	.LASF141
 3150 04d6 01       		.byte	0x1
 3151 04d7 06       		.uleb128 0x6
 3152 04d8 61080000 		.4byte	.LASF142
 3153 04dc 02       		.byte	0x2
 3154 04dd 00       		.byte	0
 3155 04de 07       		.uleb128 0x7
 3156 04df 01       		.byte	0x1
 3157 04e0 37000000 		.4byte	0x37
 3158 04e4 05       		.byte	0x5
 3159 04e5 8F01     		.2byte	0x18f
 3160 04e7 16050000 		.4byte	0x516
 3161 04eb 06       		.uleb128 0x6
 3162 04ec 03080000 		.4byte	.LASF143
 3163 04f0 01       		.byte	0x1
 3164 04f1 06       		.uleb128 0x6
 3165 04f2 F80D0000 		.4byte	.LASF144
 3166 04f6 0F       		.byte	0xf
 3167 04f7 06       		.uleb128 0x6
 3168 04f8 44120000 		.4byte	.LASF145
 3169 04fc 20       		.byte	0x20
 3170 04fd 06       		.uleb128 0x6
 3171 04fe F9100000 		.4byte	.LASF146
 3172 0502 64       		.byte	0x64
 3173 0503 06       		.uleb128 0x6
 3174 0504 DD000000 		.4byte	.LASF147
 3175 0508 7D       		.byte	0x7d
 3176 0509 06       		.uleb128 0x6
 3177 050a C9010000 		.4byte	.LASF148
 3178 050e 70       		.byte	0x70
 3179 050f 06       		.uleb128 0x6
 3180 0510 C4060000 		.4byte	.LASF149
 3181 0514 0E       		.byte	0xe
 3182 0515 00       		.byte	0
 3183 0516 05       		.uleb128 0x5
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 73


 3184 0517 01       		.byte	0x1
 3185 0518 37000000 		.4byte	0x37
 3186 051c 06       		.byte	0x6
 3187 051d 2A       		.byte	0x2a
 3188 051e 2F050000 		.4byte	0x52f
 3189 0522 06       		.uleb128 0x6
 3190 0523 67070000 		.4byte	.LASF150
 3191 0527 00       		.byte	0
 3192 0528 06       		.uleb128 0x6
 3193 0529 350F0000 		.4byte	.LASF151
 3194 052d 01       		.byte	0x1
 3195 052e 00       		.byte	0
 3196 052f 08       		.uleb128 0x8
 3197 0530 DB070000 		.4byte	.LASF229
 3198 0534 01       		.byte	0x1
 3199 0535 24       		.byte	0x24
 3200 0536 00000000 		.4byte	.LFB0
 3201 053a 40000000 		.4byte	.LFE0-.LFB0
 3202 053e 01       		.uleb128 0x1
 3203 053f 9C       		.byte	0x9c
 3204 0540 53050000 		.4byte	0x553
 3205 0544 09       		.uleb128 0x9
 3206 0545 DB0D0000 		.4byte	.LASF160
 3207 0549 01       		.byte	0x1
 3208 054a 24       		.byte	0x24
 3209 054b 79030000 		.4byte	0x379
 3210 054f 02       		.uleb128 0x2
 3211 0550 91       		.byte	0x91
 3212 0551 77       		.sleb128 -9
 3213 0552 00       		.byte	0
 3214 0553 0A       		.uleb128 0xa
 3215 0554 EF040000 		.4byte	.LASF152
 3216 0558 01       		.byte	0x1
 3217 0559 37       		.byte	0x37
 3218 055a 00000000 		.4byte	.LFB1
 3219 055e 34000000 		.4byte	.LFE1-.LFB1
 3220 0562 01       		.uleb128 0x1
 3221 0563 9C       		.byte	0x9c
 3222 0564 0A       		.uleb128 0xa
 3223 0565 630C0000 		.4byte	.LASF153
 3224 0569 01       		.byte	0x1
 3225 056a 58       		.byte	0x58
 3226 056b 00000000 		.4byte	.LFB2
 3227 056f 5E000000 		.4byte	.LFE2-.LFB2
 3228 0573 01       		.uleb128 0x1
 3229 0574 9C       		.byte	0x9c
 3230 0575 0B       		.uleb128 0xb
 3231 0576 E2040000 		.4byte	.LASF154
 3232 057a 01       		.byte	0x1
 3233 057b 86       		.byte	0x86
 3234 057c 00000000 		.4byte	.LFB3
 3235 0580 0C000000 		.4byte	.LFE3-.LFB3
 3236 0584 01       		.uleb128 0x1
 3237 0585 9C       		.byte	0x9c
 3238 0586 0B       		.uleb128 0xb
 3239 0587 91040000 		.4byte	.LASF155
 3240 058b 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 74


 3241 058c 8F       		.byte	0x8f
 3242 058d 00000000 		.4byte	.LFB4
 3243 0591 0C000000 		.4byte	.LFE4-.LFB4
 3244 0595 01       		.uleb128 0x1
 3245 0596 9C       		.byte	0x9c
 3246 0597 0A       		.uleb128 0xa
 3247 0598 FF000000 		.4byte	.LASF156
 3248 059c 01       		.byte	0x1
 3249 059d 97       		.byte	0x97
 3250 059e 00000000 		.4byte	.LFB5
 3251 05a2 0C000000 		.4byte	.LFE5-.LFB5
 3252 05a6 01       		.uleb128 0x1
 3253 05a7 9C       		.byte	0x9c
 3254 05a8 0A       		.uleb128 0xa
 3255 05a9 D1030000 		.4byte	.LASF157
 3256 05ad 01       		.byte	0x1
 3257 05ae A2       		.byte	0xa2
 3258 05af 00000000 		.4byte	.LFB6
 3259 05b3 16000000 		.4byte	.LFE6-.LFB6
 3260 05b7 01       		.uleb128 0x1
 3261 05b8 9C       		.byte	0x9c
 3262 05b9 0B       		.uleb128 0xb
 3263 05ba DB050000 		.4byte	.LASF158
 3264 05be 01       		.byte	0x1
 3265 05bf AF       		.byte	0xaf
 3266 05c0 00000000 		.4byte	.LFB7
 3267 05c4 0C000000 		.4byte	.LFE7-.LFB7
 3268 05c8 01       		.uleb128 0x1
 3269 05c9 9C       		.byte	0x9c
 3270 05ca 0B       		.uleb128 0xb
 3271 05cb 330A0000 		.4byte	.LASF159
 3272 05cf 01       		.byte	0x1
 3273 05d0 B8       		.byte	0xb8
 3274 05d1 00000000 		.4byte	.LFB8
 3275 05d5 0C000000 		.4byte	.LFE8-.LFB8
 3276 05d9 01       		.uleb128 0x1
 3277 05da 9C       		.byte	0x9c
 3278 05db 0C       		.uleb128 0xc
 3279 05dc 6E100000 		.4byte	.LASF167
 3280 05e0 01       		.byte	0x1
 3281 05e1 C2       		.byte	0xc2
 3282 05e2 00000000 		.4byte	.LFB9
 3283 05e6 22000000 		.4byte	.LFE9-.LFB9
 3284 05ea 01       		.uleb128 0x1
 3285 05eb 9C       		.byte	0x9c
 3286 05ec FF050000 		.4byte	0x5ff
 3287 05f0 09       		.uleb128 0x9
 3288 05f1 F6020000 		.4byte	.LASF161
 3289 05f5 01       		.byte	0x1
 3290 05f6 C2       		.byte	0xc2
 3291 05f7 FF050000 		.4byte	0x5ff
 3292 05fb 02       		.uleb128 0x2
 3293 05fc 91       		.byte	0x91
 3294 05fd 77       		.sleb128 -9
 3295 05fe 00       		.byte	0
 3296 05ff 0D       		.uleb128 0xd
 3297 0600 25020000 		.4byte	0x225
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 75


 3298 0604 0A       		.uleb128 0xa
 3299 0605 99030000 		.4byte	.LASF162
 3300 0609 01       		.byte	0x1
 3301 060a D0       		.byte	0xd0
 3302 060b 00000000 		.4byte	.LFB10
 3303 060f 10000000 		.4byte	.LFE10-.LFB10
 3304 0613 01       		.uleb128 0x1
 3305 0614 9C       		.byte	0x9c
 3306 0615 0A       		.uleb128 0xa
 3307 0616 C4000000 		.4byte	.LASF163
 3308 061a 01       		.byte	0x1
 3309 061b DF       		.byte	0xdf
 3310 061c 00000000 		.4byte	.LFB11
 3311 0620 14000000 		.4byte	.LFE11-.LFB11
 3312 0624 01       		.uleb128 0x1
 3313 0625 9C       		.byte	0x9c
 3314 0626 0A       		.uleb128 0xa
 3315 0627 CE0F0000 		.4byte	.LASF164
 3316 062b 01       		.byte	0x1
 3317 062c EE       		.byte	0xee
 3318 062d 00000000 		.4byte	.LFB12
 3319 0631 14000000 		.4byte	.LFE12-.LFB12
 3320 0635 01       		.uleb128 0x1
 3321 0636 9C       		.byte	0x9c
 3322 0637 0A       		.uleb128 0xa
 3323 0638 FB020000 		.4byte	.LASF165
 3324 063c 01       		.byte	0x1
 3325 063d FB       		.byte	0xfb
 3326 063e 00000000 		.4byte	.LFB13
 3327 0642 10000000 		.4byte	.LFE13-.LFB13
 3328 0646 01       		.uleb128 0x1
 3329 0647 9C       		.byte	0x9c
 3330 0648 0E       		.uleb128 0xe
 3331 0649 16050000 		.4byte	.LASF166
 3332 064d 01       		.byte	0x1
 3333 064e 0701     		.2byte	0x107
 3334 0650 00000000 		.4byte	.LFB14
 3335 0654 10000000 		.4byte	.LFE14-.LFB14
 3336 0658 01       		.uleb128 0x1
 3337 0659 9C       		.byte	0x9c
 3338 065a 0F       		.uleb128 0xf
 3339 065b 410D0000 		.4byte	.LASF168
 3340 065f 01       		.byte	0x1
 3341 0660 1101     		.2byte	0x111
 3342 0662 00000000 		.4byte	.LFB15
 3343 0666 1C000000 		.4byte	.LFE15-.LFB15
 3344 066a 01       		.uleb128 0x1
 3345 066b 9C       		.byte	0x9c
 3346 066c 80060000 		.4byte	0x680
 3347 0670 10       		.uleb128 0x10
 3348 0671 3B050000 		.4byte	.LASF169
 3349 0675 01       		.byte	0x1
 3350 0676 1101     		.2byte	0x111
 3351 0678 80060000 		.4byte	0x680
 3352 067c 02       		.uleb128 0x2
 3353 067d 91       		.byte	0x91
 3354 067e 77       		.sleb128 -9
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 76


 3355 067f 00       		.byte	0
 3356 0680 0D       		.uleb128 0xd
 3357 0681 89010000 		.4byte	0x189
 3358 0685 0F       		.uleb128 0xf
 3359 0686 9E000000 		.4byte	.LASF170
 3360 068a 01       		.byte	0x1
 3361 068b 1B01     		.2byte	0x11b
 3362 068d 00000000 		.4byte	.LFB16
 3363 0691 1C000000 		.4byte	.LFE16-.LFB16
 3364 0695 01       		.uleb128 0x1
 3365 0696 9C       		.byte	0x9c
 3366 0697 AB060000 		.4byte	0x6ab
 3367 069b 10       		.uleb128 0x10
 3368 069c 3B050000 		.4byte	.LASF169
 3369 06a0 01       		.byte	0x1
 3370 06a1 1B01     		.2byte	0x11b
 3371 06a3 80060000 		.4byte	0x680
 3372 06a7 02       		.uleb128 0x2
 3373 06a8 91       		.byte	0x91
 3374 06a9 77       		.sleb128 -9
 3375 06aa 00       		.byte	0
 3376 06ab 0F       		.uleb128 0xf
 3377 06ac 45010000 		.4byte	.LASF171
 3378 06b0 01       		.byte	0x1
 3379 06b1 2501     		.2byte	0x125
 3380 06b3 00000000 		.4byte	.LFB17
 3381 06b7 2E000000 		.4byte	.LFE17-.LFB17
 3382 06bb 01       		.uleb128 0x1
 3383 06bc 9C       		.byte	0x9c
 3384 06bd D1060000 		.4byte	0x6d1
 3385 06c1 10       		.uleb128 0x10
 3386 06c2 B80A0000 		.4byte	.LASF172
 3387 06c6 01       		.byte	0x1
 3388 06c7 2501     		.2byte	0x125
 3389 06c9 76000000 		.4byte	0x76
 3390 06cd 02       		.uleb128 0x2
 3391 06ce 91       		.byte	0x91
 3392 06cf 77       		.sleb128 -9
 3393 06d0 00       		.byte	0
 3394 06d1 11       		.uleb128 0x11
 3395 06d2 690B0000 		.4byte	.LASF174
 3396 06d6 01       		.byte	0x1
 3397 06d7 3701     		.2byte	0x137
 3398 06d9 76000000 		.4byte	0x76
 3399 06dd 00000000 		.4byte	.LFB18
 3400 06e1 10000000 		.4byte	.LFE18-.LFB18
 3401 06e5 01       		.uleb128 0x1
 3402 06e6 9C       		.byte	0x9c
 3403 06e7 0F       		.uleb128 0xf
 3404 06e8 FA0F0000 		.4byte	.LASF173
 3405 06ec 01       		.byte	0x1
 3406 06ed 4101     		.2byte	0x141
 3407 06ef 00000000 		.4byte	.LFB19
 3408 06f3 24000000 		.4byte	.LFE19-.LFB19
 3409 06f7 01       		.uleb128 0x1
 3410 06f8 9C       		.byte	0x9c
 3411 06f9 0D070000 		.4byte	0x70d
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 77


 3412 06fd 10       		.uleb128 0x10
 3413 06fe DB0D0000 		.4byte	.LASF160
 3414 0702 01       		.byte	0x1
 3415 0703 4101     		.2byte	0x141
 3416 0705 0D070000 		.4byte	0x70d
 3417 0709 02       		.uleb128 0x2
 3418 070a 91       		.byte	0x91
 3419 070b 77       		.sleb128 -9
 3420 070c 00       		.byte	0
 3421 070d 0D       		.uleb128 0xd
 3422 070e 79030000 		.4byte	0x379
 3423 0712 12       		.uleb128 0x12
 3424 0713 52110000 		.4byte	.LASF175
 3425 0717 01       		.byte	0x1
 3426 0718 4D01     		.2byte	0x14d
 3427 071a 76000000 		.4byte	0x76
 3428 071e 00000000 		.4byte	.LFB20
 3429 0722 14000000 		.4byte	.LFE20-.LFB20
 3430 0726 01       		.uleb128 0x1
 3431 0727 9C       		.byte	0x9c
 3432 0728 0F       		.uleb128 0xf
 3433 0729 86110000 		.4byte	.LASF176
 3434 072d 01       		.byte	0x1
 3435 072e 5A01     		.2byte	0x15a
 3436 0730 00000000 		.4byte	.LFB21
 3437 0734 78000000 		.4byte	.LFE21-.LFB21
 3438 0738 01       		.uleb128 0x1
 3439 0739 9C       		.byte	0x9c
 3440 073a 6C070000 		.4byte	0x76c
 3441 073e 10       		.uleb128 0x10
 3442 073f 3B050000 		.4byte	.LASF169
 3443 0743 01       		.byte	0x1
 3444 0744 5A01     		.2byte	0x15a
 3445 0746 6C070000 		.4byte	0x76c
 3446 074a 02       		.uleb128 0x2
 3447 074b 91       		.byte	0x91
 3448 074c 77       		.sleb128 -9
 3449 074d 10       		.uleb128 0x10
 3450 074e B30A0000 		.4byte	.LASF177
 3451 0752 01       		.byte	0x1
 3452 0753 5B01     		.2byte	0x15b
 3453 0755 71070000 		.4byte	0x771
 3454 0759 02       		.uleb128 0x2
 3455 075a 91       		.byte	0x91
 3456 075b 70       		.sleb128 -16
 3457 075c 10       		.uleb128 0x10
 3458 075d 7E090000 		.4byte	.LASF178
 3459 0761 01       		.byte	0x1
 3460 0762 5B01     		.2byte	0x15b
 3461 0764 96000000 		.4byte	0x96
 3462 0768 02       		.uleb128 0x2
 3463 0769 91       		.byte	0x91
 3464 076a 6C       		.sleb128 -20
 3465 076b 00       		.byte	0
 3466 076c 0D       		.uleb128 0xd
 3467 076d C5010000 		.4byte	0x1c5
 3468 0771 13       		.uleb128 0x13
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 78


 3469 0772 04       		.byte	0x4
 3470 0773 77070000 		.4byte	0x777
 3471 0777 0D       		.uleb128 0xd
 3472 0778 76000000 		.4byte	0x76
 3473 077c 0F       		.uleb128 0xf
 3474 077d E40B0000 		.4byte	.LASF179
 3475 0781 01       		.byte	0x1
 3476 0782 8201     		.2byte	0x182
 3477 0784 00000000 		.4byte	.LFB22
 3478 0788 8C000000 		.4byte	.LFE22-.LFB22
 3479 078c 01       		.uleb128 0x1
 3480 078d 9C       		.byte	0x9c
 3481 078e C0070000 		.4byte	0x7c0
 3482 0792 10       		.uleb128 0x10
 3483 0793 3B050000 		.4byte	.LASF169
 3484 0797 01       		.byte	0x1
 3485 0798 8201     		.2byte	0x182
 3486 079a 6C070000 		.4byte	0x76c
 3487 079e 02       		.uleb128 0x2
 3488 079f 91       		.byte	0x91
 3489 07a0 6F       		.sleb128 -17
 3490 07a1 10       		.uleb128 0x10
 3491 07a2 B30A0000 		.4byte	.LASF177
 3492 07a6 01       		.byte	0x1
 3493 07a7 8301     		.2byte	0x183
 3494 07a9 C0070000 		.4byte	0x7c0
 3495 07ad 02       		.uleb128 0x2
 3496 07ae 91       		.byte	0x91
 3497 07af 68       		.sleb128 -24
 3498 07b0 10       		.uleb128 0x10
 3499 07b1 7E090000 		.4byte	.LASF178
 3500 07b5 01       		.byte	0x1
 3501 07b6 8301     		.2byte	0x183
 3502 07b8 96000000 		.4byte	0x96
 3503 07bc 02       		.uleb128 0x2
 3504 07bd 91       		.byte	0x91
 3505 07be 64       		.sleb128 -28
 3506 07bf 00       		.byte	0
 3507 07c0 13       		.uleb128 0x13
 3508 07c1 04       		.byte	0x4
 3509 07c2 76000000 		.4byte	0x76
 3510 07c6 0F       		.uleb128 0xf
 3511 07c7 EE060000 		.4byte	.LASF180
 3512 07cb 01       		.byte	0x1
 3513 07cc A901     		.2byte	0x1a9
 3514 07ce 00000000 		.4byte	.LFB23
 3515 07d2 3C000000 		.4byte	.LFE23-.LFB23
 3516 07d6 01       		.uleb128 0x1
 3517 07d7 9C       		.byte	0x9c
 3518 07d8 FB070000 		.4byte	0x7fb
 3519 07dc 10       		.uleb128 0x10
 3520 07dd B30A0000 		.4byte	.LASF177
 3521 07e1 01       		.byte	0x1
 3522 07e2 A901     		.2byte	0x1a9
 3523 07e4 FB070000 		.4byte	0x7fb
 3524 07e8 02       		.uleb128 0x2
 3525 07e9 91       		.byte	0x91
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 79


 3526 07ea 74       		.sleb128 -12
 3527 07eb 10       		.uleb128 0x10
 3528 07ec 7E090000 		.4byte	.LASF178
 3529 07f0 01       		.byte	0x1
 3530 07f1 A901     		.2byte	0x1a9
 3531 07f3 96000000 		.4byte	0x96
 3532 07f7 02       		.uleb128 0x2
 3533 07f8 91       		.byte	0x91
 3534 07f9 70       		.sleb128 -16
 3535 07fa 00       		.byte	0
 3536 07fb 0D       		.uleb128 0xd
 3537 07fc 71070000 		.4byte	0x771
 3538 0800 0F       		.uleb128 0xf
 3539 0801 7E070000 		.4byte	.LASF181
 3540 0805 01       		.byte	0x1
 3541 0806 BC01     		.2byte	0x1bc
 3542 0808 00000000 		.4byte	.LFB24
 3543 080c 3C000000 		.4byte	.LFE24-.LFB24
 3544 0810 01       		.uleb128 0x1
 3545 0811 9C       		.byte	0x9c
 3546 0812 35080000 		.4byte	0x835
 3547 0816 10       		.uleb128 0x10
 3548 0817 B30A0000 		.4byte	.LASF177
 3549 081b 01       		.byte	0x1
 3550 081c BC01     		.2byte	0x1bc
 3551 081e C0070000 		.4byte	0x7c0
 3552 0822 02       		.uleb128 0x2
 3553 0823 91       		.byte	0x91
 3554 0824 74       		.sleb128 -12
 3555 0825 10       		.uleb128 0x10
 3556 0826 7E090000 		.4byte	.LASF178
 3557 082a 01       		.byte	0x1
 3558 082b BC01     		.2byte	0x1bc
 3559 082d 96000000 		.4byte	0x96
 3560 0831 02       		.uleb128 0x2
 3561 0832 91       		.byte	0x91
 3562 0833 70       		.sleb128 -16
 3563 0834 00       		.byte	0
 3564 0835 0F       		.uleb128 0xf
 3565 0836 650D0000 		.4byte	.LASF182
 3566 083a 01       		.byte	0x1
 3567 083b D101     		.2byte	0x1d1
 3568 083d 00000000 		.4byte	.LFB25
 3569 0841 2E000000 		.4byte	.LFE25-.LFB25
 3570 0845 01       		.uleb128 0x1
 3571 0846 9C       		.byte	0x9c
 3572 0847 6A080000 		.4byte	0x86a
 3573 084b 10       		.uleb128 0x10
 3574 084c 3B050000 		.4byte	.LASF169
 3575 0850 01       		.byte	0x1
 3576 0851 D101     		.2byte	0x1d1
 3577 0853 6A080000 		.4byte	0x86a
 3578 0857 02       		.uleb128 0x2
 3579 0858 91       		.byte	0x91
 3580 0859 77       		.sleb128 -9
 3581 085a 10       		.uleb128 0x10
 3582 085b 7E090000 		.4byte	.LASF178
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 80


 3583 085f 01       		.byte	0x1
 3584 0860 D101     		.2byte	0x1d1
 3585 0862 76000000 		.4byte	0x76
 3586 0866 02       		.uleb128 0x2
 3587 0867 91       		.byte	0x91
 3588 0868 76       		.sleb128 -10
 3589 0869 00       		.byte	0
 3590 086a 0D       		.uleb128 0xd
 3591 086b 01020000 		.4byte	0x201
 3592 086f 14       		.uleb128 0x14
 3593 0870 FF050000 		.4byte	.LASF199
 3594 0874 01       		.byte	0x1
 3595 0875 E101     		.2byte	0x1e1
 3596 0877 76000000 		.4byte	0x76
 3597 087b 00000000 		.4byte	.LFB26
 3598 087f 1C000000 		.4byte	.LFE26-.LFB26
 3599 0883 01       		.uleb128 0x1
 3600 0884 9C       		.byte	0x9c
 3601 0885 99080000 		.4byte	0x899
 3602 0889 10       		.uleb128 0x10
 3603 088a 3B050000 		.4byte	.LASF169
 3604 088e 01       		.byte	0x1
 3605 088f E101     		.2byte	0x1e1
 3606 0891 6A080000 		.4byte	0x86a
 3607 0895 02       		.uleb128 0x2
 3608 0896 91       		.byte	0x91
 3609 0897 77       		.sleb128 -9
 3610 0898 00       		.byte	0
 3611 0899 0E       		.uleb128 0xe
 3612 089a A4010000 		.4byte	.LASF183
 3613 089e 01       		.byte	0x1
 3614 089f EC01     		.2byte	0x1ec
 3615 08a1 00000000 		.4byte	.LFB27
 3616 08a5 10000000 		.4byte	.LFE27-.LFB27
 3617 08a9 01       		.uleb128 0x1
 3618 08aa 9C       		.byte	0x9c
 3619 08ab 0E       		.uleb128 0xe
 3620 08ac 27000000 		.4byte	.LASF184
 3621 08b0 01       		.byte	0x1
 3622 08b1 F701     		.2byte	0x1f7
 3623 08b3 00000000 		.4byte	.LFB28
 3624 08b7 18000000 		.4byte	.LFE28-.LFB28
 3625 08bb 01       		.uleb128 0x1
 3626 08bc 9C       		.byte	0x9c
 3627 08bd 0F       		.uleb128 0xf
 3628 08be C6110000 		.4byte	.LASF185
 3629 08c2 01       		.byte	0x1
 3630 08c3 0402     		.2byte	0x204
 3631 08c5 00000000 		.4byte	.LFB29
 3632 08c9 26000000 		.4byte	.LFE29-.LFB29
 3633 08cd 01       		.uleb128 0x1
 3634 08ce 9C       		.byte	0x9c
 3635 08cf E3080000 		.4byte	0x8e3
 3636 08d3 10       		.uleb128 0x10
 3637 08d4 3B050000 		.4byte	.LASF169
 3638 08d8 01       		.byte	0x1
 3639 08d9 0402     		.2byte	0x204
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 81


 3640 08db 80060000 		.4byte	0x680
 3641 08df 02       		.uleb128 0x2
 3642 08e0 91       		.byte	0x91
 3643 08e1 77       		.sleb128 -9
 3644 08e2 00       		.byte	0
 3645 08e3 0E       		.uleb128 0xe
 3646 08e4 00120000 		.4byte	.LASF186
 3647 08e8 01       		.byte	0x1
 3648 08e9 0F02     		.2byte	0x20f
 3649 08eb 00000000 		.4byte	.LFB30
 3650 08ef 18000000 		.4byte	.LFE30-.LFB30
 3651 08f3 01       		.uleb128 0x1
 3652 08f4 9C       		.byte	0x9c
 3653 08f5 0F       		.uleb128 0xf
 3654 08f6 AD040000 		.4byte	.LASF187
 3655 08fa 01       		.byte	0x1
 3656 08fb 1C02     		.2byte	0x21c
 3657 08fd 00000000 		.4byte	.LFB31
 3658 0901 26000000 		.4byte	.LFE31-.LFB31
 3659 0905 01       		.uleb128 0x1
 3660 0906 9C       		.byte	0x9c
 3661 0907 1B090000 		.4byte	0x91b
 3662 090b 10       		.uleb128 0x10
 3663 090c 3B050000 		.4byte	.LASF169
 3664 0910 01       		.byte	0x1
 3665 0911 1C02     		.2byte	0x21c
 3666 0913 80060000 		.4byte	0x680
 3667 0917 02       		.uleb128 0x2
 3668 0918 91       		.byte	0x91
 3669 0919 77       		.sleb128 -9
 3670 091a 00       		.byte	0
 3671 091b 0E       		.uleb128 0xe
 3672 091c 21010000 		.4byte	.LASF188
 3673 0920 01       		.byte	0x1
 3674 0921 2502     		.2byte	0x225
 3675 0923 00000000 		.4byte	.LFB32
 3676 0927 10000000 		.4byte	.LFE32-.LFB32
 3677 092b 01       		.uleb128 0x1
 3678 092c 9C       		.byte	0x9c
 3679 092d 0E       		.uleb128 0xe
 3680 092e B60D0000 		.4byte	.LASF189
 3681 0932 01       		.byte	0x1
 3682 0933 2D02     		.2byte	0x22d
 3683 0935 00000000 		.4byte	.LFB33
 3684 0939 10000000 		.4byte	.LFE33-.LFB33
 3685 093d 01       		.uleb128 0x1
 3686 093e 9C       		.byte	0x9c
 3687 093f 0E       		.uleb128 0xe
 3688 0940 8F0D0000 		.4byte	.LASF190
 3689 0944 01       		.byte	0x1
 3690 0945 3502     		.2byte	0x235
 3691 0947 00000000 		.4byte	.LFB34
 3692 094b 10000000 		.4byte	.LFE34-.LFB34
 3693 094f 01       		.uleb128 0x1
 3694 0950 9C       		.byte	0x9c
 3695 0951 0E       		.uleb128 0xe
 3696 0952 33110000 		.4byte	.LASF191
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 82


 3697 0956 01       		.byte	0x1
 3698 0957 3D02     		.2byte	0x23d
 3699 0959 00000000 		.4byte	.LFB35
 3700 095d 10000000 		.4byte	.LFE35-.LFB35
 3701 0961 01       		.uleb128 0x1
 3702 0962 9C       		.byte	0x9c
 3703 0963 0E       		.uleb128 0xe
 3704 0964 9C090000 		.4byte	.LASF192
 3705 0968 01       		.byte	0x1
 3706 0969 4502     		.2byte	0x245
 3707 096b 00000000 		.4byte	.LFB36
 3708 096f 10000000 		.4byte	.LFE36-.LFB36
 3709 0973 01       		.uleb128 0x1
 3710 0974 9C       		.byte	0x9c
 3711 0975 0E       		.uleb128 0xe
 3712 0976 7E0F0000 		.4byte	.LASF193
 3713 097a 01       		.byte	0x1
 3714 097b 4D02     		.2byte	0x24d
 3715 097d 00000000 		.4byte	.LFB37
 3716 0981 10000000 		.4byte	.LFE37-.LFB37
 3717 0985 01       		.uleb128 0x1
 3718 0986 9C       		.byte	0x9c
 3719 0987 0E       		.uleb128 0xe
 3720 0988 48040000 		.4byte	.LASF194
 3721 098c 01       		.byte	0x1
 3722 098d 5802     		.2byte	0x258
 3723 098f 00000000 		.4byte	.LFB38
 3724 0993 0E000000 		.4byte	.LFE38-.LFB38
 3725 0997 01       		.uleb128 0x1
 3726 0998 9C       		.byte	0x9c
 3727 0999 0E       		.uleb128 0xe
 3728 099a CF0B0000 		.4byte	.LASF195
 3729 099e 01       		.byte	0x1
 3730 099f 6302     		.2byte	0x263
 3731 09a1 00000000 		.4byte	.LFB39
 3732 09a5 0E000000 		.4byte	.LFE39-.LFB39
 3733 09a9 01       		.uleb128 0x1
 3734 09aa 9C       		.byte	0x9c
 3735 09ab 0E       		.uleb128 0xe
 3736 09ac 390C0000 		.4byte	.LASF196
 3737 09b0 01       		.byte	0x1
 3738 09b1 6E02     		.2byte	0x26e
 3739 09b3 00000000 		.4byte	.LFB40
 3740 09b7 1A000000 		.4byte	.LFE40-.LFB40
 3741 09bb 01       		.uleb128 0x1
 3742 09bc 9C       		.byte	0x9c
 3743 09bd 11       		.uleb128 0x11
 3744 09be E5020000 		.4byte	.LASF197
 3745 09c2 01       		.byte	0x1
 3746 09c3 7A02     		.2byte	0x27a
 3747 09c5 76000000 		.4byte	0x76
 3748 09c9 00000000 		.4byte	.LFB41
 3749 09cd 0E000000 		.4byte	.LFE41-.LFB41
 3750 09d1 01       		.uleb128 0x1
 3751 09d2 9C       		.byte	0x9c
 3752 09d3 11       		.uleb128 0x11
 3753 09d4 39070000 		.4byte	.LASF198
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 83


 3754 09d8 01       		.byte	0x1
 3755 09d9 8402     		.2byte	0x284
 3756 09db 76000000 		.4byte	0x76
 3757 09df 00000000 		.4byte	.LFB42
 3758 09e3 10000000 		.4byte	.LFE42-.LFB42
 3759 09e7 01       		.uleb128 0x1
 3760 09e8 9C       		.byte	0x9c
 3761 09e9 14       		.uleb128 0x14
 3762 09ea 79030000 		.4byte	.LASF200
 3763 09ee 01       		.byte	0x1
 3764 09ef 8E02     		.2byte	0x28e
 3765 09f1 76000000 		.4byte	0x76
 3766 09f5 00000000 		.4byte	.LFB43
 3767 09f9 20000000 		.4byte	.LFE43-.LFB43
 3768 09fd 01       		.uleb128 0x1
 3769 09fe 9C       		.byte	0x9c
 3770 09ff 130A0000 		.4byte	0xa13
 3771 0a03 15       		.uleb128 0x15
 3772 0a04 15040000 		.4byte	.LASF202
 3773 0a08 01       		.byte	0x1
 3774 0a09 9002     		.2byte	0x290
 3775 0a0b 76000000 		.4byte	0x76
 3776 0a0f 02       		.uleb128 0x2
 3777 0a10 91       		.byte	0x91
 3778 0a11 77       		.sleb128 -9
 3779 0a12 00       		.byte	0
 3780 0a13 14       		.uleb128 0x14
 3781 0a14 EA080000 		.4byte	.LASF201
 3782 0a18 01       		.byte	0x1
 3783 0a19 9902     		.2byte	0x299
 3784 0a1b 76000000 		.4byte	0x76
 3785 0a1f 00000000 		.4byte	.LFB44
 3786 0a23 26000000 		.4byte	.LFE44-.LFB44
 3787 0a27 01       		.uleb128 0x1
 3788 0a28 9C       		.byte	0x9c
 3789 0a29 3D0A0000 		.4byte	0xa3d
 3790 0a2d 15       		.uleb128 0x15
 3791 0a2e 1E120000 		.4byte	.LASF203
 3792 0a32 01       		.byte	0x1
 3793 0a33 9B02     		.2byte	0x29b
 3794 0a35 76000000 		.4byte	0x76
 3795 0a39 02       		.uleb128 0x2
 3796 0a3a 91       		.byte	0x91
 3797 0a3b 77       		.sleb128 -9
 3798 0a3c 00       		.byte	0
 3799 0a3d 0F       		.uleb128 0xf
 3800 0a3e 55030000 		.4byte	.LASF204
 3801 0a42 01       		.byte	0x1
 3802 0a43 A602     		.2byte	0x2a6
 3803 0a45 00000000 		.4byte	.LFB45
 3804 0a49 2C000000 		.4byte	.LFE45-.LFB45
 3805 0a4d 01       		.uleb128 0x1
 3806 0a4e 9C       		.byte	0x9c
 3807 0a4f 720A0000 		.4byte	0xa72
 3808 0a53 10       		.uleb128 0x10
 3809 0a54 A7070000 		.4byte	.LASF205
 3810 0a58 01       		.byte	0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 84


 3811 0a59 A602     		.2byte	0x2a6
 3812 0a5b 71070000 		.4byte	0x771
 3813 0a5f 02       		.uleb128 0x2
 3814 0a60 91       		.byte	0x91
 3815 0a61 74       		.sleb128 -12
 3816 0a62 10       		.uleb128 0x10
 3817 0a63 7E090000 		.4byte	.LASF178
 3818 0a67 01       		.byte	0x1
 3819 0a68 A602     		.2byte	0x2a6
 3820 0a6a 96000000 		.4byte	0x96
 3821 0a6e 02       		.uleb128 0x2
 3822 0a6f 91       		.byte	0x91
 3823 0a70 70       		.sleb128 -16
 3824 0a71 00       		.byte	0
 3825 0a72 0F       		.uleb128 0xf
 3826 0a73 6A030000 		.4byte	.LASF206
 3827 0a77 01       		.byte	0x1
 3828 0a78 B902     		.2byte	0x2b9
 3829 0a7a 00000000 		.4byte	.LFB46
 3830 0a7e 30000000 		.4byte	.LFE46-.LFB46
 3831 0a82 01       		.uleb128 0x1
 3832 0a83 9C       		.byte	0x9c
 3833 0a84 A70A0000 		.4byte	0xaa7
 3834 0a88 10       		.uleb128 0x10
 3835 0a89 A7070000 		.4byte	.LASF205
 3836 0a8d 01       		.byte	0x1
 3837 0a8e B902     		.2byte	0x2b9
 3838 0a90 71070000 		.4byte	0x771
 3839 0a94 02       		.uleb128 0x2
 3840 0a95 91       		.byte	0x91
 3841 0a96 74       		.sleb128 -12
 3842 0a97 10       		.uleb128 0x10
 3843 0a98 7E090000 		.4byte	.LASF178
 3844 0a9c 01       		.byte	0x1
 3845 0a9d B902     		.2byte	0x2b9
 3846 0a9f 96000000 		.4byte	0x96
 3847 0aa3 02       		.uleb128 0x2
 3848 0aa4 91       		.byte	0x91
 3849 0aa5 70       		.sleb128 -16
 3850 0aa6 00       		.byte	0
 3851 0aa7 11       		.uleb128 0x11
 3852 0aa8 93070000 		.4byte	.LASF207
 3853 0aac 01       		.byte	0x1
 3854 0aad CC02     		.2byte	0x2cc
 3855 0aaf BD0A0000 		.4byte	0xabd
 3856 0ab3 00000000 		.4byte	.LFB47
 3857 0ab7 1C000000 		.4byte	.LFE47-.LFB47
 3858 0abb 01       		.uleb128 0x1
 3859 0abc 9C       		.byte	0x9c
 3860 0abd 02       		.uleb128 0x2
 3861 0abe 01       		.byte	0x1
 3862 0abf 02       		.byte	0x2
 3863 0ac0 C5020000 		.4byte	.LASF208
 3864 0ac4 0F       		.uleb128 0xf
 3865 0ac5 4E0C0000 		.4byte	.LASF209
 3866 0ac9 01       		.byte	0x1
 3867 0aca D702     		.2byte	0x2d7
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 85


 3868 0acc 00000000 		.4byte	.LFB48
 3869 0ad0 2E000000 		.4byte	.LFE48-.LFB48
 3870 0ad4 01       		.uleb128 0x1
 3871 0ad5 9C       		.byte	0x9c
 3872 0ad6 F90A0000 		.4byte	0xaf9
 3873 0ada 10       		.uleb128 0x10
 3874 0adb A7070000 		.4byte	.LASF205
 3875 0adf 01       		.byte	0x1
 3876 0ae0 D702     		.2byte	0x2d7
 3877 0ae2 C0070000 		.4byte	0x7c0
 3878 0ae6 02       		.uleb128 0x2
 3879 0ae7 91       		.byte	0x91
 3880 0ae8 74       		.sleb128 -12
 3881 0ae9 10       		.uleb128 0x10
 3882 0aea 7E090000 		.4byte	.LASF178
 3883 0aee 01       		.byte	0x1
 3884 0aef D702     		.2byte	0x2d7
 3885 0af1 F90A0000 		.4byte	0xaf9
 3886 0af5 02       		.uleb128 0x2
 3887 0af6 91       		.byte	0x91
 3888 0af7 70       		.sleb128 -16
 3889 0af8 00       		.byte	0
 3890 0af9 0D       		.uleb128 0xd
 3891 0afa 96000000 		.4byte	0x96
 3892 0afe 0F       		.uleb128 0xf
 3893 0aff 83090000 		.4byte	.LASF210
 3894 0b03 01       		.byte	0x1
 3895 0b04 E802     		.2byte	0x2e8
 3896 0b06 00000000 		.4byte	.LFB49
 3897 0b0a 30000000 		.4byte	.LFE49-.LFB49
 3898 0b0e 01       		.uleb128 0x1
 3899 0b0f 9C       		.byte	0x9c
 3900 0b10 330B0000 		.4byte	0xb33
 3901 0b14 10       		.uleb128 0x10
 3902 0b15 A7070000 		.4byte	.LASF205
 3903 0b19 01       		.byte	0x1
 3904 0b1a E802     		.2byte	0x2e8
 3905 0b1c 71070000 		.4byte	0x771
 3906 0b20 02       		.uleb128 0x2
 3907 0b21 91       		.byte	0x91
 3908 0b22 74       		.sleb128 -12
 3909 0b23 10       		.uleb128 0x10
 3910 0b24 7E090000 		.4byte	.LASF178
 3911 0b28 01       		.byte	0x1
 3912 0b29 E802     		.2byte	0x2e8
 3913 0b2b 96000000 		.4byte	0x96
 3914 0b2f 02       		.uleb128 0x2
 3915 0b30 91       		.byte	0x91
 3916 0b31 70       		.sleb128 -16
 3917 0b32 00       		.byte	0
 3918 0b33 0F       		.uleb128 0xf
 3919 0b34 D8090000 		.4byte	.LASF211
 3920 0b38 01       		.byte	0x1
 3921 0b39 FD02     		.2byte	0x2fd
 3922 0b3b 00000000 		.4byte	.LFB50
 3923 0b3f 34000000 		.4byte	.LFE50-.LFB50
 3924 0b43 01       		.uleb128 0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 86


 3925 0b44 9C       		.byte	0x9c
 3926 0b45 770B0000 		.4byte	0xb77
 3927 0b49 10       		.uleb128 0x10
 3928 0b4a 3B050000 		.4byte	.LASF169
 3929 0b4e 01       		.byte	0x1
 3930 0b4f FD02     		.2byte	0x2fd
 3931 0b51 80060000 		.4byte	0x680
 3932 0b55 02       		.uleb128 0x2
 3933 0b56 91       		.byte	0x91
 3934 0b57 77       		.sleb128 -9
 3935 0b58 10       		.uleb128 0x10
 3936 0b59 A7070000 		.4byte	.LASF205
 3937 0b5d 01       		.byte	0x1
 3938 0b5e FE02     		.2byte	0x2fe
 3939 0b60 71070000 		.4byte	0x771
 3940 0b64 02       		.uleb128 0x2
 3941 0b65 91       		.byte	0x91
 3942 0b66 70       		.sleb128 -16
 3943 0b67 10       		.uleb128 0x10
 3944 0b68 7E090000 		.4byte	.LASF178
 3945 0b6c 01       		.byte	0x1
 3946 0b6d FE02     		.2byte	0x2fe
 3947 0b6f 96000000 		.4byte	0x96
 3948 0b73 02       		.uleb128 0x2
 3949 0b74 91       		.byte	0x91
 3950 0b75 6C       		.sleb128 -20
 3951 0b76 00       		.byte	0
 3952 0b77 14       		.uleb128 0x14
 3953 0b78 ED010000 		.4byte	.LASF212
 3954 0b7c 01       		.byte	0x1
 3955 0b7d 1003     		.2byte	0x310
 3956 0b7f 76000000 		.4byte	0x76
 3957 0b83 00000000 		.4byte	.LFB51
 3958 0b87 24000000 		.4byte	.LFE51-.LFB51
 3959 0b8b 01       		.uleb128 0x1
 3960 0b8c 9C       		.byte	0x9c
 3961 0b8d A10B0000 		.4byte	0xba1
 3962 0b91 15       		.uleb128 0x15
 3963 0b92 3B050000 		.4byte	.LASF169
 3964 0b96 01       		.byte	0x1
 3965 0b97 1203     		.2byte	0x312
 3966 0b99 76000000 		.4byte	0x76
 3967 0b9d 02       		.uleb128 0x2
 3968 0b9e 91       		.byte	0x91
 3969 0b9f 77       		.sleb128 -9
 3970 0ba0 00       		.byte	0
 3971 0ba1 11       		.uleb128 0x11
 3972 0ba2 B10B0000 		.4byte	.LASF213
 3973 0ba6 01       		.byte	0x1
 3974 0ba7 1B03     		.2byte	0x31b
 3975 0ba9 76000000 		.4byte	0x76
 3976 0bad 00000000 		.4byte	.LFB52
 3977 0bb1 12000000 		.4byte	.LFE52-.LFB52
 3978 0bb5 01       		.uleb128 0x1
 3979 0bb6 9C       		.byte	0x9c
 3980 0bb7 11       		.uleb128 0x11
 3981 0bb8 E3100000 		.4byte	.LASF214
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 87


 3982 0bbc 01       		.byte	0x1
 3983 0bbd 2403     		.2byte	0x324
 3984 0bbf BD0A0000 		.4byte	0xabd
 3985 0bc3 00000000 		.4byte	.LFB53
 3986 0bc7 12000000 		.4byte	.LFE53-.LFB53
 3987 0bcb 01       		.uleb128 0x1
 3988 0bcc 9C       		.byte	0x9c
 3989 0bcd 11       		.uleb128 0x11
 3990 0bce 38100000 		.4byte	.LASF215
 3991 0bd2 01       		.byte	0x1
 3992 0bd3 2C03     		.2byte	0x32c
 3993 0bd5 BD0A0000 		.4byte	0xabd
 3994 0bd9 00000000 		.4byte	.LFB54
 3995 0bdd 12000000 		.4byte	.LFE54-.LFB54
 3996 0be1 01       		.uleb128 0x1
 3997 0be2 9C       		.byte	0x9c
 3998 0be3 11       		.uleb128 0x11
 3999 0be4 54070000 		.4byte	.LASF216
 4000 0be8 01       		.byte	0x1
 4001 0be9 3703     		.2byte	0x337
 4002 0beb BD0A0000 		.4byte	0xabd
 4003 0bef 00000000 		.4byte	.LFB55
 4004 0bf3 12000000 		.4byte	.LFE55-.LFB55
 4005 0bf7 01       		.uleb128 0x1
 4006 0bf8 9C       		.byte	0x9c
 4007 0bf9 0E       		.uleb128 0xe
 4008 0bfa B0020000 		.4byte	.LASF217
 4009 0bfe 01       		.byte	0x1
 4010 0bff 4003     		.2byte	0x340
 4011 0c01 00000000 		.4byte	.LFB56
 4012 0c05 10000000 		.4byte	.LFE56-.LFB56
 4013 0c09 01       		.uleb128 0x1
 4014 0c0a 9C       		.byte	0x9c
 4015 0c0b 0F       		.uleb128 0xf
 4016 0c0c BF050000 		.4byte	.LASF218
 4017 0c10 01       		.byte	0x1
 4018 0c11 4C03     		.2byte	0x34c
 4019 0c13 00000000 		.4byte	.LFB57
 4020 0c17 24000000 		.4byte	.LFE57-.LFB57
 4021 0c1b 01       		.uleb128 0x1
 4022 0c1c 9C       		.byte	0x9c
 4023 0c1d 310C0000 		.4byte	0xc31
 4024 0c21 10       		.uleb128 0x10
 4025 0c22 69090000 		.4byte	.LASF219
 4026 0c26 01       		.byte	0x1
 4027 0c27 4C03     		.2byte	0x34c
 4028 0c29 310C0000 		.4byte	0xc31
 4029 0c2d 02       		.uleb128 0x2
 4030 0c2e 91       		.byte	0x91
 4031 0c2f 77       		.sleb128 -9
 4032 0c30 00       		.byte	0
 4033 0c31 0D       		.uleb128 0xd
 4034 0c32 55020000 		.4byte	0x255
 4035 0c36 14       		.uleb128 0x14
 4036 0c37 7C0D0000 		.4byte	.LASF220
 4037 0c3b 01       		.byte	0x1
 4038 0c3c 5803     		.2byte	0x358
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 88


 4039 0c3e 55020000 		.4byte	0x255
 4040 0c42 00000000 		.4byte	.LFB58
 4041 0c46 48000000 		.4byte	.LFE58-.LFB58
 4042 0c4a 01       		.uleb128 0x1
 4043 0c4b 9C       		.byte	0x9c
 4044 0c4c 6F0C0000 		.4byte	0xc6f
 4045 0c50 16       		.uleb128 0x16
 4046 0c51 69727100 		.ascii	"irq\000"
 4047 0c55 01       		.byte	0x1
 4048 0c56 5A03     		.2byte	0x35a
 4049 0c58 55020000 		.4byte	0x255
 4050 0c5c 02       		.uleb128 0x2
 4051 0c5d 91       		.byte	0x91
 4052 0c5e 77       		.sleb128 -9
 4053 0c5f 16       		.uleb128 0x16
 4054 0c60 73747300 		.ascii	"sts\000"
 4055 0c64 01       		.byte	0x1
 4056 0c65 5D03     		.2byte	0x35d
 4057 0c67 76000000 		.4byte	0x76
 4058 0c6b 02       		.uleb128 0x2
 4059 0c6c 91       		.byte	0x91
 4060 0c6d 76       		.sleb128 -10
 4061 0c6e 00       		.byte	0
 4062 0c6f 17       		.uleb128 0x17
 4063 0c70 EB110000 		.4byte	.LASF221
 4064 0c74 01       		.byte	0x1
 4065 0c75 7203     		.2byte	0x372
 4066 0c77 00000000 		.4byte	.LFB59
 4067 0c7b 0C000000 		.4byte	.LFE59-.LFB59
 4068 0c7f 01       		.uleb128 0x1
 4069 0c80 9C       		.byte	0x9c
 4070 0c81 14       		.uleb128 0x14
 4071 0c82 610A0000 		.4byte	.LASF222
 4072 0c86 01       		.byte	0x1
 4073 0c87 7703     		.2byte	0x377
 4074 0c89 76000000 		.4byte	0x76
 4075 0c8d 00000000 		.4byte	.LFB60
 4076 0c91 20000000 		.4byte	.LFE60-.LFB60
 4077 0c95 01       		.uleb128 0x1
 4078 0c96 9C       		.byte	0x9c
 4079 0c97 AB0C0000 		.4byte	0xcab
 4080 0c9b 16       		.uleb128 0x16
 4081 0c9c 73747300 		.ascii	"sts\000"
 4082 0ca0 01       		.byte	0x1
 4083 0ca1 7903     		.2byte	0x379
 4084 0ca3 76000000 		.4byte	0x76
 4085 0ca7 02       		.uleb128 0x2
 4086 0ca8 91       		.byte	0x91
 4087 0ca9 77       		.sleb128 -9
 4088 0caa 00       		.byte	0
 4089 0cab 0E       		.uleb128 0xe
 4090 0cac 260F0000 		.4byte	.LASF223
 4091 0cb0 01       		.byte	0x1
 4092 0cb1 8003     		.2byte	0x380
 4093 0cb3 00000000 		.4byte	.LFB61
 4094 0cb7 0C000000 		.4byte	.LFE61-.LFB61
 4095 0cbb 01       		.uleb128 0x1
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 89


 4096 0cbc 9C       		.byte	0x9c
 4097 0cbd 0E       		.uleb128 0xe
 4098 0cbe B7110000 		.4byte	.LASF224
 4099 0cc2 01       		.byte	0x1
 4100 0cc3 8503     		.2byte	0x385
 4101 0cc5 00000000 		.4byte	.LFB62
 4102 0cc9 0C000000 		.4byte	.LFE62-.LFB62
 4103 0ccd 01       		.uleb128 0x1
 4104 0cce 9C       		.byte	0x9c
 4105 0ccf 18       		.uleb128 0x18
 4106 0cd0 A30A0000 		.4byte	.LASF225
 4107 0cd4 01       		.byte	0x1
 4108 0cd5 21       		.byte	0x21
 4109 0cd6 A3030000 		.4byte	0x3a3
 4110 0cda 05       		.uleb128 0x5
 4111 0cdb 03       		.byte	0x3
 4112 0cdc 00000000 		.4byte	_nrf_addr_width
 4113 0ce0 00       		.byte	0
 4114              		.section	.debug_abbrev,"",%progbits
 4115              	.Ldebug_abbrev0:
 4116 0000 01       		.uleb128 0x1
 4117 0001 11       		.uleb128 0x11
 4118 0002 01       		.byte	0x1
 4119 0003 25       		.uleb128 0x25
 4120 0004 0E       		.uleb128 0xe
 4121 0005 13       		.uleb128 0x13
 4122 0006 0B       		.uleb128 0xb
 4123 0007 03       		.uleb128 0x3
 4124 0008 0E       		.uleb128 0xe
 4125 0009 1B       		.uleb128 0x1b
 4126 000a 0E       		.uleb128 0xe
 4127 000b 55       		.uleb128 0x55
 4128 000c 17       		.uleb128 0x17
 4129 000d 11       		.uleb128 0x11
 4130 000e 01       		.uleb128 0x1
 4131 000f 10       		.uleb128 0x10
 4132 0010 17       		.uleb128 0x17
 4133 0011 00       		.byte	0
 4134 0012 00       		.byte	0
 4135 0013 02       		.uleb128 0x2
 4136 0014 24       		.uleb128 0x24
 4137 0015 00       		.byte	0
 4138 0016 0B       		.uleb128 0xb
 4139 0017 0B       		.uleb128 0xb
 4140 0018 3E       		.uleb128 0x3e
 4141 0019 0B       		.uleb128 0xb
 4142 001a 03       		.uleb128 0x3
 4143 001b 0E       		.uleb128 0xe
 4144 001c 00       		.byte	0
 4145 001d 00       		.byte	0
 4146 001e 03       		.uleb128 0x3
 4147 001f 16       		.uleb128 0x16
 4148 0020 00       		.byte	0
 4149 0021 03       		.uleb128 0x3
 4150 0022 0E       		.uleb128 0xe
 4151 0023 3A       		.uleb128 0x3a
 4152 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 90


 4153 0025 3B       		.uleb128 0x3b
 4154 0026 0B       		.uleb128 0xb
 4155 0027 49       		.uleb128 0x49
 4156 0028 13       		.uleb128 0x13
 4157 0029 00       		.byte	0
 4158 002a 00       		.byte	0
 4159 002b 04       		.uleb128 0x4
 4160 002c 24       		.uleb128 0x24
 4161 002d 00       		.byte	0
 4162 002e 0B       		.uleb128 0xb
 4163 002f 0B       		.uleb128 0xb
 4164 0030 3E       		.uleb128 0x3e
 4165 0031 0B       		.uleb128 0xb
 4166 0032 03       		.uleb128 0x3
 4167 0033 08       		.uleb128 0x8
 4168 0034 00       		.byte	0
 4169 0035 00       		.byte	0
 4170 0036 05       		.uleb128 0x5
 4171 0037 04       		.uleb128 0x4
 4172 0038 01       		.byte	0x1
 4173 0039 0B       		.uleb128 0xb
 4174 003a 0B       		.uleb128 0xb
 4175 003b 49       		.uleb128 0x49
 4176 003c 13       		.uleb128 0x13
 4177 003d 3A       		.uleb128 0x3a
 4178 003e 0B       		.uleb128 0xb
 4179 003f 3B       		.uleb128 0x3b
 4180 0040 0B       		.uleb128 0xb
 4181 0041 01       		.uleb128 0x1
 4182 0042 13       		.uleb128 0x13
 4183 0043 00       		.byte	0
 4184 0044 00       		.byte	0
 4185 0045 06       		.uleb128 0x6
 4186 0046 28       		.uleb128 0x28
 4187 0047 00       		.byte	0
 4188 0048 03       		.uleb128 0x3
 4189 0049 0E       		.uleb128 0xe
 4190 004a 1C       		.uleb128 0x1c
 4191 004b 0B       		.uleb128 0xb
 4192 004c 00       		.byte	0
 4193 004d 00       		.byte	0
 4194 004e 07       		.uleb128 0x7
 4195 004f 04       		.uleb128 0x4
 4196 0050 01       		.byte	0x1
 4197 0051 0B       		.uleb128 0xb
 4198 0052 0B       		.uleb128 0xb
 4199 0053 49       		.uleb128 0x49
 4200 0054 13       		.uleb128 0x13
 4201 0055 3A       		.uleb128 0x3a
 4202 0056 0B       		.uleb128 0xb
 4203 0057 3B       		.uleb128 0x3b
 4204 0058 05       		.uleb128 0x5
 4205 0059 01       		.uleb128 0x1
 4206 005a 13       		.uleb128 0x13
 4207 005b 00       		.byte	0
 4208 005c 00       		.byte	0
 4209 005d 08       		.uleb128 0x8
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 91


 4210 005e 2E       		.uleb128 0x2e
 4211 005f 01       		.byte	0x1
 4212 0060 03       		.uleb128 0x3
 4213 0061 0E       		.uleb128 0xe
 4214 0062 3A       		.uleb128 0x3a
 4215 0063 0B       		.uleb128 0xb
 4216 0064 3B       		.uleb128 0x3b
 4217 0065 0B       		.uleb128 0xb
 4218 0066 27       		.uleb128 0x27
 4219 0067 19       		.uleb128 0x19
 4220 0068 11       		.uleb128 0x11
 4221 0069 01       		.uleb128 0x1
 4222 006a 12       		.uleb128 0x12
 4223 006b 06       		.uleb128 0x6
 4224 006c 40       		.uleb128 0x40
 4225 006d 18       		.uleb128 0x18
 4226 006e 9742     		.uleb128 0x2117
 4227 0070 19       		.uleb128 0x19
 4228 0071 01       		.uleb128 0x1
 4229 0072 13       		.uleb128 0x13
 4230 0073 00       		.byte	0
 4231 0074 00       		.byte	0
 4232 0075 09       		.uleb128 0x9
 4233 0076 05       		.uleb128 0x5
 4234 0077 00       		.byte	0
 4235 0078 03       		.uleb128 0x3
 4236 0079 0E       		.uleb128 0xe
 4237 007a 3A       		.uleb128 0x3a
 4238 007b 0B       		.uleb128 0xb
 4239 007c 3B       		.uleb128 0x3b
 4240 007d 0B       		.uleb128 0xb
 4241 007e 49       		.uleb128 0x49
 4242 007f 13       		.uleb128 0x13
 4243 0080 02       		.uleb128 0x2
 4244 0081 18       		.uleb128 0x18
 4245 0082 00       		.byte	0
 4246 0083 00       		.byte	0
 4247 0084 0A       		.uleb128 0xa
 4248 0085 2E       		.uleb128 0x2e
 4249 0086 00       		.byte	0
 4250 0087 3F       		.uleb128 0x3f
 4251 0088 19       		.uleb128 0x19
 4252 0089 03       		.uleb128 0x3
 4253 008a 0E       		.uleb128 0xe
 4254 008b 3A       		.uleb128 0x3a
 4255 008c 0B       		.uleb128 0xb
 4256 008d 3B       		.uleb128 0x3b
 4257 008e 0B       		.uleb128 0xb
 4258 008f 27       		.uleb128 0x27
 4259 0090 19       		.uleb128 0x19
 4260 0091 11       		.uleb128 0x11
 4261 0092 01       		.uleb128 0x1
 4262 0093 12       		.uleb128 0x12
 4263 0094 06       		.uleb128 0x6
 4264 0095 40       		.uleb128 0x40
 4265 0096 18       		.uleb128 0x18
 4266 0097 9642     		.uleb128 0x2116
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 92


 4267 0099 19       		.uleb128 0x19
 4268 009a 00       		.byte	0
 4269 009b 00       		.byte	0
 4270 009c 0B       		.uleb128 0xb
 4271 009d 2E       		.uleb128 0x2e
 4272 009e 00       		.byte	0
 4273 009f 3F       		.uleb128 0x3f
 4274 00a0 19       		.uleb128 0x19
 4275 00a1 03       		.uleb128 0x3
 4276 00a2 0E       		.uleb128 0xe
 4277 00a3 3A       		.uleb128 0x3a
 4278 00a4 0B       		.uleb128 0xb
 4279 00a5 3B       		.uleb128 0x3b
 4280 00a6 0B       		.uleb128 0xb
 4281 00a7 27       		.uleb128 0x27
 4282 00a8 19       		.uleb128 0x19
 4283 00a9 11       		.uleb128 0x11
 4284 00aa 01       		.uleb128 0x1
 4285 00ab 12       		.uleb128 0x12
 4286 00ac 06       		.uleb128 0x6
 4287 00ad 40       		.uleb128 0x40
 4288 00ae 18       		.uleb128 0x18
 4289 00af 9742     		.uleb128 0x2117
 4290 00b1 19       		.uleb128 0x19
 4291 00b2 00       		.byte	0
 4292 00b3 00       		.byte	0
 4293 00b4 0C       		.uleb128 0xc
 4294 00b5 2E       		.uleb128 0x2e
 4295 00b6 01       		.byte	0x1
 4296 00b7 3F       		.uleb128 0x3f
 4297 00b8 19       		.uleb128 0x19
 4298 00b9 03       		.uleb128 0x3
 4299 00ba 0E       		.uleb128 0xe
 4300 00bb 3A       		.uleb128 0x3a
 4301 00bc 0B       		.uleb128 0xb
 4302 00bd 3B       		.uleb128 0x3b
 4303 00be 0B       		.uleb128 0xb
 4304 00bf 27       		.uleb128 0x27
 4305 00c0 19       		.uleb128 0x19
 4306 00c1 11       		.uleb128 0x11
 4307 00c2 01       		.uleb128 0x1
 4308 00c3 12       		.uleb128 0x12
 4309 00c4 06       		.uleb128 0x6
 4310 00c5 40       		.uleb128 0x40
 4311 00c6 18       		.uleb128 0x18
 4312 00c7 9642     		.uleb128 0x2116
 4313 00c9 19       		.uleb128 0x19
 4314 00ca 01       		.uleb128 0x1
 4315 00cb 13       		.uleb128 0x13
 4316 00cc 00       		.byte	0
 4317 00cd 00       		.byte	0
 4318 00ce 0D       		.uleb128 0xd
 4319 00cf 26       		.uleb128 0x26
 4320 00d0 00       		.byte	0
 4321 00d1 49       		.uleb128 0x49
 4322 00d2 13       		.uleb128 0x13
 4323 00d3 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 93


 4324 00d4 00       		.byte	0
 4325 00d5 0E       		.uleb128 0xe
 4326 00d6 2E       		.uleb128 0x2e
 4327 00d7 00       		.byte	0
 4328 00d8 3F       		.uleb128 0x3f
 4329 00d9 19       		.uleb128 0x19
 4330 00da 03       		.uleb128 0x3
 4331 00db 0E       		.uleb128 0xe
 4332 00dc 3A       		.uleb128 0x3a
 4333 00dd 0B       		.uleb128 0xb
 4334 00de 3B       		.uleb128 0x3b
 4335 00df 05       		.uleb128 0x5
 4336 00e0 27       		.uleb128 0x27
 4337 00e1 19       		.uleb128 0x19
 4338 00e2 11       		.uleb128 0x11
 4339 00e3 01       		.uleb128 0x1
 4340 00e4 12       		.uleb128 0x12
 4341 00e5 06       		.uleb128 0x6
 4342 00e6 40       		.uleb128 0x40
 4343 00e7 18       		.uleb128 0x18
 4344 00e8 9642     		.uleb128 0x2116
 4345 00ea 19       		.uleb128 0x19
 4346 00eb 00       		.byte	0
 4347 00ec 00       		.byte	0
 4348 00ed 0F       		.uleb128 0xf
 4349 00ee 2E       		.uleb128 0x2e
 4350 00ef 01       		.byte	0x1
 4351 00f0 3F       		.uleb128 0x3f
 4352 00f1 19       		.uleb128 0x19
 4353 00f2 03       		.uleb128 0x3
 4354 00f3 0E       		.uleb128 0xe
 4355 00f4 3A       		.uleb128 0x3a
 4356 00f5 0B       		.uleb128 0xb
 4357 00f6 3B       		.uleb128 0x3b
 4358 00f7 05       		.uleb128 0x5
 4359 00f8 27       		.uleb128 0x27
 4360 00f9 19       		.uleb128 0x19
 4361 00fa 11       		.uleb128 0x11
 4362 00fb 01       		.uleb128 0x1
 4363 00fc 12       		.uleb128 0x12
 4364 00fd 06       		.uleb128 0x6
 4365 00fe 40       		.uleb128 0x40
 4366 00ff 18       		.uleb128 0x18
 4367 0100 9642     		.uleb128 0x2116
 4368 0102 19       		.uleb128 0x19
 4369 0103 01       		.uleb128 0x1
 4370 0104 13       		.uleb128 0x13
 4371 0105 00       		.byte	0
 4372 0106 00       		.byte	0
 4373 0107 10       		.uleb128 0x10
 4374 0108 05       		.uleb128 0x5
 4375 0109 00       		.byte	0
 4376 010a 03       		.uleb128 0x3
 4377 010b 0E       		.uleb128 0xe
 4378 010c 3A       		.uleb128 0x3a
 4379 010d 0B       		.uleb128 0xb
 4380 010e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 94


 4381 010f 05       		.uleb128 0x5
 4382 0110 49       		.uleb128 0x49
 4383 0111 13       		.uleb128 0x13
 4384 0112 02       		.uleb128 0x2
 4385 0113 18       		.uleb128 0x18
 4386 0114 00       		.byte	0
 4387 0115 00       		.byte	0
 4388 0116 11       		.uleb128 0x11
 4389 0117 2E       		.uleb128 0x2e
 4390 0118 00       		.byte	0
 4391 0119 3F       		.uleb128 0x3f
 4392 011a 19       		.uleb128 0x19
 4393 011b 03       		.uleb128 0x3
 4394 011c 0E       		.uleb128 0xe
 4395 011d 3A       		.uleb128 0x3a
 4396 011e 0B       		.uleb128 0xb
 4397 011f 3B       		.uleb128 0x3b
 4398 0120 05       		.uleb128 0x5
 4399 0121 27       		.uleb128 0x27
 4400 0122 19       		.uleb128 0x19
 4401 0123 49       		.uleb128 0x49
 4402 0124 13       		.uleb128 0x13
 4403 0125 11       		.uleb128 0x11
 4404 0126 01       		.uleb128 0x1
 4405 0127 12       		.uleb128 0x12
 4406 0128 06       		.uleb128 0x6
 4407 0129 40       		.uleb128 0x40
 4408 012a 18       		.uleb128 0x18
 4409 012b 9642     		.uleb128 0x2116
 4410 012d 19       		.uleb128 0x19
 4411 012e 00       		.byte	0
 4412 012f 00       		.byte	0
 4413 0130 12       		.uleb128 0x12
 4414 0131 2E       		.uleb128 0x2e
 4415 0132 00       		.byte	0
 4416 0133 3F       		.uleb128 0x3f
 4417 0134 19       		.uleb128 0x19
 4418 0135 03       		.uleb128 0x3
 4419 0136 0E       		.uleb128 0xe
 4420 0137 3A       		.uleb128 0x3a
 4421 0138 0B       		.uleb128 0xb
 4422 0139 3B       		.uleb128 0x3b
 4423 013a 05       		.uleb128 0x5
 4424 013b 27       		.uleb128 0x27
 4425 013c 19       		.uleb128 0x19
 4426 013d 49       		.uleb128 0x49
 4427 013e 13       		.uleb128 0x13
 4428 013f 11       		.uleb128 0x11
 4429 0140 01       		.uleb128 0x1
 4430 0141 12       		.uleb128 0x12
 4431 0142 06       		.uleb128 0x6
 4432 0143 40       		.uleb128 0x40
 4433 0144 18       		.uleb128 0x18
 4434 0145 9742     		.uleb128 0x2117
 4435 0147 19       		.uleb128 0x19
 4436 0148 00       		.byte	0
 4437 0149 00       		.byte	0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 95


 4438 014a 13       		.uleb128 0x13
 4439 014b 0F       		.uleb128 0xf
 4440 014c 00       		.byte	0
 4441 014d 0B       		.uleb128 0xb
 4442 014e 0B       		.uleb128 0xb
 4443 014f 49       		.uleb128 0x49
 4444 0150 13       		.uleb128 0x13
 4445 0151 00       		.byte	0
 4446 0152 00       		.byte	0
 4447 0153 14       		.uleb128 0x14
 4448 0154 2E       		.uleb128 0x2e
 4449 0155 01       		.byte	0x1
 4450 0156 3F       		.uleb128 0x3f
 4451 0157 19       		.uleb128 0x19
 4452 0158 03       		.uleb128 0x3
 4453 0159 0E       		.uleb128 0xe
 4454 015a 3A       		.uleb128 0x3a
 4455 015b 0B       		.uleb128 0xb
 4456 015c 3B       		.uleb128 0x3b
 4457 015d 05       		.uleb128 0x5
 4458 015e 27       		.uleb128 0x27
 4459 015f 19       		.uleb128 0x19
 4460 0160 49       		.uleb128 0x49
 4461 0161 13       		.uleb128 0x13
 4462 0162 11       		.uleb128 0x11
 4463 0163 01       		.uleb128 0x1
 4464 0164 12       		.uleb128 0x12
 4465 0165 06       		.uleb128 0x6
 4466 0166 40       		.uleb128 0x40
 4467 0167 18       		.uleb128 0x18
 4468 0168 9642     		.uleb128 0x2116
 4469 016a 19       		.uleb128 0x19
 4470 016b 01       		.uleb128 0x1
 4471 016c 13       		.uleb128 0x13
 4472 016d 00       		.byte	0
 4473 016e 00       		.byte	0
 4474 016f 15       		.uleb128 0x15
 4475 0170 34       		.uleb128 0x34
 4476 0171 00       		.byte	0
 4477 0172 03       		.uleb128 0x3
 4478 0173 0E       		.uleb128 0xe
 4479 0174 3A       		.uleb128 0x3a
 4480 0175 0B       		.uleb128 0xb
 4481 0176 3B       		.uleb128 0x3b
 4482 0177 05       		.uleb128 0x5
 4483 0178 49       		.uleb128 0x49
 4484 0179 13       		.uleb128 0x13
 4485 017a 02       		.uleb128 0x2
 4486 017b 18       		.uleb128 0x18
 4487 017c 00       		.byte	0
 4488 017d 00       		.byte	0
 4489 017e 16       		.uleb128 0x16
 4490 017f 34       		.uleb128 0x34
 4491 0180 00       		.byte	0
 4492 0181 03       		.uleb128 0x3
 4493 0182 08       		.uleb128 0x8
 4494 0183 3A       		.uleb128 0x3a
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 96


 4495 0184 0B       		.uleb128 0xb
 4496 0185 3B       		.uleb128 0x3b
 4497 0186 05       		.uleb128 0x5
 4498 0187 49       		.uleb128 0x49
 4499 0188 13       		.uleb128 0x13
 4500 0189 02       		.uleb128 0x2
 4501 018a 18       		.uleb128 0x18
 4502 018b 00       		.byte	0
 4503 018c 00       		.byte	0
 4504 018d 17       		.uleb128 0x17
 4505 018e 2E       		.uleb128 0x2e
 4506 018f 00       		.byte	0
 4507 0190 3F       		.uleb128 0x3f
 4508 0191 19       		.uleb128 0x19
 4509 0192 03       		.uleb128 0x3
 4510 0193 0E       		.uleb128 0xe
 4511 0194 3A       		.uleb128 0x3a
 4512 0195 0B       		.uleb128 0xb
 4513 0196 3B       		.uleb128 0x3b
 4514 0197 05       		.uleb128 0x5
 4515 0198 27       		.uleb128 0x27
 4516 0199 19       		.uleb128 0x19
 4517 019a 11       		.uleb128 0x11
 4518 019b 01       		.uleb128 0x1
 4519 019c 12       		.uleb128 0x12
 4520 019d 06       		.uleb128 0x6
 4521 019e 40       		.uleb128 0x40
 4522 019f 18       		.uleb128 0x18
 4523 01a0 9742     		.uleb128 0x2117
 4524 01a2 19       		.uleb128 0x19
 4525 01a3 00       		.byte	0
 4526 01a4 00       		.byte	0
 4527 01a5 18       		.uleb128 0x18
 4528 01a6 34       		.uleb128 0x34
 4529 01a7 00       		.byte	0
 4530 01a8 03       		.uleb128 0x3
 4531 01a9 0E       		.uleb128 0xe
 4532 01aa 3A       		.uleb128 0x3a
 4533 01ab 0B       		.uleb128 0xb
 4534 01ac 3B       		.uleb128 0x3b
 4535 01ad 0B       		.uleb128 0xb
 4536 01ae 49       		.uleb128 0x49
 4537 01af 13       		.uleb128 0x13
 4538 01b0 02       		.uleb128 0x2
 4539 01b1 18       		.uleb128 0x18
 4540 01b2 00       		.byte	0
 4541 01b3 00       		.byte	0
 4542 01b4 00       		.byte	0
 4543              		.section	.debug_aranges,"",%progbits
 4544 0000 0C020000 		.4byte	0x20c
 4545 0004 0200     		.2byte	0x2
 4546 0006 00000000 		.4byte	.Ldebug_info0
 4547 000a 04       		.byte	0x4
 4548 000b 00       		.byte	0
 4549 000c 0000     		.2byte	0
 4550 000e 0000     		.2byte	0
 4551 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 97


 4552 0014 40000000 		.4byte	.LFE0-.LFB0
 4553 0018 00000000 		.4byte	.LFB1
 4554 001c 34000000 		.4byte	.LFE1-.LFB1
 4555 0020 00000000 		.4byte	.LFB2
 4556 0024 5E000000 		.4byte	.LFE2-.LFB2
 4557 0028 00000000 		.4byte	.LFB3
 4558 002c 0C000000 		.4byte	.LFE3-.LFB3
 4559 0030 00000000 		.4byte	.LFB4
 4560 0034 0C000000 		.4byte	.LFE4-.LFB4
 4561 0038 00000000 		.4byte	.LFB5
 4562 003c 0C000000 		.4byte	.LFE5-.LFB5
 4563 0040 00000000 		.4byte	.LFB6
 4564 0044 16000000 		.4byte	.LFE6-.LFB6
 4565 0048 00000000 		.4byte	.LFB7
 4566 004c 0C000000 		.4byte	.LFE7-.LFB7
 4567 0050 00000000 		.4byte	.LFB8
 4568 0054 0C000000 		.4byte	.LFE8-.LFB8
 4569 0058 00000000 		.4byte	.LFB9
 4570 005c 22000000 		.4byte	.LFE9-.LFB9
 4571 0060 00000000 		.4byte	.LFB10
 4572 0064 10000000 		.4byte	.LFE10-.LFB10
 4573 0068 00000000 		.4byte	.LFB11
 4574 006c 14000000 		.4byte	.LFE11-.LFB11
 4575 0070 00000000 		.4byte	.LFB12
 4576 0074 14000000 		.4byte	.LFE12-.LFB12
 4577 0078 00000000 		.4byte	.LFB13
 4578 007c 10000000 		.4byte	.LFE13-.LFB13
 4579 0080 00000000 		.4byte	.LFB14
 4580 0084 10000000 		.4byte	.LFE14-.LFB14
 4581 0088 00000000 		.4byte	.LFB15
 4582 008c 1C000000 		.4byte	.LFE15-.LFB15
 4583 0090 00000000 		.4byte	.LFB16
 4584 0094 1C000000 		.4byte	.LFE16-.LFB16
 4585 0098 00000000 		.4byte	.LFB17
 4586 009c 2E000000 		.4byte	.LFE17-.LFB17
 4587 00a0 00000000 		.4byte	.LFB18
 4588 00a4 10000000 		.4byte	.LFE18-.LFB18
 4589 00a8 00000000 		.4byte	.LFB19
 4590 00ac 24000000 		.4byte	.LFE19-.LFB19
 4591 00b0 00000000 		.4byte	.LFB20
 4592 00b4 14000000 		.4byte	.LFE20-.LFB20
 4593 00b8 00000000 		.4byte	.LFB21
 4594 00bc 78000000 		.4byte	.LFE21-.LFB21
 4595 00c0 00000000 		.4byte	.LFB22
 4596 00c4 8C000000 		.4byte	.LFE22-.LFB22
 4597 00c8 00000000 		.4byte	.LFB23
 4598 00cc 3C000000 		.4byte	.LFE23-.LFB23
 4599 00d0 00000000 		.4byte	.LFB24
 4600 00d4 3C000000 		.4byte	.LFE24-.LFB24
 4601 00d8 00000000 		.4byte	.LFB25
 4602 00dc 2E000000 		.4byte	.LFE25-.LFB25
 4603 00e0 00000000 		.4byte	.LFB26
 4604 00e4 1C000000 		.4byte	.LFE26-.LFB26
 4605 00e8 00000000 		.4byte	.LFB27
 4606 00ec 10000000 		.4byte	.LFE27-.LFB27
 4607 00f0 00000000 		.4byte	.LFB28
 4608 00f4 18000000 		.4byte	.LFE28-.LFB28
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 98


 4609 00f8 00000000 		.4byte	.LFB29
 4610 00fc 26000000 		.4byte	.LFE29-.LFB29
 4611 0100 00000000 		.4byte	.LFB30
 4612 0104 18000000 		.4byte	.LFE30-.LFB30
 4613 0108 00000000 		.4byte	.LFB31
 4614 010c 26000000 		.4byte	.LFE31-.LFB31
 4615 0110 00000000 		.4byte	.LFB32
 4616 0114 10000000 		.4byte	.LFE32-.LFB32
 4617 0118 00000000 		.4byte	.LFB33
 4618 011c 10000000 		.4byte	.LFE33-.LFB33
 4619 0120 00000000 		.4byte	.LFB34
 4620 0124 10000000 		.4byte	.LFE34-.LFB34
 4621 0128 00000000 		.4byte	.LFB35
 4622 012c 10000000 		.4byte	.LFE35-.LFB35
 4623 0130 00000000 		.4byte	.LFB36
 4624 0134 10000000 		.4byte	.LFE36-.LFB36
 4625 0138 00000000 		.4byte	.LFB37
 4626 013c 10000000 		.4byte	.LFE37-.LFB37
 4627 0140 00000000 		.4byte	.LFB38
 4628 0144 0E000000 		.4byte	.LFE38-.LFB38
 4629 0148 00000000 		.4byte	.LFB39
 4630 014c 0E000000 		.4byte	.LFE39-.LFB39
 4631 0150 00000000 		.4byte	.LFB40
 4632 0154 1A000000 		.4byte	.LFE40-.LFB40
 4633 0158 00000000 		.4byte	.LFB41
 4634 015c 0E000000 		.4byte	.LFE41-.LFB41
 4635 0160 00000000 		.4byte	.LFB42
 4636 0164 10000000 		.4byte	.LFE42-.LFB42
 4637 0168 00000000 		.4byte	.LFB43
 4638 016c 20000000 		.4byte	.LFE43-.LFB43
 4639 0170 00000000 		.4byte	.LFB44
 4640 0174 26000000 		.4byte	.LFE44-.LFB44
 4641 0178 00000000 		.4byte	.LFB45
 4642 017c 2C000000 		.4byte	.LFE45-.LFB45
 4643 0180 00000000 		.4byte	.LFB46
 4644 0184 30000000 		.4byte	.LFE46-.LFB46
 4645 0188 00000000 		.4byte	.LFB47
 4646 018c 1C000000 		.4byte	.LFE47-.LFB47
 4647 0190 00000000 		.4byte	.LFB48
 4648 0194 2E000000 		.4byte	.LFE48-.LFB48
 4649 0198 00000000 		.4byte	.LFB49
 4650 019c 30000000 		.4byte	.LFE49-.LFB49
 4651 01a0 00000000 		.4byte	.LFB50
 4652 01a4 34000000 		.4byte	.LFE50-.LFB50
 4653 01a8 00000000 		.4byte	.LFB51
 4654 01ac 24000000 		.4byte	.LFE51-.LFB51
 4655 01b0 00000000 		.4byte	.LFB52
 4656 01b4 12000000 		.4byte	.LFE52-.LFB52
 4657 01b8 00000000 		.4byte	.LFB53
 4658 01bc 12000000 		.4byte	.LFE53-.LFB53
 4659 01c0 00000000 		.4byte	.LFB54
 4660 01c4 12000000 		.4byte	.LFE54-.LFB54
 4661 01c8 00000000 		.4byte	.LFB55
 4662 01cc 12000000 		.4byte	.LFE55-.LFB55
 4663 01d0 00000000 		.4byte	.LFB56
 4664 01d4 10000000 		.4byte	.LFE56-.LFB56
 4665 01d8 00000000 		.4byte	.LFB57
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 99


 4666 01dc 24000000 		.4byte	.LFE57-.LFB57
 4667 01e0 00000000 		.4byte	.LFB58
 4668 01e4 48000000 		.4byte	.LFE58-.LFB58
 4669 01e8 00000000 		.4byte	.LFB59
 4670 01ec 0C000000 		.4byte	.LFE59-.LFB59
 4671 01f0 00000000 		.4byte	.LFB60
 4672 01f4 20000000 		.4byte	.LFE60-.LFB60
 4673 01f8 00000000 		.4byte	.LFB61
 4674 01fc 0C000000 		.4byte	.LFE61-.LFB61
 4675 0200 00000000 		.4byte	.LFB62
 4676 0204 0C000000 		.4byte	.LFE62-.LFB62
 4677 0208 00000000 		.4byte	0
 4678 020c 00000000 		.4byte	0
 4679              		.section	.debug_ranges,"",%progbits
 4680              	.Ldebug_ranges0:
 4681 0000 00000000 		.4byte	.LFB0
 4682 0004 40000000 		.4byte	.LFE0
 4683 0008 00000000 		.4byte	.LFB1
 4684 000c 34000000 		.4byte	.LFE1
 4685 0010 00000000 		.4byte	.LFB2
 4686 0014 5E000000 		.4byte	.LFE2
 4687 0018 00000000 		.4byte	.LFB3
 4688 001c 0C000000 		.4byte	.LFE3
 4689 0020 00000000 		.4byte	.LFB4
 4690 0024 0C000000 		.4byte	.LFE4
 4691 0028 00000000 		.4byte	.LFB5
 4692 002c 0C000000 		.4byte	.LFE5
 4693 0030 00000000 		.4byte	.LFB6
 4694 0034 16000000 		.4byte	.LFE6
 4695 0038 00000000 		.4byte	.LFB7
 4696 003c 0C000000 		.4byte	.LFE7
 4697 0040 00000000 		.4byte	.LFB8
 4698 0044 0C000000 		.4byte	.LFE8
 4699 0048 00000000 		.4byte	.LFB9
 4700 004c 22000000 		.4byte	.LFE9
 4701 0050 00000000 		.4byte	.LFB10
 4702 0054 10000000 		.4byte	.LFE10
 4703 0058 00000000 		.4byte	.LFB11
 4704 005c 14000000 		.4byte	.LFE11
 4705 0060 00000000 		.4byte	.LFB12
 4706 0064 14000000 		.4byte	.LFE12
 4707 0068 00000000 		.4byte	.LFB13
 4708 006c 10000000 		.4byte	.LFE13
 4709 0070 00000000 		.4byte	.LFB14
 4710 0074 10000000 		.4byte	.LFE14
 4711 0078 00000000 		.4byte	.LFB15
 4712 007c 1C000000 		.4byte	.LFE15
 4713 0080 00000000 		.4byte	.LFB16
 4714 0084 1C000000 		.4byte	.LFE16
 4715 0088 00000000 		.4byte	.LFB17
 4716 008c 2E000000 		.4byte	.LFE17
 4717 0090 00000000 		.4byte	.LFB18
 4718 0094 10000000 		.4byte	.LFE18
 4719 0098 00000000 		.4byte	.LFB19
 4720 009c 24000000 		.4byte	.LFE19
 4721 00a0 00000000 		.4byte	.LFB20
 4722 00a4 14000000 		.4byte	.LFE20
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 100


 4723 00a8 00000000 		.4byte	.LFB21
 4724 00ac 78000000 		.4byte	.LFE21
 4725 00b0 00000000 		.4byte	.LFB22
 4726 00b4 8C000000 		.4byte	.LFE22
 4727 00b8 00000000 		.4byte	.LFB23
 4728 00bc 3C000000 		.4byte	.LFE23
 4729 00c0 00000000 		.4byte	.LFB24
 4730 00c4 3C000000 		.4byte	.LFE24
 4731 00c8 00000000 		.4byte	.LFB25
 4732 00cc 2E000000 		.4byte	.LFE25
 4733 00d0 00000000 		.4byte	.LFB26
 4734 00d4 1C000000 		.4byte	.LFE26
 4735 00d8 00000000 		.4byte	.LFB27
 4736 00dc 10000000 		.4byte	.LFE27
 4737 00e0 00000000 		.4byte	.LFB28
 4738 00e4 18000000 		.4byte	.LFE28
 4739 00e8 00000000 		.4byte	.LFB29
 4740 00ec 26000000 		.4byte	.LFE29
 4741 00f0 00000000 		.4byte	.LFB30
 4742 00f4 18000000 		.4byte	.LFE30
 4743 00f8 00000000 		.4byte	.LFB31
 4744 00fc 26000000 		.4byte	.LFE31
 4745 0100 00000000 		.4byte	.LFB32
 4746 0104 10000000 		.4byte	.LFE32
 4747 0108 00000000 		.4byte	.LFB33
 4748 010c 10000000 		.4byte	.LFE33
 4749 0110 00000000 		.4byte	.LFB34
 4750 0114 10000000 		.4byte	.LFE34
 4751 0118 00000000 		.4byte	.LFB35
 4752 011c 10000000 		.4byte	.LFE35
 4753 0120 00000000 		.4byte	.LFB36
 4754 0124 10000000 		.4byte	.LFE36
 4755 0128 00000000 		.4byte	.LFB37
 4756 012c 10000000 		.4byte	.LFE37
 4757 0130 00000000 		.4byte	.LFB38
 4758 0134 0E000000 		.4byte	.LFE38
 4759 0138 00000000 		.4byte	.LFB39
 4760 013c 0E000000 		.4byte	.LFE39
 4761 0140 00000000 		.4byte	.LFB40
 4762 0144 1A000000 		.4byte	.LFE40
 4763 0148 00000000 		.4byte	.LFB41
 4764 014c 0E000000 		.4byte	.LFE41
 4765 0150 00000000 		.4byte	.LFB42
 4766 0154 10000000 		.4byte	.LFE42
 4767 0158 00000000 		.4byte	.LFB43
 4768 015c 20000000 		.4byte	.LFE43
 4769 0160 00000000 		.4byte	.LFB44
 4770 0164 26000000 		.4byte	.LFE44
 4771 0168 00000000 		.4byte	.LFB45
 4772 016c 2C000000 		.4byte	.LFE45
 4773 0170 00000000 		.4byte	.LFB46
 4774 0174 30000000 		.4byte	.LFE46
 4775 0178 00000000 		.4byte	.LFB47
 4776 017c 1C000000 		.4byte	.LFE47
 4777 0180 00000000 		.4byte	.LFB48
 4778 0184 2E000000 		.4byte	.LFE48
 4779 0188 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 101


 4780 018c 30000000 		.4byte	.LFE49
 4781 0190 00000000 		.4byte	.LFB50
 4782 0194 34000000 		.4byte	.LFE50
 4783 0198 00000000 		.4byte	.LFB51
 4784 019c 24000000 		.4byte	.LFE51
 4785 01a0 00000000 		.4byte	.LFB52
 4786 01a4 12000000 		.4byte	.LFE52
 4787 01a8 00000000 		.4byte	.LFB53
 4788 01ac 12000000 		.4byte	.LFE53
 4789 01b0 00000000 		.4byte	.LFB54
 4790 01b4 12000000 		.4byte	.LFE54
 4791 01b8 00000000 		.4byte	.LFB55
 4792 01bc 12000000 		.4byte	.LFE55
 4793 01c0 00000000 		.4byte	.LFB56
 4794 01c4 10000000 		.4byte	.LFE56
 4795 01c8 00000000 		.4byte	.LFB57
 4796 01cc 24000000 		.4byte	.LFE57
 4797 01d0 00000000 		.4byte	.LFB58
 4798 01d4 48000000 		.4byte	.LFE58
 4799 01d8 00000000 		.4byte	.LFB59
 4800 01dc 0C000000 		.4byte	.LFE59
 4801 01e0 00000000 		.4byte	.LFB60
 4802 01e4 20000000 		.4byte	.LFE60
 4803 01e8 00000000 		.4byte	.LFB61
 4804 01ec 0C000000 		.4byte	.LFE61
 4805 01f0 00000000 		.4byte	.LFB62
 4806 01f4 0C000000 		.4byte	.LFE62
 4807 01f8 00000000 		.4byte	0
 4808 01fc 00000000 		.4byte	0
 4809              		.section	.debug_line,"",%progbits
 4810              	.Ldebug_line0:
 4811 0000 E5060000 		.section	.debug_str,"MS",%progbits,1
 4811      0200D901 
 4811      00000201 
 4811      FB0E0D00 
 4811      01010101 
 4812              	.LASF121:
 4813 0000 4E52465F 		.ascii	"NRF_STATUS_MAX_RT_MASK\000"
 4813      53544154 
 4813      55535F4D 
 4813      41585F52 
 4813      545F4D41 
 4814              	.LASF128:
 4815 0017 4E52465F 		.ascii	"NRF_RPD_BIT_RPD\000"
 4815      5250445F 
 4815      4249545F 
 4815      52504400 
 4816              	.LASF184:
 4817 0027 6E524632 		.ascii	"nRF24_enable_dynamic_payload\000"
 4817      345F656E 
 4817      61626C65 
 4817      5F64796E 
 4817      616D6963 
 4818              	.LASF50:
 4819 0044 4E52465F 		.ascii	"NRF_ADDR_PIPE0\000"
 4819      41444452 
 4819      5F504950 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 102


 4819      453000
 4820              	.LASF51:
 4821 0053 4E52465F 		.ascii	"NRF_ADDR_PIPE1\000"
 4821      41444452 
 4821      5F504950 
 4821      453100
 4822              	.LASF52:
 4823 0062 4E52465F 		.ascii	"NRF_ADDR_PIPE2\000"
 4823      41444452 
 4823      5F504950 
 4823      453200
 4824              	.LASF53:
 4825 0071 4E52465F 		.ascii	"NRF_ADDR_PIPE3\000"
 4825      41444452 
 4825      5F504950 
 4825      453300
 4826              	.LASF54:
 4827 0080 4E52465F 		.ascii	"NRF_ADDR_PIPE4\000"
 4827      41444452 
 4827      5F504950 
 4827      453400
 4828              	.LASF55:
 4829 008f 4E52465F 		.ascii	"NRF_ADDR_PIPE5\000"
 4829      41444452 
 4829      5F504950 
 4829      453500
 4830              	.LASF170:
 4831 009e 6E524632 		.ascii	"nRF24_disable_auto_ack\000"
 4831      345F6469 
 4831      7361626C 
 4831      655F6175 
 4831      746F5F61 
 4832              	.LASF68:
 4833 00b5 4E52465F 		.ascii	"NRF_MAX_RT_IRQ\000"
 4833      4D41585F 
 4833      52545F49 
 4833      525100
 4834              	.LASF163:
 4835 00c4 6E524632 		.ascii	"nRF24_set_standby_i_mode\000"
 4835      345F7365 
 4835      745F7374 
 4835      616E6462 
 4835      795F695F 
 4836              	.LASF147:
 4837 00dd 4E52465F 		.ascii	"NRF_MAX_RF_CHANNEL\000"
 4837      4D41585F 
 4837      52465F43 
 4837      48414E4E 
 4837      454C00
 4838              	.LASF24:
 4839 00f0 4E52465F 		.ascii	"NRF_REG_STATUS\000"
 4839      5245475F 
 4839      53544154 
 4839      555300
 4840              	.LASF156:
 4841 00ff 6E524632 		.ascii	"nRF24_sleep\000"
 4841      345F736C 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 103


 4841      65657000 
 4842              	.LASF83:
 4843 010b 4E52465F 		.ascii	"NRF_CONFIG_1_BYTE_CRC\000"
 4843      434F4E46 
 4843      49475F31 
 4843      5F425954 
 4843      455F4352 
 4844              	.LASF188:
 4845 0121 6E524632 		.ascii	"nRF24_enable_dynamic_payload_length\000"
 4845      345F656E 
 4845      61626C65 
 4845      5F64796E 
 4845      616D6963 
 4846              	.LASF171:
 4847 0145 6E524632 		.ascii	"nRF24_set_channel\000"
 4847      345F7365 
 4847      745F6368 
 4847      616E6E65 
 4847      6C00
 4848              	.LASF8:
 4849 0157 756E7369 		.ascii	"unsigned int\000"
 4849      676E6564 
 4849      20696E74 
 4849      00
 4850              	.LASF123:
 4851 0164 4E52465F 		.ascii	"NRF_STATUS_RX_DR_MASK\000"
 4851      53544154 
 4851      55535F52 
 4851      585F4452 
 4851      5F4D4153 
 4852              	.LASF67:
 4853 017a 4E52465F 		.ascii	"NRF_NONE_IRQ\000"
 4853      4E4F4E45 
 4853      5F495251 
 4853      00
 4854              	.LASF129:
 4855 0187 4E52465F 		.ascii	"NRF_FIFO_STATUS_BIT_RX_EMPTY\000"
 4855      4649464F 
 4855      5F535441 
 4855      5455535F 
 4855      4249545F 
 4856              	.LASF183:
 4857 01a4 6E524632 		.ascii	"nRF24_reuse_last_transmitted_payload\000"
 4857      345F7265 
 4857      7573655F 
 4857      6C617374 
 4857      5F747261 
 4858              	.LASF148:
 4859 01c9 4E52465F 		.ascii	"NRF_ALL_IRQ_MASK\000"
 4859      414C4C5F 
 4859      4952515F 
 4859      4D41534B 
 4859      00
 4860              	.LASF21:
 4861 01da 4E52465F 		.ascii	"NRF_REG_SETUP_RETR\000"
 4861      5245475F 
 4861      53455455 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 104


 4861      505F5245 
 4861      545200
 4862              	.LASF212:
 4863 01ed 6E524632 		.ascii	"nRF24_get_data_pipe_with_payload\000"
 4863      345F6765 
 4863      745F6461 
 4863      74615F70 
 4863      6970655F 
 4864              	.LASF105:
 4865 020e 4E52465F 		.ascii	"NRF_SETUP_AW_3BYTES\000"
 4865      53455455 
 4865      505F4157 
 4865      5F334259 
 4865      54455300 
 4866              	.LASF226:
 4867 0222 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4867      43313120 
 4867      352E342E 
 4867      31203230 
 4867      31363036 
 4868 0255 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4868      20726576 
 4868      6973696F 
 4868      6E203233 
 4868      37373135 
 4869 0288 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4869      66756E63 
 4869      74696F6E 
 4869      2D736563 
 4869      74696F6E 
 4870              	.LASF217:
 4871 02b0 6E524632 		.ascii	"nRF24_clear_all_irqs\000"
 4871      345F636C 
 4871      6561725F 
 4871      616C6C5F 
 4871      69727173 
 4872              	.LASF208:
 4873 02c5 5F426F6F 		.ascii	"_Bool\000"
 4873      6C00
 4874              	.LASF118:
 4875 02cb 4E52465F 		.ascii	"NRF_RF_SETUP_BIT_PLL_LOCK\000"
 4875      52465F53 
 4875      45545550 
 4875      5F424954 
 4875      5F504C4C 
 4876              	.LASF197:
 4877 02e5 6E524632 		.ascii	"nRF24_get_status\000"
 4877      345F6765 
 4877      745F7374 
 4877      61747573 
 4877      00
 4878              	.LASF161:
 4879 02f6 6D6F6465 		.ascii	"mode\000"
 4879      00
 4880              	.LASF165:
 4881 02fb 6E524632 		.ascii	"nRF24_set_rx_mode\000"
 4881      345F7365 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 105


 4881      745F7278 
 4881      5F6D6F64 
 4881      6500
 4882              	.LASF56:
 4883 030d 6E72665F 		.ascii	"nrf_addr_rx_pipe\000"
 4883      61646472 
 4883      5F72785F 
 4883      70697065 
 4883      00
 4884              	.LASF66:
 4885 031e 6E72665F 		.ascii	"nrf_mode\000"
 4885      6D6F6465 
 4885      00
 4886              	.LASF89:
 4887 0327 4E52465F 		.ascii	"NRF_CONFIG_ENABLE_TX_DS\000"
 4887      434F4E46 
 4887      49475F45 
 4887      4E41424C 
 4887      455F5458 
 4888              	.LASF122:
 4889 033f 4E52465F 		.ascii	"NRF_STATUS_TX_DS_MASK\000"
 4889      53544154 
 4889      55535F54 
 4889      585F4453 
 4889      5F4D4153 
 4890              	.LASF204:
 4891 0355 6E524632 		.ascii	"nRF24_put_in_tx_fifo\000"
 4891      345F7075 
 4891      745F696E 
 4891      5F74785F 
 4891      6669666F 
 4892              	.LASF206:
 4893 036a 6E524632 		.ascii	"nRF24_transmit\000"
 4893      345F7472 
 4893      616E736D 
 4893      697400
 4894              	.LASF200:
 4895 0379 6E524632 		.ascii	"nRF24_get_retransmissions_count\000"
 4895      345F6765 
 4895      745F7265 
 4895      7472616E 
 4895      736D6973 
 4896              	.LASF162:
 4897 0399 6E524632 		.ascii	"nRF24_set_power_down_mode\000"
 4897      345F7365 
 4897      745F706F 
 4897      7765725F 
 4897      646F776E 
 4898              	.LASF115:
 4899 03b3 4E52465F 		.ascii	"NRF_RF_SETUP_BIT_RF_PWR\000"
 4899      52465F53 
 4899      45545550 
 4899      5F424954 
 4899      5F52465F 
 4900              	.LASF11:
 4901 03cb 666C6F61 		.ascii	"float\000"
 4901      7400
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 106


 4902              	.LASF157:
 4903 03d1 6E524632 		.ascii	"nRF24_wakeup\000"
 4903      345F7761 
 4903      6B657570 
 4903      00
 4904              	.LASF117:
 4905 03de 4E52465F 		.ascii	"NRF_RF_SETUP_BIT_RF_DR_HIGH\000"
 4905      52465F53 
 4905      45545550 
 4905      5F424954 
 4905      5F52465F 
 4906              	.LASF110:
 4907 03fa 4E52465F 		.ascii	"NRF_PIPE_ADDR_WIDTH_4BYTES\000"
 4907      50495045 
 4907      5F414444 
 4907      525F5749 
 4907      4454485F 
 4908              	.LASF202:
 4909 0415 636F756E 		.ascii	"count\000"
 4909      7400
 4910              	.LASF92:
 4911 041b 4E52465F 		.ascii	"NRF_CONFIG_DISABLE_RX_DR\000"
 4911      434F4E46 
 4911      49475F44 
 4911      49534142 
 4911      4C455F52 
 4912              	.LASF74:
 4913 0434 4E52465F 		.ascii	"NRF_CONFIG_BIT_CRCO\000"
 4913      434F4E46 
 4913      49475F42 
 4913      49545F43 
 4913      52434F00 
 4914              	.LASF194:
 4915 0448 6E524632 		.ascii	"nRF24_start_listening\000"
 4915      345F7374 
 4915      6172745F 
 4915      6C697374 
 4915      656E696E 
 4916              	.LASF125:
 4917 045e 4E52465F 		.ascii	"NRF_OBSERVE_TX_BIT_PLOS_CNT\000"
 4917      4F425345 
 4917      5256455F 
 4917      54585F42 
 4917      49545F50 
 4918              	.LASF7:
 4919 047a 6C6F6E67 		.ascii	"long long unsigned int\000"
 4919      206C6F6E 
 4919      6720756E 
 4919      7369676E 
 4919      65642069 
 4920              	.LASF155:
 4921 0491 6E524632 		.ascii	"nRF24_stop\000"
 4921      345F7374 
 4921      6F7000
 4922              	.LASF20:
 4923 049c 4E52465F 		.ascii	"NRF_REG_SETUP_AW\000"
 4923      5245475F 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 107


 4923      53455455 
 4923      505F4157 
 4923      00
 4924              	.LASF187:
 4925 04ad 6E524632 		.ascii	"nRF24_disable_dynamic_payload_on_pipe\000"
 4925      345F6469 
 4925      7361626C 
 4925      655F6479 
 4925      6E616D69 
 4926              	.LASF17:
 4927 04d3 4E52465F 		.ascii	"NRF_REG_CONFIG\000"
 4927      5245475F 
 4927      434F4E46 
 4927      494700
 4928              	.LASF154:
 4929 04e2 6E524632 		.ascii	"nRF24_enable\000"
 4929      345F656E 
 4929      61626C65 
 4929      00
 4930              	.LASF152:
 4931 04ef 6E524632 		.ascii	"nRF24_start\000"
 4931      345F7374 
 4931      61727400 
 4932              	.LASF124:
 4933 04fb 4E52465F 		.ascii	"NRF_OBSERVE_TX_BIT_ARC_CNT\000"
 4933      4F425345 
 4933      5256455F 
 4933      54585F42 
 4933      49545F41 
 4934              	.LASF166:
 4935 0516 6E524632 		.ascii	"nRF24_set_tx_mode\000"
 4935      345F7365 
 4935      745F7478 
 4935      5F6D6F64 
 4935      6500
 4936              	.LASF25:
 4937 0528 4E52465F 		.ascii	"NRF_REG_OBSERVE_TX\000"
 4937      5245475F 
 4937      4F425345 
 4937      5256455F 
 4937      545800
 4938              	.LASF169:
 4939 053b 70697065 		.ascii	"pipe\000"
 4939      00
 4940              	.LASF49:
 4941 0540 6E72665F 		.ascii	"nrf_pipe\000"
 4941      70697065 
 4941      00
 4942              	.LASF93:
 4943 0549 4E52465F 		.ascii	"NRF_EN_AA_BIT_ENAA_P0\000"
 4943      454E5F41 
 4943      415F4249 
 4943      545F454E 
 4943      41415F50 
 4944              	.LASF94:
 4945 055f 4E52465F 		.ascii	"NRF_EN_AA_BIT_ENAA_P1\000"
 4945      454E5F41 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 108


 4945      415F4249 
 4945      545F454E 
 4945      41415F50 
 4946              	.LASF71:
 4947 0575 6E72665F 		.ascii	"nrf_irq\000"
 4947      69727100 
 4948              	.LASF84:
 4949 057d 4E52465F 		.ascii	"NRF_CONFIG_2_BYTE_CRC\000"
 4949      434F4E46 
 4949      49475F32 
 4949      5F425954 
 4949      455F4352 
 4950              	.LASF97:
 4951 0593 4E52465F 		.ascii	"NRF_EN_AA_BIT_ENAA_P4\000"
 4951      454E5F41 
 4951      415F4249 
 4951      545F454E 
 4951      41415F50 
 4952              	.LASF98:
 4953 05a9 4E52465F 		.ascii	"NRF_EN_AA_BIT_ENAA_P5\000"
 4953      454E5F41 
 4953      415F4249 
 4953      545F454E 
 4953      41415F50 
 4954              	.LASF218:
 4955 05bf 6E524632 		.ascii	"nRF24_clear_irq_flag\000"
 4955      345F636C 
 4955      6561725F 
 4955      6972715F 
 4955      666C6167 
 4956              	.LASF14:
 4957 05d4 73697A65 		.ascii	"size_t\000"
 4957      5F7400
 4958              	.LASF158:
 4959 05db 6E524632 		.ascii	"nRF24_save_config\000"
 4959      345F7361 
 4959      76655F63 
 4959      6F6E6669 
 4959      6700
 4960              	.LASF82:
 4961 05ed 4E52465F 		.ascii	"NRF_CONFIG_PWR_UP\000"
 4961      434F4E46 
 4961      49475F50 
 4961      57525F55 
 4961      5000
 4962              	.LASF199:
 4963 05ff 6E524632 		.ascii	"nRF24_get_payload_size\000"
 4963      345F6765 
 4963      745F7061 
 4963      796C6F61 
 4963      645F7369 
 4964              	.LASF43:
 4965 0616 4E52465F 		.ascii	"NRF_PIPE0\000"
 4965      50495045 
 4965      3000
 4966              	.LASF44:
 4967 0620 4E52465F 		.ascii	"NRF_PIPE1\000"
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 109


 4967      50495045 
 4967      3100
 4968              	.LASF45:
 4969 062a 4E52465F 		.ascii	"NRF_PIPE2\000"
 4969      50495045 
 4969      3200
 4970              	.LASF46:
 4971 0634 4E52465F 		.ascii	"NRF_PIPE3\000"
 4971      50495045 
 4971      3300
 4972              	.LASF47:
 4973 063e 4E52465F 		.ascii	"NRF_PIPE4\000"
 4973      50495045 
 4973      3400
 4974              	.LASF48:
 4975 0648 4E52465F 		.ascii	"NRF_PIPE5\000"
 4975      50495045 
 4975      3500
 4976              	.LASF27:
 4977 0652 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P0\000"
 4977      5245475F 
 4977      52585F41 
 4977      4444525F 
 4977      503000
 4978              	.LASF28:
 4979 0665 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P1\000"
 4979      5245475F 
 4979      52585F41 
 4979      4444525F 
 4979      503100
 4980              	.LASF29:
 4981 0678 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P2\000"
 4981      5245475F 
 4981      52585F41 
 4981      4444525F 
 4981      503200
 4982              	.LASF30:
 4983 068b 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P3\000"
 4983      5245475F 
 4983      52585F41 
 4983      4444525F 
 4983      503300
 4984              	.LASF31:
 4985 069e 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P4\000"
 4985      5245475F 
 4985      52585F41 
 4985      4444525F 
 4985      503400
 4986              	.LASF32:
 4987 06b1 4E52465F 		.ascii	"NRF_REG_RX_ADDR_P5\000"
 4987      5245475F 
 4987      52585F41 
 4987      4444525F 
 4987      503500
 4988              	.LASF149:
 4989 06c4 4E52465F 		.ascii	"NRF_STATUS_PIPES_MASK\000"
 4989      53544154 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 110


 4989      55535F50 
 4989      49504553 
 4989      5F4D4153 
 4990              	.LASF107:
 4991 06da 4E52465F 		.ascii	"NRF_SETUP_AW_5BYTES\000"
 4991      53455455 
 4991      505F4157 
 4991      5F354259 
 4991      54455300 
 4992              	.LASF180:
 4993 06ee 6E524632 		.ascii	"nRF24_set_tx_address\000"
 4993      345F7365 
 4993      745F7478 
 4993      5F616464 
 4993      72657373 
 4994              	.LASF76:
 4995 0703 4E52465F 		.ascii	"NRF_CONFIG_BIT_MASK_MAX_RT\000"
 4995      434F4E46 
 4995      49475F42 
 4995      49545F4D 
 4995      41534B5F 
 4996              	.LASF141:
 4997 071e 4E52465F 		.ascii	"NRF_FEATURE_BIT_EN_ACK_PAY\000"
 4997      46454154 
 4997      5552455F 
 4997      4249545F 
 4997      454E5F41 
 4998              	.LASF198:
 4999 0739 6E524632 		.ascii	"nRF24_get_fifo_status\000"
 4999      345F6765 
 4999      745F6669 
 4999      666F5F73 
 4999      74617475 
 5000              	.LASF13:
 5001 074f 63686172 		.ascii	"char\000"
 5001      00
 5002              	.LASF216:
 5003 0754 6E524632 		.ascii	"nRF24_test_carrier\000"
 5003      345F7465 
 5003      73745F63 
 5003      61727269 
 5003      657200
 5004              	.LASF150:
 5005 0767 4750494F 		.ascii	"GPIO_CLEAR\000"
 5005      5F434C45 
 5005      415200
 5006              	.LASF65:
 5007 0772 4E52465F 		.ascii	"NRF_MODE_RX\000"
 5007      4D4F4445 
 5007      5F525800 
 5008              	.LASF181:
 5009 077e 6E524632 		.ascii	"nRF24_get_tx_address\000"
 5009      345F6765 
 5009      745F7478 
 5009      5F616464 
 5009      72657373 
 5010              	.LASF207:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 111


 5011 0793 6E524632 		.ascii	"nRF24_is_data_ready\000"
 5011      345F6973 
 5011      5F646174 
 5011      615F7265 
 5011      61647900 
 5012              	.LASF205:
 5013 07a7 64617461 		.ascii	"data\000"
 5013      00
 5014              	.LASF23:
 5015 07ac 4E52465F 		.ascii	"NRF_REG_RF_SETUP\000"
 5015      5245475F 
 5015      52465F53 
 5015      45545550 
 5015      00
 5016              	.LASF10:
 5017 07bd 75696E74 		.ascii	"uint8_t\000"
 5017      385F7400 
 5018              	.LASF75:
 5019 07c5 4E52465F 		.ascii	"NRF_CONFIG_BIT_EN_CRC\000"
 5019      434F4E46 
 5019      49475F42 
 5019      49545F45 
 5019      4E5F4352 
 5020              	.LASF229:
 5021 07db 5F616464 		.ascii	"_addr_width_conf_to_bytes\000"
 5021      725F7769 
 5021      6474685F 
 5021      636F6E66 
 5021      5F746F5F 
 5022              	.LASF70:
 5023 07f5 4E52465F 		.ascii	"NRF_RX_DR_IRQ\000"
 5023      52585F44 
 5023      525F4952 
 5023      5100
 5024              	.LASF143:
 5025 0803 4E52465F 		.ascii	"NRF_STATUS_PIPES_SHIFT\000"
 5025      53544154 
 5025      55535F50 
 5025      49504553 
 5025      5F534849 
 5026              	.LASF132:
 5027 081a 4E52465F 		.ascii	"NRF_FIFO_STATUS_BIT_TX_FULL\000"
 5027      4649464F 
 5027      5F535441 
 5027      5455535F 
 5027      4249545F 
 5028              	.LASF133:
 5029 0836 4E52465F 		.ascii	"NRF_FIFO_STATUS_BIT_TX_REUSE\000"
 5029      4649464F 
 5029      5F535441 
 5029      5455535F 
 5029      4249545F 
 5030              	.LASF6:
 5031 0853 6C6F6E67 		.ascii	"long long int\000"
 5031      206C6F6E 
 5031      6720696E 
 5031      7400
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 112


 5032              	.LASF142:
 5033 0861 4E52465F 		.ascii	"NRF_FEATURE_BIT_EN_DPL\000"
 5033      46454154 
 5033      5552455F 
 5033      4249545F 
 5033      454E5F44 
 5034              	.LASF57:
 5035 0878 4E52465F 		.ascii	"NRF_PLD_SIZE_PIPE0\000"
 5035      504C445F 
 5035      53495A45 
 5035      5F504950 
 5035      453000
 5036              	.LASF58:
 5037 088b 4E52465F 		.ascii	"NRF_PLD_SIZE_PIPE1\000"
 5037      504C445F 
 5037      53495A45 
 5037      5F504950 
 5037      453100
 5038              	.LASF59:
 5039 089e 4E52465F 		.ascii	"NRF_PLD_SIZE_PIPE2\000"
 5039      504C445F 
 5039      53495A45 
 5039      5F504950 
 5039      453200
 5040              	.LASF60:
 5041 08b1 4E52465F 		.ascii	"NRF_PLD_SIZE_PIPE3\000"
 5041      504C445F 
 5041      53495A45 
 5041      5F504950 
 5041      453300
 5042              	.LASF61:
 5043 08c4 4E52465F 		.ascii	"NRF_PLD_SIZE_PIPE4\000"
 5043      504C445F 
 5043      53495A45 
 5043      5F504950 
 5043      453400
 5044              	.LASF62:
 5045 08d7 4E52465F 		.ascii	"NRF_PLD_SIZE_PIPE5\000"
 5045      504C445F 
 5045      53495A45 
 5045      5F504950 
 5045      453500
 5046              	.LASF201:
 5047 08ea 6E524632 		.ascii	"nRF24_get_lost_packets_count\000"
 5047      345F6765 
 5047      745F6C6F 
 5047      73745F70 
 5047      61636B65 
 5048              	.LASF140:
 5049 0907 4E52465F 		.ascii	"NRF_FEATURE_BIT_EN_DYN_ACK\000"
 5049      46454154 
 5049      5552455F 
 5049      4249545F 
 5049      454E5F44 
 5050              	.LASF90:
 5051 0922 4E52465F 		.ascii	"NRF_CONFIG_DISABLE_TX_DS\000"
 5051      434F4E46 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 113


 5051      49475F44 
 5051      49534142 
 5051      4C455F54 
 5052              	.LASF78:
 5053 093b 4E52465F 		.ascii	"NRF_CONFIG_BIT_MASK_RX_DR\000"
 5053      434F4E46 
 5053      49475F42 
 5053      49545F4D 
 5053      41534B5F 
 5054              	.LASF112:
 5055 0955 6E72665F 		.ascii	"nrf_pipe_addr_width\000"
 5055      70697065 
 5055      5F616464 
 5055      725F7769 
 5055      64746800 
 5056              	.LASF219:
 5057 0969 6972715F 		.ascii	"irq_flag\000"
 5057      666C6167 
 5057      00
 5058              	.LASF64:
 5059 0972 4E52465F 		.ascii	"NRF_MODE_TX\000"
 5059      4D4F4445 
 5059      5F545800 
 5060              	.LASF178:
 5061 097e 73697A65 		.ascii	"size\000"
 5061      00
 5062              	.LASF210:
 5063 0983 6E524632 		.ascii	"nRF24_tx_transmit_no_ack\000"
 5063      345F7478 
 5063      5F747261 
 5063      6E736D69 
 5063      745F6E6F 
 5064              	.LASF192:
 5065 099c 6E524632 		.ascii	"nRF24_enable_payload_with_no_ack\000"
 5065      345F656E 
 5065      61626C65 
 5065      5F706179 
 5065      6C6F6164 
 5066              	.LASF109:
 5067 09bd 4E52465F 		.ascii	"NRF_PIPE_ADDR_WIDTH_3BYTES\000"
 5067      50495045 
 5067      5F414444 
 5067      525F5749 
 5067      4454485F 
 5068              	.LASF211:
 5069 09d8 6E524632 		.ascii	"nRF24_rx_write_payload\000"
 5069      345F7278 
 5069      5F777269 
 5069      74655F70 
 5069      61796C6F 
 5070              	.LASF81:
 5071 09ef 4E52465F 		.ascii	"NRF_CONFIG_PWR_DOWN\000"
 5071      434F4E46 
 5071      49475F50 
 5071      57525F44 
 5071      4F574E00 
 5072              	.LASF87:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 114


 5073 0a03 4E52465F 		.ascii	"NRF_CONFIG_ENABLE_MAX_RT\000"
 5073      434F4E46 
 5073      49475F45 
 5073      4E41424C 
 5073      455F4D41 
 5074              	.LASF85:
 5075 0a1c 4E52465F 		.ascii	"NRF_CONFIG_DISABLE_CRC\000"
 5075      434F4E46 
 5075      49475F44 
 5075      49534142 
 5075      4C455F43 
 5076              	.LASF159:
 5077 0a33 6E524632 		.ascii	"nRF24_restore_config\000"
 5077      345F7265 
 5077      73746F72 
 5077      655F636F 
 5077      6E666967 
 5078              	.LASF100:
 5079 0a48 4E52465F 		.ascii	"NRF_EN_RXADDR_BIT_ERX_P1\000"
 5079      454E5F52 
 5079      58414444 
 5079      525F4249 
 5079      545F4552 
 5080              	.LASF222:
 5081 0a61 6E524632 		.ascii	"nRF24_get_status_clear_irq\000"
 5081      345F6765 
 5081      745F7374 
 5081      61747573 
 5081      5F636C65 
 5082              	.LASF15:
 5083 0a7c 6C6F6E67 		.ascii	"long double\000"
 5083      20646F75 
 5083      626C6500 
 5084              	.LASF119:
 5085 0a88 4E52465F 		.ascii	"NRF_RF_SETUP_BIT_RF_DR_LOW\000"
 5085      52465F53 
 5085      45545550 
 5085      5F424954 
 5085      5F52465F 
 5086              	.LASF225:
 5087 0aa3 5F6E7266 		.ascii	"_nrf_addr_width\000"
 5087      5F616464 
 5087      725F7769 
 5087      64746800 
 5088              	.LASF177:
 5089 0ab3 61646472 		.ascii	"addr\000"
 5089      00
 5090              	.LASF172:
 5091 0ab8 6368616E 		.ascii	"channel\000"
 5091      6E656C00 
 5092              	.LASF126:
 5093 0ac0 4E52465F 		.ascii	"NRF_OBSERVE_TX_ARC_CNT_MASK\000"
 5093      4F425345 
 5093      5256455F 
 5093      54585F41 
 5093      52435F43 
 5094              	.LASF134:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 115


 5095 0adc 4E52465F 		.ascii	"NRF_DYNPD_BIT_DPL_P0\000"
 5095      44594E50 
 5095      445F4249 
 5095      545F4450 
 5095      4C5F5030 
 5096              	.LASF135:
 5097 0af1 4E52465F 		.ascii	"NRF_DYNPD_BIT_DPL_P1\000"
 5097      44594E50 
 5097      445F4249 
 5097      545F4450 
 5097      4C5F5031 
 5098              	.LASF136:
 5099 0b06 4E52465F 		.ascii	"NRF_DYNPD_BIT_DPL_P2\000"
 5099      44594E50 
 5099      445F4249 
 5099      545F4450 
 5099      4C5F5032 
 5100              	.LASF137:
 5101 0b1b 4E52465F 		.ascii	"NRF_DYNPD_BIT_DPL_P3\000"
 5101      44594E50 
 5101      445F4249 
 5101      545F4450 
 5101      4C5F5033 
 5102              	.LASF138:
 5103 0b30 4E52465F 		.ascii	"NRF_DYNPD_BIT_DPL_P4\000"
 5103      44594E50 
 5103      445F4249 
 5103      545F4450 
 5103      4C5F5034 
 5104              	.LASF139:
 5105 0b45 4E52465F 		.ascii	"NRF_DYNPD_BIT_DPL_P5\000"
 5105      44594E50 
 5105      445F4249 
 5105      545F4450 
 5105      4C5F5035 
 5106              	.LASF108:
 5107 0b5a 6E72665F 		.ascii	"nrf_addr_width\000"
 5107      61646472 
 5107      5F776964 
 5107      746800
 5108              	.LASF174:
 5109 0b69 6E524632 		.ascii	"nRF24_get_channel\000"
 5109      345F6765 
 5109      745F6368 
 5109      616E6E65 
 5109      6C00
 5110              	.LASF2:
 5111 0b7b 73686F72 		.ascii	"short int\000"
 5111      7420696E 
 5111      7400
 5112              	.LASF95:
 5113 0b85 4E52465F 		.ascii	"NRF_EN_AA_BIT_ENAA_P2\000"
 5113      454E5F41 
 5113      415F4249 
 5113      545F454E 
 5113      41415F50 
 5114              	.LASF96:
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 116


 5115 0b9b 4E52465F 		.ascii	"NRF_EN_AA_BIT_ENAA_P3\000"
 5115      454E5F41 
 5115      415F4249 
 5115      545F454E 
 5115      41415F50 
 5116              	.LASF213:
 5117 0bb1 6E524632 		.ascii	"nRF24_received_power_detector\000"
 5117      345F7265 
 5117      63656976 
 5117      65645F70 
 5117      6F776572 
 5118              	.LASF195:
 5119 0bcf 6E524632 		.ascii	"nRF24_stop_listening\000"
 5119      345F7374 
 5119      6F705F6C 
 5119      69737465 
 5119      6E696E67 
 5120              	.LASF179:
 5121 0be4 6E524632 		.ascii	"nRF24_get_rx_pipe_address\000"
 5121      345F6765 
 5121      745F7278 
 5121      5F706970 
 5121      655F6164 
 5122              	.LASF4:
 5123 0bfe 6C6F6E67 		.ascii	"long int\000"
 5123      20696E74 
 5123      00
 5124              	.LASF42:
 5125 0c07 4E52465F 		.ascii	"NRF_REG_FEATURE\000"
 5125      5245475F 
 5125      46454154 
 5125      55524500 
 5126              	.LASF80:
 5127 0c17 4E52465F 		.ascii	"NRF_CONFIG_RECEIVER\000"
 5127      434F4E46 
 5127      49475F52 
 5127      45434549 
 5127      56455200 
 5128              	.LASF69:
 5129 0c2b 4E52465F 		.ascii	"NRF_TX_DS_IRQ\000"
 5129      54585F44 
 5129      535F4952 
 5129      5100
 5130              	.LASF196:
 5131 0c39 6E524632 		.ascii	"nRF24_transmit_pulse\000"
 5131      345F7472 
 5131      616E736D 
 5131      69745F70 
 5131      756C7365 
 5132              	.LASF209:
 5133 0c4e 6E524632 		.ascii	"nRF24_get_rx_payload\000"
 5133      345F6765 
 5133      745F7278 
 5133      5F706179 
 5133      6C6F6164 
 5134              	.LASF153:
 5135 0c63 6E524632 		.ascii	"nRF24_init\000"
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 117


 5135      345F696E 
 5135      697400
 5136              	.LASF120:
 5137 0c6e 4E52465F 		.ascii	"NRF_RF_SETUP_BIT_CONT_WAVE\000"
 5137      52465F53 
 5137      45545550 
 5137      5F424954 
 5137      5F434F4E 
 5138              	.LASF227:
 5139 0c89 47656E65 		.ascii	"Generated_Source\\PSoC5\\nRF24_FUNCS.c\000"
 5139      72617465 
 5139      645F536F 
 5139      75726365 
 5139      5C50536F 
 5140              	.LASF131:
 5141 0cae 4E52465F 		.ascii	"NRF_FIFO_STATUS_BIT_TX_EMPTY\000"
 5141      4649464F 
 5141      5F535441 
 5141      5455535F 
 5141      4249545F 
 5142              	.LASF40:
 5143 0ccb 4E52465F 		.ascii	"NRF_REG_FIFO_STATUS\000"
 5143      5245475F 
 5143      4649464F 
 5143      5F535441 
 5143      54555300 
 5144              	.LASF73:
 5145 0cdf 4E52465F 		.ascii	"NRF_CONFIG_BIT_PWR_UP\000"
 5145      434F4E46 
 5145      49475F42 
 5145      49545F50 
 5145      57525F55 
 5146              	.LASF116:
 5147 0cf5 4E52465F 		.ascii	"NRF_RF_SETUP_BIT_RF_DR\000"
 5147      52465F53 
 5147      45545550 
 5147      5F424954 
 5147      5F52465F 
 5148              	.LASF9:
 5149 0d0c 5F5F7569 		.ascii	"__uint8_t\000"
 5149      6E74385F 
 5149      7400
 5150              	.LASF106:
 5151 0d16 4E52465F 		.ascii	"NRF_SETUP_AW_4BYTES\000"
 5151      53455455 
 5151      505F4157 
 5151      5F344259 
 5151      54455300 
 5152              	.LASF79:
 5153 0d2a 4E52465F 		.ascii	"NRF_CONFIG_TRANSMITTER\000"
 5153      434F4E46 
 5153      49475F54 
 5153      52414E53 
 5153      4D495454 
 5154              	.LASF168:
 5155 0d41 6E524632 		.ascii	"nRF24_enable_auto_ack\000"
 5155      345F656E 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 118


 5155      61626C65 
 5155      5F617574 
 5155      6F5F6163 
 5156              	.LASF41:
 5157 0d57 4E52465F 		.ascii	"NRF_REG_DYNPD\000"
 5157      5245475F 
 5157      44594E50 
 5157      4400
 5158              	.LASF182:
 5159 0d65 6E524632 		.ascii	"nRF24_set_payload_size\000"
 5159      345F7365 
 5159      745F7061 
 5159      796C6F61 
 5159      645F7369 
 5160              	.LASF220:
 5161 0d7c 6E524632 		.ascii	"nRF24_get_irq_flag\000"
 5161      345F6765 
 5161      745F6972 
 5161      715F666C 
 5161      616700
 5162              	.LASF190:
 5163 0d8f 6E524632 		.ascii	"nRF24_enable_payload_with_ack\000"
 5163      345F656E 
 5163      61626C65 
 5163      5F706179 
 5163      6C6F6164 
 5164              	.LASF16:
 5165 0dad 73697A65 		.ascii	"sizetype\000"
 5165      74797065 
 5165      00
 5166              	.LASF189:
 5167 0db6 6E524632 		.ascii	"nRF24_disable_dynamic_payload_length\000"
 5167      345F6469 
 5167      7361626C 
 5167      655F6479 
 5167      6E616D69 
 5168              	.LASF160:
 5169 0ddb 61646472 		.ascii	"addr_width\000"
 5169      5F776964 
 5169      746800
 5170              	.LASF5:
 5171 0de6 6C6F6E67 		.ascii	"long unsigned int\000"
 5171      20756E73 
 5171      69676E65 
 5171      6420696E 
 5171      7400
 5172              	.LASF144:
 5173 0df8 4E52465F 		.ascii	"NRF_CE_PULSE_WIDTH_US\000"
 5173      43455F50 
 5173      554C5345 
 5173      5F574944 
 5173      54485F55 
 5174              	.LASF228:
 5175 0e0e 433A5C55 		.ascii	"C:\\Users\\rens_\\Documents\\platooning\\PSoC\\Plat"
 5175      73657273 
 5175      5C72656E 
 5175      735F5C44 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 119


 5175      6F63756D 
 5176 0e3b 6F6F6E69 		.ascii	"ooning\\AngleMeasurement.cydsn\000"
 5176      6E675C41 
 5176      6E676C65 
 5176      4D656173 
 5176      7572656D 
 5177              	.LASF26:
 5178 0e59 4E52465F 		.ascii	"NRF_REG_RPD\000"
 5178      5245475F 
 5178      52504400 
 5179              	.LASF22:
 5180 0e65 4E52465F 		.ascii	"NRF_REG_RF_CH\000"
 5180      5245475F 
 5180      52465F43 
 5180      4800
 5181              	.LASF99:
 5182 0e73 4E52465F 		.ascii	"NRF_EN_RXADDR_BIT_ERX_P0\000"
 5182      454E5F52 
 5182      58414444 
 5182      525F4249 
 5182      545F4552 
 5183              	.LASF1:
 5184 0e8c 756E7369 		.ascii	"unsigned char\000"
 5184      676E6564 
 5184      20636861 
 5184      7200
 5185              	.LASF101:
 5186 0e9a 4E52465F 		.ascii	"NRF_EN_RXADDR_BIT_ERX_P2\000"
 5186      454E5F52 
 5186      58414444 
 5186      525F4249 
 5186      545F4552 
 5187              	.LASF102:
 5188 0eb3 4E52465F 		.ascii	"NRF_EN_RXADDR_BIT_ERX_P3\000"
 5188      454E5F52 
 5188      58414444 
 5188      525F4249 
 5188      545F4552 
 5189              	.LASF103:
 5190 0ecc 4E52465F 		.ascii	"NRF_EN_RXADDR_BIT_ERX_P4\000"
 5190      454E5F52 
 5190      58414444 
 5190      525F4249 
 5190      545F4552 
 5191              	.LASF104:
 5192 0ee5 4E52465F 		.ascii	"NRF_EN_RXADDR_BIT_ERX_P5\000"
 5192      454E5F52 
 5192      58414444 
 5192      525F4249 
 5192      545F4552 
 5193              	.LASF18:
 5194 0efe 4E52465F 		.ascii	"NRF_REG_EN_AA\000"
 5194      5245475F 
 5194      454E5F41 
 5194      4100
 5195              	.LASF77:
 5196 0f0c 4E52465F 		.ascii	"NRF_CONFIG_BIT_MASK_TX_DS\000"
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 120


 5196      434F4E46 
 5196      49475F42 
 5196      49545F4D 
 5196      41534B5F 
 5197              	.LASF223:
 5198 0f26 6E524632 		.ascii	"nRF24_flush_rx\000"
 5198      345F666C 
 5198      7573685F 
 5198      727800
 5199              	.LASF151:
 5200 0f35 4750494F 		.ascii	"GPIO_SET\000"
 5200      5F534554 
 5200      00
 5201              	.LASF91:
 5202 0f3e 4E52465F 		.ascii	"NRF_CONFIG_ENABLE_RX_DR\000"
 5202      434F4E46 
 5202      49475F45 
 5202      4E41424C 
 5202      455F5258 
 5203              	.LASF63:
 5204 0f56 6E72665F 		.ascii	"nrf_pld_size\000"
 5204      706C645F 
 5204      73697A65 
 5204      00
 5205              	.LASF111:
 5206 0f63 4E52465F 		.ascii	"NRF_PIPE_ADDR_WIDTH_5BYTES\000"
 5206      50495045 
 5206      5F414444 
 5206      525F5749 
 5206      4454485F 
 5207              	.LASF193:
 5208 0f7e 6E524632 		.ascii	"nRF24_disable_payload_with_no_ack\000"
 5208      345F6469 
 5208      7361626C 
 5208      655F7061 
 5208      796C6F61 
 5209              	.LASF113:
 5210 0fa0 4E52465F 		.ascii	"NRF_SETUP_RETR_BIT_ARC\000"
 5210      53455455 
 5210      505F5245 
 5210      54525F42 
 5210      49545F41 
 5211              	.LASF114:
 5212 0fb7 4E52465F 		.ascii	"NRF_SETUP_RETR_BIT_ARD\000"
 5212      53455455 
 5212      505F5245 
 5212      54525F42 
 5212      49545F41 
 5213              	.LASF164:
 5214 0fce 6E524632 		.ascii	"nRF24_set_standby_ii_mode\000"
 5214      345F7365 
 5214      745F7374 
 5214      616E6462 
 5214      795F6969 
 5215              	.LASF19:
 5216 0fe8 4E52465F 		.ascii	"NRF_REG_EN_RXADDR\000"
 5216      5245475F 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 121


 5216      454E5F52 
 5216      58414444 
 5216      5200
 5217              	.LASF173:
 5218 0ffa 6E524632 		.ascii	"nRF24_set_address_width\000"
 5218      345F7365 
 5218      745F6164 
 5218      64726573 
 5218      735F7769 
 5219              	.LASF86:
 5220 1012 4E52465F 		.ascii	"NRF_CONFIG_ENABLE_CRC\000"
 5220      434F4E46 
 5220      49475F45 
 5220      4E41424C 
 5220      455F4352 
 5221              	.LASF33:
 5222 1028 4E52465F 		.ascii	"NRF_REG_TX_ADDR\000"
 5222      5245475F 
 5222      54585F41 
 5222      44445200 
 5223              	.LASF215:
 5224 1038 6E524632 		.ascii	"nRF24_is_rx_fifo_empty\000"
 5224      345F6973 
 5224      5F72785F 
 5224      6669666F 
 5224      5F656D70 
 5225              	.LASF0:
 5226 104f 7369676E 		.ascii	"signed char\000"
 5226      65642063 
 5226      68617200 
 5227              	.LASF3:
 5228 105b 73686F72 		.ascii	"short unsigned int\000"
 5228      7420756E 
 5228      7369676E 
 5228      65642069 
 5228      6E7400
 5229              	.LASF167:
 5230 106e 6E524632 		.ascii	"nRF24_set_mode\000"
 5230      345F7365 
 5230      745F6D6F 
 5230      646500
 5231              	.LASF34:
 5232 107d 4E52465F 		.ascii	"NRF_REG_RX_PW_P0\000"
 5232      5245475F 
 5232      52585F50 
 5232      575F5030 
 5232      00
 5233              	.LASF35:
 5234 108e 4E52465F 		.ascii	"NRF_REG_RX_PW_P1\000"
 5234      5245475F 
 5234      52585F50 
 5234      575F5031 
 5234      00
 5235              	.LASF36:
 5236 109f 4E52465F 		.ascii	"NRF_REG_RX_PW_P2\000"
 5236      5245475F 
 5236      52585F50 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 122


 5236      575F5032 
 5236      00
 5237              	.LASF37:
 5238 10b0 4E52465F 		.ascii	"NRF_REG_RX_PW_P3\000"
 5238      5245475F 
 5238      52585F50 
 5238      575F5033 
 5238      00
 5239              	.LASF38:
 5240 10c1 4E52465F 		.ascii	"NRF_REG_RX_PW_P4\000"
 5240      5245475F 
 5240      52585F50 
 5240      575F5034 
 5240      00
 5241              	.LASF39:
 5242 10d2 4E52465F 		.ascii	"NRF_REG_RX_PW_P5\000"
 5242      5245475F 
 5242      52585F50 
 5242      575F5035 
 5242      00
 5243              	.LASF214:
 5244 10e3 6E524632 		.ascii	"nRF24_is_tx_fifo_full\000"
 5244      345F6973 
 5244      5F74785F 
 5244      6669666F 
 5244      5F66756C 
 5245              	.LASF146:
 5246 10f9 4E52465F 		.ascii	"NRF_POWER_UP_DELAY_MS\000"
 5246      504F5745 
 5246      525F5550 
 5246      5F44454C 
 5246      41595F4D 
 5247              	.LASF12:
 5248 110f 646F7562 		.ascii	"double\000"
 5248      6C6500
 5249              	.LASF127:
 5250 1116 4E52465F 		.ascii	"NRF_OBSERVE_TX_PLOS_CNT_MASK\000"
 5250      4F425345 
 5250      5256455F 
 5250      54585F50 
 5250      4C4F535F 
 5251              	.LASF191:
 5252 1133 6E524632 		.ascii	"nRF24_disable_payload_with_ack\000"
 5252      345F6469 
 5252      7361626C 
 5252      655F7061 
 5252      796C6F61 
 5253              	.LASF175:
 5254 1152 6E524632 		.ascii	"nRF24_get_address_width\000"
 5254      345F6765 
 5254      745F6164 
 5254      64726573 
 5254      735F7769 
 5255              	.LASF130:
 5256 116a 4E52465F 		.ascii	"NRF_FIFO_STATUS_BIT_RX_FULL\000"
 5256      4649464F 
 5256      5F535441 
ARM GAS  C:\Users\rens_\AppData\Local\Temp\ccW8xaXP.s 			page 123


 5256      5455535F 
 5256      4249545F 
 5257              	.LASF176:
 5258 1186 6E524632 		.ascii	"nRF24_set_rx_pipe_address\000"
 5258      345F7365 
 5258      745F7278 
 5258      5F706970 
 5258      655F6164 
 5259              	.LASF72:
 5260 11a0 4E52465F 		.ascii	"NRF_CONFIG_BIT_PRIM_RX\000"
 5260      434F4E46 
 5260      49475F42 
 5260      49545F50 
 5260      52494D5F 
 5261              	.LASF224:
 5262 11b7 6E524632 		.ascii	"nRF24_flush_tx\000"
 5262      345F666C 
 5262      7573685F 
 5262      747800
 5263              	.LASF185:
 5264 11c6 6E524632 		.ascii	"nRF24_enable_dynamic_payload_on_pipe\000"
 5264      345F656E 
 5264      61626C65 
 5264      5F64796E 
 5264      616D6963 
 5265              	.LASF221:
 5266 11eb 6E524632 		.ascii	"nRF24_poll_interrupt\000"
 5266      345F706F 
 5266      6C6C5F69 
 5266      6E746572 
 5266      72757074 
 5267              	.LASF186:
 5268 1200 6E524632 		.ascii	"nRF24_disable_dynamic_payload\000"
 5268      345F6469 
 5268      7361626C 
 5268      655F6479 
 5268      6E616D69 
 5269              	.LASF203:
 5270 121e 6C6F7374 		.ascii	"lostPackets\000"
 5270      5061636B 
 5270      65747300 
 5271              	.LASF88:
 5272 122a 4E52465F 		.ascii	"NRF_CONFIG_DISABLE_MAX_RT\000"
 5272      434F4E46 
 5272      49475F44 
 5272      49534142 
 5272      4C455F4D 
 5273              	.LASF145:
 5274 1244 4E52465F 		.ascii	"NRF_PAYLOAD_SIZE_MAX\000"
 5274      5041594C 
 5274      4F41445F 
 5274      53495A45 
 5274      5F4D4158 
 5275              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
