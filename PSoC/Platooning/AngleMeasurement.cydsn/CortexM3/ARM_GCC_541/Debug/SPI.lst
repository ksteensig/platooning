ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPI_initVar
  20              		.bss
  21              		.type	SPI_initVar, %object
  22              		.size	SPI_initVar, 1
  23              	SPI_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPI_swStatusTx,1,1
  26              		.comm	SPI_swStatusRx,1,1
  27              		.section	.text.SPI_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPI_Init
  30              		.thumb
  31              		.thumb_func
  32              		.type	SPI_Init, %function
  33              	SPI_Init:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\SPI.c"
   1:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI.c **** * File Name: SPI.c
   3:Generated_Source\PSoC5/SPI.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI.c **** *
   5:Generated_Source\PSoC5/SPI.c **** * Description:
   6:Generated_Source\PSoC5/SPI.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPI.c **** *
   8:Generated_Source\PSoC5/SPI.c **** * Note:
   9:Generated_Source\PSoC5/SPI.c **** *  None.
  10:Generated_Source\PSoC5/SPI.c **** *
  11:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPI.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPI.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPI.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPI.c **** 
  18:Generated_Source\PSoC5/SPI.c **** #include "SPI_PVT.h"
  19:Generated_Source\PSoC5/SPI.c **** 
  20:Generated_Source\PSoC5/SPI.c **** #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBuffer[SPI_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferFull;
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 2


  23:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferRead;
  24:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_txBufferWrite;
  25:Generated_Source\PSoC5/SPI.c **** #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPI.c **** 
  27:Generated_Source\PSoC5/SPI.c **** #if(SPI_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBuffer[SPI_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferFull;
  30:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferRead;
  31:Generated_Source\PSoC5/SPI.c ****     volatile uint8 SPI_rxBufferWrite;
  32:Generated_Source\PSoC5/SPI.c **** #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPI.c **** 
  34:Generated_Source\PSoC5/SPI.c **** uint8 SPI_initVar = 0u;
  35:Generated_Source\PSoC5/SPI.c **** 
  36:Generated_Source\PSoC5/SPI.c **** volatile uint8 SPI_swStatusTx;
  37:Generated_Source\PSoC5/SPI.c **** volatile uint8 SPI_swStatusRx;
  38:Generated_Source\PSoC5/SPI.c **** 
  39:Generated_Source\PSoC5/SPI.c **** 
  40:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Init
  42:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPI.c **** *
  44:Generated_Source\PSoC5/SPI.c **** * Summary:
  45:Generated_Source\PSoC5/SPI.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPI.c **** *
  47:Generated_Source\PSoC5/SPI.c **** * Parameters:
  48:Generated_Source\PSoC5/SPI.c **** *  None.
  49:Generated_Source\PSoC5/SPI.c **** *
  50:Generated_Source\PSoC5/SPI.c **** * Return:
  51:Generated_Source\PSoC5/SPI.c **** *  None.
  52:Generated_Source\PSoC5/SPI.c **** *
  53:Generated_Source\PSoC5/SPI.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPI.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPI.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPI.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPI.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPI.c **** *
  59:Generated_Source\PSoC5/SPI.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPI.c **** *  No.
  61:Generated_Source\PSoC5/SPI.c **** *
  62:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPI.c **** void SPI_Init(void) 
  64:Generated_Source\PSoC5/SPI.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC5/SPI.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_PERIOD_REG = SPI_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 084B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC5/SPI.c **** 
  68:Generated_Source\PSoC5/SPI.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPI.c ****         CyIntDisable         (SPI_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_TX_ISR_NUMBER,  SPI_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_TX_ISR_NUMBER, &SPI_TX_ISR);
  73:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPI.c **** 
  75:Generated_Source\PSoC5/SPI.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPI.c ****         CyIntDisable         (SPI_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPI.c ****         CyIntSetPriority     (SPI_RX_ISR_NUMBER,  SPI_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPI.c ****         (void) CyIntSetVector(SPI_RX_ISR_NUMBER, &SPI_RX_ISR);
  80:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPI.c **** 
  82:Generated_Source\PSoC5/SPI.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPI.c ****     SPI_ClearFIFO();
  50              		.loc 1 83 0
  51 000a FFF7FEFF 		bl	SPI_ClearFIFO
  84:Generated_Source\PSoC5/SPI.c **** 
  85:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferRead  = 0u;
  88:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPI.c **** 
  91:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPI.c **** 
  97:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  52              		.loc 1 97 0
  53 000e FFF7FEFF 		bl	SPI_ReadTxStatus
  98:Generated_Source\PSoC5/SPI.c ****     (void) SPI_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  54              		.loc 1 98 0
  55 0012 FFF7FEFF 		bl	SPI_ReadRxStatus
  99:Generated_Source\PSoC5/SPI.c **** 
 100:Generated_Source\PSoC5/SPI.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG = SPI_TX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 101 0
  57 0016 054B     		ldr	r3, .L2+4
  58 0018 0022     		movs	r2, #0
  59 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG = SPI_RX_INIT_INTERRUPTS_MASK;
  60              		.loc 1 102 0
  61 001c 044B     		ldr	r3, .L2+8
  62 001e 0022     		movs	r2, #0
  63 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPI.c **** }
  64              		.loc 1 103 0
  65 0022 00BF     		nop
  66 0024 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0026 00BF     		.align	2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 4


  69              	.L2:
  70 0028 86650040 		.word	1073767814
  71 002c 88640040 		.word	1073767560
  72 0030 87650040 		.word	1073767815
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	SPI_Init, .-SPI_Init
  76              		.section	.text.SPI_Enable,"ax",%progbits
  77              		.align	2
  78              		.global	SPI_Enable
  79              		.thumb
  80              		.thumb_func
  81              		.type	SPI_Enable, %function
  82              	SPI_Enable:
  83              	.LFB1:
 104:Generated_Source\PSoC5/SPI.c **** 
 105:Generated_Source\PSoC5/SPI.c **** 
 106:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Enable
 108:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPI.c **** *
 110:Generated_Source\PSoC5/SPI.c **** * Summary:
 111:Generated_Source\PSoC5/SPI.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPI.c **** *
 113:Generated_Source\PSoC5/SPI.c **** * Parameters:
 114:Generated_Source\PSoC5/SPI.c **** *  None.
 115:Generated_Source\PSoC5/SPI.c **** *
 116:Generated_Source\PSoC5/SPI.c **** * Return:
 117:Generated_Source\PSoC5/SPI.c **** *  None.
 118:Generated_Source\PSoC5/SPI.c **** *
 119:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPI.c **** void SPI_Enable(void) 
 121:Generated_Source\PSoC5/SPI.c **** {
  84              		.loc 1 121 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 82B0     		sub	sp, sp, #8
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPI.c **** 
 124:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
  96              		.loc 1 124 0
  97 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  98 000a 0346     		mov	r3, r0
  99 000c FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/SPI.c ****     SPI_COUNTER_CONTROL_REG |= SPI_CNTR_ENABLE;
 100              		.loc 1 125 0
 101 000e 134A     		ldr	r2, .L5
 102 0010 124B     		ldr	r3, .L5
 103 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 5


 104 0014 DBB2     		uxtb	r3, r3
 105 0016 43F02003 		orr	r3, r3, #32
 106 001a DBB2     		uxtb	r3, r3
 107 001c 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
 108              		.loc 1 126 0
 109 001e 104A     		ldr	r2, .L5+4
 110 0020 0F4B     		ldr	r3, .L5+4
 111 0022 1B78     		ldrb	r3, [r3]
 112 0024 DBB2     		uxtb	r3, r3
 113 0026 43F01003 		orr	r3, r3, #16
 114 002a DBB2     		uxtb	r3, r3
 115 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG  |= SPI_INT_ENABLE;
 116              		.loc 1 127 0
 117 002e 0D4A     		ldr	r2, .L5+8
 118 0030 0C4B     		ldr	r3, .L5+8
 119 0032 1B78     		ldrb	r3, [r3]
 120 0034 DBB2     		uxtb	r3, r3
 121 0036 43F01003 		orr	r3, r3, #16
 122 003a DBB2     		uxtb	r3, r3
 123 003c 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 126 0040 1846     		mov	r0, r3
 127 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC5/SPI.c **** 
 130:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPI.c ****         SPI_IntClock_Enable();
 128              		.loc 1 131 0
 129 0046 FFF7FEFF 		bl	SPI_IntClock_Start
 132:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPI.c **** 
 134:Generated_Source\PSoC5/SPI.c ****     SPI_EnableTxInt();
 130              		.loc 1 134 0
 131 004a FFF7FEFF 		bl	SPI_EnableTxInt
 135:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
 132              		.loc 1 135 0
 133 004e FFF7FEFF 		bl	SPI_EnableRxInt
 136:Generated_Source\PSoC5/SPI.c **** }
 134              		.loc 1 136 0
 135 0052 00BF     		nop
 136 0054 0837     		adds	r7, r7, #8
 137              		.cfi_def_cfa_offset 8
 138 0056 BD46     		mov	sp, r7
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 0058 80BD     		pop	{r7, pc}
 142              	.L6:
 143 005a 00BF     		.align	2
 144              	.L5:
 145 005c 96650040 		.word	1073767830
 146 0060 98640040 		.word	1073767576
 147 0064 97650040 		.word	1073767831
 148              		.cfi_endproc
 149              	.LFE1:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 6


 150              		.size	SPI_Enable, .-SPI_Enable
 151              		.section	.text.SPI_Start,"ax",%progbits
 152              		.align	2
 153              		.global	SPI_Start
 154              		.thumb
 155              		.thumb_func
 156              		.type	SPI_Start, %function
 157              	SPI_Start:
 158              	.LFB2:
 137:Generated_Source\PSoC5/SPI.c **** 
 138:Generated_Source\PSoC5/SPI.c **** 
 139:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Start
 141:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPI.c **** *
 143:Generated_Source\PSoC5/SPI.c **** * Summary:
 144:Generated_Source\PSoC5/SPI.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPI.c **** *
 146:Generated_Source\PSoC5/SPI.c **** * Parameters:
 147:Generated_Source\PSoC5/SPI.c **** *  None.
 148:Generated_Source\PSoC5/SPI.c **** *
 149:Generated_Source\PSoC5/SPI.c **** * Return:
 150:Generated_Source\PSoC5/SPI.c **** *  None.
 151:Generated_Source\PSoC5/SPI.c **** *
 152:Generated_Source\PSoC5/SPI.c **** * Global variables:
 153:Generated_Source\PSoC5/SPI.c **** *  SPI_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPI.c **** *  first function call.
 155:Generated_Source\PSoC5/SPI.c **** *
 156:Generated_Source\PSoC5/SPI.c **** * Theory:
 157:Generated_Source\PSoC5/SPI.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPI.c **** *
 159:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPI.c **** *  No.
 161:Generated_Source\PSoC5/SPI.c **** *
 162:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPI.c **** void SPI_Start(void) 
 164:Generated_Source\PSoC5/SPI.c **** {
 159              		.loc 1 164 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/SPI.c ****     if(0u == SPI_initVar)
 169              		.loc 1 165 0
 170 0004 064B     		ldr	r3, .L9
 171 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 172 0008 002B     		cmp	r3, #0
 173 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC5/SPI.c ****     {
 167:Generated_Source\PSoC5/SPI.c ****         SPI_Init();
 174              		.loc 1 167 0
 175 000c FFF7FEFF 		bl	SPI_Init
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 7


 168:Generated_Source\PSoC5/SPI.c ****         SPI_initVar = 1u;
 176              		.loc 1 168 0
 177 0010 034B     		ldr	r3, .L9
 178 0012 0122     		movs	r2, #1
 179 0014 1A70     		strb	r2, [r3]
 180              	.L8:
 169:Generated_Source\PSoC5/SPI.c ****     }
 170:Generated_Source\PSoC5/SPI.c **** 
 171:Generated_Source\PSoC5/SPI.c ****     SPI_Enable();
 181              		.loc 1 171 0
 182 0016 FFF7FEFF 		bl	SPI_Enable
 172:Generated_Source\PSoC5/SPI.c **** }
 183              		.loc 1 172 0
 184 001a 00BF     		nop
 185 001c 80BD     		pop	{r7, pc}
 186              	.L10:
 187 001e 00BF     		.align	2
 188              	.L9:
 189 0020 00000000 		.word	SPI_initVar
 190              		.cfi_endproc
 191              	.LFE2:
 192              		.size	SPI_Start, .-SPI_Start
 193              		.section	.text.SPI_Stop,"ax",%progbits
 194              		.align	2
 195              		.global	SPI_Stop
 196              		.thumb
 197              		.thumb_func
 198              		.type	SPI_Stop, %function
 199              	SPI_Stop:
 200              	.LFB3:
 173:Generated_Source\PSoC5/SPI.c **** 
 174:Generated_Source\PSoC5/SPI.c **** 
 175:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_Stop
 177:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPI.c **** *
 179:Generated_Source\PSoC5/SPI.c **** * Summary:
 180:Generated_Source\PSoC5/SPI.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPI.c **** *
 182:Generated_Source\PSoC5/SPI.c **** * Parameters:
 183:Generated_Source\PSoC5/SPI.c **** *  None.
 184:Generated_Source\PSoC5/SPI.c **** *
 185:Generated_Source\PSoC5/SPI.c **** * Return:
 186:Generated_Source\PSoC5/SPI.c **** *  None.
 187:Generated_Source\PSoC5/SPI.c **** *
 188:Generated_Source\PSoC5/SPI.c **** * Theory:
 189:Generated_Source\PSoC5/SPI.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPI.c **** *
 191:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPI.c **** void SPI_Stop(void) 
 193:Generated_Source\PSoC5/SPI.c **** {
 201              		.loc 1 193 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 8


 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPI.c **** 
 196:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 213              		.loc 1 196 0
 214 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 215 000a 0346     		mov	r3, r0
 216 000c FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
 217              		.loc 1 197 0
 218 000e 0F4A     		ldr	r2, .L12
 219 0010 0E4B     		ldr	r3, .L12
 220 0012 1B78     		ldrb	r3, [r3]
 221 0014 DBB2     		uxtb	r3, r3
 222 0016 23F01003 		bic	r3, r3, #16
 223 001a DBB2     		uxtb	r3, r3
 224 001c 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_INT_ENABLE);
 225              		.loc 1 198 0
 226 001e 0C4A     		ldr	r2, .L12+4
 227 0020 0B4B     		ldr	r3, .L12+4
 228 0022 1B78     		ldrb	r3, [r3]
 229 0024 DBB2     		uxtb	r3, r3
 230 0026 23F01003 		bic	r3, r3, #16
 231 002a DBB2     		uxtb	r3, r3
 232 002c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 233              		.loc 1 199 0
 234 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 235 0030 1846     		mov	r0, r3
 236 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC5/SPI.c **** 
 201:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPI.c ****         SPI_IntClock_Disable();
 237              		.loc 1 202 0
 238 0036 FFF7FEFF 		bl	SPI_IntClock_Stop
 203:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPI.c **** 
 205:Generated_Source\PSoC5/SPI.c ****     SPI_DisableTxInt();
 239              		.loc 1 205 0
 240 003a FFF7FEFF 		bl	SPI_DisableTxInt
 206:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
 241              		.loc 1 206 0
 242 003e FFF7FEFF 		bl	SPI_DisableRxInt
 207:Generated_Source\PSoC5/SPI.c **** }
 243              		.loc 1 207 0
 244 0042 00BF     		nop
 245 0044 0837     		adds	r7, r7, #8
 246              		.cfi_def_cfa_offset 8
 247 0046 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 9


 250 0048 80BD     		pop	{r7, pc}
 251              	.L13:
 252 004a 00BF     		.align	2
 253              	.L12:
 254 004c 98640040 		.word	1073767576
 255 0050 97650040 		.word	1073767831
 256              		.cfi_endproc
 257              	.LFE3:
 258              		.size	SPI_Stop, .-SPI_Stop
 259              		.section	.text.SPI_EnableTxInt,"ax",%progbits
 260              		.align	2
 261              		.global	SPI_EnableTxInt
 262              		.thumb
 263              		.thumb_func
 264              		.type	SPI_EnableTxInt, %function
 265              	SPI_EnableTxInt:
 266              	.LFB4:
 208:Generated_Source\PSoC5/SPI.c **** 
 209:Generated_Source\PSoC5/SPI.c **** 
 210:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableTxInt
 212:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPI.c **** *
 214:Generated_Source\PSoC5/SPI.c **** * Summary:
 215:Generated_Source\PSoC5/SPI.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPI.c **** *
 217:Generated_Source\PSoC5/SPI.c **** * Parameters:
 218:Generated_Source\PSoC5/SPI.c **** *  None.
 219:Generated_Source\PSoC5/SPI.c **** *
 220:Generated_Source\PSoC5/SPI.c **** * Return:
 221:Generated_Source\PSoC5/SPI.c **** *  None.
 222:Generated_Source\PSoC5/SPI.c **** *
 223:Generated_Source\PSoC5/SPI.c **** * Theory:
 224:Generated_Source\PSoC5/SPI.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPI.c **** *
 226:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPI.c **** void SPI_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPI.c **** {
 267              		.loc 1 228 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272 0000 80B4     		push	{r7}
 273              		.cfi_def_cfa_offset 4
 274              		.cfi_offset 7, -4
 275 0002 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPI.c ****         CyIntEnable(SPI_TX_ISR_NUMBER);
 231:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPI.c **** }
 277              		.loc 1 232 0
 278 0004 00BF     		nop
 279 0006 BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 10


 282 0008 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 000a 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE4:
 288              		.size	SPI_EnableTxInt, .-SPI_EnableTxInt
 289              		.section	.text.SPI_EnableRxInt,"ax",%progbits
 290              		.align	2
 291              		.global	SPI_EnableRxInt
 292              		.thumb
 293              		.thumb_func
 294              		.type	SPI_EnableRxInt, %function
 295              	SPI_EnableRxInt:
 296              	.LFB5:
 233:Generated_Source\PSoC5/SPI.c **** 
 234:Generated_Source\PSoC5/SPI.c **** 
 235:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableRxInt
 237:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPI.c **** *
 239:Generated_Source\PSoC5/SPI.c **** * Summary:
 240:Generated_Source\PSoC5/SPI.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPI.c **** *
 242:Generated_Source\PSoC5/SPI.c **** * Parameters:
 243:Generated_Source\PSoC5/SPI.c **** *  None.
 244:Generated_Source\PSoC5/SPI.c **** *
 245:Generated_Source\PSoC5/SPI.c **** * Return:
 246:Generated_Source\PSoC5/SPI.c **** *  None.
 247:Generated_Source\PSoC5/SPI.c **** *
 248:Generated_Source\PSoC5/SPI.c **** * Theory:
 249:Generated_Source\PSoC5/SPI.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPI.c **** *
 251:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPI.c **** void SPI_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPI.c **** {
 297              		.loc 1 253 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 7, -4
 305 0002 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPI.c ****         CyIntEnable(SPI_RX_ISR_NUMBER);
 256:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPI.c **** }
 307              		.loc 1 257 0
 308 0004 00BF     		nop
 309 0006 BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 0008 80BC     		pop	{r7}
 313              		.cfi_restore 7
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 11


 314              		.cfi_def_cfa_offset 0
 315 000a 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE5:
 318              		.size	SPI_EnableRxInt, .-SPI_EnableRxInt
 319              		.section	.text.SPI_DisableTxInt,"ax",%progbits
 320              		.align	2
 321              		.global	SPI_DisableTxInt
 322              		.thumb
 323              		.thumb_func
 324              		.type	SPI_DisableTxInt, %function
 325              	SPI_DisableTxInt:
 326              	.LFB6:
 258:Generated_Source\PSoC5/SPI.c **** 
 259:Generated_Source\PSoC5/SPI.c **** 
 260:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableTxInt
 262:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPI.c **** *
 264:Generated_Source\PSoC5/SPI.c **** * Summary:
 265:Generated_Source\PSoC5/SPI.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPI.c **** *
 267:Generated_Source\PSoC5/SPI.c **** * Parameters:
 268:Generated_Source\PSoC5/SPI.c **** *  None.
 269:Generated_Source\PSoC5/SPI.c **** *
 270:Generated_Source\PSoC5/SPI.c **** * Return:
 271:Generated_Source\PSoC5/SPI.c **** *  None.
 272:Generated_Source\PSoC5/SPI.c **** *
 273:Generated_Source\PSoC5/SPI.c **** * Theory:
 274:Generated_Source\PSoC5/SPI.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPI.c **** *
 276:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPI.c **** void SPI_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPI.c **** {
 327              		.loc 1 278 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332 0000 80B4     		push	{r7}
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 7, -4
 335 0002 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
 281:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPI.c **** }
 337              		.loc 1 282 0
 338 0004 00BF     		nop
 339 0006 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 0008 80BC     		pop	{r7}
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 000a 7047     		bx	lr
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 12


 346              		.cfi_endproc
 347              	.LFE6:
 348              		.size	SPI_DisableTxInt, .-SPI_DisableTxInt
 349              		.section	.text.SPI_DisableRxInt,"ax",%progbits
 350              		.align	2
 351              		.global	SPI_DisableRxInt
 352              		.thumb
 353              		.thumb_func
 354              		.type	SPI_DisableRxInt, %function
 355              	SPI_DisableRxInt:
 356              	.LFB7:
 283:Generated_Source\PSoC5/SPI.c **** 
 284:Generated_Source\PSoC5/SPI.c **** 
 285:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableRxInt
 287:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPI.c **** *
 289:Generated_Source\PSoC5/SPI.c **** * Summary:
 290:Generated_Source\PSoC5/SPI.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPI.c **** *
 292:Generated_Source\PSoC5/SPI.c **** * Parameters:
 293:Generated_Source\PSoC5/SPI.c **** *  None.
 294:Generated_Source\PSoC5/SPI.c **** *
 295:Generated_Source\PSoC5/SPI.c **** * Return:
 296:Generated_Source\PSoC5/SPI.c **** *  None.
 297:Generated_Source\PSoC5/SPI.c **** *
 298:Generated_Source\PSoC5/SPI.c **** * Theory:
 299:Generated_Source\PSoC5/SPI.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPI.c **** *
 301:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPI.c **** void SPI_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPI.c **** {
 357              		.loc 1 303 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 80B4     		push	{r7}
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 7, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SPI.c ****     #if(0u != SPI_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
 306:Generated_Source\PSoC5/SPI.c ****     #endif /* (0u != SPI_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPI.c **** }
 367              		.loc 1 307 0
 368 0004 00BF     		nop
 369 0006 BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 0008 80BC     		pop	{r7}
 373              		.cfi_restore 7
 374              		.cfi_def_cfa_offset 0
 375 000a 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE7:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 13


 378              		.size	SPI_DisableRxInt, .-SPI_DisableRxInt
 379              		.section	.text.SPI_SetTxInterruptMode,"ax",%progbits
 380              		.align	2
 381              		.global	SPI_SetTxInterruptMode
 382              		.thumb
 383              		.thumb_func
 384              		.type	SPI_SetTxInterruptMode, %function
 385              	SPI_SetTxInterruptMode:
 386              	.LFB8:
 308:Generated_Source\PSoC5/SPI.c **** 
 309:Generated_Source\PSoC5/SPI.c **** 
 310:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPI.c **** *
 314:Generated_Source\PSoC5/SPI.c **** * Summary:
 315:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPI.c **** *
 317:Generated_Source\PSoC5/SPI.c **** * Parameters:
 318:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPI.c **** *  header file).
 320:Generated_Source\PSoC5/SPI.c **** *
 321:Generated_Source\PSoC5/SPI.c **** * Return:
 322:Generated_Source\PSoC5/SPI.c **** *  None.
 323:Generated_Source\PSoC5/SPI.c **** *
 324:Generated_Source\PSoC5/SPI.c **** * Theory:
 325:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPI.c **** *
 327:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPI.c **** void SPI_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPI.c **** {
 387              		.loc 1 329 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392 0000 80B4     		push	{r7}
 393              		.cfi_def_cfa_offset 4
 394              		.cfi_offset 7, -4
 395 0002 83B0     		sub	sp, sp, #12
 396              		.cfi_def_cfa_offset 16
 397 0004 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
 399 0006 0346     		mov	r3, r0
 400 0008 FB71     		strb	r3, [r7, #7]
 330:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG = intSrc;
 401              		.loc 1 330 0
 402 000a 044A     		ldr	r2, .L19
 403 000c FB79     		ldrb	r3, [r7, #7]
 404 000e 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC5/SPI.c **** }
 405              		.loc 1 331 0
 406 0010 00BF     		nop
 407 0012 0C37     		adds	r7, r7, #12
 408              		.cfi_def_cfa_offset 4
 409 0014 BD46     		mov	sp, r7
 410              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 14


 411              		@ sp needed
 412 0016 80BC     		pop	{r7}
 413              		.cfi_restore 7
 414              		.cfi_def_cfa_offset 0
 415 0018 7047     		bx	lr
 416              	.L20:
 417 001a 00BF     		.align	2
 418              	.L19:
 419 001c 88640040 		.word	1073767560
 420              		.cfi_endproc
 421              	.LFE8:
 422              		.size	SPI_SetTxInterruptMode, .-SPI_SetTxInterruptMode
 423              		.section	.text.SPI_SetRxInterruptMode,"ax",%progbits
 424              		.align	2
 425              		.global	SPI_SetRxInterruptMode
 426              		.thumb
 427              		.thumb_func
 428              		.type	SPI_SetRxInterruptMode, %function
 429              	SPI_SetRxInterruptMode:
 430              	.LFB9:
 332:Generated_Source\PSoC5/SPI.c **** 
 333:Generated_Source\PSoC5/SPI.c **** 
 334:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPI.c **** *
 338:Generated_Source\PSoC5/SPI.c **** * Summary:
 339:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPI.c **** *
 341:Generated_Source\PSoC5/SPI.c **** * Parameters:
 342:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPI.c **** *  header file).
 344:Generated_Source\PSoC5/SPI.c **** *
 345:Generated_Source\PSoC5/SPI.c **** * Return:
 346:Generated_Source\PSoC5/SPI.c **** *  None.
 347:Generated_Source\PSoC5/SPI.c **** *
 348:Generated_Source\PSoC5/SPI.c **** * Theory:
 349:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPI.c **** *
 351:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPI.c **** void SPI_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPI.c **** {
 431              		.loc 1 353 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0002 83B0     		sub	sp, sp, #12
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 443 0006 0346     		mov	r3, r0
 444 0008 FB71     		strb	r3, [r7, #7]
 354:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG  = intSrc;
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 15


 445              		.loc 1 354 0
 446 000a 044A     		ldr	r2, .L22
 447 000c FB79     		ldrb	r3, [r7, #7]
 448 000e 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/SPI.c **** }
 449              		.loc 1 355 0
 450 0010 00BF     		nop
 451 0012 0C37     		adds	r7, r7, #12
 452              		.cfi_def_cfa_offset 4
 453 0014 BD46     		mov	sp, r7
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 0016 80BC     		pop	{r7}
 457              		.cfi_restore 7
 458              		.cfi_def_cfa_offset 0
 459 0018 7047     		bx	lr
 460              	.L23:
 461 001a 00BF     		.align	2
 462              	.L22:
 463 001c 87650040 		.word	1073767815
 464              		.cfi_endproc
 465              	.LFE9:
 466              		.size	SPI_SetRxInterruptMode, .-SPI_SetRxInterruptMode
 467              		.section	.text.SPI_ReadTxStatus,"ax",%progbits
 468              		.align	2
 469              		.global	SPI_ReadTxStatus
 470              		.thumb
 471              		.thumb_func
 472              		.type	SPI_ReadTxStatus, %function
 473              	SPI_ReadTxStatus:
 474              	.LFB10:
 356:Generated_Source\PSoC5/SPI.c **** 
 357:Generated_Source\PSoC5/SPI.c **** 
 358:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadTxStatus
 360:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPI.c **** *
 362:Generated_Source\PSoC5/SPI.c **** * Summary:
 363:Generated_Source\PSoC5/SPI.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPI.c **** *
 365:Generated_Source\PSoC5/SPI.c **** * Parameters:
 366:Generated_Source\PSoC5/SPI.c **** *  None.
 367:Generated_Source\PSoC5/SPI.c **** *
 368:Generated_Source\PSoC5/SPI.c **** * Return:
 369:Generated_Source\PSoC5/SPI.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPI.c **** *
 371:Generated_Source\PSoC5/SPI.c **** * Global variables:
 372:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPI.c **** *
 375:Generated_Source\PSoC5/SPI.c **** * Theory:
 376:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPI.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPI.c **** *
 379:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPI.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 16


 382:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPI.c **** *  No.
 384:Generated_Source\PSoC5/SPI.c **** *
 385:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPI.c **** {
 475              		.loc 1 387 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              		.cfi_def_cfa_offset 4
 482              		.cfi_offset 7, -4
 483 0002 83B0     		sub	sp, sp, #12
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPI.c **** 
 390:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 393:Generated_Source\PSoC5/SPI.c **** 
 394:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 395:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPI.c **** 
 397:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 398:Generated_Source\PSoC5/SPI.c **** 
 399:Generated_Source\PSoC5/SPI.c ****     #else
 400:Generated_Source\PSoC5/SPI.c **** 
 401:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_TX_STATUS_REG;
 487              		.loc 1 401 0
 488 0006 044B     		ldr	r3, .L26
 489 0008 1B78     		ldrb	r3, [r3]
 490 000a FB71     		strb	r3, [r7, #7]
 402:Generated_Source\PSoC5/SPI.c **** 
 403:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPI.c **** 
 405:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 491              		.loc 1 405 0
 492 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/SPI.c **** }
 493              		.loc 1 406 0
 494 000e 1846     		mov	r0, r3
 495 0010 0C37     		adds	r7, r7, #12
 496              		.cfi_def_cfa_offset 4
 497 0012 BD46     		mov	sp, r7
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0014 80BC     		pop	{r7}
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 0016 7047     		bx	lr
 504              	.L27:
 505              		.align	2
 506              	.L26:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 17


 507 0018 68640040 		.word	1073767528
 508              		.cfi_endproc
 509              	.LFE10:
 510              		.size	SPI_ReadTxStatus, .-SPI_ReadTxStatus
 511              		.section	.text.SPI_ReadRxStatus,"ax",%progbits
 512              		.align	2
 513              		.global	SPI_ReadRxStatus
 514              		.thumb
 515              		.thumb_func
 516              		.type	SPI_ReadRxStatus, %function
 517              	SPI_ReadRxStatus:
 518              	.LFB11:
 407:Generated_Source\PSoC5/SPI.c **** 
 408:Generated_Source\PSoC5/SPI.c **** 
 409:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadRxStatus
 411:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPI.c **** *
 413:Generated_Source\PSoC5/SPI.c **** * Summary:
 414:Generated_Source\PSoC5/SPI.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPI.c **** *
 416:Generated_Source\PSoC5/SPI.c **** * Parameters:
 417:Generated_Source\PSoC5/SPI.c **** *  None.
 418:Generated_Source\PSoC5/SPI.c **** *
 419:Generated_Source\PSoC5/SPI.c **** * Return:
 420:Generated_Source\PSoC5/SPI.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPI.c **** *
 422:Generated_Source\PSoC5/SPI.c **** * Global variables:
 423:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPI.c **** *
 426:Generated_Source\PSoC5/SPI.c **** * Theory:
 427:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPI.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPI.c **** *
 430:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPI.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPI.c **** *
 433:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPI.c **** *  No.
 435:Generated_Source\PSoC5/SPI.c **** *
 436:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPI.c **** {
 519              		.loc 1 438 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 18


 440:Generated_Source\PSoC5/SPI.c **** 
 441:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 444:Generated_Source\PSoC5/SPI.c **** 
 445:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_GET_STATUS_RX(SPI_swStatusRx);
 446:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPI.c **** 
 448:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 449:Generated_Source\PSoC5/SPI.c **** 
 450:Generated_Source\PSoC5/SPI.c ****     #else
 451:Generated_Source\PSoC5/SPI.c **** 
 452:Generated_Source\PSoC5/SPI.c ****         tmpStatus = SPI_RX_STATUS_REG;
 531              		.loc 1 452 0
 532 0006 044B     		ldr	r3, .L30
 533 0008 1B78     		ldrb	r3, [r3]
 534 000a FB71     		strb	r3, [r7, #7]
 453:Generated_Source\PSoC5/SPI.c **** 
 454:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPI.c **** 
 456:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 535              		.loc 1 456 0
 536 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/SPI.c **** }
 537              		.loc 1 457 0
 538 000e 1846     		mov	r0, r3
 539 0010 0C37     		adds	r7, r7, #12
 540              		.cfi_def_cfa_offset 4
 541 0012 BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 0014 80BC     		pop	{r7}
 545              		.cfi_restore 7
 546              		.cfi_def_cfa_offset 0
 547 0016 7047     		bx	lr
 548              	.L31:
 549              		.align	2
 550              	.L30:
 551 0018 67650040 		.word	1073767783
 552              		.cfi_endproc
 553              	.LFE11:
 554              		.size	SPI_ReadRxStatus, .-SPI_ReadRxStatus
 555              		.section	.text.SPI_WriteTxData,"ax",%progbits
 556              		.align	2
 557              		.global	SPI_WriteTxData
 558              		.thumb
 559              		.thumb_func
 560              		.type	SPI_WriteTxData, %function
 561              	SPI_WriteTxData:
 562              	.LFB12:
 458:Generated_Source\PSoC5/SPI.c **** 
 459:Generated_Source\PSoC5/SPI.c **** 
 460:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_WriteTxData
 462:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPI.c **** *
 464:Generated_Source\PSoC5/SPI.c **** * Summary:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 19


 465:Generated_Source\PSoC5/SPI.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPI.c **** *
 467:Generated_Source\PSoC5/SPI.c **** * Parameters:
 468:Generated_Source\PSoC5/SPI.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPI.c **** *
 470:Generated_Source\PSoC5/SPI.c **** * Return:
 471:Generated_Source\PSoC5/SPI.c **** *  None.
 472:Generated_Source\PSoC5/SPI.c **** *
 473:Generated_Source\PSoC5/SPI.c **** * Global variables:
 474:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPI.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPI.c **** *  SPI_txBuffer[SPI_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPI.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPI.c **** *
 482:Generated_Source\PSoC5/SPI.c **** * Theory:
 483:Generated_Source\PSoC5/SPI.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPI.c **** *
 485:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPI.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPI.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPI.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPI.c **** *
 490:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPI.c **** *  No.
 492:Generated_Source\PSoC5/SPI.c **** *
 493:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPI.c **** void SPI_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPI.c **** {
 563              		.loc 1 495 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568 0000 80B4     		push	{r7}
 569              		.cfi_def_cfa_offset 4
 570              		.cfi_offset 7, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 575 0006 0346     		mov	r3, r0
 576 0008 FB71     		strb	r3, [r7, #7]
 496:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPI.c **** 
 498:Generated_Source\PSoC5/SPI.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPI.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPI.c **** 
 501:Generated_Source\PSoC5/SPI.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPI.c ****         do
 503:Generated_Source\PSoC5/SPI.c ****         {
 504:Generated_Source\PSoC5/SPI.c ****             tmpTxBufferRead = SPI_txBufferRead;
 505:Generated_Source\PSoC5/SPI.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPI.c ****             {
 507:Generated_Source\PSoC5/SPI.c ****                 tmpTxBufferRead = (SPI_TX_BUFFER_SIZE - 1u);
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 20


 508:Generated_Source\PSoC5/SPI.c ****             }
 509:Generated_Source\PSoC5/SPI.c ****             else
 510:Generated_Source\PSoC5/SPI.c ****             {
 511:Generated_Source\PSoC5/SPI.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC5/SPI.c ****             }
 513:Generated_Source\PSoC5/SPI.c **** 
 514:Generated_Source\PSoC5/SPI.c ****         }while(tmpTxBufferRead == SPI_txBufferWrite);
 515:Generated_Source\PSoC5/SPI.c **** 
 516:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 518:Generated_Source\PSoC5/SPI.c **** 
 519:Generated_Source\PSoC5/SPI.c ****         tempStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 520:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPI.c **** 
 522:Generated_Source\PSoC5/SPI.c **** 
 523:Generated_Source\PSoC5/SPI.c ****         if((SPI_txBufferRead == SPI_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPI.c ****            (0u != (SPI_swStatusTx & SPI_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPI.c ****         {
 526:Generated_Source\PSoC5/SPI.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPI.c ****             CY_SET_REG8(SPI_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPI.c ****         }
 529:Generated_Source\PSoC5/SPI.c ****         else
 530:Generated_Source\PSoC5/SPI.c ****         {
 531:Generated_Source\PSoC5/SPI.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPI.c ****             SPI_txBufferWrite++;
 533:Generated_Source\PSoC5/SPI.c ****             if(SPI_txBufferWrite >= SPI_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPI.c ****             {
 535:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPI.c ****             }
 537:Generated_Source\PSoC5/SPI.c **** 
 538:Generated_Source\PSoC5/SPI.c ****             if(SPI_txBufferWrite == SPI_txBufferRead)
 539:Generated_Source\PSoC5/SPI.c ****             {
 540:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferRead++;
 541:Generated_Source\PSoC5/SPI.c ****                 if(SPI_txBufferRead >= SPI_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPI.c ****                 {
 543:Generated_Source\PSoC5/SPI.c ****                     SPI_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPI.c ****                 }
 545:Generated_Source\PSoC5/SPI.c ****                 SPI_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPI.c ****             }
 547:Generated_Source\PSoC5/SPI.c **** 
 548:Generated_Source\PSoC5/SPI.c ****             SPI_txBuffer[SPI_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPI.c **** 
 550:Generated_Source\PSoC5/SPI.c ****             SPI_TX_STATUS_MASK_REG |= SPI_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPI.c ****         }
 552:Generated_Source\PSoC5/SPI.c **** 
 553:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 554:Generated_Source\PSoC5/SPI.c **** 
 555:Generated_Source\PSoC5/SPI.c ****     #else
 556:Generated_Source\PSoC5/SPI.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPI.c ****         while(0u == (SPI_TX_STATUS_REG & SPI_STS_TX_FIFO_NOT_FULL))
 577              		.loc 1 557 0
 578 000a 00BF     		nop
 579              	.L33:
 580              		.loc 1 557 0 is_stmt 0 discriminator 1
 581 000c 074B     		ldr	r3, .L34
 582 000e 1B78     		ldrb	r3, [r3]
 583 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 21


 584 0012 03F00403 		and	r3, r3, #4
 585 0016 002B     		cmp	r3, #0
 586 0018 F8D0     		beq	.L33
 558:Generated_Source\PSoC5/SPI.c ****         {
 559:Generated_Source\PSoC5/SPI.c ****         }
 560:Generated_Source\PSoC5/SPI.c **** 
 561:Generated_Source\PSoC5/SPI.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPI.c ****         CY_SET_REG8(SPI_TXDATA_PTR, txData);
 587              		.loc 1 562 0 is_stmt 1
 588 001a 054A     		ldr	r2, .L34+4
 589 001c FB79     		ldrb	r3, [r7, #7]
 590 001e 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/SPI.c **** 
 564:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPI.c **** }
 591              		.loc 1 565 0
 592 0020 00BF     		nop
 593 0022 0C37     		adds	r7, r7, #12
 594              		.cfi_def_cfa_offset 4
 595 0024 BD46     		mov	sp, r7
 596              		.cfi_def_cfa_register 13
 597              		@ sp needed
 598 0026 80BC     		pop	{r7}
 599              		.cfi_restore 7
 600              		.cfi_def_cfa_offset 0
 601 0028 7047     		bx	lr
 602              	.L35:
 603 002a 00BF     		.align	2
 604              	.L34:
 605 002c 68640040 		.word	1073767528
 606 0030 47650040 		.word	1073767751
 607              		.cfi_endproc
 608              	.LFE12:
 609              		.size	SPI_WriteTxData, .-SPI_WriteTxData
 610              		.section	.text.SPI_ReadRxData,"ax",%progbits
 611              		.align	2
 612              		.global	SPI_ReadRxData
 613              		.thumb
 614              		.thumb_func
 615              		.type	SPI_ReadRxData, %function
 616              	SPI_ReadRxData:
 617              	.LFB13:
 566:Generated_Source\PSoC5/SPI.c **** 
 567:Generated_Source\PSoC5/SPI.c **** 
 568:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadRxData
 570:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPI.c **** *
 572:Generated_Source\PSoC5/SPI.c **** * Summary:
 573:Generated_Source\PSoC5/SPI.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPI.c **** *
 575:Generated_Source\PSoC5/SPI.c **** * Parameters:
 576:Generated_Source\PSoC5/SPI.c **** *  None.
 577:Generated_Source\PSoC5/SPI.c **** *
 578:Generated_Source\PSoC5/SPI.c **** * Return:
 579:Generated_Source\PSoC5/SPI.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPI.c **** *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 22


 581:Generated_Source\PSoC5/SPI.c **** * Global variables:
 582:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPI.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBuffer[SPI_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPI.c **** *  received data.
 589:Generated_Source\PSoC5/SPI.c **** *
 590:Generated_Source\PSoC5/SPI.c **** * Theory:
 591:Generated_Source\PSoC5/SPI.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPI.c **** *
 593:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPI.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPI.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPI.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPI.c **** *
 598:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPI.c **** *  No.
 600:Generated_Source\PSoC5/SPI.c **** *
 601:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPI.c **** {
 618              		.loc 1 603 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 83B0     		sub	sp, sp, #12
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC5/SPI.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPI.c **** 
 606:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPI.c **** 
 608:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 610:Generated_Source\PSoC5/SPI.c **** 
 611:Generated_Source\PSoC5/SPI.c ****         if(SPI_rxBufferRead != SPI_rxBufferWrite)
 612:Generated_Source\PSoC5/SPI.c ****         {
 613:Generated_Source\PSoC5/SPI.c ****             if(0u == SPI_rxBufferFull)
 614:Generated_Source\PSoC5/SPI.c ****             {
 615:Generated_Source\PSoC5/SPI.c ****                 SPI_rxBufferRead++;
 616:Generated_Source\PSoC5/SPI.c ****                 if(SPI_rxBufferRead >= SPI_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPI.c ****                 {
 618:Generated_Source\PSoC5/SPI.c ****                     SPI_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPI.c ****                 }
 620:Generated_Source\PSoC5/SPI.c ****             }
 621:Generated_Source\PSoC5/SPI.c ****             else
 622:Generated_Source\PSoC5/SPI.c ****             {
 623:Generated_Source\PSoC5/SPI.c ****                 SPI_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPI.c ****             }
 625:Generated_Source\PSoC5/SPI.c ****         }
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 23


 626:Generated_Source\PSoC5/SPI.c **** 
 627:Generated_Source\PSoC5/SPI.c ****         rxData = SPI_rxBuffer[SPI_rxBufferRead];
 628:Generated_Source\PSoC5/SPI.c **** 
 629:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 630:Generated_Source\PSoC5/SPI.c **** 
 631:Generated_Source\PSoC5/SPI.c ****     #else
 632:Generated_Source\PSoC5/SPI.c **** 
 633:Generated_Source\PSoC5/SPI.c ****         rxData = CY_GET_REG8(SPI_RXDATA_PTR);
 630              		.loc 1 633 0
 631 0006 044B     		ldr	r3, .L38
 632 0008 1B78     		ldrb	r3, [r3]
 633 000a FB71     		strb	r3, [r7, #7]
 634:Generated_Source\PSoC5/SPI.c **** 
 635:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPI.c **** 
 637:Generated_Source\PSoC5/SPI.c ****     return(rxData);
 634              		.loc 1 637 0
 635 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:Generated_Source\PSoC5/SPI.c **** }
 636              		.loc 1 638 0
 637 000e 1846     		mov	r0, r3
 638 0010 0C37     		adds	r7, r7, #12
 639              		.cfi_def_cfa_offset 4
 640 0012 BD46     		mov	sp, r7
 641              		.cfi_def_cfa_register 13
 642              		@ sp needed
 643 0014 80BC     		pop	{r7}
 644              		.cfi_restore 7
 645              		.cfi_def_cfa_offset 0
 646 0016 7047     		bx	lr
 647              	.L39:
 648              		.align	2
 649              	.L38:
 650 0018 57650040 		.word	1073767767
 651              		.cfi_endproc
 652              	.LFE13:
 653              		.size	SPI_ReadRxData, .-SPI_ReadRxData
 654              		.section	.text.SPI_GetRxBufferSize,"ax",%progbits
 655              		.align	2
 656              		.global	SPI_GetRxBufferSize
 657              		.thumb
 658              		.thumb_func
 659              		.type	SPI_GetRxBufferSize, %function
 660              	SPI_GetRxBufferSize:
 661              	.LFB14:
 639:Generated_Source\PSoC5/SPI.c **** 
 640:Generated_Source\PSoC5/SPI.c **** 
 641:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_GetRxBufferSize
 643:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPI.c **** *
 645:Generated_Source\PSoC5/SPI.c **** * Summary:
 646:Generated_Source\PSoC5/SPI.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPI.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPI.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPI.c **** *
 650:Generated_Source\PSoC5/SPI.c **** * Parameters:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 24


 651:Generated_Source\PSoC5/SPI.c **** *  None.
 652:Generated_Source\PSoC5/SPI.c **** *
 653:Generated_Source\PSoC5/SPI.c **** * Return:
 654:Generated_Source\PSoC5/SPI.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPI.c **** *
 656:Generated_Source\PSoC5/SPI.c **** * Global variables:
 657:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPI.c **** *
 662:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPI.c **** *
 665:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPI.c **** uint8 SPI_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPI.c **** {
 662              		.loc 1 667 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 0000 80B4     		push	{r7}
 668              		.cfi_def_cfa_offset 4
 669              		.cfi_offset 7, -4
 670 0002 83B0     		sub	sp, sp, #12
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC5/SPI.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPI.c **** 
 670:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPI.c **** 
 672:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 674:Generated_Source\PSoC5/SPI.c **** 
 675:Generated_Source\PSoC5/SPI.c ****         if(SPI_rxBufferRead == SPI_rxBufferWrite)
 676:Generated_Source\PSoC5/SPI.c ****         {
 677:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPI.c ****         }
 679:Generated_Source\PSoC5/SPI.c ****         else if(SPI_rxBufferRead < SPI_rxBufferWrite)
 680:Generated_Source\PSoC5/SPI.c ****         {
 681:Generated_Source\PSoC5/SPI.c ****             size = (SPI_rxBufferWrite - SPI_rxBufferRead);
 682:Generated_Source\PSoC5/SPI.c ****         }
 683:Generated_Source\PSoC5/SPI.c ****         else
 684:Generated_Source\PSoC5/SPI.c ****         {
 685:Generated_Source\PSoC5/SPI.c ****             size = (SPI_RX_BUFFER_SIZE - SPI_rxBufferRead) + SPI_rxBufferWrite;
 686:Generated_Source\PSoC5/SPI.c ****         }
 687:Generated_Source\PSoC5/SPI.c **** 
 688:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 689:Generated_Source\PSoC5/SPI.c **** 
 690:Generated_Source\PSoC5/SPI.c ****     #else
 691:Generated_Source\PSoC5/SPI.c **** 
 692:Generated_Source\PSoC5/SPI.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPI.c ****         size = (0u != (SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 674              		.loc 1 693 0
 675 0006 084B     		ldr	r3, .L44
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 25


 676 0008 1B78     		ldrb	r3, [r3]
 677 000a DBB2     		uxtb	r3, r3
 678 000c 03F02003 		and	r3, r3, #32
 679 0010 002B     		cmp	r3, #0
 680 0012 01D0     		beq	.L41
 681              		.loc 1 693 0 is_stmt 0 discriminator 1
 682 0014 0123     		movs	r3, #1
 683 0016 00E0     		b	.L42
 684              	.L41:
 685              		.loc 1 693 0 discriminator 2
 686 0018 0023     		movs	r3, #0
 687              	.L42:
 688              		.loc 1 693 0 discriminator 4
 689 001a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/SPI.c **** 
 695:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPI.c **** 
 697:Generated_Source\PSoC5/SPI.c ****     return(size);
 690              		.loc 1 697 0 is_stmt 1 discriminator 4
 691 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPI.c **** }
 692              		.loc 1 698 0 discriminator 4
 693 001e 1846     		mov	r0, r3
 694 0020 0C37     		adds	r7, r7, #12
 695              		.cfi_def_cfa_offset 4
 696 0022 BD46     		mov	sp, r7
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 0024 80BC     		pop	{r7}
 700              		.cfi_restore 7
 701              		.cfi_def_cfa_offset 0
 702 0026 7047     		bx	lr
 703              	.L45:
 704              		.align	2
 705              	.L44:
 706 0028 67650040 		.word	1073767783
 707              		.cfi_endproc
 708              	.LFE14:
 709              		.size	SPI_GetRxBufferSize, .-SPI_GetRxBufferSize
 710              		.section	.text.SPI_GetTxBufferSize,"ax",%progbits
 711              		.align	2
 712              		.global	SPI_GetTxBufferSize
 713              		.thumb
 714              		.thumb_func
 715              		.type	SPI_GetTxBufferSize, %function
 716              	SPI_GetTxBufferSize:
 717              	.LFB15:
 699:Generated_Source\PSoC5/SPI.c **** 
 700:Generated_Source\PSoC5/SPI.c **** 
 701:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_GetTxBufferSize
 703:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPI.c **** *
 705:Generated_Source\PSoC5/SPI.c **** * Summary:
 706:Generated_Source\PSoC5/SPI.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPI.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPI.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 26


 709:Generated_Source\PSoC5/SPI.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPI.c **** *
 711:Generated_Source\PSoC5/SPI.c **** * Parameters:
 712:Generated_Source\PSoC5/SPI.c **** *  None.
 713:Generated_Source\PSoC5/SPI.c **** *
 714:Generated_Source\PSoC5/SPI.c **** * Return:
 715:Generated_Source\PSoC5/SPI.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPI.c **** *
 717:Generated_Source\PSoC5/SPI.c **** * Global variables:
 718:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPI.c **** *
 723:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPI.c **** *
 726:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPI.c **** uint8  SPI_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPI.c **** {
 718              		.loc 1 728 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 83B0     		sub	sp, sp, #12
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPI.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPI.c **** 
 731:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 734:Generated_Source\PSoC5/SPI.c **** 
 735:Generated_Source\PSoC5/SPI.c ****         if(SPI_txBufferRead == SPI_txBufferWrite)
 736:Generated_Source\PSoC5/SPI.c ****         {
 737:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPI.c ****         }
 739:Generated_Source\PSoC5/SPI.c ****         else if(SPI_txBufferRead < SPI_txBufferWrite)
 740:Generated_Source\PSoC5/SPI.c ****         {
 741:Generated_Source\PSoC5/SPI.c ****             size = (SPI_txBufferWrite - SPI_txBufferRead);
 742:Generated_Source\PSoC5/SPI.c ****         }
 743:Generated_Source\PSoC5/SPI.c ****         else
 744:Generated_Source\PSoC5/SPI.c ****         {
 745:Generated_Source\PSoC5/SPI.c ****             size = (SPI_TX_BUFFER_SIZE - SPI_txBufferRead) + SPI_txBufferWrite;
 746:Generated_Source\PSoC5/SPI.c ****         }
 747:Generated_Source\PSoC5/SPI.c **** 
 748:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 749:Generated_Source\PSoC5/SPI.c **** 
 750:Generated_Source\PSoC5/SPI.c ****     #else
 751:Generated_Source\PSoC5/SPI.c **** 
 752:Generated_Source\PSoC5/SPI.c ****         size = SPI_TX_STATUS_REG;
 730              		.loc 1 752 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 27


 731 0006 0D4B     		ldr	r3, .L51
 732 0008 1B78     		ldrb	r3, [r3]
 733 000a FB71     		strb	r3, [r7, #7]
 753:Generated_Source\PSoC5/SPI.c **** 
 754:Generated_Source\PSoC5/SPI.c ****         if(0u != (size & SPI_STS_TX_FIFO_EMPTY))
 734              		.loc 1 754 0
 735 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 736 000e 03F00203 		and	r3, r3, #2
 737 0012 002B     		cmp	r3, #0
 738 0014 02D0     		beq	.L47
 755:Generated_Source\PSoC5/SPI.c ****         {
 756:Generated_Source\PSoC5/SPI.c ****             size = 0u;
 739              		.loc 1 756 0
 740 0016 0023     		movs	r3, #0
 741 0018 FB71     		strb	r3, [r7, #7]
 742 001a 09E0     		b	.L48
 743              	.L47:
 757:Generated_Source\PSoC5/SPI.c ****         }
 758:Generated_Source\PSoC5/SPI.c ****         else if(0u != (size & SPI_STS_TX_FIFO_NOT_FULL))
 744              		.loc 1 758 0
 745 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 746 001e 03F00403 		and	r3, r3, #4
 747 0022 002B     		cmp	r3, #0
 748 0024 02D0     		beq	.L49
 759:Generated_Source\PSoC5/SPI.c ****         {
 760:Generated_Source\PSoC5/SPI.c ****             size = 1u;
 749              		.loc 1 760 0
 750 0026 0123     		movs	r3, #1
 751 0028 FB71     		strb	r3, [r7, #7]
 752 002a 01E0     		b	.L48
 753              	.L49:
 761:Generated_Source\PSoC5/SPI.c ****         }
 762:Generated_Source\PSoC5/SPI.c ****         else
 763:Generated_Source\PSoC5/SPI.c ****         {
 764:Generated_Source\PSoC5/SPI.c ****             size = SPI_FIFO_SIZE;
 754              		.loc 1 764 0
 755 002c 0423     		movs	r3, #4
 756 002e FB71     		strb	r3, [r7, #7]
 757              	.L48:
 765:Generated_Source\PSoC5/SPI.c ****         }
 766:Generated_Source\PSoC5/SPI.c **** 
 767:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPI.c **** 
 769:Generated_Source\PSoC5/SPI.c ****     return(size);
 758              		.loc 1 769 0
 759 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:Generated_Source\PSoC5/SPI.c **** }
 760              		.loc 1 770 0
 761 0032 1846     		mov	r0, r3
 762 0034 0C37     		adds	r7, r7, #12
 763              		.cfi_def_cfa_offset 4
 764 0036 BD46     		mov	sp, r7
 765              		.cfi_def_cfa_register 13
 766              		@ sp needed
 767 0038 80BC     		pop	{r7}
 768              		.cfi_restore 7
 769              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 28


 770 003a 7047     		bx	lr
 771              	.L52:
 772              		.align	2
 773              	.L51:
 774 003c 68640040 		.word	1073767528
 775              		.cfi_endproc
 776              	.LFE15:
 777              		.size	SPI_GetTxBufferSize, .-SPI_GetTxBufferSize
 778              		.section	.text.SPI_ClearRxBuffer,"ax",%progbits
 779              		.align	2
 780              		.global	SPI_ClearRxBuffer
 781              		.thumb
 782              		.thumb_func
 783              		.type	SPI_ClearRxBuffer, %function
 784              	SPI_ClearRxBuffer:
 785              	.LFB16:
 771:Generated_Source\PSoC5/SPI.c **** 
 772:Generated_Source\PSoC5/SPI.c **** 
 773:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearRxBuffer
 775:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPI.c **** *
 777:Generated_Source\PSoC5/SPI.c **** * Summary:
 778:Generated_Source\PSoC5/SPI.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPI.c **** *
 780:Generated_Source\PSoC5/SPI.c **** * Parameters:
 781:Generated_Source\PSoC5/SPI.c **** *  None.
 782:Generated_Source\PSoC5/SPI.c **** *
 783:Generated_Source\PSoC5/SPI.c **** * Return:
 784:Generated_Source\PSoC5/SPI.c **** *  None.
 785:Generated_Source\PSoC5/SPI.c **** *
 786:Generated_Source\PSoC5/SPI.c **** * Global variables:
 787:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPI.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPI.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPI.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPI.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPI.c **** *
 794:Generated_Source\PSoC5/SPI.c **** * Theory:
 795:Generated_Source\PSoC5/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPI.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPI.c **** *
 799:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPI.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPI.c **** *
 802:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPI.c **** *  No.
 804:Generated_Source\PSoC5/SPI.c **** *
 805:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPI.c **** void SPI_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPI.c **** {
 786              		.loc 1 807 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 29


 790              		@ link register save eliminated.
 791 0000 80B4     		push	{r7}
 792              		.cfi_def_cfa_offset 4
 793              		.cfi_offset 7, -4
 794 0002 00AF     		add	r7, sp, #0
 795              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC5/SPI.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPI.c ****     while(0u !=(SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY))
 796              		.loc 1 809 0
 797 0004 01E0     		b	.L54
 798              	.L55:
 810:Generated_Source\PSoC5/SPI.c ****     {
 811:Generated_Source\PSoC5/SPI.c ****         (void) CY_GET_REG8(SPI_RXDATA_PTR);
 799              		.loc 1 811 0
 800 0006 064B     		ldr	r3, .L56
 801 0008 1B78     		ldrb	r3, [r3]
 802              	.L54:
 809:Generated_Source\PSoC5/SPI.c ****     {
 803              		.loc 1 809 0
 804 000a 064B     		ldr	r3, .L56+4
 805 000c 1B78     		ldrb	r3, [r3]
 806 000e DBB2     		uxtb	r3, r3
 807 0010 03F02003 		and	r3, r3, #32
 808 0014 002B     		cmp	r3, #0
 809 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC5/SPI.c ****     }
 813:Generated_Source\PSoC5/SPI.c **** 
 814:Generated_Source\PSoC5/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPI.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPI.c ****         SPI_DisableRxInt();
 817:Generated_Source\PSoC5/SPI.c **** 
 818:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPI.c ****         SPI_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPI.c **** 
 822:Generated_Source\PSoC5/SPI.c ****         SPI_EnableRxInt();
 823:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPI.c **** }
 810              		.loc 1 824 0
 811 0018 00BF     		nop
 812 001a BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 001c 80BC     		pop	{r7}
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 001e 7047     		bx	lr
 819              	.L57:
 820              		.align	2
 821              	.L56:
 822 0020 57650040 		.word	1073767767
 823 0024 67650040 		.word	1073767783
 824              		.cfi_endproc
 825              	.LFE16:
 826              		.size	SPI_ClearRxBuffer, .-SPI_ClearRxBuffer
 827              		.section	.text.SPI_ClearTxBuffer,"ax",%progbits
 828              		.align	2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 30


 829              		.global	SPI_ClearTxBuffer
 830              		.thumb
 831              		.thumb_func
 832              		.type	SPI_ClearTxBuffer, %function
 833              	SPI_ClearTxBuffer:
 834              	.LFB17:
 825:Generated_Source\PSoC5/SPI.c **** 
 826:Generated_Source\PSoC5/SPI.c **** 
 827:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearTxBuffer
 829:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPI.c **** *
 831:Generated_Source\PSoC5/SPI.c **** * Summary:
 832:Generated_Source\PSoC5/SPI.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPI.c **** *
 834:Generated_Source\PSoC5/SPI.c **** * Parameters:
 835:Generated_Source\PSoC5/SPI.c **** *  None.
 836:Generated_Source\PSoC5/SPI.c **** *
 837:Generated_Source\PSoC5/SPI.c **** * Return:
 838:Generated_Source\PSoC5/SPI.c **** *  None.
 839:Generated_Source\PSoC5/SPI.c **** *
 840:Generated_Source\PSoC5/SPI.c **** * Global variables:
 841:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPI.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPI.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPI.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPI.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPI.c **** *
 848:Generated_Source\PSoC5/SPI.c **** * Theory:
 849:Generated_Source\PSoC5/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPI.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPI.c **** *
 853:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPI.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPI.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPI.c **** *
 857:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPI.c **** *  No.
 859:Generated_Source\PSoC5/SPI.c **** *
 860:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPI.c **** void SPI_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPI.c **** {
 835              		.loc 1 862 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 8
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839 0000 80B5     		push	{r7, lr}
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 82B0     		sub	sp, sp, #8
 844              		.cfi_def_cfa_offset 16
 845 0004 00AF     		add	r7, sp, #0
 846              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 31


 864:Generated_Source\PSoC5/SPI.c **** 
 865:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 847              		.loc 1 865 0
 848 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 849 000a 0346     		mov	r3, r0
 850 000c FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/SPI.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 851              		.loc 1 867 0
 852 000e 0C4A     		ldr	r2, .L59
 853 0010 0B4B     		ldr	r3, .L59
 854 0012 1B78     		ldrb	r3, [r3]
 855 0014 DBB2     		uxtb	r3, r3
 856 0016 43F00103 		orr	r3, r3, #1
 857 001a DBB2     		uxtb	r3, r3
 858 001c 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 859              		.loc 1 868 0
 860 001e 084A     		ldr	r2, .L59
 861 0020 074B     		ldr	r3, .L59
 862 0022 1B78     		ldrb	r3, [r3]
 863 0024 DBB2     		uxtb	r3, r3
 864 0026 23F00103 		bic	r3, r3, #1
 865 002a DBB2     		uxtb	r3, r3
 866 002c 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC5/SPI.c **** 
 870:Generated_Source\PSoC5/SPI.c ****     #if(SPI_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 867              		.loc 1 875 0
 868 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 869 0030 1846     		mov	r0, r3
 870 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC5/SPI.c **** 
 877:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPI.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPI.c ****         SPI_DisableTxInt();
 880:Generated_Source\PSoC5/SPI.c **** 
 881:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPI.c ****         SPI_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPI.c **** 
 885:Generated_Source\PSoC5/SPI.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPI.c ****         SPI_TX_STATUS_MASK_REG &= ((uint8) ~SPI_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPI.c **** 
 888:Generated_Source\PSoC5/SPI.c ****         SPI_EnableTxInt();
 889:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPI.c **** }
 871              		.loc 1 890 0
 872 0036 00BF     		nop
 873 0038 0837     		adds	r7, r7, #8
 874              		.cfi_def_cfa_offset 8
 875 003a BD46     		mov	sp, r7
 876              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 32


 877              		@ sp needed
 878 003c 80BD     		pop	{r7, pc}
 879              	.L60:
 880 003e 00BF     		.align	2
 881              	.L59:
 882 0040 97650040 		.word	1073767831
 883              		.cfi_endproc
 884              	.LFE17:
 885              		.size	SPI_ClearTxBuffer, .-SPI_ClearTxBuffer
 886              		.section	.text.SPI_PutArray,"ax",%progbits
 887              		.align	2
 888              		.global	SPI_PutArray
 889              		.thumb
 890              		.thumb_func
 891              		.type	SPI_PutArray, %function
 892              	SPI_PutArray:
 893              	.LFB18:
 891:Generated_Source\PSoC5/SPI.c **** 
 892:Generated_Source\PSoC5/SPI.c **** 
 893:Generated_Source\PSoC5/SPI.c **** #if(0u != SPI_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPI.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPI.c ****     * Function Name: SPI_TxEnable
 896:Generated_Source\PSoC5/SPI.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPI.c ****     *
 898:Generated_Source\PSoC5/SPI.c ****     * Summary:
 899:Generated_Source\PSoC5/SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPI.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPI.c ****     *
 902:Generated_Source\PSoC5/SPI.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPI.c ****     *  None.
 904:Generated_Source\PSoC5/SPI.c ****     *
 905:Generated_Source\PSoC5/SPI.c ****     * Return:
 906:Generated_Source\PSoC5/SPI.c ****     *  None.
 907:Generated_Source\PSoC5/SPI.c ****     *
 908:Generated_Source\PSoC5/SPI.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPI.c ****     void SPI_TxEnable(void) 
 910:Generated_Source\PSoC5/SPI.c ****     {
 911:Generated_Source\PSoC5/SPI.c ****         SPI_CONTROL_REG |= SPI_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPI.c ****     }
 913:Generated_Source\PSoC5/SPI.c **** 
 914:Generated_Source\PSoC5/SPI.c **** 
 915:Generated_Source\PSoC5/SPI.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPI.c ****     * Function Name: SPI_TxDisable
 917:Generated_Source\PSoC5/SPI.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPI.c ****     *
 919:Generated_Source\PSoC5/SPI.c ****     * Summary:
 920:Generated_Source\PSoC5/SPI.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPI.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPI.c ****     *
 923:Generated_Source\PSoC5/SPI.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPI.c ****     *  None.
 925:Generated_Source\PSoC5/SPI.c ****     *
 926:Generated_Source\PSoC5/SPI.c ****     * Return:
 927:Generated_Source\PSoC5/SPI.c ****     *  None.
 928:Generated_Source\PSoC5/SPI.c ****     *
 929:Generated_Source\PSoC5/SPI.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPI.c ****     void SPI_TxDisable(void) 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 33


 931:Generated_Source\PSoC5/SPI.c ****     {
 932:Generated_Source\PSoC5/SPI.c ****         SPI_CONTROL_REG &= ((uint8) ~SPI_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPI.c ****     }
 934:Generated_Source\PSoC5/SPI.c **** 
 935:Generated_Source\PSoC5/SPI.c **** #endif /* (0u != SPI_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPI.c **** 
 937:Generated_Source\PSoC5/SPI.c **** 
 938:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_PutArray
 940:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPI.c **** *
 942:Generated_Source\PSoC5/SPI.c **** * Summary:
 943:Generated_Source\PSoC5/SPI.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPI.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPI.c **** *
 946:Generated_Source\PSoC5/SPI.c **** * Parameters:
 947:Generated_Source\PSoC5/SPI.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPI.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPI.c **** *
 950:Generated_Source\PSoC5/SPI.c **** * Return:
 951:Generated_Source\PSoC5/SPI.c **** *  None.
 952:Generated_Source\PSoC5/SPI.c **** *
 953:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPI.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPI.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPI.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPI.c **** *
 958:Generated_Source\PSoC5/SPI.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPI.c **** *  No.
 960:Generated_Source\PSoC5/SPI.c **** *
 961:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPI.c **** void SPI_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPI.c ****                                                                           
 964:Generated_Source\PSoC5/SPI.c **** {
 894              		.loc 1 964 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 16
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 84B0     		sub	sp, sp, #16
 903              		.cfi_def_cfa_offset 24
 904 0004 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 906 0006 7860     		str	r0, [r7, #4]
 907 0008 0B46     		mov	r3, r1
 908 000a FB70     		strb	r3, [r7, #3]
 965:Generated_Source\PSoC5/SPI.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPI.c **** 
 967:Generated_Source\PSoC5/SPI.c ****     bufIndex = 0u;
 909              		.loc 1 967 0
 910 000c 0023     		movs	r3, #0
 911 000e FB73     		strb	r3, [r7, #15]
 968:Generated_Source\PSoC5/SPI.c **** 
 969:Generated_Source\PSoC5/SPI.c ****     while(byteCount > 0u)
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 34


 912              		.loc 1 969 0
 913 0010 0CE0     		b	.L62
 914              	.L63:
 970:Generated_Source\PSoC5/SPI.c ****     {
 971:Generated_Source\PSoC5/SPI.c ****         SPI_WriteTxData(buffer[bufIndex]);
 915              		.loc 1 971 0
 916 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 917 0014 7A68     		ldr	r2, [r7, #4]
 918 0016 1344     		add	r3, r3, r2
 919 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 001a 1846     		mov	r0, r3
 921 001c FFF7FEFF 		bl	SPI_WriteTxData
 972:Generated_Source\PSoC5/SPI.c ****         bufIndex++;
 922              		.loc 1 972 0
 923 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 924 0022 0133     		adds	r3, r3, #1
 925 0024 FB73     		strb	r3, [r7, #15]
 973:Generated_Source\PSoC5/SPI.c ****         byteCount--;
 926              		.loc 1 973 0
 927 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 928 0028 013B     		subs	r3, r3, #1
 929 002a FB70     		strb	r3, [r7, #3]
 930              	.L62:
 969:Generated_Source\PSoC5/SPI.c ****     {
 931              		.loc 1 969 0
 932 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 933 002e 002B     		cmp	r3, #0
 934 0030 EFD1     		bne	.L63
 974:Generated_Source\PSoC5/SPI.c ****     }
 975:Generated_Source\PSoC5/SPI.c **** }
 935              		.loc 1 975 0
 936 0032 00BF     		nop
 937 0034 1037     		adds	r7, r7, #16
 938              		.cfi_def_cfa_offset 8
 939 0036 BD46     		mov	sp, r7
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0038 80BD     		pop	{r7, pc}
 943              		.cfi_endproc
 944              	.LFE18:
 945              		.size	SPI_PutArray, .-SPI_PutArray
 946 003a 00BF     		.section	.text.SPI_ClearFIFO,"ax",%progbits
 947              		.align	2
 948              		.global	SPI_ClearFIFO
 949              		.thumb
 950              		.thumb_func
 951              		.type	SPI_ClearFIFO, %function
 952              	SPI_ClearFIFO:
 953              	.LFB19:
 976:Generated_Source\PSoC5/SPI.c **** 
 977:Generated_Source\PSoC5/SPI.c **** 
 978:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ClearFIFO
 980:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPI.c **** *
 982:Generated_Source\PSoC5/SPI.c **** * Summary:
 983:Generated_Source\PSoC5/SPI.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 35


 984:Generated_Source\PSoC5/SPI.c **** *
 985:Generated_Source\PSoC5/SPI.c **** * Parameters:
 986:Generated_Source\PSoC5/SPI.c **** *  None.
 987:Generated_Source\PSoC5/SPI.c **** *
 988:Generated_Source\PSoC5/SPI.c **** * Return:
 989:Generated_Source\PSoC5/SPI.c **** *  None.
 990:Generated_Source\PSoC5/SPI.c **** *
 991:Generated_Source\PSoC5/SPI.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPI.c **** *
 994:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPI.c **** void SPI_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPI.c **** {
 954              		.loc 1 996 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 8
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958 0000 80B5     		push	{r7, lr}
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 7, -8
 961              		.cfi_offset 14, -4
 962 0002 82B0     		sub	sp, sp, #8
 963              		.cfi_def_cfa_offset 16
 964 0004 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/SPI.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPI.c **** 
 999:Generated_Source\PSoC5/SPI.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPI.c ****     while(0u !=(SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY))
 966              		.loc 1 1000 0
 967 0006 01E0     		b	.L65
 968              	.L66:
1001:Generated_Source\PSoC5/SPI.c ****     {
1002:Generated_Source\PSoC5/SPI.c ****         (void) CY_GET_REG8(SPI_RXDATA_PTR);
 969              		.loc 1 1002 0
 970 0008 124B     		ldr	r3, .L67
 971 000a 1B78     		ldrb	r3, [r3]
 972              	.L65:
1000:Generated_Source\PSoC5/SPI.c ****     {
 973              		.loc 1 1000 0
 974 000c 124B     		ldr	r3, .L67+4
 975 000e 1B78     		ldrb	r3, [r3]
 976 0010 DBB2     		uxtb	r3, r3
 977 0012 03F02003 		and	r3, r3, #32
 978 0016 002B     		cmp	r3, #0
 979 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC5/SPI.c ****     }
1004:Generated_Source\PSoC5/SPI.c **** 
1005:Generated_Source\PSoC5/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 980              		.loc 1 1005 0
 981 001a FFF7FEFF 		bl	CyEnterCriticalSection
 982 001e 0346     		mov	r3, r0
 983 0020 FB71     		strb	r3, [r7, #7]
1006:Generated_Source\PSoC5/SPI.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_TX_FIFO_CLR);
 984              		.loc 1 1007 0
 985 0022 0E4A     		ldr	r2, .L67+8
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 36


 986 0024 0D4B     		ldr	r3, .L67+8
 987 0026 1B78     		ldrb	r3, [r3]
 988 0028 DBB2     		uxtb	r3, r3
 989 002a 43F00103 		orr	r3, r3, #1
 990 002e DBB2     		uxtb	r3, r3
 991 0030 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC5/SPI.c ****     SPI_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
 992              		.loc 1 1008 0
 993 0032 0A4A     		ldr	r2, .L67+8
 994 0034 094B     		ldr	r3, .L67+8
 995 0036 1B78     		ldrb	r3, [r3]
 996 0038 DBB2     		uxtb	r3, r3
 997 003a 23F00103 		bic	r3, r3, #1
 998 003e DBB2     		uxtb	r3, r3
 999 0040 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/SPI.c **** 
1010:Generated_Source\PSoC5/SPI.c ****     #if(SPI_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPI.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPI.c ****         SPI_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 1000              		.loc 1 1015 0
 1001 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1002 0044 1846     		mov	r0, r3
 1003 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC5/SPI.c **** }
 1004              		.loc 1 1016 0
 1005 004a 00BF     		nop
 1006 004c 0837     		adds	r7, r7, #8
 1007              		.cfi_def_cfa_offset 8
 1008 004e BD46     		mov	sp, r7
 1009              		.cfi_def_cfa_register 13
 1010              		@ sp needed
 1011 0050 80BD     		pop	{r7, pc}
 1012              	.L68:
 1013 0052 00BF     		.align	2
 1014              	.L67:
 1015 0054 57650040 		.word	1073767767
 1016 0058 67650040 		.word	1073767783
 1017 005c 97650040 		.word	1073767831
 1018              		.cfi_endproc
 1019              	.LFE19:
 1020              		.size	SPI_ClearFIFO, .-SPI_ClearFIFO
 1021              		.section	.text.SPI_EnableInt,"ax",%progbits
 1022              		.align	2
 1023              		.global	SPI_EnableInt
 1024              		.thumb
 1025              		.thumb_func
 1026              		.type	SPI_EnableInt, %function
 1027              	SPI_EnableInt:
 1028              	.LFB20:
1017:Generated_Source\PSoC5/SPI.c **** 
1018:Generated_Source\PSoC5/SPI.c **** 
1019:Generated_Source\PSoC5/SPI.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPI.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPI.c **** */
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 37


1022:Generated_Source\PSoC5/SPI.c **** 
1023:Generated_Source\PSoC5/SPI.c **** 
1024:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_EnableInt
1026:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPI.c **** *
1028:Generated_Source\PSoC5/SPI.c **** * Summary:
1029:Generated_Source\PSoC5/SPI.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPI.c **** *
1031:Generated_Source\PSoC5/SPI.c **** * Parameters:
1032:Generated_Source\PSoC5/SPI.c **** *  None.
1033:Generated_Source\PSoC5/SPI.c **** *
1034:Generated_Source\PSoC5/SPI.c **** * Return:
1035:Generated_Source\PSoC5/SPI.c **** *  None.
1036:Generated_Source\PSoC5/SPI.c **** *
1037:Generated_Source\PSoC5/SPI.c **** * Theory:
1038:Generated_Source\PSoC5/SPI.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPI.c **** *
1040:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPI.c **** void SPI_EnableInt(void) 
1042:Generated_Source\PSoC5/SPI.c **** {
 1029              		.loc 1 1042 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
 1033 0000 80B5     		push	{r7, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 00AF     		add	r7, sp, #0
 1038              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC5/SPI.c ****     SPI_EnableRxInt();
 1039              		.loc 1 1043 0
 1040 0004 FFF7FEFF 		bl	SPI_EnableRxInt
1044:Generated_Source\PSoC5/SPI.c ****     SPI_EnableTxInt();
 1041              		.loc 1 1044 0
 1042 0008 FFF7FEFF 		bl	SPI_EnableTxInt
1045:Generated_Source\PSoC5/SPI.c **** }
 1043              		.loc 1 1045 0
 1044 000c 00BF     		nop
 1045 000e 80BD     		pop	{r7, pc}
 1046              		.cfi_endproc
 1047              	.LFE20:
 1048              		.size	SPI_EnableInt, .-SPI_EnableInt
 1049              		.section	.text.SPI_DisableInt,"ax",%progbits
 1050              		.align	2
 1051              		.global	SPI_DisableInt
 1052              		.thumb
 1053              		.thumb_func
 1054              		.type	SPI_DisableInt, %function
 1055              	SPI_DisableInt:
 1056              	.LFB21:
1046:Generated_Source\PSoC5/SPI.c **** 
1047:Generated_Source\PSoC5/SPI.c **** 
1048:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_DisableInt
1050:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 38


1051:Generated_Source\PSoC5/SPI.c **** *
1052:Generated_Source\PSoC5/SPI.c **** * Summary:
1053:Generated_Source\PSoC5/SPI.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPI.c **** *
1055:Generated_Source\PSoC5/SPI.c **** * Parameters:
1056:Generated_Source\PSoC5/SPI.c **** *  None.
1057:Generated_Source\PSoC5/SPI.c **** *
1058:Generated_Source\PSoC5/SPI.c **** * Return:
1059:Generated_Source\PSoC5/SPI.c **** *  None.
1060:Generated_Source\PSoC5/SPI.c **** *
1061:Generated_Source\PSoC5/SPI.c **** * Theory:
1062:Generated_Source\PSoC5/SPI.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPI.c **** *
1064:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPI.c **** void SPI_DisableInt(void) 
1066:Generated_Source\PSoC5/SPI.c **** {
 1057              		.loc 1 1066 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061 0000 80B5     		push	{r7, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/SPI.c ****     SPI_DisableTxInt();
 1067              		.loc 1 1067 0
 1068 0004 FFF7FEFF 		bl	SPI_DisableTxInt
1068:Generated_Source\PSoC5/SPI.c ****     SPI_DisableRxInt();
 1069              		.loc 1 1068 0
 1070 0008 FFF7FEFF 		bl	SPI_DisableRxInt
1069:Generated_Source\PSoC5/SPI.c **** }
 1071              		.loc 1 1069 0
 1072 000c 00BF     		nop
 1073 000e 80BD     		pop	{r7, pc}
 1074              		.cfi_endproc
 1075              	.LFE21:
 1076              		.size	SPI_DisableInt, .-SPI_DisableInt
 1077              		.section	.text.SPI_SetInterruptMode,"ax",%progbits
 1078              		.align	2
 1079              		.global	SPI_SetInterruptMode
 1080              		.thumb
 1081              		.thumb_func
 1082              		.type	SPI_SetInterruptMode, %function
 1083              	SPI_SetInterruptMode:
 1084              	.LFB22:
1070:Generated_Source\PSoC5/SPI.c **** 
1071:Generated_Source\PSoC5/SPI.c **** 
1072:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_SetInterruptMode
1074:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPI.c **** *
1076:Generated_Source\PSoC5/SPI.c **** * Summary:
1077:Generated_Source\PSoC5/SPI.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPI.c **** *
1079:Generated_Source\PSoC5/SPI.c **** * Parameters:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 39


1080:Generated_Source\PSoC5/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPI.c **** *  header file).
1082:Generated_Source\PSoC5/SPI.c **** *
1083:Generated_Source\PSoC5/SPI.c **** * Return:
1084:Generated_Source\PSoC5/SPI.c **** *  None.
1085:Generated_Source\PSoC5/SPI.c **** *
1086:Generated_Source\PSoC5/SPI.c **** * Theory:
1087:Generated_Source\PSoC5/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPI.c **** *
1089:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPI.c **** void SPI_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPI.c **** {
 1085              		.loc 1 1091 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 8
 1088              		@ frame_needed = 1, uses_anonymous_args = 0
 1089              		@ link register save eliminated.
 1090 0000 80B4     		push	{r7}
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 7, -4
 1093 0002 83B0     		sub	sp, sp, #12
 1094              		.cfi_def_cfa_offset 16
 1095 0004 00AF     		add	r7, sp, #0
 1096              		.cfi_def_cfa_register 7
 1097 0006 0346     		mov	r3, r0
 1098 0008 FB71     		strb	r3, [r7, #7]
1092:Generated_Source\PSoC5/SPI.c ****     SPI_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI_STS_SPI_IDLE));
 1099              		.loc 1 1092 0
 1100 000a 074A     		ldr	r2, .L72
 1101 000c FB79     		ldrb	r3, [r7, #7]
 1102 000e 23F01003 		bic	r3, r3, #16
 1103 0012 DBB2     		uxtb	r3, r3
 1104 0014 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/SPI.c ****     SPI_RX_STATUS_MASK_REG  =  intSrc;
 1105              		.loc 1 1093 0
 1106 0016 054A     		ldr	r2, .L72+4
 1107 0018 FB79     		ldrb	r3, [r7, #7]
 1108 001a 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPI.c **** }
 1109              		.loc 1 1094 0
 1110 001c 00BF     		nop
 1111 001e 0C37     		adds	r7, r7, #12
 1112              		.cfi_def_cfa_offset 4
 1113 0020 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0022 80BC     		pop	{r7}
 1117              		.cfi_restore 7
 1118              		.cfi_def_cfa_offset 0
 1119 0024 7047     		bx	lr
 1120              	.L73:
 1121 0026 00BF     		.align	2
 1122              	.L72:
 1123 0028 88640040 		.word	1073767560
 1124 002c 87650040 		.word	1073767815
 1125              		.cfi_endproc
 1126              	.LFE22:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 40


 1127              		.size	SPI_SetInterruptMode, .-SPI_SetInterruptMode
 1128              		.section	.text.SPI_ReadStatus,"ax",%progbits
 1129              		.align	2
 1130              		.global	SPI_ReadStatus
 1131              		.thumb
 1132              		.thumb_func
 1133              		.type	SPI_ReadStatus, %function
 1134              	SPI_ReadStatus:
 1135              	.LFB23:
1095:Generated_Source\PSoC5/SPI.c **** 
1096:Generated_Source\PSoC5/SPI.c **** 
1097:Generated_Source\PSoC5/SPI.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPI.c **** * Function Name: SPI_ReadStatus
1099:Generated_Source\PSoC5/SPI.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPI.c **** *
1101:Generated_Source\PSoC5/SPI.c **** * Summary:
1102:Generated_Source\PSoC5/SPI.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPI.c **** *
1104:Generated_Source\PSoC5/SPI.c **** * Parameters:
1105:Generated_Source\PSoC5/SPI.c **** *  None.
1106:Generated_Source\PSoC5/SPI.c **** *
1107:Generated_Source\PSoC5/SPI.c **** * Return:
1108:Generated_Source\PSoC5/SPI.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPI.c **** *
1110:Generated_Source\PSoC5/SPI.c **** * Global variables:
1111:Generated_Source\PSoC5/SPI.c **** *  SPI_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPI.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPI.c **** *
1114:Generated_Source\PSoC5/SPI.c **** * Theory:
1115:Generated_Source\PSoC5/SPI.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPI.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPI.c **** *
1118:Generated_Source\PSoC5/SPI.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPI.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPI.c **** *
1121:Generated_Source\PSoC5/SPI.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPI.c **** *  No.
1123:Generated_Source\PSoC5/SPI.c **** *
1124:Generated_Source\PSoC5/SPI.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPI.c **** uint8 SPI_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPI.c **** {
 1136              		.loc 1 1126 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 8
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141 0000 80B4     		push	{r7}
 1142              		.cfi_def_cfa_offset 4
 1143              		.cfi_offset 7, -4
 1144 0002 83B0     		sub	sp, sp, #12
 1145              		.cfi_def_cfa_offset 16
 1146 0004 00AF     		add	r7, sp, #0
 1147              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC5/SPI.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPI.c **** 
1129:Generated_Source\PSoC5/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED || SPI_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPI.c **** 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 41


1131:Generated_Source\PSoC5/SPI.c ****         SPI_DisableInt();
1132:Generated_Source\PSoC5/SPI.c **** 
1133:Generated_Source\PSoC5/SPI.c ****         tmpStatus  = SPI_GET_STATUS_RX(SPI_swStatusRx);
1134:Generated_Source\PSoC5/SPI.c ****         tmpStatus |= SPI_GET_STATUS_TX(SPI_swStatusTx);
1135:Generated_Source\PSoC5/SPI.c ****         tmpStatus &= ((uint8) ~SPI_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPI.c **** 
1137:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPI.c ****         SPI_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPI.c **** 
1140:Generated_Source\PSoC5/SPI.c ****         SPI_EnableInt();
1141:Generated_Source\PSoC5/SPI.c **** 
1142:Generated_Source\PSoC5/SPI.c ****     #else
1143:Generated_Source\PSoC5/SPI.c **** 
1144:Generated_Source\PSoC5/SPI.c ****         tmpStatus  = SPI_RX_STATUS_REG;
 1148              		.loc 1 1144 0
 1149 0006 094B     		ldr	r3, .L76
 1150 0008 1B78     		ldrb	r3, [r3]
 1151 000a FB71     		strb	r3, [r7, #7]
1145:Generated_Source\PSoC5/SPI.c ****         tmpStatus |= SPI_TX_STATUS_REG;
 1152              		.loc 1 1145 0
 1153 000c 084B     		ldr	r3, .L76+4
 1154 000e 1B78     		ldrb	r3, [r3]
 1155 0010 DAB2     		uxtb	r2, r3
 1156 0012 FB79     		ldrb	r3, [r7, #7]
 1157 0014 1343     		orrs	r3, r3, r2
 1158 0016 FB71     		strb	r3, [r7, #7]
1146:Generated_Source\PSoC5/SPI.c ****         tmpStatus &= ((uint8) ~SPI_STS_SPI_IDLE);
 1159              		.loc 1 1146 0
 1160 0018 FB79     		ldrb	r3, [r7, #7]
 1161 001a 23F01003 		bic	r3, r3, #16
 1162 001e FB71     		strb	r3, [r7, #7]
1147:Generated_Source\PSoC5/SPI.c **** 
1148:Generated_Source\PSoC5/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED || SPI_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPI.c **** 
1150:Generated_Source\PSoC5/SPI.c ****     return(tmpStatus);
 1163              		.loc 1 1150 0
 1164 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:Generated_Source\PSoC5/SPI.c **** }
 1165              		.loc 1 1151 0
 1166 0022 1846     		mov	r0, r3
 1167 0024 0C37     		adds	r7, r7, #12
 1168              		.cfi_def_cfa_offset 4
 1169 0026 BD46     		mov	sp, r7
 1170              		.cfi_def_cfa_register 13
 1171              		@ sp needed
 1172 0028 80BC     		pop	{r7}
 1173              		.cfi_restore 7
 1174              		.cfi_def_cfa_offset 0
 1175 002a 7047     		bx	lr
 1176              	.L77:
 1177              		.align	2
 1178              	.L76:
 1179 002c 67650040 		.word	1073767783
 1180 0030 68640040 		.word	1073767528
 1181              		.cfi_endproc
 1182              	.LFE23:
 1183              		.size	SPI_ReadStatus, .-SPI_ReadStatus
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 42


 1184              		.text
 1185              	.Letext0:
 1186              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1187              		.section	.debug_info,"",%progbits
 1188              	.Ldebug_info0:
 1189 0000 F0030000 		.4byte	0x3f0
 1190 0004 0400     		.2byte	0x4
 1191 0006 00000000 		.4byte	.Ldebug_abbrev0
 1192 000a 04       		.byte	0x4
 1193 000b 01       		.uleb128 0x1
 1194 000c 5C000000 		.4byte	.LASF52
 1195 0010 0C       		.byte	0xc
 1196 0011 34030000 		.4byte	.LASF53
 1197 0015 00000000 		.4byte	.LASF54
 1198 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1199 001d 00000000 		.4byte	0
 1200 0021 00000000 		.4byte	.Ldebug_line0
 1201 0025 02       		.uleb128 0x2
 1202 0026 01       		.byte	0x1
 1203 0027 06       		.byte	0x6
 1204 0028 81030000 		.4byte	.LASF0
 1205 002c 02       		.uleb128 0x2
 1206 002d 01       		.byte	0x1
 1207 002e 08       		.byte	0x8
 1208 002f FD010000 		.4byte	.LASF1
 1209 0033 02       		.uleb128 0x2
 1210 0034 02       		.byte	0x2
 1211 0035 05       		.byte	0x5
 1212 0036 12030000 		.4byte	.LASF2
 1213 003a 02       		.uleb128 0x2
 1214 003b 02       		.byte	0x2
 1215 003c 07       		.byte	0x7
 1216 003d 23010000 		.4byte	.LASF3
 1217 0041 02       		.uleb128 0x2
 1218 0042 04       		.byte	0x4
 1219 0043 05       		.byte	0x5
 1220 0044 51030000 		.4byte	.LASF4
 1221 0048 02       		.uleb128 0x2
 1222 0049 04       		.byte	0x4
 1223 004a 07       		.byte	0x7
 1224 004b BA010000 		.4byte	.LASF5
 1225 004f 02       		.uleb128 0x2
 1226 0050 08       		.byte	0x8
 1227 0051 05       		.byte	0x5
 1228 0052 E5020000 		.4byte	.LASF6
 1229 0056 02       		.uleb128 0x2
 1230 0057 08       		.byte	0x8
 1231 0058 07       		.byte	0x7
 1232 0059 92020000 		.4byte	.LASF7
 1233 005d 03       		.uleb128 0x3
 1234 005e 04       		.byte	0x4
 1235 005f 05       		.byte	0x5
 1236 0060 696E7400 		.ascii	"int\000"
 1237 0064 02       		.uleb128 0x2
 1238 0065 04       		.byte	0x4
 1239 0066 07       		.byte	0x7
 1240 0067 6E020000 		.4byte	.LASF8
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 43


 1241 006b 04       		.uleb128 0x4
 1242 006c CC010000 		.4byte	.LASF12
 1243 0070 02       		.byte	0x2
 1244 0071 9201     		.2byte	0x192
 1245 0073 2C000000 		.4byte	0x2c
 1246 0077 02       		.uleb128 0x2
 1247 0078 04       		.byte	0x4
 1248 0079 04       		.byte	0x4
 1249 007a 76010000 		.4byte	.LASF9
 1250 007e 02       		.uleb128 0x2
 1251 007f 08       		.byte	0x8
 1252 0080 04       		.byte	0x4
 1253 0081 0B020000 		.4byte	.LASF10
 1254 0085 02       		.uleb128 0x2
 1255 0086 01       		.byte	0x1
 1256 0087 08       		.byte	0x8
 1257 0088 F3020000 		.4byte	.LASF11
 1258 008c 04       		.uleb128 0x4
 1259 008d A4010000 		.4byte	.LASF13
 1260 0091 02       		.byte	0x2
 1261 0092 3C02     		.2byte	0x23c
 1262 0094 98000000 		.4byte	0x98
 1263 0098 05       		.uleb128 0x5
 1264 0099 6B000000 		.4byte	0x6b
 1265 009d 02       		.uleb128 0x2
 1266 009e 08       		.byte	0x8
 1267 009f 04       		.byte	0x4
 1268 00a0 75030000 		.4byte	.LASF14
 1269 00a4 02       		.uleb128 0x2
 1270 00a5 04       		.byte	0x4
 1271 00a6 07       		.byte	0x7
 1272 00a7 CB020000 		.4byte	.LASF15
 1273 00ab 06       		.uleb128 0x6
 1274 00ac 36010000 		.4byte	.LASF16
 1275 00b0 01       		.byte	0x1
 1276 00b1 3F       		.byte	0x3f
 1277 00b2 00000000 		.4byte	.LFB0
 1278 00b6 34000000 		.4byte	.LFE0-.LFB0
 1279 00ba 01       		.uleb128 0x1
 1280 00bb 9C       		.byte	0x9c
 1281 00bc 07       		.uleb128 0x7
 1282 00bd F8020000 		.4byte	.LASF18
 1283 00c1 01       		.byte	0x1
 1284 00c2 78       		.byte	0x78
 1285 00c3 00000000 		.4byte	.LFB1
 1286 00c7 68000000 		.4byte	.LFE1-.LFB1
 1287 00cb 01       		.uleb128 0x1
 1288 00cc 9C       		.byte	0x9c
 1289 00cd E0000000 		.4byte	0xe0
 1290 00d1 08       		.uleb128 0x8
 1291 00d2 D4020000 		.4byte	.LASF20
 1292 00d6 01       		.byte	0x1
 1293 00d7 7A       		.byte	0x7a
 1294 00d8 6B000000 		.4byte	0x6b
 1295 00dc 02       		.uleb128 0x2
 1296 00dd 91       		.byte	0x91
 1297 00de 77       		.sleb128 -9
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 44


 1298 00df 00       		.byte	0
 1299 00e0 06       		.uleb128 0x6
 1300 00e1 AC030000 		.4byte	.LASF17
 1301 00e5 01       		.byte	0x1
 1302 00e6 A3       		.byte	0xa3
 1303 00e7 00000000 		.4byte	.LFB2
 1304 00eb 24000000 		.4byte	.LFE2-.LFB2
 1305 00ef 01       		.uleb128 0x1
 1306 00f0 9C       		.byte	0x9c
 1307 00f1 07       		.uleb128 0x7
 1308 00f2 51020000 		.4byte	.LASF19
 1309 00f6 01       		.byte	0x1
 1310 00f7 C0       		.byte	0xc0
 1311 00f8 00000000 		.4byte	.LFB3
 1312 00fc 54000000 		.4byte	.LFE3-.LFB3
 1313 0100 01       		.uleb128 0x1
 1314 0101 9C       		.byte	0x9c
 1315 0102 15010000 		.4byte	0x115
 1316 0106 08       		.uleb128 0x8
 1317 0107 D4020000 		.4byte	.LASF20
 1318 010b 01       		.byte	0x1
 1319 010c C2       		.byte	0xc2
 1320 010d 6B000000 		.4byte	0x6b
 1321 0111 02       		.uleb128 0x2
 1322 0112 91       		.byte	0x91
 1323 0113 77       		.sleb128 -9
 1324 0114 00       		.byte	0
 1325 0115 09       		.uleb128 0x9
 1326 0116 ED010000 		.4byte	.LASF21
 1327 011a 01       		.byte	0x1
 1328 011b E3       		.byte	0xe3
 1329 011c 00000000 		.4byte	.LFB4
 1330 0120 0C000000 		.4byte	.LFE4-.LFB4
 1331 0124 01       		.uleb128 0x1
 1332 0125 9C       		.byte	0x9c
 1333 0126 09       		.uleb128 0x9
 1334 0127 9C030000 		.4byte	.LASF22
 1335 012b 01       		.byte	0x1
 1336 012c FC       		.byte	0xfc
 1337 012d 00000000 		.4byte	.LFB5
 1338 0131 0C000000 		.4byte	.LFE5-.LFB5
 1339 0135 01       		.uleb128 0x1
 1340 0136 9C       		.byte	0x9c
 1341 0137 0A       		.uleb128 0xa
 1342 0138 23030000 		.4byte	.LASF23
 1343 013c 01       		.byte	0x1
 1344 013d 1501     		.2byte	0x115
 1345 013f 00000000 		.4byte	.LFB6
 1346 0143 0C000000 		.4byte	.LFE6-.LFB6
 1347 0147 01       		.uleb128 0x1
 1348 0148 9C       		.byte	0x9c
 1349 0149 0A       		.uleb128 0xa
 1350 014a A9010000 		.4byte	.LASF24
 1351 014e 01       		.byte	0x1
 1352 014f 2E01     		.2byte	0x12e
 1353 0151 00000000 		.4byte	.LFB7
 1354 0155 0C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 45


 1355 0159 01       		.uleb128 0x1
 1356 015a 9C       		.byte	0x9c
 1357 015b 0B       		.uleb128 0xb
 1358 015c 7B020000 		.4byte	.LASF25
 1359 0160 01       		.byte	0x1
 1360 0161 4801     		.2byte	0x148
 1361 0163 00000000 		.4byte	.LFB8
 1362 0167 20000000 		.4byte	.LFE8-.LFB8
 1363 016b 01       		.uleb128 0x1
 1364 016c 9C       		.byte	0x9c
 1365 016d 81010000 		.4byte	0x181
 1366 0171 0C       		.uleb128 0xc
 1367 0172 29020000 		.4byte	.LASF27
 1368 0176 01       		.byte	0x1
 1369 0177 4801     		.2byte	0x148
 1370 0179 6B000000 		.4byte	0x6b
 1371 017d 02       		.uleb128 0x2
 1372 017e 91       		.byte	0x91
 1373 017f 77       		.sleb128 -9
 1374 0180 00       		.byte	0
 1375 0181 0B       		.uleb128 0xb
 1376 0182 12020000 		.4byte	.LASF26
 1377 0186 01       		.byte	0x1
 1378 0187 6001     		.2byte	0x160
 1379 0189 00000000 		.4byte	.LFB9
 1380 018d 20000000 		.4byte	.LFE9-.LFB9
 1381 0191 01       		.uleb128 0x1
 1382 0192 9C       		.byte	0x9c
 1383 0193 A7010000 		.4byte	0x1a7
 1384 0197 0C       		.uleb128 0xc
 1385 0198 29020000 		.4byte	.LASF27
 1386 019c 01       		.byte	0x1
 1387 019d 6001     		.2byte	0x160
 1388 019f 6B000000 		.4byte	0x6b
 1389 01a3 02       		.uleb128 0x2
 1390 01a4 91       		.byte	0x91
 1391 01a5 77       		.sleb128 -9
 1392 01a6 00       		.byte	0
 1393 01a7 0D       		.uleb128 0xd
 1394 01a8 DC010000 		.4byte	.LASF29
 1395 01ac 01       		.byte	0x1
 1396 01ad 8201     		.2byte	0x182
 1397 01af 6B000000 		.4byte	0x6b
 1398 01b3 00000000 		.4byte	.LFB10
 1399 01b7 1C000000 		.4byte	.LFE10-.LFB10
 1400 01bb 01       		.uleb128 0x1
 1401 01bc 9C       		.byte	0x9c
 1402 01bd D1010000 		.4byte	0x1d1
 1403 01c1 0E       		.uleb128 0xe
 1404 01c2 5A030000 		.4byte	.LASF28
 1405 01c6 01       		.byte	0x1
 1406 01c7 8401     		.2byte	0x184
 1407 01c9 6B000000 		.4byte	0x6b
 1408 01cd 02       		.uleb128 0x2
 1409 01ce 91       		.byte	0x91
 1410 01cf 77       		.sleb128 -9
 1411 01d0 00       		.byte	0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 46


 1412 01d1 0D       		.uleb128 0xd
 1413 01d2 64030000 		.4byte	.LASF30
 1414 01d6 01       		.byte	0x1
 1415 01d7 B501     		.2byte	0x1b5
 1416 01d9 6B000000 		.4byte	0x6b
 1417 01dd 00000000 		.4byte	.LFB11
 1418 01e1 1C000000 		.4byte	.LFE11-.LFB11
 1419 01e5 01       		.uleb128 0x1
 1420 01e6 9C       		.byte	0x9c
 1421 01e7 FB010000 		.4byte	0x1fb
 1422 01eb 0E       		.uleb128 0xe
 1423 01ec 5A030000 		.4byte	.LASF28
 1424 01f0 01       		.byte	0x1
 1425 01f1 B701     		.2byte	0x1b7
 1426 01f3 6B000000 		.4byte	0x6b
 1427 01f7 02       		.uleb128 0x2
 1428 01f8 91       		.byte	0x91
 1429 01f9 77       		.sleb128 -9
 1430 01fa 00       		.byte	0
 1431 01fb 0B       		.uleb128 0xb
 1432 01fc F8000000 		.4byte	.LASF31
 1433 0200 01       		.byte	0x1
 1434 0201 EE01     		.2byte	0x1ee
 1435 0203 00000000 		.4byte	.LFB12
 1436 0207 34000000 		.4byte	.LFE12-.LFB12
 1437 020b 01       		.uleb128 0x1
 1438 020c 9C       		.byte	0x9c
 1439 020d 21020000 		.4byte	0x221
 1440 0211 0C       		.uleb128 0xc
 1441 0212 B2020000 		.4byte	.LASF32
 1442 0216 01       		.byte	0x1
 1443 0217 EE01     		.2byte	0x1ee
 1444 0219 6B000000 		.4byte	0x6b
 1445 021d 02       		.uleb128 0x2
 1446 021e 91       		.byte	0x91
 1447 021f 77       		.sleb128 -9
 1448 0220 00       		.byte	0
 1449 0221 0D       		.uleb128 0xd
 1450 0222 14010000 		.4byte	.LASF33
 1451 0226 01       		.byte	0x1
 1452 0227 5A02     		.2byte	0x25a
 1453 0229 6B000000 		.4byte	0x6b
 1454 022d 00000000 		.4byte	.LFB13
 1455 0231 1C000000 		.4byte	.LFE13-.LFB13
 1456 0235 01       		.uleb128 0x1
 1457 0236 9C       		.byte	0x9c
 1458 0237 4B020000 		.4byte	0x24b
 1459 023b 0E       		.uleb128 0xe
 1460 023c 6F010000 		.4byte	.LASF34
 1461 0240 01       		.byte	0x1
 1462 0241 5C02     		.2byte	0x25c
 1463 0243 6B000000 		.4byte	0x6b
 1464 0247 02       		.uleb128 0x2
 1465 0248 91       		.byte	0x91
 1466 0249 77       		.sleb128 -9
 1467 024a 00       		.byte	0
 1468 024b 0D       		.uleb128 0xd
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 47


 1469 024c 5A020000 		.4byte	.LASF35
 1470 0250 01       		.byte	0x1
 1471 0251 9A02     		.2byte	0x29a
 1472 0253 6B000000 		.4byte	0x6b
 1473 0257 00000000 		.4byte	.LFB14
 1474 025b 2C000000 		.4byte	.LFE14-.LFB14
 1475 025f 01       		.uleb128 0x1
 1476 0260 9C       		.byte	0x9c
 1477 0261 75020000 		.4byte	0x275
 1478 0265 0E       		.uleb128 0xe
 1479 0266 9F010000 		.4byte	.LASF36
 1480 026a 01       		.byte	0x1
 1481 026b 9C02     		.2byte	0x29c
 1482 026d 6B000000 		.4byte	0x6b
 1483 0271 02       		.uleb128 0x2
 1484 0272 91       		.byte	0x91
 1485 0273 77       		.sleb128 -9
 1486 0274 00       		.byte	0
 1487 0275 0D       		.uleb128 0xd
 1488 0276 3D020000 		.4byte	.LASF37
 1489 027a 01       		.byte	0x1
 1490 027b D702     		.2byte	0x2d7
 1491 027d 6B000000 		.4byte	0x6b
 1492 0281 00000000 		.4byte	.LFB15
 1493 0285 40000000 		.4byte	.LFE15-.LFB15
 1494 0289 01       		.uleb128 0x1
 1495 028a 9C       		.byte	0x9c
 1496 028b 9F020000 		.4byte	0x29f
 1497 028f 0E       		.uleb128 0xe
 1498 0290 9F010000 		.4byte	.LASF36
 1499 0294 01       		.byte	0x1
 1500 0295 D902     		.2byte	0x2d9
 1501 0297 6B000000 		.4byte	0x6b
 1502 029b 02       		.uleb128 0x2
 1503 029c 91       		.byte	0x91
 1504 029d 77       		.sleb128 -9
 1505 029e 00       		.byte	0
 1506 029f 0A       		.uleb128 0xa
 1507 02a0 B9020000 		.4byte	.LASF38
 1508 02a4 01       		.byte	0x1
 1509 02a5 2603     		.2byte	0x326
 1510 02a7 00000000 		.4byte	.LFB16
 1511 02ab 28000000 		.4byte	.LFE16-.LFB16
 1512 02af 01       		.uleb128 0x1
 1513 02b0 9C       		.byte	0x9c
 1514 02b1 0F       		.uleb128 0xf
 1515 02b2 4E010000 		.4byte	.LASF39
 1516 02b6 01       		.byte	0x1
 1517 02b7 5D03     		.2byte	0x35d
 1518 02b9 00000000 		.4byte	.LFB17
 1519 02bd 44000000 		.4byte	.LFE17-.LFB17
 1520 02c1 01       		.uleb128 0x1
 1521 02c2 9C       		.byte	0x9c
 1522 02c3 D7020000 		.4byte	0x2d7
 1523 02c7 0E       		.uleb128 0xe
 1524 02c8 D4020000 		.4byte	.LASF20
 1525 02cc 01       		.byte	0x1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 48


 1526 02cd 5F03     		.2byte	0x35f
 1527 02cf 6B000000 		.4byte	0x6b
 1528 02d3 02       		.uleb128 0x2
 1529 02d4 91       		.byte	0x91
 1530 02d5 77       		.sleb128 -9
 1531 02d6 00       		.byte	0
 1532 02d7 0F       		.uleb128 0xf
 1533 02d8 30020000 		.4byte	.LASF40
 1534 02dc 01       		.byte	0x1
 1535 02dd C203     		.2byte	0x3c2
 1536 02df 00000000 		.4byte	.LFB18
 1537 02e3 3A000000 		.4byte	.LFE18-.LFB18
 1538 02e7 01       		.uleb128 0x1
 1539 02e8 9C       		.byte	0x9c
 1540 02e9 1B030000 		.4byte	0x31b
 1541 02ed 0C       		.uleb128 0xc
 1542 02ee 1C030000 		.4byte	.LASF41
 1543 02f2 01       		.byte	0x1
 1544 02f3 C203     		.2byte	0x3c2
 1545 02f5 1B030000 		.4byte	0x31b
 1546 02f9 02       		.uleb128 0x2
 1547 02fa 91       		.byte	0x91
 1548 02fb 6C       		.sleb128 -20
 1549 02fc 0C       		.uleb128 0xc
 1550 02fd D2010000 		.4byte	.LASF42
 1551 0301 01       		.byte	0x1
 1552 0302 C203     		.2byte	0x3c2
 1553 0304 6B000000 		.4byte	0x6b
 1554 0308 02       		.uleb128 0x2
 1555 0309 91       		.byte	0x91
 1556 030a 6B       		.sleb128 -21
 1557 030b 0E       		.uleb128 0xe
 1558 030c A9020000 		.4byte	.LASF43
 1559 0310 01       		.byte	0x1
 1560 0311 C503     		.2byte	0x3c5
 1561 0313 6B000000 		.4byte	0x6b
 1562 0317 02       		.uleb128 0x2
 1563 0318 91       		.byte	0x91
 1564 0319 77       		.sleb128 -9
 1565 031a 00       		.byte	0
 1566 031b 10       		.uleb128 0x10
 1567 031c 04       		.byte	0x4
 1568 031d 21030000 		.4byte	0x321
 1569 0321 11       		.uleb128 0x11
 1570 0322 6B000000 		.4byte	0x6b
 1571 0326 0F       		.uleb128 0xf
 1572 0327 7C010000 		.4byte	.LASF44
 1573 032b 01       		.byte	0x1
 1574 032c E303     		.2byte	0x3e3
 1575 032e 00000000 		.4byte	.LFB19
 1576 0332 60000000 		.4byte	.LFE19-.LFB19
 1577 0336 01       		.uleb128 0x1
 1578 0337 9C       		.byte	0x9c
 1579 0338 4C030000 		.4byte	0x34c
 1580 033c 0E       		.uleb128 0xe
 1581 033d D4020000 		.4byte	.LASF20
 1582 0341 01       		.byte	0x1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 49


 1583 0342 E503     		.2byte	0x3e5
 1584 0344 6B000000 		.4byte	0x6b
 1585 0348 02       		.uleb128 0x2
 1586 0349 91       		.byte	0x91
 1587 034a 77       		.sleb128 -9
 1588 034b 00       		.byte	0
 1589 034c 12       		.uleb128 0x12
 1590 034d EA000000 		.4byte	.LASF45
 1591 0351 01       		.byte	0x1
 1592 0352 1104     		.2byte	0x411
 1593 0354 00000000 		.4byte	.LFB20
 1594 0358 10000000 		.4byte	.LFE20-.LFB20
 1595 035c 01       		.uleb128 0x1
 1596 035d 9C       		.byte	0x9c
 1597 035e 12       		.uleb128 0x12
 1598 035f 03030000 		.4byte	.LASF46
 1599 0363 01       		.byte	0x1
 1600 0364 2904     		.2byte	0x429
 1601 0366 00000000 		.4byte	.LFB21
 1602 036a 10000000 		.4byte	.LFE21-.LFB21
 1603 036e 01       		.uleb128 0x1
 1604 036f 9C       		.byte	0x9c
 1605 0370 0B       		.uleb128 0xb
 1606 0371 8A010000 		.4byte	.LASF47
 1607 0375 01       		.byte	0x1
 1608 0376 4204     		.2byte	0x442
 1609 0378 00000000 		.4byte	.LFB22
 1610 037c 30000000 		.4byte	.LFE22-.LFB22
 1611 0380 01       		.uleb128 0x1
 1612 0381 9C       		.byte	0x9c
 1613 0382 96030000 		.4byte	0x396
 1614 0386 0C       		.uleb128 0xc
 1615 0387 29020000 		.4byte	.LASF27
 1616 038b 01       		.byte	0x1
 1617 038c 4204     		.2byte	0x442
 1618 038e 6B000000 		.4byte	0x6b
 1619 0392 02       		.uleb128 0x2
 1620 0393 91       		.byte	0x91
 1621 0394 77       		.sleb128 -9
 1622 0395 00       		.byte	0
 1623 0396 0D       		.uleb128 0xd
 1624 0397 8D030000 		.4byte	.LASF48
 1625 039b 01       		.byte	0x1
 1626 039c 6504     		.2byte	0x465
 1627 039e 6B000000 		.4byte	0x6b
 1628 03a2 00000000 		.4byte	.LFB23
 1629 03a6 34000000 		.4byte	.LFE23-.LFB23
 1630 03aa 01       		.uleb128 0x1
 1631 03ab 9C       		.byte	0x9c
 1632 03ac C0030000 		.4byte	0x3c0
 1633 03b0 0E       		.uleb128 0xe
 1634 03b1 5A030000 		.4byte	.LASF28
 1635 03b5 01       		.byte	0x1
 1636 03b6 6704     		.2byte	0x467
 1637 03b8 6B000000 		.4byte	0x6b
 1638 03bc 02       		.uleb128 0x2
 1639 03bd 91       		.byte	0x91
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 50


 1640 03be 77       		.sleb128 -9
 1641 03bf 00       		.byte	0
 1642 03c0 13       		.uleb128 0x13
 1643 03c1 08010000 		.4byte	.LASF49
 1644 03c5 01       		.byte	0x1
 1645 03c6 22       		.byte	0x22
 1646 03c7 6B000000 		.4byte	0x6b
 1647 03cb 05       		.uleb128 0x5
 1648 03cc 03       		.byte	0x3
 1649 03cd 00000000 		.4byte	SPI_initVar
 1650 03d1 13       		.uleb128 0x13
 1651 03d2 60010000 		.4byte	.LASF50
 1652 03d6 01       		.byte	0x1
 1653 03d7 24       		.byte	0x24
 1654 03d8 98000000 		.4byte	0x98
 1655 03dc 05       		.uleb128 0x5
 1656 03dd 03       		.byte	0x3
 1657 03de 00000000 		.4byte	SPI_swStatusTx
 1658 03e2 13       		.uleb128 0x13
 1659 03e3 3F010000 		.4byte	.LASF51
 1660 03e7 01       		.byte	0x1
 1661 03e8 25       		.byte	0x25
 1662 03e9 98000000 		.4byte	0x98
 1663 03ed 05       		.uleb128 0x5
 1664 03ee 03       		.byte	0x3
 1665 03ef 00000000 		.4byte	SPI_swStatusRx
 1666 03f3 00       		.byte	0
 1667              		.section	.debug_abbrev,"",%progbits
 1668              	.Ldebug_abbrev0:
 1669 0000 01       		.uleb128 0x1
 1670 0001 11       		.uleb128 0x11
 1671 0002 01       		.byte	0x1
 1672 0003 25       		.uleb128 0x25
 1673 0004 0E       		.uleb128 0xe
 1674 0005 13       		.uleb128 0x13
 1675 0006 0B       		.uleb128 0xb
 1676 0007 03       		.uleb128 0x3
 1677 0008 0E       		.uleb128 0xe
 1678 0009 1B       		.uleb128 0x1b
 1679 000a 0E       		.uleb128 0xe
 1680 000b 55       		.uleb128 0x55
 1681 000c 17       		.uleb128 0x17
 1682 000d 11       		.uleb128 0x11
 1683 000e 01       		.uleb128 0x1
 1684 000f 10       		.uleb128 0x10
 1685 0010 17       		.uleb128 0x17
 1686 0011 00       		.byte	0
 1687 0012 00       		.byte	0
 1688 0013 02       		.uleb128 0x2
 1689 0014 24       		.uleb128 0x24
 1690 0015 00       		.byte	0
 1691 0016 0B       		.uleb128 0xb
 1692 0017 0B       		.uleb128 0xb
 1693 0018 3E       		.uleb128 0x3e
 1694 0019 0B       		.uleb128 0xb
 1695 001a 03       		.uleb128 0x3
 1696 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 51


 1697 001c 00       		.byte	0
 1698 001d 00       		.byte	0
 1699 001e 03       		.uleb128 0x3
 1700 001f 24       		.uleb128 0x24
 1701 0020 00       		.byte	0
 1702 0021 0B       		.uleb128 0xb
 1703 0022 0B       		.uleb128 0xb
 1704 0023 3E       		.uleb128 0x3e
 1705 0024 0B       		.uleb128 0xb
 1706 0025 03       		.uleb128 0x3
 1707 0026 08       		.uleb128 0x8
 1708 0027 00       		.byte	0
 1709 0028 00       		.byte	0
 1710 0029 04       		.uleb128 0x4
 1711 002a 16       		.uleb128 0x16
 1712 002b 00       		.byte	0
 1713 002c 03       		.uleb128 0x3
 1714 002d 0E       		.uleb128 0xe
 1715 002e 3A       		.uleb128 0x3a
 1716 002f 0B       		.uleb128 0xb
 1717 0030 3B       		.uleb128 0x3b
 1718 0031 05       		.uleb128 0x5
 1719 0032 49       		.uleb128 0x49
 1720 0033 13       		.uleb128 0x13
 1721 0034 00       		.byte	0
 1722 0035 00       		.byte	0
 1723 0036 05       		.uleb128 0x5
 1724 0037 35       		.uleb128 0x35
 1725 0038 00       		.byte	0
 1726 0039 49       		.uleb128 0x49
 1727 003a 13       		.uleb128 0x13
 1728 003b 00       		.byte	0
 1729 003c 00       		.byte	0
 1730 003d 06       		.uleb128 0x6
 1731 003e 2E       		.uleb128 0x2e
 1732 003f 00       		.byte	0
 1733 0040 3F       		.uleb128 0x3f
 1734 0041 19       		.uleb128 0x19
 1735 0042 03       		.uleb128 0x3
 1736 0043 0E       		.uleb128 0xe
 1737 0044 3A       		.uleb128 0x3a
 1738 0045 0B       		.uleb128 0xb
 1739 0046 3B       		.uleb128 0x3b
 1740 0047 0B       		.uleb128 0xb
 1741 0048 27       		.uleb128 0x27
 1742 0049 19       		.uleb128 0x19
 1743 004a 11       		.uleb128 0x11
 1744 004b 01       		.uleb128 0x1
 1745 004c 12       		.uleb128 0x12
 1746 004d 06       		.uleb128 0x6
 1747 004e 40       		.uleb128 0x40
 1748 004f 18       		.uleb128 0x18
 1749 0050 9642     		.uleb128 0x2116
 1750 0052 19       		.uleb128 0x19
 1751 0053 00       		.byte	0
 1752 0054 00       		.byte	0
 1753 0055 07       		.uleb128 0x7
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 52


 1754 0056 2E       		.uleb128 0x2e
 1755 0057 01       		.byte	0x1
 1756 0058 3F       		.uleb128 0x3f
 1757 0059 19       		.uleb128 0x19
 1758 005a 03       		.uleb128 0x3
 1759 005b 0E       		.uleb128 0xe
 1760 005c 3A       		.uleb128 0x3a
 1761 005d 0B       		.uleb128 0xb
 1762 005e 3B       		.uleb128 0x3b
 1763 005f 0B       		.uleb128 0xb
 1764 0060 27       		.uleb128 0x27
 1765 0061 19       		.uleb128 0x19
 1766 0062 11       		.uleb128 0x11
 1767 0063 01       		.uleb128 0x1
 1768 0064 12       		.uleb128 0x12
 1769 0065 06       		.uleb128 0x6
 1770 0066 40       		.uleb128 0x40
 1771 0067 18       		.uleb128 0x18
 1772 0068 9642     		.uleb128 0x2116
 1773 006a 19       		.uleb128 0x19
 1774 006b 01       		.uleb128 0x1
 1775 006c 13       		.uleb128 0x13
 1776 006d 00       		.byte	0
 1777 006e 00       		.byte	0
 1778 006f 08       		.uleb128 0x8
 1779 0070 34       		.uleb128 0x34
 1780 0071 00       		.byte	0
 1781 0072 03       		.uleb128 0x3
 1782 0073 0E       		.uleb128 0xe
 1783 0074 3A       		.uleb128 0x3a
 1784 0075 0B       		.uleb128 0xb
 1785 0076 3B       		.uleb128 0x3b
 1786 0077 0B       		.uleb128 0xb
 1787 0078 49       		.uleb128 0x49
 1788 0079 13       		.uleb128 0x13
 1789 007a 02       		.uleb128 0x2
 1790 007b 18       		.uleb128 0x18
 1791 007c 00       		.byte	0
 1792 007d 00       		.byte	0
 1793 007e 09       		.uleb128 0x9
 1794 007f 2E       		.uleb128 0x2e
 1795 0080 00       		.byte	0
 1796 0081 3F       		.uleb128 0x3f
 1797 0082 19       		.uleb128 0x19
 1798 0083 03       		.uleb128 0x3
 1799 0084 0E       		.uleb128 0xe
 1800 0085 3A       		.uleb128 0x3a
 1801 0086 0B       		.uleb128 0xb
 1802 0087 3B       		.uleb128 0x3b
 1803 0088 0B       		.uleb128 0xb
 1804 0089 27       		.uleb128 0x27
 1805 008a 19       		.uleb128 0x19
 1806 008b 11       		.uleb128 0x11
 1807 008c 01       		.uleb128 0x1
 1808 008d 12       		.uleb128 0x12
 1809 008e 06       		.uleb128 0x6
 1810 008f 40       		.uleb128 0x40
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 53


 1811 0090 18       		.uleb128 0x18
 1812 0091 9742     		.uleb128 0x2117
 1813 0093 19       		.uleb128 0x19
 1814 0094 00       		.byte	0
 1815 0095 00       		.byte	0
 1816 0096 0A       		.uleb128 0xa
 1817 0097 2E       		.uleb128 0x2e
 1818 0098 00       		.byte	0
 1819 0099 3F       		.uleb128 0x3f
 1820 009a 19       		.uleb128 0x19
 1821 009b 03       		.uleb128 0x3
 1822 009c 0E       		.uleb128 0xe
 1823 009d 3A       		.uleb128 0x3a
 1824 009e 0B       		.uleb128 0xb
 1825 009f 3B       		.uleb128 0x3b
 1826 00a0 05       		.uleb128 0x5
 1827 00a1 27       		.uleb128 0x27
 1828 00a2 19       		.uleb128 0x19
 1829 00a3 11       		.uleb128 0x11
 1830 00a4 01       		.uleb128 0x1
 1831 00a5 12       		.uleb128 0x12
 1832 00a6 06       		.uleb128 0x6
 1833 00a7 40       		.uleb128 0x40
 1834 00a8 18       		.uleb128 0x18
 1835 00a9 9742     		.uleb128 0x2117
 1836 00ab 19       		.uleb128 0x19
 1837 00ac 00       		.byte	0
 1838 00ad 00       		.byte	0
 1839 00ae 0B       		.uleb128 0xb
 1840 00af 2E       		.uleb128 0x2e
 1841 00b0 01       		.byte	0x1
 1842 00b1 3F       		.uleb128 0x3f
 1843 00b2 19       		.uleb128 0x19
 1844 00b3 03       		.uleb128 0x3
 1845 00b4 0E       		.uleb128 0xe
 1846 00b5 3A       		.uleb128 0x3a
 1847 00b6 0B       		.uleb128 0xb
 1848 00b7 3B       		.uleb128 0x3b
 1849 00b8 05       		.uleb128 0x5
 1850 00b9 27       		.uleb128 0x27
 1851 00ba 19       		.uleb128 0x19
 1852 00bb 11       		.uleb128 0x11
 1853 00bc 01       		.uleb128 0x1
 1854 00bd 12       		.uleb128 0x12
 1855 00be 06       		.uleb128 0x6
 1856 00bf 40       		.uleb128 0x40
 1857 00c0 18       		.uleb128 0x18
 1858 00c1 9742     		.uleb128 0x2117
 1859 00c3 19       		.uleb128 0x19
 1860 00c4 01       		.uleb128 0x1
 1861 00c5 13       		.uleb128 0x13
 1862 00c6 00       		.byte	0
 1863 00c7 00       		.byte	0
 1864 00c8 0C       		.uleb128 0xc
 1865 00c9 05       		.uleb128 0x5
 1866 00ca 00       		.byte	0
 1867 00cb 03       		.uleb128 0x3
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 54


 1868 00cc 0E       		.uleb128 0xe
 1869 00cd 3A       		.uleb128 0x3a
 1870 00ce 0B       		.uleb128 0xb
 1871 00cf 3B       		.uleb128 0x3b
 1872 00d0 05       		.uleb128 0x5
 1873 00d1 49       		.uleb128 0x49
 1874 00d2 13       		.uleb128 0x13
 1875 00d3 02       		.uleb128 0x2
 1876 00d4 18       		.uleb128 0x18
 1877 00d5 00       		.byte	0
 1878 00d6 00       		.byte	0
 1879 00d7 0D       		.uleb128 0xd
 1880 00d8 2E       		.uleb128 0x2e
 1881 00d9 01       		.byte	0x1
 1882 00da 3F       		.uleb128 0x3f
 1883 00db 19       		.uleb128 0x19
 1884 00dc 03       		.uleb128 0x3
 1885 00dd 0E       		.uleb128 0xe
 1886 00de 3A       		.uleb128 0x3a
 1887 00df 0B       		.uleb128 0xb
 1888 00e0 3B       		.uleb128 0x3b
 1889 00e1 05       		.uleb128 0x5
 1890 00e2 27       		.uleb128 0x27
 1891 00e3 19       		.uleb128 0x19
 1892 00e4 49       		.uleb128 0x49
 1893 00e5 13       		.uleb128 0x13
 1894 00e6 11       		.uleb128 0x11
 1895 00e7 01       		.uleb128 0x1
 1896 00e8 12       		.uleb128 0x12
 1897 00e9 06       		.uleb128 0x6
 1898 00ea 40       		.uleb128 0x40
 1899 00eb 18       		.uleb128 0x18
 1900 00ec 9742     		.uleb128 0x2117
 1901 00ee 19       		.uleb128 0x19
 1902 00ef 01       		.uleb128 0x1
 1903 00f0 13       		.uleb128 0x13
 1904 00f1 00       		.byte	0
 1905 00f2 00       		.byte	0
 1906 00f3 0E       		.uleb128 0xe
 1907 00f4 34       		.uleb128 0x34
 1908 00f5 00       		.byte	0
 1909 00f6 03       		.uleb128 0x3
 1910 00f7 0E       		.uleb128 0xe
 1911 00f8 3A       		.uleb128 0x3a
 1912 00f9 0B       		.uleb128 0xb
 1913 00fa 3B       		.uleb128 0x3b
 1914 00fb 05       		.uleb128 0x5
 1915 00fc 49       		.uleb128 0x49
 1916 00fd 13       		.uleb128 0x13
 1917 00fe 02       		.uleb128 0x2
 1918 00ff 18       		.uleb128 0x18
 1919 0100 00       		.byte	0
 1920 0101 00       		.byte	0
 1921 0102 0F       		.uleb128 0xf
 1922 0103 2E       		.uleb128 0x2e
 1923 0104 01       		.byte	0x1
 1924 0105 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 55


 1925 0106 19       		.uleb128 0x19
 1926 0107 03       		.uleb128 0x3
 1927 0108 0E       		.uleb128 0xe
 1928 0109 3A       		.uleb128 0x3a
 1929 010a 0B       		.uleb128 0xb
 1930 010b 3B       		.uleb128 0x3b
 1931 010c 05       		.uleb128 0x5
 1932 010d 27       		.uleb128 0x27
 1933 010e 19       		.uleb128 0x19
 1934 010f 11       		.uleb128 0x11
 1935 0110 01       		.uleb128 0x1
 1936 0111 12       		.uleb128 0x12
 1937 0112 06       		.uleb128 0x6
 1938 0113 40       		.uleb128 0x40
 1939 0114 18       		.uleb128 0x18
 1940 0115 9642     		.uleb128 0x2116
 1941 0117 19       		.uleb128 0x19
 1942 0118 01       		.uleb128 0x1
 1943 0119 13       		.uleb128 0x13
 1944 011a 00       		.byte	0
 1945 011b 00       		.byte	0
 1946 011c 10       		.uleb128 0x10
 1947 011d 0F       		.uleb128 0xf
 1948 011e 00       		.byte	0
 1949 011f 0B       		.uleb128 0xb
 1950 0120 0B       		.uleb128 0xb
 1951 0121 49       		.uleb128 0x49
 1952 0122 13       		.uleb128 0x13
 1953 0123 00       		.byte	0
 1954 0124 00       		.byte	0
 1955 0125 11       		.uleb128 0x11
 1956 0126 26       		.uleb128 0x26
 1957 0127 00       		.byte	0
 1958 0128 49       		.uleb128 0x49
 1959 0129 13       		.uleb128 0x13
 1960 012a 00       		.byte	0
 1961 012b 00       		.byte	0
 1962 012c 12       		.uleb128 0x12
 1963 012d 2E       		.uleb128 0x2e
 1964 012e 00       		.byte	0
 1965 012f 3F       		.uleb128 0x3f
 1966 0130 19       		.uleb128 0x19
 1967 0131 03       		.uleb128 0x3
 1968 0132 0E       		.uleb128 0xe
 1969 0133 3A       		.uleb128 0x3a
 1970 0134 0B       		.uleb128 0xb
 1971 0135 3B       		.uleb128 0x3b
 1972 0136 05       		.uleb128 0x5
 1973 0137 27       		.uleb128 0x27
 1974 0138 19       		.uleb128 0x19
 1975 0139 11       		.uleb128 0x11
 1976 013a 01       		.uleb128 0x1
 1977 013b 12       		.uleb128 0x12
 1978 013c 06       		.uleb128 0x6
 1979 013d 40       		.uleb128 0x40
 1980 013e 18       		.uleb128 0x18
 1981 013f 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 56


 1982 0141 19       		.uleb128 0x19
 1983 0142 00       		.byte	0
 1984 0143 00       		.byte	0
 1985 0144 13       		.uleb128 0x13
 1986 0145 34       		.uleb128 0x34
 1987 0146 00       		.byte	0
 1988 0147 03       		.uleb128 0x3
 1989 0148 0E       		.uleb128 0xe
 1990 0149 3A       		.uleb128 0x3a
 1991 014a 0B       		.uleb128 0xb
 1992 014b 3B       		.uleb128 0x3b
 1993 014c 0B       		.uleb128 0xb
 1994 014d 49       		.uleb128 0x49
 1995 014e 13       		.uleb128 0x13
 1996 014f 3F       		.uleb128 0x3f
 1997 0150 19       		.uleb128 0x19
 1998 0151 02       		.uleb128 0x2
 1999 0152 18       		.uleb128 0x18
 2000 0153 00       		.byte	0
 2001 0154 00       		.byte	0
 2002 0155 00       		.byte	0
 2003              		.section	.debug_aranges,"",%progbits
 2004 0000 D4000000 		.4byte	0xd4
 2005 0004 0200     		.2byte	0x2
 2006 0006 00000000 		.4byte	.Ldebug_info0
 2007 000a 04       		.byte	0x4
 2008 000b 00       		.byte	0
 2009 000c 0000     		.2byte	0
 2010 000e 0000     		.2byte	0
 2011 0010 00000000 		.4byte	.LFB0
 2012 0014 34000000 		.4byte	.LFE0-.LFB0
 2013 0018 00000000 		.4byte	.LFB1
 2014 001c 68000000 		.4byte	.LFE1-.LFB1
 2015 0020 00000000 		.4byte	.LFB2
 2016 0024 24000000 		.4byte	.LFE2-.LFB2
 2017 0028 00000000 		.4byte	.LFB3
 2018 002c 54000000 		.4byte	.LFE3-.LFB3
 2019 0030 00000000 		.4byte	.LFB4
 2020 0034 0C000000 		.4byte	.LFE4-.LFB4
 2021 0038 00000000 		.4byte	.LFB5
 2022 003c 0C000000 		.4byte	.LFE5-.LFB5
 2023 0040 00000000 		.4byte	.LFB6
 2024 0044 0C000000 		.4byte	.LFE6-.LFB6
 2025 0048 00000000 		.4byte	.LFB7
 2026 004c 0C000000 		.4byte	.LFE7-.LFB7
 2027 0050 00000000 		.4byte	.LFB8
 2028 0054 20000000 		.4byte	.LFE8-.LFB8
 2029 0058 00000000 		.4byte	.LFB9
 2030 005c 20000000 		.4byte	.LFE9-.LFB9
 2031 0060 00000000 		.4byte	.LFB10
 2032 0064 1C000000 		.4byte	.LFE10-.LFB10
 2033 0068 00000000 		.4byte	.LFB11
 2034 006c 1C000000 		.4byte	.LFE11-.LFB11
 2035 0070 00000000 		.4byte	.LFB12
 2036 0074 34000000 		.4byte	.LFE12-.LFB12
 2037 0078 00000000 		.4byte	.LFB13
 2038 007c 1C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 57


 2039 0080 00000000 		.4byte	.LFB14
 2040 0084 2C000000 		.4byte	.LFE14-.LFB14
 2041 0088 00000000 		.4byte	.LFB15
 2042 008c 40000000 		.4byte	.LFE15-.LFB15
 2043 0090 00000000 		.4byte	.LFB16
 2044 0094 28000000 		.4byte	.LFE16-.LFB16
 2045 0098 00000000 		.4byte	.LFB17
 2046 009c 44000000 		.4byte	.LFE17-.LFB17
 2047 00a0 00000000 		.4byte	.LFB18
 2048 00a4 3A000000 		.4byte	.LFE18-.LFB18
 2049 00a8 00000000 		.4byte	.LFB19
 2050 00ac 60000000 		.4byte	.LFE19-.LFB19
 2051 00b0 00000000 		.4byte	.LFB20
 2052 00b4 10000000 		.4byte	.LFE20-.LFB20
 2053 00b8 00000000 		.4byte	.LFB21
 2054 00bc 10000000 		.4byte	.LFE21-.LFB21
 2055 00c0 00000000 		.4byte	.LFB22
 2056 00c4 30000000 		.4byte	.LFE22-.LFB22
 2057 00c8 00000000 		.4byte	.LFB23
 2058 00cc 34000000 		.4byte	.LFE23-.LFB23
 2059 00d0 00000000 		.4byte	0
 2060 00d4 00000000 		.4byte	0
 2061              		.section	.debug_ranges,"",%progbits
 2062              	.Ldebug_ranges0:
 2063 0000 00000000 		.4byte	.LFB0
 2064 0004 34000000 		.4byte	.LFE0
 2065 0008 00000000 		.4byte	.LFB1
 2066 000c 68000000 		.4byte	.LFE1
 2067 0010 00000000 		.4byte	.LFB2
 2068 0014 24000000 		.4byte	.LFE2
 2069 0018 00000000 		.4byte	.LFB3
 2070 001c 54000000 		.4byte	.LFE3
 2071 0020 00000000 		.4byte	.LFB4
 2072 0024 0C000000 		.4byte	.LFE4
 2073 0028 00000000 		.4byte	.LFB5
 2074 002c 0C000000 		.4byte	.LFE5
 2075 0030 00000000 		.4byte	.LFB6
 2076 0034 0C000000 		.4byte	.LFE6
 2077 0038 00000000 		.4byte	.LFB7
 2078 003c 0C000000 		.4byte	.LFE7
 2079 0040 00000000 		.4byte	.LFB8
 2080 0044 20000000 		.4byte	.LFE8
 2081 0048 00000000 		.4byte	.LFB9
 2082 004c 20000000 		.4byte	.LFE9
 2083 0050 00000000 		.4byte	.LFB10
 2084 0054 1C000000 		.4byte	.LFE10
 2085 0058 00000000 		.4byte	.LFB11
 2086 005c 1C000000 		.4byte	.LFE11
 2087 0060 00000000 		.4byte	.LFB12
 2088 0064 34000000 		.4byte	.LFE12
 2089 0068 00000000 		.4byte	.LFB13
 2090 006c 1C000000 		.4byte	.LFE13
 2091 0070 00000000 		.4byte	.LFB14
 2092 0074 2C000000 		.4byte	.LFE14
 2093 0078 00000000 		.4byte	.LFB15
 2094 007c 40000000 		.4byte	.LFE15
 2095 0080 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 58


 2096 0084 28000000 		.4byte	.LFE16
 2097 0088 00000000 		.4byte	.LFB17
 2098 008c 44000000 		.4byte	.LFE17
 2099 0090 00000000 		.4byte	.LFB18
 2100 0094 3A000000 		.4byte	.LFE18
 2101 0098 00000000 		.4byte	.LFB19
 2102 009c 60000000 		.4byte	.LFE19
 2103 00a0 00000000 		.4byte	.LFB20
 2104 00a4 10000000 		.4byte	.LFE20
 2105 00a8 00000000 		.4byte	.LFB21
 2106 00ac 10000000 		.4byte	.LFE21
 2107 00b0 00000000 		.4byte	.LFB22
 2108 00b4 30000000 		.4byte	.LFE22
 2109 00b8 00000000 		.4byte	.LFB23
 2110 00bc 34000000 		.4byte	.LFE23
 2111 00c0 00000000 		.4byte	0
 2112 00c4 00000000 		.4byte	0
 2113              		.section	.debug_line,"",%progbits
 2114              	.Ldebug_line0:
 2115 0000 5D020000 		.section	.debug_str,"MS",%progbits,1
 2115      02004000 
 2115      00000201 
 2115      FB0E0D00 
 2115      01010101 
 2116              	.LASF54:
 2117 0000 433A5C55 		.ascii	"C:\\Users\\Krist\\OneDrive\\Dokumenter\\GitHub\\pla"
 2117      73657273 
 2117      5C4B7269 
 2117      73745C4F 
 2117      6E654472 
 2118 002d 746F6F6E 		.ascii	"tooning\\PSoC\\Platooning\\AngleMeasurement.cydsn\000"
 2118      696E675C 
 2118      50536F43 
 2118      5C506C61 
 2118      746F6F6E 
 2119              	.LASF52:
 2120 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2120      43313120 
 2120      352E342E 
 2120      31203230 
 2120      31363036 
 2121 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2121      20726576 
 2121      6973696F 
 2121      6E203233 
 2121      37373135 
 2122 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2122      66756E63 
 2122      74696F6E 
 2122      2D736563 
 2122      74696F6E 
 2123              	.LASF45:
 2124 00ea 5350495F 		.ascii	"SPI_EnableInt\000"
 2124      456E6162 
 2124      6C65496E 
 2124      7400
 2125              	.LASF31:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 59


 2126 00f8 5350495F 		.ascii	"SPI_WriteTxData\000"
 2126      57726974 
 2126      65547844 
 2126      61746100 
 2127              	.LASF49:
 2128 0108 5350495F 		.ascii	"SPI_initVar\000"
 2128      696E6974 
 2128      56617200 
 2129              	.LASF33:
 2130 0114 5350495F 		.ascii	"SPI_ReadRxData\000"
 2130      52656164 
 2130      52784461 
 2130      746100
 2131              	.LASF3:
 2132 0123 73686F72 		.ascii	"short unsigned int\000"
 2132      7420756E 
 2132      7369676E 
 2132      65642069 
 2132      6E7400
 2133              	.LASF16:
 2134 0136 5350495F 		.ascii	"SPI_Init\000"
 2134      496E6974 
 2134      00
 2135              	.LASF51:
 2136 013f 5350495F 		.ascii	"SPI_swStatusRx\000"
 2136      73775374 
 2136      61747573 
 2136      527800
 2137              	.LASF39:
 2138 014e 5350495F 		.ascii	"SPI_ClearTxBuffer\000"
 2138      436C6561 
 2138      72547842 
 2138      75666665 
 2138      7200
 2139              	.LASF50:
 2140 0160 5350495F 		.ascii	"SPI_swStatusTx\000"
 2140      73775374 
 2140      61747573 
 2140      547800
 2141              	.LASF34:
 2142 016f 72784461 		.ascii	"rxData\000"
 2142      746100
 2143              	.LASF9:
 2144 0176 666C6F61 		.ascii	"float\000"
 2144      7400
 2145              	.LASF44:
 2146 017c 5350495F 		.ascii	"SPI_ClearFIFO\000"
 2146      436C6561 
 2146      72464946 
 2146      4F00
 2147              	.LASF47:
 2148 018a 5350495F 		.ascii	"SPI_SetInterruptMode\000"
 2148      53657449 
 2148      6E746572 
 2148      72757074 
 2148      4D6F6465 
 2149              	.LASF36:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 60


 2150 019f 73697A65 		.ascii	"size\000"
 2150      00
 2151              	.LASF13:
 2152 01a4 72656738 		.ascii	"reg8\000"
 2152      00
 2153              	.LASF24:
 2154 01a9 5350495F 		.ascii	"SPI_DisableRxInt\000"
 2154      44697361 
 2154      626C6552 
 2154      78496E74 
 2154      00
 2155              	.LASF5:
 2156 01ba 6C6F6E67 		.ascii	"long unsigned int\000"
 2156      20756E73 
 2156      69676E65 
 2156      6420696E 
 2156      7400
 2157              	.LASF12:
 2158 01cc 75696E74 		.ascii	"uint8\000"
 2158      3800
 2159              	.LASF42:
 2160 01d2 62797465 		.ascii	"byteCount\000"
 2160      436F756E 
 2160      7400
 2161              	.LASF29:
 2162 01dc 5350495F 		.ascii	"SPI_ReadTxStatus\000"
 2162      52656164 
 2162      54785374 
 2162      61747573 
 2162      00
 2163              	.LASF21:
 2164 01ed 5350495F 		.ascii	"SPI_EnableTxInt\000"
 2164      456E6162 
 2164      6C655478 
 2164      496E7400 
 2165              	.LASF1:
 2166 01fd 756E7369 		.ascii	"unsigned char\000"
 2166      676E6564 
 2166      20636861 
 2166      7200
 2167              	.LASF10:
 2168 020b 646F7562 		.ascii	"double\000"
 2168      6C6500
 2169              	.LASF26:
 2170 0212 5350495F 		.ascii	"SPI_SetRxInterruptMode\000"
 2170      53657452 
 2170      78496E74 
 2170      65727275 
 2170      70744D6F 
 2171              	.LASF27:
 2172 0229 696E7453 		.ascii	"intSrc\000"
 2172      726300
 2173              	.LASF40:
 2174 0230 5350495F 		.ascii	"SPI_PutArray\000"
 2174      50757441 
 2174      72726179 
 2174      00
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 61


 2175              	.LASF37:
 2176 023d 5350495F 		.ascii	"SPI_GetTxBufferSize\000"
 2176      47657454 
 2176      78427566 
 2176      66657253 
 2176      697A6500 
 2177              	.LASF19:
 2178 0251 5350495F 		.ascii	"SPI_Stop\000"
 2178      53746F70 
 2178      00
 2179              	.LASF35:
 2180 025a 5350495F 		.ascii	"SPI_GetRxBufferSize\000"
 2180      47657452 
 2180      78427566 
 2180      66657253 
 2180      697A6500 
 2181              	.LASF8:
 2182 026e 756E7369 		.ascii	"unsigned int\000"
 2182      676E6564 
 2182      20696E74 
 2182      00
 2183              	.LASF25:
 2184 027b 5350495F 		.ascii	"SPI_SetTxInterruptMode\000"
 2184      53657454 
 2184      78496E74 
 2184      65727275 
 2184      70744D6F 
 2185              	.LASF7:
 2186 0292 6C6F6E67 		.ascii	"long long unsigned int\000"
 2186      206C6F6E 
 2186      6720756E 
 2186      7369676E 
 2186      65642069 
 2187              	.LASF43:
 2188 02a9 62756649 		.ascii	"bufIndex\000"
 2188      6E646578 
 2188      00
 2189              	.LASF32:
 2190 02b2 74784461 		.ascii	"txData\000"
 2190      746100
 2191              	.LASF38:
 2192 02b9 5350495F 		.ascii	"SPI_ClearRxBuffer\000"
 2192      436C6561 
 2192      72527842 
 2192      75666665 
 2192      7200
 2193              	.LASF15:
 2194 02cb 73697A65 		.ascii	"sizetype\000"
 2194      74797065 
 2194      00
 2195              	.LASF20:
 2196 02d4 656E6162 		.ascii	"enableInterrupts\000"
 2196      6C65496E 
 2196      74657272 
 2196      75707473 
 2196      00
 2197              	.LASF6:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 62


 2198 02e5 6C6F6E67 		.ascii	"long long int\000"
 2198      206C6F6E 
 2198      6720696E 
 2198      7400
 2199              	.LASF11:
 2200 02f3 63686172 		.ascii	"char\000"
 2200      00
 2201              	.LASF18:
 2202 02f8 5350495F 		.ascii	"SPI_Enable\000"
 2202      456E6162 
 2202      6C6500
 2203              	.LASF46:
 2204 0303 5350495F 		.ascii	"SPI_DisableInt\000"
 2204      44697361 
 2204      626C6549 
 2204      6E7400
 2205              	.LASF2:
 2206 0312 73686F72 		.ascii	"short int\000"
 2206      7420696E 
 2206      7400
 2207              	.LASF41:
 2208 031c 62756666 		.ascii	"buffer\000"
 2208      657200
 2209              	.LASF23:
 2210 0323 5350495F 		.ascii	"SPI_DisableTxInt\000"
 2210      44697361 
 2210      626C6554 
 2210      78496E74 
 2210      00
 2211              	.LASF53:
 2212 0334 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI.c\000"
 2212      72617465 
 2212      645F536F 
 2212      75726365 
 2212      5C50536F 
 2213              	.LASF4:
 2214 0351 6C6F6E67 		.ascii	"long int\000"
 2214      20696E74 
 2214      00
 2215              	.LASF28:
 2216 035a 746D7053 		.ascii	"tmpStatus\000"
 2216      74617475 
 2216      7300
 2217              	.LASF30:
 2218 0364 5350495F 		.ascii	"SPI_ReadRxStatus\000"
 2218      52656164 
 2218      52785374 
 2218      61747573 
 2218      00
 2219              	.LASF14:
 2220 0375 6C6F6E67 		.ascii	"long double\000"
 2220      20646F75 
 2220      626C6500 
 2221              	.LASF0:
 2222 0381 7369676E 		.ascii	"signed char\000"
 2222      65642063 
 2222      68617200 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccAAxuyn.s 			page 63


 2223              	.LASF48:
 2224 038d 5350495F 		.ascii	"SPI_ReadStatus\000"
 2224      52656164 
 2224      53746174 
 2224      757300
 2225              	.LASF22:
 2226 039c 5350495F 		.ascii	"SPI_EnableRxInt\000"
 2226      456E6162 
 2226      6C655278 
 2226      496E7400 
 2227              	.LASF17:
 2228 03ac 5350495F 		.ascii	"SPI_Start\000"
 2228      53746172 
 2228      7400
 2229              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
