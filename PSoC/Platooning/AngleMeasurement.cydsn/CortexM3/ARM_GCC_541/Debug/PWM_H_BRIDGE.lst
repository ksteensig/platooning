ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_H_BRIDGE.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_H_BRIDGE_initVar
  20              		.bss
  21              		.type	PWM_H_BRIDGE_initVar, %object
  22              		.size	PWM_H_BRIDGE_initVar, 1
  23              	PWM_H_BRIDGE_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_H_BRIDGE_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_H_BRIDGE_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_H_BRIDGE_Start, %function
  31              	PWM_H_BRIDGE_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_H_BRIDGE.c"
   1:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * File Name: PWM_H_BRIDGE.c
   3:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
   5:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Description:
   6:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  15:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Note:
  16:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  17:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  24:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #include "PWM_H_BRIDGE.h"
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 2


  25:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  26:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #ifdef PWM_H_BRIDGE_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* PWM_H_BRIDGE_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  32:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** uint8 PWM_H_BRIDGE_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  34:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  35:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Function Name: PWM_H_BRIDGE_Start
  37:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  39:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  44:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
  46:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  47:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Return:
  48:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
  49:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  50:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  PWM_H_BRIDGE_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  54:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** void PWM_H_BRIDGE_Start(void) 
  56:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     if(PWM_H_BRIDGE_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
  60:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_H_BRIDGE_Init
  61:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
  63:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     PWM_H_BRIDGE_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_H_BRIDGE_Enable
  64:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  65:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_H_BRIDGE_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_H_BRIDGE_Start, .-PWM_H_BRIDGE_Start
  68              		.section	.text.PWM_H_BRIDGE_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_H_BRIDGE_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_H_BRIDGE_Init, %function
  74              	PWM_H_BRIDGE_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  67:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  68:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Function Name: PWM_H_BRIDGE_Init
  70:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  72:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  PWM_H_BRIDGE_Start().
  76:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  77:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
  79:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  80:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Return:
  81:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
  82:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
  83:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** void PWM_H_BRIDGE_Init(void) 
  85:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UsingFixedFunction || PWM_H_BRIDGE_UseControl)
  87:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction || PWM_H_BRIDGE_UseControl) */
  89:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  90:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if(!PWM_H_BRIDGE_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(PWM_H_BRIDGE_UseStatus)
  92:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             uint8 PWM_H_BRIDGE_interruptState;
  94:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UseStatus) */
  95:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (!PWM_H_BRIDGE_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
  97:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_CONTROL |= PWM_H_BRIDGE_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_CONTROL |= PWM_H_BRIDGE_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 104:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         ctrl = PWM_H_BRIDGE_CONTROL3 & ((uint8 )(~PWM_H_BRIDGE_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_CONTROL3 = ctrl | PWM_H_BRIDGE_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 107:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_RT1 &= ((uint8)(~PWM_H_BRIDGE_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_RT1 |= PWM_H_BRIDGE_SYNC;
 110:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 111:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_RT1 &= ((uint8)(~PWM_H_BRIDGE_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_RT1 |= PWM_H_BRIDGE_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 115:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #elif (PWM_H_BRIDGE_UseControl)
 116:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         ctrl = PWM_H_BRIDGE_CONTROL & ((uint8)(~PWM_H_BRIDGE_CTRL_CMPMODE2_MASK)) &
  88              		.loc 1 117 0
  89 0006 1B4B     		ldr	r3, .L6
  90 0008 1B78     		ldrb	r3, [r3]
  91 000a DBB2     		uxtb	r3, r3
  92 000c 23F03F03 		bic	r3, r3, #63
  93 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 ((uint8)(~PWM_H_BRIDGE_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_CONTROL = ctrl | PWM_H_BRIDGE_DEFAULT_COMPARE2_MODE |
  94              		.loc 1 119 0
  95 0012 184A     		ldr	r2, .L6
  96 0014 FB79     		ldrb	r3, [r7, #7]
  97 0016 43F00903 		orr	r3, r3, #9
  98 001a DBB2     		uxtb	r3, r3
  99 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                    PWM_H_BRIDGE_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 123:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (!PWM_H_BRIDGE_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_AUX_CONTROLDP0 |= (PWM_H_BRIDGE_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 001e 164A     		ldr	r2, .L6+4
 102 0020 154B     		ldr	r3, .L6+4
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 5


 103 0022 1B78     		ldrb	r3, [r3]
 104 0024 DBB2     		uxtb	r3, r3
 105 0026 43F00103 		orr	r3, r3, #1
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else /* (PWM_H_BRIDGE_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_AUX_CONTROLDP0 |= (PWM_H_BRIDGE_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_AUX_CONTROLDP1 |= (PWM_H_BRIDGE_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 133:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_WriteCounter(PWM_H_BRIDGE_INIT_PERIOD_VALUE);
 108              		.loc 1 133 0
 109 002e FF20     		movs	r0, #255
 110 0030 FFF7FEFF 		bl	PWM_H_BRIDGE_WriteCounter
 134:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (!PWM_H_BRIDGE_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 136:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     PWM_H_BRIDGE_WritePeriod(PWM_H_BRIDGE_INIT_PERIOD_VALUE);
 111              		.loc 1 136 0
 112 0034 FF20     		movs	r0, #255
 113 0036 FFF7FEFF 		bl	PWM_H_BRIDGE_WritePeriod
 137:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 138:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_WriteCompare(PWM_H_BRIDGE_INIT_COMPARE_VALUE1);
 114              		.loc 1 139 0
 115 003a 0020     		movs	r0, #0
 116 003c FFF7FEFF 		bl	PWM_H_BRIDGE_WriteCompare
 140:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 141:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_WriteCompare1(PWM_H_BRIDGE_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_WriteCompare2(PWM_H_BRIDGE_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 145:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_WriteKillTime(PWM_H_BRIDGE_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 149:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_WriteDeadTime(PWM_H_BRIDGE_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 153:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UseStatus || PWM_H_BRIDGE_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_SetInterruptMode(PWM_H_BRIDGE_INIT_INTERRUPTS_MODE);
 117              		.loc 1 154 0
 118 0040 0020     		movs	r0, #0
 119 0042 FFF7FEFF 		bl	PWM_H_BRIDGE_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UseStatus || PWM_H_BRIDGE_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 157:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_GLOBAL_ENABLE |= PWM_H_BRIDGE_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_CONTROL2 |= PWM_H_BRIDGE_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #else
 163:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(PWM_H_BRIDGE_UseStatus)
 164:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 165:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Enter Critical Region*/
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 6


 167:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_interruptState = CyEnterCriticalSection();
 120              		.loc 1 167 0
 121 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 122 004a 0346     		mov	r3, r0
 123 004c BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_STATUS_AUX_CTRL |= PWM_H_BRIDGE_STATUS_ACTL_INT_EN_MASK;
 124              		.loc 1 169 0
 125 004e 0B4A     		ldr	r2, .L6+8
 126 0050 0A4B     		ldr	r3, .L6+8
 127 0052 1B78     		ldrb	r3, [r3]
 128 0054 DBB2     		uxtb	r3, r3
 129 0056 43F01003 		orr	r3, r3, #16
 130 005a DBB2     		uxtb	r3, r3
 131 005c 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 171:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CyExitCriticalSection(PWM_H_BRIDGE_interruptState);
 132              		.loc 1 172 0
 133 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 134 0060 1846     		mov	r0, r3
 135 0062 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 174:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Clear the FIFO to enable the PWM_H_BRIDGE_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_ClearFIFO();
 136              		.loc 1 176 0
 137 0066 FFF7FEFF 		bl	PWM_H_BRIDGE_ClearFIFO
 177:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UseStatus) */
 178:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** }
 138              		.loc 1 179 0
 139 006a 00BF     		nop
 140 006c 0837     		adds	r7, r7, #8
 141              		.cfi_def_cfa_offset 8
 142 006e BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0070 80BD     		pop	{r7, pc}
 146              	.L7:
 147 0072 00BF     		.align	2
 148              	.L6:
 149 0074 7A650040 		.word	1073767802
 150 0078 99650040 		.word	1073767833
 151 007c 9A650040 		.word	1073767834
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	PWM_H_BRIDGE_Init, .-PWM_H_BRIDGE_Init
 155              		.section	.text.PWM_H_BRIDGE_Enable,"ax",%progbits
 156              		.align	2
 157              		.global	PWM_H_BRIDGE_Enable
 158              		.thumb
 159              		.thumb_func
 160              		.type	PWM_H_BRIDGE_Enable, %function
 161              	PWM_H_BRIDGE_Enable:
 162              	.LFB2:
 180:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 7


 181:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 182:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Function Name: PWM_H_BRIDGE_Enable
 184:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 186:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 189:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
 191:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 192:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Return:
 193:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
 194:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 195:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 198:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** void PWM_H_BRIDGE_Enable(void) 
 200:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** {
 163              		.loc 1 200 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168 0000 80B4     		push	{r7}
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 7, -4
 171 0002 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_GLOBAL_ENABLE |= PWM_H_BRIDGE_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_GLOBAL_STBY_ENABLE |= PWM_H_BRIDGE_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 207:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UseControl || PWM_H_BRIDGE_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_CONTROL |= PWM_H_BRIDGE_CTRL_ENABLE;
 173              		.loc 1 209 0
 174 0004 054A     		ldr	r2, .L9
 175 0006 054B     		ldr	r3, .L9
 176 0008 1B78     		ldrb	r3, [r3]
 177 000a DBB2     		uxtb	r3, r3
 178 000c 63F07F03 		orn	r3, r3, #127
 179 0010 DBB2     		uxtb	r3, r3
 180 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UseControl || PWM_H_BRIDGE_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** }
 181              		.loc 1 211 0
 182 0014 00BF     		nop
 183 0016 BD46     		mov	sp, r7
 184              		.cfi_def_cfa_register 13
 185              		@ sp needed
 186 0018 80BC     		pop	{r7}
 187              		.cfi_restore 7
 188              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 8


 189 001a 7047     		bx	lr
 190              	.L10:
 191              		.align	2
 192              	.L9:
 193 001c 7A650040 		.word	1073767802
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	PWM_H_BRIDGE_Enable, .-PWM_H_BRIDGE_Enable
 197              		.section	.text.PWM_H_BRIDGE_Stop,"ax",%progbits
 198              		.align	2
 199              		.global	PWM_H_BRIDGE_Stop
 200              		.thumb
 201              		.thumb_func
 202              		.type	PWM_H_BRIDGE_Stop, %function
 203              	PWM_H_BRIDGE_Stop:
 204              	.LFB3:
 212:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 213:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 214:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Function Name: PWM_H_BRIDGE_Stop
 216:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 218:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 222:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
 224:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 225:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Return:
 226:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
 227:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 228:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 232:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** void PWM_H_BRIDGE_Stop(void) 
 234:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** {
 205              		.loc 1 234 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210 0000 80B4     		push	{r7}
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 7, -4
 213 0002 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UseControl || PWM_H_BRIDGE_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_CONTROL &= ((uint8)(~PWM_H_BRIDGE_CTRL_ENABLE));
 215              		.loc 1 236 0
 216 0004 054A     		ldr	r2, .L12
 217 0006 054B     		ldr	r3, .L12
 218 0008 1B78     		ldrb	r3, [r3]
 219 000a DBB2     		uxtb	r3, r3
 220 000c 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 9


 221 0010 DBB2     		uxtb	r3, r3
 222 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UseControl || PWM_H_BRIDGE_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 239:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_GLOBAL_ENABLE &= ((uint8)(~PWM_H_BRIDGE_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         PWM_H_BRIDGE_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_H_BRIDGE_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** }
 223              		.loc 1 244 0
 224 0014 00BF     		nop
 225 0016 BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 0018 80BC     		pop	{r7}
 229              		.cfi_restore 7
 230              		.cfi_def_cfa_offset 0
 231 001a 7047     		bx	lr
 232              	.L13:
 233              		.align	2
 234              	.L12:
 235 001c 7A650040 		.word	1073767802
 236              		.cfi_endproc
 237              	.LFE3:
 238              		.size	PWM_H_BRIDGE_Stop, .-PWM_H_BRIDGE_Stop
 239              		.section	.text.PWM_H_BRIDGE_WriteCounter,"ax",%progbits
 240              		.align	2
 241              		.global	PWM_H_BRIDGE_WriteCounter
 242              		.thumb
 243              		.thumb_func
 244              		.type	PWM_H_BRIDGE_WriteCounter, %function
 245              	PWM_H_BRIDGE_WriteCounter:
 246              	.LFB4:
 245:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 246:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 249:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 250:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Function Name: PWM_H_BRIDGE_SetCompareMode
 252:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 254:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 258:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 262:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  None
 264:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 265:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         void PWM_H_BRIDGE_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         {
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 10


 268:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #if(PWM_H_BRIDGE_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 270:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #if(0 != PWM_H_BRIDGE_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_H_BRIDGE_CTRL_CMPM
 272:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #else
 273:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #endif /* (0 != PWM_H_BRIDGE_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 276:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_CONTROL3 &= ((uint8)(~PWM_H_BRIDGE_CTRL_CMPMODE1_MASK)); /*Clear Exist
 277:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 279:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #elif (PWM_H_BRIDGE_UseControl)
 280:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 281:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #if(0 != PWM_H_BRIDGE_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_H_BRIDGE_CTRL_CMP
 283:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                                 PWM_H_BRIDGE_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #else
 285:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                     uint8 comparemode1masked = comparemode & PWM_H_BRIDGE_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #endif /* (0 != PWM_H_BRIDGE_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 288:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #if(0 != PWM_H_BRIDGE_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_H_BRIDGE_CTRL_CMP
 290:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                                PWM_H_BRIDGE_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #else
 292:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                     uint8 comparemode2masked = comparemode & PWM_H_BRIDGE_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 #endif /* (0 != PWM_H_BRIDGE_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 295:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_CONTROL &= ((uint8)(~(PWM_H_BRIDGE_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                             PWM_H_BRIDGE_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 300:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #else
 301:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         }
 304:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* PWM_H_BRIDGE_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 306:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 308:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 310:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 311:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Function Name: PWM_H_BRIDGE_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 315:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 318:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 322:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  None
 324:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 11


 325:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         void PWM_H_BRIDGE_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         {
 328:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #if(0 != PWM_H_BRIDGE_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_H_BRIDGE_CTRL_CMPMODE1
 330:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                            PWM_H_BRIDGE_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #else
 332:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 uint8 comparemodemasked = comparemode & PWM_H_BRIDGE_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #endif /* (0 != PWM_H_BRIDGE_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 335:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #if (PWM_H_BRIDGE_UseControl)
 336:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_CONTROL &= ((uint8)(~PWM_H_BRIDGE_CTRL_CMPMODE1_MASK)); /*Clear existi
 337:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #endif /* (PWM_H_BRIDGE_UseControl) */
 339:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         }
 340:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* PWM_H_BRIDGE_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 342:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 344:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 345:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 349:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 352:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 356:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 358:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 359:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 362:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 363:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(0 != PWM_H_BRIDGE_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_H_BRIDGE_CTRL_CMPMODE2_SHI
 365:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                                  PWM_H_BRIDGE_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 367:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             uint8 comparemodemasked = comparemode & PWM_H_BRIDGE_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (0 != PWM_H_BRIDGE_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 370:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_UseControl)
 371:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_CONTROL &= ((uint8)(~PWM_H_BRIDGE_CTRL_CMPMODE2_MASK)); /*Clear existing m
 372:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UseControl) */
 374:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 375:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /*PWM_H_BRIDGE_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 377:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 379:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 380:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (!PWM_H_BRIDGE_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 12


 382:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 383:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_WriteCounter
 385:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 387:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 393:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 396:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 398:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 399:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 402:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                        
 405:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 247              		.loc 1 405 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 8
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 80B4     		push	{r7}
 253              		.cfi_def_cfa_offset 4
 254              		.cfi_offset 7, -4
 255 0002 83B0     		sub	sp, sp, #12
 256              		.cfi_def_cfa_offset 16
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 0346     		mov	r3, r0
 260 0008 FB71     		strb	r3, [r7, #7]
 406:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         CY_SET_REG8(PWM_H_BRIDGE_COUNTER_LSB_PTR, counter);
 261              		.loc 1 406 0
 262 000a 044A     		ldr	r2, .L15
 263 000c FB79     		ldrb	r3, [r7, #7]
 264 000e 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 265              		.loc 1 407 0
 266 0010 00BF     		nop
 267 0012 0C37     		adds	r7, r7, #12
 268              		.cfi_def_cfa_offset 4
 269 0014 BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 0016 80BC     		pop	{r7}
 273              		.cfi_restore 7
 274              		.cfi_def_cfa_offset 0
 275 0018 7047     		bx	lr
 276              	.L16:
 277 001a 00BF     		.align	2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 13


 278              	.L15:
 279 001c 09650040 		.word	1073767689
 280              		.cfi_endproc
 281              	.LFE4:
 282              		.size	PWM_H_BRIDGE_WriteCounter, .-PWM_H_BRIDGE_WriteCounter
 283              		.section	.text.PWM_H_BRIDGE_ReadCounter,"ax",%progbits
 284              		.align	2
 285              		.global	PWM_H_BRIDGE_ReadCounter
 286              		.thumb
 287              		.thumb_func
 288              		.type	PWM_H_BRIDGE_ReadCounter, %function
 289              	PWM_H_BRIDGE_ReadCounter:
 290              	.LFB5:
 408:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 409:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 410:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadCounter
 412:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 414:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 418:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 420:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 421:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 424:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 291              		.loc 1 426 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 80B4     		push	{r7}
 297              		.cfi_def_cfa_offset 4
 298              		.cfi_offset 7, -4
 299 0002 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****           (void)CY_GET_REG8(PWM_H_BRIDGE_COUNTERCAP_LSB_PTR_8BIT);
 301              		.loc 1 430 0
 302 0004 044B     		ldr	r3, .L19
 303 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 432:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (CY_GET_REG8(PWM_H_BRIDGE_CAPTURE_LSB_PTR));
 304              		.loc 1 433 0
 305 0008 044B     		ldr	r3, .L19+4
 306 000a 1B78     		ldrb	r3, [r3]
 307 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 14


 308              		.loc 1 434 0
 309 000e 1846     		mov	r0, r3
 310 0010 BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0012 80BC     		pop	{r7}
 314              		.cfi_restore 7
 315              		.cfi_def_cfa_offset 0
 316 0014 7047     		bx	lr
 317              	.L20:
 318 0016 00BF     		.align	2
 319              	.L19:
 320 0018 19650040 		.word	1073767705
 321 001c 59650040 		.word	1073767769
 322              		.cfi_endproc
 323              	.LFE5:
 324              		.size	PWM_H_BRIDGE_ReadCounter, .-PWM_H_BRIDGE_ReadCounter
 325              		.section	.text.PWM_H_BRIDGE_ClearFIFO,"ax",%progbits
 326              		.align	2
 327              		.global	PWM_H_BRIDGE_ClearFIFO
 328              		.thumb
 329              		.thumb_func
 330              		.type	PWM_H_BRIDGE_ClearFIFO, %function
 331              	PWM_H_BRIDGE_ClearFIFO:
 332              	.LFB6:
 435:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 436:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if (PWM_H_BRIDGE_UseStatus)
 437:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 438:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 439:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Function Name: PWM_H_BRIDGE_ClearFIFO
 441:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 443:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 446:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  None
 448:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 449:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *  None
 451:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *
 452:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         void PWM_H_BRIDGE_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         {
 333              		.loc 1 454 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 0000 80B5     		push	{r7, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 00AF     		add	r7, sp, #0
 342              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             while(0u != (PWM_H_BRIDGE_ReadStatusRegister() & PWM_H_BRIDGE_STATUS_FIFONEMPTY))
 343              		.loc 1 455 0
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 15


 344 0004 01E0     		b	.L22
 345              	.L23:
 456:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             {
 457:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 (void)PWM_H_BRIDGE_ReadCapture();
 346              		.loc 1 457 0
 347 0006 FFF7FEFF 		bl	PWM_H_BRIDGE_ReadCapture
 348              	.L22:
 455:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             while(0u != (PWM_H_BRIDGE_ReadStatusRegister() & PWM_H_BRIDGE_STATUS_FIFONEMPTY))
 349              		.loc 1 455 0
 350 000a FFF7FEFF 		bl	PWM_H_BRIDGE_ReadStatusRegister
 351 000e 0346     		mov	r3, r0
 352 0010 03F01003 		and	r3, r3, #16
 353 0014 002B     		cmp	r3, #0
 354 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             }
 459:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         }
 355              		.loc 1 459 0
 356 0018 00BF     		nop
 357 001a 80BD     		pop	{r7, pc}
 358              		.cfi_endproc
 359              	.LFE6:
 360              		.size	PWM_H_BRIDGE_ClearFIFO, .-PWM_H_BRIDGE_ClearFIFO
 361              		.section	.text.PWM_H_BRIDGE_WritePeriod,"ax",%progbits
 362              		.align	2
 363              		.global	PWM_H_BRIDGE_WritePeriod
 364              		.thumb
 365              		.thumb_func
 366              		.type	PWM_H_BRIDGE_WritePeriod, %function
 367              	PWM_H_BRIDGE_WritePeriod:
 368              	.LFB7:
 460:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 461:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* PWM_H_BRIDGE_UseStatus */
 462:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 463:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* !PWM_H_BRIDGE_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 465:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 466:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Function Name: PWM_H_BRIDGE_WritePeriod
 468:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 470:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 474:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 478:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Return:
 479:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
 480:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 481:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** void PWM_H_BRIDGE_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** {
 369              		.loc 1 483 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 16


 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 83B0     		sub	sp, sp, #12
 378              		.cfi_def_cfa_offset 16
 379 0004 00AF     		add	r7, sp, #0
 380              		.cfi_def_cfa_register 7
 381 0006 0346     		mov	r3, r0
 382 0008 FB71     		strb	r3, [r7, #7]
 484:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if(PWM_H_BRIDGE_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         CY_SET_REG16(PWM_H_BRIDGE_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #else
 487:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         CY_SET_REG8(PWM_H_BRIDGE_PERIOD_LSB_PTR, period);
 383              		.loc 1 487 0
 384 000a 044A     		ldr	r2, .L25
 385 000c FB79     		ldrb	r3, [r7, #7]
 386 000e 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** }
 387              		.loc 1 489 0
 388 0010 00BF     		nop
 389 0012 0C37     		adds	r7, r7, #12
 390              		.cfi_def_cfa_offset 4
 391 0014 BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 0016 80BC     		pop	{r7}
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
 397 0018 7047     		bx	lr
 398              	.L26:
 399 001a 00BF     		.align	2
 400              	.L25:
 401 001c 49650040 		.word	1073767753
 402              		.cfi_endproc
 403              	.LFE7:
 404              		.size	PWM_H_BRIDGE_WritePeriod, .-PWM_H_BRIDGE_WritePeriod
 405              		.section	.text.PWM_H_BRIDGE_WriteCompare,"ax",%progbits
 406              		.align	2
 407              		.global	PWM_H_BRIDGE_WriteCompare
 408              		.thumb
 409              		.thumb_func
 410              		.type	PWM_H_BRIDGE_WriteCompare, %function
 411              	PWM_H_BRIDGE_WriteCompare:
 412              	.LFB8:
 490:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 491:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 493:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 494:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_WriteCompare
 496:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 498:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 17


 500:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 505:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 508:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 510:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 511:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 515:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                        
 518:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 413              		.loc 1 518 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418 0000 80B4     		push	{r7}
 419              		.cfi_def_cfa_offset 4
 420              		.cfi_offset 7, -4
 421 0002 83B0     		sub	sp, sp, #12
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 0346     		mov	r3, r0
 426 0008 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(PWM_H_BRIDGE_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG16(PWM_H_BRIDGE_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 522:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG8(PWM_H_BRIDGE_COMPARE1_LSB_PTR, compare);
 427              		.loc 1 522 0
 428 000a 044A     		ldr	r2, .L28
 429 000c FB79     		ldrb	r3, [r7, #7]
 430 000e 1370     		strb	r3, [r2]
 523:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 525:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if (PWM_H_BRIDGE_PWMMode == PWM_H_BRIDGE__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #if(PWM_H_BRIDGE_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 CY_SET_REG16(PWM_H_BRIDGE_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #else
 529:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 CY_SET_REG8(PWM_H_BRIDGE_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_PWMMode == PWM_H_BRIDGE__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 431              		.loc 1 532 0
 432 0010 00BF     		nop
 433 0012 0C37     		adds	r7, r7, #12
 434              		.cfi_def_cfa_offset 4
 435 0014 BD46     		mov	sp, r7
 436              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 18


 437              		@ sp needed
 438 0016 80BC     		pop	{r7}
 439              		.cfi_restore 7
 440              		.cfi_def_cfa_offset 0
 441 0018 7047     		bx	lr
 442              	.L29:
 443 001a 00BF     		.align	2
 444              	.L28:
 445 001c 29650040 		.word	1073767721
 446              		.cfi_endproc
 447              	.LFE8:
 448              		.size	PWM_H_BRIDGE_WriteCompare, .-PWM_H_BRIDGE_WriteCompare
 449              		.section	.text.PWM_H_BRIDGE_SetInterruptMode,"ax",%progbits
 450              		.align	2
 451              		.global	PWM_H_BRIDGE_SetInterruptMode
 452              		.thumb
 453              		.thumb_func
 454              		.type	PWM_H_BRIDGE_SetInterruptMode, %function
 455              	PWM_H_BRIDGE_SetInterruptMode:
 456              	.LFB9:
 533:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 534:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 535:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #else
 536:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 537:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 538:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_WriteCompare1
 540:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 542:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 548:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 551:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 553:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 554:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                         
 557:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 558:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(PWM_H_BRIDGE_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG16(PWM_H_BRIDGE_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 561:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG8(PWM_H_BRIDGE_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 564:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 565:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 566:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_WriteCompare2
 568:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 19


 570:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 577:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 580:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 582:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 583:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                         
 586:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 587:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(PWM_H_BRIDGE_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG16(PWM_H_BRIDGE_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 590:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG8(PWM_H_BRIDGE_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 593:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 595:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 597:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 598:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 602:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 605:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 608:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 610:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 611:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 614:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(!PWM_H_BRIDGE_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             CY_SET_REG8(PWM_H_BRIDGE_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 618:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             PWM_H_BRIDGE_DEADBAND_COUNT &= ((uint8)(~PWM_H_BRIDGE_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 622:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #if(PWM_H_BRIDGE_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_H_BRIDGE_DEADBAND_CO
 625:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                                     PWM_H_BRIDGE_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #else
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 20


 627:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 PWM_H_BRIDGE_DEADBAND_COUNT |= deadtime & PWM_H_BRIDGE_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #endif /* (PWM_H_BRIDGE_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 630:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (!PWM_H_BRIDGE_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 632:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 633:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 634:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 638:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 641:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 643:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 644:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 647:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 650:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(!PWM_H_BRIDGE_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             return (CY_GET_REG8(PWM_H_BRIDGE_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 654:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 655:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #if(PWM_H_BRIDGE_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 return ((uint8)(((uint8)(PWM_H_BRIDGE_DEADBAND_COUNT & PWM_H_BRIDGE_DEADBAND_COUNT_
 658:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                                                                            PWM_H_BRIDGE_DEADBAND_CO
 659:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #else
 660:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****                 return (PWM_H_BRIDGE_DEADBAND_COUNT & PWM_H_BRIDGE_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             #endif /* (PWM_H_BRIDGE_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (!PWM_H_BRIDGE_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 664:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 666:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_UseStatus || PWM_H_BRIDGE_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 668:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 669:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 673:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 677:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 680:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 682:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 683:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 21


 684:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 457              		.loc 1 685 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 83B0     		sub	sp, sp, #12
 466              		.cfi_def_cfa_offset 16
 467 0004 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 469 0006 0346     		mov	r3, r0
 470 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         CY_SET_REG8(PWM_H_BRIDGE_STATUS_MASK_PTR, interruptMode);
 471              		.loc 1 686 0
 472 000a 044A     		ldr	r2, .L31
 473 000c FB79     		ldrb	r3, [r7, #7]
 474 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 475              		.loc 1 687 0
 476 0010 00BF     		nop
 477 0012 0C37     		adds	r7, r7, #12
 478              		.cfi_def_cfa_offset 4
 479 0014 BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0016 80BC     		pop	{r7}
 483              		.cfi_restore 7
 484              		.cfi_def_cfa_offset 0
 485 0018 7047     		bx	lr
 486              	.L32:
 487 001a 00BF     		.align	2
 488              	.L31:
 489 001c 8A650040 		.word	1073767818
 490              		.cfi_endproc
 491              	.LFE9:
 492              		.size	PWM_H_BRIDGE_SetInterruptMode, .-PWM_H_BRIDGE_SetInterruptMode
 493              		.section	.text.PWM_H_BRIDGE_ReadStatusRegister,"ax",%progbits
 494              		.align	2
 495              		.global	PWM_H_BRIDGE_ReadStatusRegister
 496              		.thumb
 497              		.thumb_func
 498              		.type	PWM_H_BRIDGE_ReadStatusRegister, %function
 499              	PWM_H_BRIDGE_ReadStatusRegister:
 500              	.LFB10:
 688:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 689:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 690:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 694:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 22


 697:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 699:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 700:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 710:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 501              		.loc 1 712 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (CY_GET_REG8(PWM_H_BRIDGE_STATUS_PTR));
 511              		.loc 1 713 0
 512 0004 034B     		ldr	r3, .L35
 513 0006 1B78     		ldrb	r3, [r3]
 514 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 515              		.loc 1 714 0
 516 000a 1846     		mov	r0, r3
 517 000c BD46     		mov	sp, r7
 518              		.cfi_def_cfa_register 13
 519              		@ sp needed
 520 000e 80BC     		pop	{r7}
 521              		.cfi_restore 7
 522              		.cfi_def_cfa_offset 0
 523 0010 7047     		bx	lr
 524              	.L36:
 525 0012 00BF     		.align	2
 526              	.L35:
 527 0014 6A650040 		.word	1073767786
 528              		.cfi_endproc
 529              	.LFE10:
 530              		.size	PWM_H_BRIDGE_ReadStatusRegister, .-PWM_H_BRIDGE_ReadStatusRegister
 531              		.section	.text.PWM_H_BRIDGE_ReadControlRegister,"ax",%progbits
 532              		.align	2
 533              		.global	PWM_H_BRIDGE_ReadControlRegister
 534              		.thumb
 535              		.thumb_func
 536              		.type	PWM_H_BRIDGE_ReadControlRegister, %function
 537              	PWM_H_BRIDGE_ReadControlRegister:
 538              	.LFB11:
 715:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 23


 716:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* (PWM_H_BRIDGE_UseStatus || PWM_H_BRIDGE_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 718:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 719:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_UseControl)
 720:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 721:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 722:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 726:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 730:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 732:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 733:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 736:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 539              		.loc 1 738 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 0000 80B4     		push	{r7}
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 83B0     		sub	sp, sp, #12
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 741:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         result = CY_GET_REG8(PWM_H_BRIDGE_CONTROL_PTR);
 551              		.loc 1 741 0
 552 0006 044B     		ldr	r3, .L39
 553 0008 1B78     		ldrb	r3, [r3]
 554 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (result);
 555              		.loc 1 742 0
 556 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 557              		.loc 1 743 0
 558 000e 1846     		mov	r0, r3
 559 0010 0C37     		adds	r7, r7, #12
 560              		.cfi_def_cfa_offset 4
 561 0012 BD46     		mov	sp, r7
 562              		.cfi_def_cfa_register 13
 563              		@ sp needed
 564 0014 80BC     		pop	{r7}
 565              		.cfi_restore 7
 566              		.cfi_def_cfa_offset 0
 567 0016 7047     		bx	lr
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 24


 568              	.L40:
 569              		.align	2
 570              	.L39:
 571 0018 7A650040 		.word	1073767802
 572              		.cfi_endproc
 573              	.LFE11:
 574              		.size	PWM_H_BRIDGE_ReadControlRegister, .-PWM_H_BRIDGE_ReadControlRegister
 575              		.section	.text.PWM_H_BRIDGE_WriteControlRegister,"ax",%progbits
 576              		.align	2
 577              		.global	PWM_H_BRIDGE_WriteControlRegister
 578              		.thumb
 579              		.thumb_func
 580              		.type	PWM_H_BRIDGE_WriteControlRegister, %function
 581              	PWM_H_BRIDGE_WriteControlRegister:
 582              	.LFB12:
 744:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 745:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 746:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 750:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 754:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 761:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 763:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 764:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     void PWM_H_BRIDGE_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 583              		.loc 1 766 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 8
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 588 0000 80B4     		push	{r7}
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 7, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 0346     		mov	r3, r0
 596 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         CY_SET_REG8(PWM_H_BRIDGE_CONTROL_PTR, control);
 597              		.loc 1 767 0
 598 000a 044A     		ldr	r2, .L42
 599 000c FB79     		ldrb	r3, [r7, #7]
 600 000e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 25


 768:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 601              		.loc 1 768 0
 602 0010 00BF     		nop
 603 0012 0C37     		adds	r7, r7, #12
 604              		.cfi_def_cfa_offset 4
 605 0014 BD46     		mov	sp, r7
 606              		.cfi_def_cfa_register 13
 607              		@ sp needed
 608 0016 80BC     		pop	{r7}
 609              		.cfi_restore 7
 610              		.cfi_def_cfa_offset 0
 611 0018 7047     		bx	lr
 612              	.L43:
 613 001a 00BF     		.align	2
 614              	.L42:
 615 001c 7A650040 		.word	1073767802
 616              		.cfi_endproc
 617              	.LFE12:
 618              		.size	PWM_H_BRIDGE_WriteControlRegister, .-PWM_H_BRIDGE_WriteControlRegister
 619              		.section	.text.PWM_H_BRIDGE_ReadCapture,"ax",%progbits
 620              		.align	2
 621              		.global	PWM_H_BRIDGE_ReadCapture
 622              		.thumb
 623              		.thumb_func
 624              		.type	PWM_H_BRIDGE_ReadCapture, %function
 625              	PWM_H_BRIDGE_ReadCapture:
 626              	.LFB13:
 769:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 770:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* (PWM_H_BRIDGE_UseControl) */
 771:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 772:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 773:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (!PWM_H_BRIDGE_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 775:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 776:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadCapture
 778:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 780:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 783:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 785:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 786:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 789:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 627              		.loc 1 791 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632 0000 80B4     		push	{r7}
 633              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 26


 634              		.cfi_offset 7, -4
 635 0002 00AF     		add	r7, sp, #0
 636              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (CY_GET_REG8(PWM_H_BRIDGE_CAPTURE_LSB_PTR));
 637              		.loc 1 792 0
 638 0004 034B     		ldr	r3, .L46
 639 0006 1B78     		ldrb	r3, [r3]
 640 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 641              		.loc 1 793 0
 642 000a 1846     		mov	r0, r3
 643 000c BD46     		mov	sp, r7
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 000e 80BC     		pop	{r7}
 647              		.cfi_restore 7
 648              		.cfi_def_cfa_offset 0
 649 0010 7047     		bx	lr
 650              	.L47:
 651 0012 00BF     		.align	2
 652              	.L46:
 653 0014 59650040 		.word	1073767769
 654              		.cfi_endproc
 655              	.LFE13:
 656              		.size	PWM_H_BRIDGE_ReadCapture, .-PWM_H_BRIDGE_ReadCapture
 657              		.section	.text.PWM_H_BRIDGE_ReadCompare,"ax",%progbits
 658              		.align	2
 659              		.global	PWM_H_BRIDGE_ReadCompare
 660              		.thumb
 661              		.thumb_func
 662              		.type	PWM_H_BRIDGE_ReadCompare, %function
 663              	PWM_H_BRIDGE_ReadCompare:
 664              	.LFB14:
 794:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 795:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* (!PWM_H_BRIDGE_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 797:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 798:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #if (PWM_H_BRIDGE_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 800:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 801:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadCompare
 803:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 805:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 809:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 811:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 812:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 815:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 27


 665              		.loc 1 817 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 00AF     		add	r7, sp, #0
 674              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #if(PWM_H_BRIDGE_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             return ((uint8)CY_GET_REG16(PWM_H_BRIDGE_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #else
 821:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****             return (CY_GET_REG8(PWM_H_BRIDGE_COMPARE1_LSB_PTR));
 675              		.loc 1 821 0
 676 0004 034B     		ldr	r3, .L50
 677 0006 1B78     		ldrb	r3, [r3]
 678 0008 DBB2     		uxtb	r3, r3
 822:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 679              		.loc 1 823 0
 680 000a 1846     		mov	r0, r3
 681 000c BD46     		mov	sp, r7
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 000e 80BC     		pop	{r7}
 685              		.cfi_restore 7
 686              		.cfi_def_cfa_offset 0
 687 0010 7047     		bx	lr
 688              	.L51:
 689 0012 00BF     		.align	2
 690              	.L50:
 691 0014 29650040 		.word	1073767721
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	PWM_H_BRIDGE_ReadCompare, .-PWM_H_BRIDGE_ReadCompare
 695              		.section	.text.PWM_H_BRIDGE_ReadPeriod,"ax",%progbits
 696              		.align	2
 697              		.global	PWM_H_BRIDGE_ReadPeriod
 698              		.thumb
 699              		.thumb_func
 700              		.type	PWM_H_BRIDGE_ReadPeriod, %function
 701              	PWM_H_BRIDGE_ReadPeriod:
 702              	.LFB15:
 824:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 825:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #else
 826:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 827:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 828:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadCompare1
 830:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 832:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 835:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 28


 837:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 838:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 841:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 844:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (CY_GET_REG8(PWM_H_BRIDGE_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 846:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 847:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 848:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Function Name: PWM_H_BRIDGE_ReadCompare2
 850:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 852:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 855:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  None
 857:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 858:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *
 861:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     uint8 PWM_H_BRIDGE_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     {
 864:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (CY_GET_REG8(PWM_H_BRIDGE_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     }
 866:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 867:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** #endif /* (PWM_H_BRIDGE_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 869:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** 
 870:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Function Name: PWM_H_BRIDGE_ReadPeriod
 872:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 874:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 877:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  None
 879:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 880:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** * Return:
 881:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *
 883:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** uint8 PWM_H_BRIDGE_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** {
 703              		.loc 1 885 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708 0000 80B4     		push	{r7}
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 29


 711 0002 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #if(PWM_H_BRIDGE_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return ((uint8)CY_GET_REG16(PWM_H_BRIDGE_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #else
 889:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****         return (CY_GET_REG8(PWM_H_BRIDGE_PERIOD_LSB_PTR));
 713              		.loc 1 889 0
 714 0004 034B     		ldr	r3, .L54
 715 0006 1B78     		ldrb	r3, [r3]
 716 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC5/PWM_H_BRIDGE.c ****     #endif /* (PWM_H_BRIDGE_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_H_BRIDGE.c **** }
 717              		.loc 1 891 0
 718 000a 1846     		mov	r0, r3
 719 000c BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 000e 80BC     		pop	{r7}
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0010 7047     		bx	lr
 726              	.L55:
 727 0012 00BF     		.align	2
 728              	.L54:
 729 0014 49650040 		.word	1073767753
 730              		.cfi_endproc
 731              	.LFE15:
 732              		.size	PWM_H_BRIDGE_ReadPeriod, .-PWM_H_BRIDGE_ReadPeriod
 733              		.text
 734              	.Letext0:
 735              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 736              		.section	.debug_info,"",%progbits
 737              	.Ldebug_info0:
 738 0000 86020000 		.4byte	0x286
 739 0004 0400     		.2byte	0x4
 740 0006 00000000 		.4byte	.Ldebug_abbrev0
 741 000a 04       		.byte	0x4
 742 000b 01       		.uleb128 0x1
 743 000c 73000000 		.4byte	.LASF39
 744 0010 0C       		.byte	0xc
 745 0011 C8020000 		.4byte	.LASF40
 746 0015 00000000 		.4byte	.LASF41
 747 0019 00000000 		.4byte	.Ldebug_ranges0+0
 748 001d 00000000 		.4byte	0
 749 0021 00000000 		.4byte	.Ldebug_line0
 750 0025 02       		.uleb128 0x2
 751 0026 01       		.byte	0x1
 752 0027 06       		.byte	0x6
 753 0028 65030000 		.4byte	.LASF0
 754 002c 02       		.uleb128 0x2
 755 002d 01       		.byte	0x1
 756 002e 08       		.byte	0x8
 757 002f 5E010000 		.4byte	.LASF1
 758 0033 02       		.uleb128 0x2
 759 0034 02       		.byte	0x2
 760 0035 05       		.byte	0x5
 761 0036 03030000 		.4byte	.LASF2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 30


 762 003a 02       		.uleb128 0x2
 763 003b 02       		.byte	0x2
 764 003c 07       		.byte	0x7
 765 003d 21010000 		.4byte	.LASF3
 766 0041 02       		.uleb128 0x2
 767 0042 04       		.byte	0x4
 768 0043 05       		.byte	0x5
 769 0044 24030000 		.4byte	.LASF4
 770 0048 02       		.uleb128 0x2
 771 0049 04       		.byte	0x4
 772 004a 07       		.byte	0x7
 773 004b 9F010000 		.4byte	.LASF5
 774 004f 02       		.uleb128 0x2
 775 0050 08       		.byte	0x8
 776 0051 05       		.byte	0x5
 777 0052 8A020000 		.4byte	.LASF6
 778 0056 02       		.uleb128 0x2
 779 0057 08       		.byte	0x8
 780 0058 07       		.byte	0x7
 781 0059 5E020000 		.4byte	.LASF7
 782 005d 03       		.uleb128 0x3
 783 005e 04       		.byte	0x4
 784 005f 05       		.byte	0x5
 785 0060 696E7400 		.ascii	"int\000"
 786 0064 02       		.uleb128 0x2
 787 0065 04       		.byte	0x4
 788 0066 07       		.byte	0x7
 789 0067 38020000 		.4byte	.LASF8
 790 006b 04       		.uleb128 0x4
 791 006c B1010000 		.4byte	.LASF12
 792 0070 02       		.byte	0x2
 793 0071 9201     		.2byte	0x192
 794 0073 2C000000 		.4byte	0x2c
 795 0077 02       		.uleb128 0x2
 796 0078 04       		.byte	0x4
 797 0079 04       		.byte	0x4
 798 007a 50010000 		.4byte	.LASF9
 799 007e 02       		.uleb128 0x2
 800 007f 08       		.byte	0x8
 801 0080 04       		.byte	0x4
 802 0081 E0010000 		.4byte	.LASF10
 803 0085 02       		.uleb128 0x2
 804 0086 01       		.byte	0x1
 805 0087 08       		.byte	0x8
 806 0088 5C000000 		.4byte	.LASF11
 807 008c 04       		.uleb128 0x4
 808 008d 6C010000 		.4byte	.LASF13
 809 0091 02       		.byte	0x2
 810 0092 3C02     		.2byte	0x23c
 811 0094 98000000 		.4byte	0x98
 812 0098 05       		.uleb128 0x5
 813 0099 6B000000 		.4byte	0x6b
 814 009d 02       		.uleb128 0x2
 815 009e 08       		.byte	0x8
 816 009f 04       		.byte	0x4
 817 00a0 46030000 		.4byte	.LASF14
 818 00a4 02       		.uleb128 0x2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 31


 819 00a5 04       		.byte	0x4
 820 00a6 07       		.byte	0x7
 821 00a7 81020000 		.4byte	.LASF15
 822 00ab 06       		.uleb128 0x6
 823 00ac 52030000 		.4byte	.LASF18
 824 00b0 01       		.byte	0x1
 825 00b1 37       		.byte	0x37
 826 00b2 00000000 		.4byte	.LFB0
 827 00b6 24000000 		.4byte	.LFE0-.LFB0
 828 00ba 01       		.uleb128 0x1
 829 00bb 9C       		.byte	0x9c
 830 00bc 07       		.uleb128 0x7
 831 00bd 79030000 		.4byte	.LASF21
 832 00c1 01       		.byte	0x1
 833 00c2 54       		.byte	0x54
 834 00c3 00000000 		.4byte	.LFB1
 835 00c7 80000000 		.4byte	.LFE1-.LFB1
 836 00cb 01       		.uleb128 0x1
 837 00cc 9C       		.byte	0x9c
 838 00cd EE000000 		.4byte	0xee
 839 00d1 08       		.uleb128 0x8
 840 00d2 7C020000 		.4byte	.LASF16
 841 00d6 01       		.byte	0x1
 842 00d7 57       		.byte	0x57
 843 00d8 6B000000 		.4byte	0x6b
 844 00dc 02       		.uleb128 0x2
 845 00dd 91       		.byte	0x91
 846 00de 77       		.sleb128 -9
 847 00df 08       		.uleb128 0x8
 848 00e0 34010000 		.4byte	.LASF17
 849 00e4 01       		.byte	0x1
 850 00e5 5D       		.byte	0x5d
 851 00e6 6B000000 		.4byte	0x6b
 852 00ea 02       		.uleb128 0x2
 853 00eb 91       		.byte	0x91
 854 00ec 76       		.sleb128 -10
 855 00ed 00       		.byte	0
 856 00ee 09       		.uleb128 0x9
 857 00ef 8B010000 		.4byte	.LASF19
 858 00f3 01       		.byte	0x1
 859 00f4 C7       		.byte	0xc7
 860 00f5 00000000 		.4byte	.LFB2
 861 00f9 20000000 		.4byte	.LFE2-.LFB2
 862 00fd 01       		.uleb128 0x1
 863 00fe 9C       		.byte	0x9c
 864 00ff 09       		.uleb128 0x9
 865 0100 61000000 		.4byte	.LASF20
 866 0104 01       		.byte	0x1
 867 0105 E9       		.byte	0xe9
 868 0106 00000000 		.4byte	.LFB3
 869 010a 20000000 		.4byte	.LFE3-.LFB3
 870 010e 01       		.uleb128 0x1
 871 010f 9C       		.byte	0x9c
 872 0110 0A       		.uleb128 0xa
 873 0111 71010000 		.4byte	.LASF22
 874 0115 01       		.byte	0x1
 875 0116 9301     		.2byte	0x193
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 32


 876 0118 00000000 		.4byte	.LFB4
 877 011c 20000000 		.4byte	.LFE4-.LFB4
 878 0120 01       		.uleb128 0x1
 879 0121 9C       		.byte	0x9c
 880 0122 36010000 		.4byte	0x136
 881 0126 0B       		.uleb128 0xb
 882 0127 56010000 		.4byte	.LASF25
 883 012b 01       		.byte	0x1
 884 012c 9301     		.2byte	0x193
 885 012e 6B000000 		.4byte	0x6b
 886 0132 02       		.uleb128 0x2
 887 0133 91       		.byte	0x91
 888 0134 77       		.sleb128 -9
 889 0135 00       		.byte	0
 890 0136 0C       		.uleb128 0xc
 891 0137 2D030000 		.4byte	.LASF31
 892 013b 01       		.byte	0x1
 893 013c A901     		.2byte	0x1a9
 894 013e 6B000000 		.4byte	0x6b
 895 0142 00000000 		.4byte	.LFB5
 896 0146 20000000 		.4byte	.LFE5-.LFB5
 897 014a 01       		.uleb128 0x1
 898 014b 9C       		.byte	0x9c
 899 014c 0D       		.uleb128 0xd
 900 014d 0D030000 		.4byte	.LASF23
 901 0151 01       		.byte	0x1
 902 0152 C501     		.2byte	0x1c5
 903 0154 00000000 		.4byte	.LFB6
 904 0158 1C000000 		.4byte	.LFE6-.LFB6
 905 015c 01       		.uleb128 0x1
 906 015d 9C       		.byte	0x9c
 907 015e 0A       		.uleb128 0xa
 908 015f 01010000 		.4byte	.LASF24
 909 0163 01       		.byte	0x1
 910 0164 E201     		.2byte	0x1e2
 911 0166 00000000 		.4byte	.LFB7
 912 016a 20000000 		.4byte	.LFE7-.LFB7
 913 016e 01       		.uleb128 0x1
 914 016f 9C       		.byte	0x9c
 915 0170 84010000 		.4byte	0x184
 916 0174 0B       		.uleb128 0xb
 917 0175 1A010000 		.4byte	.LASF26
 918 0179 01       		.byte	0x1
 919 017a E201     		.2byte	0x1e2
 920 017c 6B000000 		.4byte	0x6b
 921 0180 02       		.uleb128 0x2
 922 0181 91       		.byte	0x91
 923 0182 77       		.sleb128 -9
 924 0183 00       		.byte	0
 925 0184 0A       		.uleb128 0xa
 926 0185 A9030000 		.4byte	.LASF27
 927 0189 01       		.byte	0x1
 928 018a 0402     		.2byte	0x204
 929 018c 00000000 		.4byte	.LFB8
 930 0190 20000000 		.4byte	.LFE8-.LFB8
 931 0194 01       		.uleb128 0x1
 932 0195 9C       		.byte	0x9c
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 33


 933 0196 AA010000 		.4byte	0x1aa
 934 019a 0B       		.uleb128 0xb
 935 019b 71030000 		.4byte	.LASF28
 936 019f 01       		.byte	0x1
 937 01a0 0402     		.2byte	0x204
 938 01a2 6B000000 		.4byte	0x6b
 939 01a6 02       		.uleb128 0x2
 940 01a7 91       		.byte	0x91
 941 01a8 77       		.sleb128 -9
 942 01a9 00       		.byte	0
 943 01aa 0A       		.uleb128 0xa
 944 01ab 8B030000 		.4byte	.LASF29
 945 01af 01       		.byte	0x1
 946 01b0 AC02     		.2byte	0x2ac
 947 01b2 00000000 		.4byte	.LFB9
 948 01b6 20000000 		.4byte	.LFE9-.LFB9
 949 01ba 01       		.uleb128 0x1
 950 01bb 9C       		.byte	0x9c
 951 01bc D0010000 		.4byte	0x1d0
 952 01c0 0B       		.uleb128 0xb
 953 01c1 98020000 		.4byte	.LASF30
 954 01c5 01       		.byte	0x1
 955 01c6 AC02     		.2byte	0x2ac
 956 01c8 6B000000 		.4byte	0x6b
 957 01cc 02       		.uleb128 0x2
 958 01cd 91       		.byte	0x91
 959 01ce 77       		.sleb128 -9
 960 01cf 00       		.byte	0
 961 01d0 0C       		.uleb128 0xc
 962 01d1 FF010000 		.4byte	.LASF32
 963 01d5 01       		.byte	0x1
 964 01d6 C702     		.2byte	0x2c7
 965 01d8 6B000000 		.4byte	0x6b
 966 01dc 00000000 		.4byte	.LFB10
 967 01e0 18000000 		.4byte	.LFE10-.LFB10
 968 01e4 01       		.uleb128 0x1
 969 01e5 9C       		.byte	0x9c
 970 01e6 0E       		.uleb128 0xe
 971 01e7 BF010000 		.4byte	.LASF42
 972 01eb 01       		.byte	0x1
 973 01ec E102     		.2byte	0x2e1
 974 01ee 6B000000 		.4byte	0x6b
 975 01f2 00000000 		.4byte	.LFB11
 976 01f6 1C000000 		.4byte	.LFE11-.LFB11
 977 01fa 01       		.uleb128 0x1
 978 01fb 9C       		.byte	0x9c
 979 01fc 10020000 		.4byte	0x210
 980 0200 0F       		.uleb128 0xf
 981 0201 75020000 		.4byte	.LASF33
 982 0205 01       		.byte	0x1
 983 0206 E302     		.2byte	0x2e3
 984 0208 6B000000 		.4byte	0x6b
 985 020c 02       		.uleb128 0x2
 986 020d 91       		.byte	0x91
 987 020e 77       		.sleb128 -9
 988 020f 00       		.byte	0
 989 0210 0A       		.uleb128 0xa
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 34


 990 0211 A6020000 		.4byte	.LASF34
 991 0215 01       		.byte	0x1
 992 0216 FD02     		.2byte	0x2fd
 993 0218 00000000 		.4byte	.LFB12
 994 021c 20000000 		.4byte	.LFE12-.LFB12
 995 0220 01       		.uleb128 0x1
 996 0221 9C       		.byte	0x9c
 997 0222 36020000 		.4byte	0x236
 998 0226 0B       		.uleb128 0xb
 999 0227 B7010000 		.4byte	.LASF35
 1000 022b 01       		.byte	0x1
 1001 022c FD02     		.2byte	0x2fd
 1002 022e 6B000000 		.4byte	0x6b
 1003 0232 02       		.uleb128 0x2
 1004 0233 91       		.byte	0x91
 1005 0234 77       		.sleb128 -9
 1006 0235 00       		.byte	0
 1007 0236 0C       		.uleb128 0xc
 1008 0237 45020000 		.4byte	.LASF36
 1009 023b 01       		.byte	0x1
 1010 023c 1603     		.2byte	0x316
 1011 023e 6B000000 		.4byte	0x6b
 1012 0242 00000000 		.4byte	.LFB13
 1013 0246 18000000 		.4byte	.LFE13-.LFB13
 1014 024a 01       		.uleb128 0x1
 1015 024b 9C       		.byte	0x9c
 1016 024c 0C       		.uleb128 0xc
 1017 024d 1F020000 		.4byte	.LASF37
 1018 0251 01       		.byte	0x1
 1019 0252 3003     		.2byte	0x330
 1020 0254 6B000000 		.4byte	0x6b
 1021 0258 00000000 		.4byte	.LFB14
 1022 025c 18000000 		.4byte	.LFE14-.LFB14
 1023 0260 01       		.uleb128 0x1
 1024 0261 9C       		.byte	0x9c
 1025 0262 0C       		.uleb128 0xc
 1026 0263 E7010000 		.4byte	.LASF38
 1027 0267 01       		.byte	0x1
 1028 0268 7403     		.2byte	0x374
 1029 026a 6B000000 		.4byte	0x6b
 1030 026e 00000000 		.4byte	.LFB15
 1031 0272 18000000 		.4byte	.LFE15-.LFB15
 1032 0276 01       		.uleb128 0x1
 1033 0277 9C       		.byte	0x9c
 1034 0278 10       		.uleb128 0x10
 1035 0279 EE020000 		.4byte	.LASF43
 1036 027d 01       		.byte	0x1
 1037 027e 20       		.byte	0x20
 1038 027f 6B000000 		.4byte	0x6b
 1039 0283 05       		.uleb128 0x5
 1040 0284 03       		.byte	0x3
 1041 0285 00000000 		.4byte	PWM_H_BRIDGE_initVar
 1042 0289 00       		.byte	0
 1043              		.section	.debug_abbrev,"",%progbits
 1044              	.Ldebug_abbrev0:
 1045 0000 01       		.uleb128 0x1
 1046 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 35


 1047 0002 01       		.byte	0x1
 1048 0003 25       		.uleb128 0x25
 1049 0004 0E       		.uleb128 0xe
 1050 0005 13       		.uleb128 0x13
 1051 0006 0B       		.uleb128 0xb
 1052 0007 03       		.uleb128 0x3
 1053 0008 0E       		.uleb128 0xe
 1054 0009 1B       		.uleb128 0x1b
 1055 000a 0E       		.uleb128 0xe
 1056 000b 55       		.uleb128 0x55
 1057 000c 17       		.uleb128 0x17
 1058 000d 11       		.uleb128 0x11
 1059 000e 01       		.uleb128 0x1
 1060 000f 10       		.uleb128 0x10
 1061 0010 17       		.uleb128 0x17
 1062 0011 00       		.byte	0
 1063 0012 00       		.byte	0
 1064 0013 02       		.uleb128 0x2
 1065 0014 24       		.uleb128 0x24
 1066 0015 00       		.byte	0
 1067 0016 0B       		.uleb128 0xb
 1068 0017 0B       		.uleb128 0xb
 1069 0018 3E       		.uleb128 0x3e
 1070 0019 0B       		.uleb128 0xb
 1071 001a 03       		.uleb128 0x3
 1072 001b 0E       		.uleb128 0xe
 1073 001c 00       		.byte	0
 1074 001d 00       		.byte	0
 1075 001e 03       		.uleb128 0x3
 1076 001f 24       		.uleb128 0x24
 1077 0020 00       		.byte	0
 1078 0021 0B       		.uleb128 0xb
 1079 0022 0B       		.uleb128 0xb
 1080 0023 3E       		.uleb128 0x3e
 1081 0024 0B       		.uleb128 0xb
 1082 0025 03       		.uleb128 0x3
 1083 0026 08       		.uleb128 0x8
 1084 0027 00       		.byte	0
 1085 0028 00       		.byte	0
 1086 0029 04       		.uleb128 0x4
 1087 002a 16       		.uleb128 0x16
 1088 002b 00       		.byte	0
 1089 002c 03       		.uleb128 0x3
 1090 002d 0E       		.uleb128 0xe
 1091 002e 3A       		.uleb128 0x3a
 1092 002f 0B       		.uleb128 0xb
 1093 0030 3B       		.uleb128 0x3b
 1094 0031 05       		.uleb128 0x5
 1095 0032 49       		.uleb128 0x49
 1096 0033 13       		.uleb128 0x13
 1097 0034 00       		.byte	0
 1098 0035 00       		.byte	0
 1099 0036 05       		.uleb128 0x5
 1100 0037 35       		.uleb128 0x35
 1101 0038 00       		.byte	0
 1102 0039 49       		.uleb128 0x49
 1103 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 36


 1104 003b 00       		.byte	0
 1105 003c 00       		.byte	0
 1106 003d 06       		.uleb128 0x6
 1107 003e 2E       		.uleb128 0x2e
 1108 003f 00       		.byte	0
 1109 0040 3F       		.uleb128 0x3f
 1110 0041 19       		.uleb128 0x19
 1111 0042 03       		.uleb128 0x3
 1112 0043 0E       		.uleb128 0xe
 1113 0044 3A       		.uleb128 0x3a
 1114 0045 0B       		.uleb128 0xb
 1115 0046 3B       		.uleb128 0x3b
 1116 0047 0B       		.uleb128 0xb
 1117 0048 27       		.uleb128 0x27
 1118 0049 19       		.uleb128 0x19
 1119 004a 11       		.uleb128 0x11
 1120 004b 01       		.uleb128 0x1
 1121 004c 12       		.uleb128 0x12
 1122 004d 06       		.uleb128 0x6
 1123 004e 40       		.uleb128 0x40
 1124 004f 18       		.uleb128 0x18
 1125 0050 9642     		.uleb128 0x2116
 1126 0052 19       		.uleb128 0x19
 1127 0053 00       		.byte	0
 1128 0054 00       		.byte	0
 1129 0055 07       		.uleb128 0x7
 1130 0056 2E       		.uleb128 0x2e
 1131 0057 01       		.byte	0x1
 1132 0058 3F       		.uleb128 0x3f
 1133 0059 19       		.uleb128 0x19
 1134 005a 03       		.uleb128 0x3
 1135 005b 0E       		.uleb128 0xe
 1136 005c 3A       		.uleb128 0x3a
 1137 005d 0B       		.uleb128 0xb
 1138 005e 3B       		.uleb128 0x3b
 1139 005f 0B       		.uleb128 0xb
 1140 0060 27       		.uleb128 0x27
 1141 0061 19       		.uleb128 0x19
 1142 0062 11       		.uleb128 0x11
 1143 0063 01       		.uleb128 0x1
 1144 0064 12       		.uleb128 0x12
 1145 0065 06       		.uleb128 0x6
 1146 0066 40       		.uleb128 0x40
 1147 0067 18       		.uleb128 0x18
 1148 0068 9642     		.uleb128 0x2116
 1149 006a 19       		.uleb128 0x19
 1150 006b 01       		.uleb128 0x1
 1151 006c 13       		.uleb128 0x13
 1152 006d 00       		.byte	0
 1153 006e 00       		.byte	0
 1154 006f 08       		.uleb128 0x8
 1155 0070 34       		.uleb128 0x34
 1156 0071 00       		.byte	0
 1157 0072 03       		.uleb128 0x3
 1158 0073 0E       		.uleb128 0xe
 1159 0074 3A       		.uleb128 0x3a
 1160 0075 0B       		.uleb128 0xb
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 37


 1161 0076 3B       		.uleb128 0x3b
 1162 0077 0B       		.uleb128 0xb
 1163 0078 49       		.uleb128 0x49
 1164 0079 13       		.uleb128 0x13
 1165 007a 02       		.uleb128 0x2
 1166 007b 18       		.uleb128 0x18
 1167 007c 00       		.byte	0
 1168 007d 00       		.byte	0
 1169 007e 09       		.uleb128 0x9
 1170 007f 2E       		.uleb128 0x2e
 1171 0080 00       		.byte	0
 1172 0081 3F       		.uleb128 0x3f
 1173 0082 19       		.uleb128 0x19
 1174 0083 03       		.uleb128 0x3
 1175 0084 0E       		.uleb128 0xe
 1176 0085 3A       		.uleb128 0x3a
 1177 0086 0B       		.uleb128 0xb
 1178 0087 3B       		.uleb128 0x3b
 1179 0088 0B       		.uleb128 0xb
 1180 0089 27       		.uleb128 0x27
 1181 008a 19       		.uleb128 0x19
 1182 008b 11       		.uleb128 0x11
 1183 008c 01       		.uleb128 0x1
 1184 008d 12       		.uleb128 0x12
 1185 008e 06       		.uleb128 0x6
 1186 008f 40       		.uleb128 0x40
 1187 0090 18       		.uleb128 0x18
 1188 0091 9742     		.uleb128 0x2117
 1189 0093 19       		.uleb128 0x19
 1190 0094 00       		.byte	0
 1191 0095 00       		.byte	0
 1192 0096 0A       		.uleb128 0xa
 1193 0097 2E       		.uleb128 0x2e
 1194 0098 01       		.byte	0x1
 1195 0099 3F       		.uleb128 0x3f
 1196 009a 19       		.uleb128 0x19
 1197 009b 03       		.uleb128 0x3
 1198 009c 0E       		.uleb128 0xe
 1199 009d 3A       		.uleb128 0x3a
 1200 009e 0B       		.uleb128 0xb
 1201 009f 3B       		.uleb128 0x3b
 1202 00a0 05       		.uleb128 0x5
 1203 00a1 27       		.uleb128 0x27
 1204 00a2 19       		.uleb128 0x19
 1205 00a3 11       		.uleb128 0x11
 1206 00a4 01       		.uleb128 0x1
 1207 00a5 12       		.uleb128 0x12
 1208 00a6 06       		.uleb128 0x6
 1209 00a7 40       		.uleb128 0x40
 1210 00a8 18       		.uleb128 0x18
 1211 00a9 9742     		.uleb128 0x2117
 1212 00ab 19       		.uleb128 0x19
 1213 00ac 01       		.uleb128 0x1
 1214 00ad 13       		.uleb128 0x13
 1215 00ae 00       		.byte	0
 1216 00af 00       		.byte	0
 1217 00b0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 38


 1218 00b1 05       		.uleb128 0x5
 1219 00b2 00       		.byte	0
 1220 00b3 03       		.uleb128 0x3
 1221 00b4 0E       		.uleb128 0xe
 1222 00b5 3A       		.uleb128 0x3a
 1223 00b6 0B       		.uleb128 0xb
 1224 00b7 3B       		.uleb128 0x3b
 1225 00b8 05       		.uleb128 0x5
 1226 00b9 49       		.uleb128 0x49
 1227 00ba 13       		.uleb128 0x13
 1228 00bb 02       		.uleb128 0x2
 1229 00bc 18       		.uleb128 0x18
 1230 00bd 00       		.byte	0
 1231 00be 00       		.byte	0
 1232 00bf 0C       		.uleb128 0xc
 1233 00c0 2E       		.uleb128 0x2e
 1234 00c1 00       		.byte	0
 1235 00c2 3F       		.uleb128 0x3f
 1236 00c3 19       		.uleb128 0x19
 1237 00c4 03       		.uleb128 0x3
 1238 00c5 0E       		.uleb128 0xe
 1239 00c6 3A       		.uleb128 0x3a
 1240 00c7 0B       		.uleb128 0xb
 1241 00c8 3B       		.uleb128 0x3b
 1242 00c9 05       		.uleb128 0x5
 1243 00ca 27       		.uleb128 0x27
 1244 00cb 19       		.uleb128 0x19
 1245 00cc 49       		.uleb128 0x49
 1246 00cd 13       		.uleb128 0x13
 1247 00ce 11       		.uleb128 0x11
 1248 00cf 01       		.uleb128 0x1
 1249 00d0 12       		.uleb128 0x12
 1250 00d1 06       		.uleb128 0x6
 1251 00d2 40       		.uleb128 0x40
 1252 00d3 18       		.uleb128 0x18
 1253 00d4 9742     		.uleb128 0x2117
 1254 00d6 19       		.uleb128 0x19
 1255 00d7 00       		.byte	0
 1256 00d8 00       		.byte	0
 1257 00d9 0D       		.uleb128 0xd
 1258 00da 2E       		.uleb128 0x2e
 1259 00db 00       		.byte	0
 1260 00dc 3F       		.uleb128 0x3f
 1261 00dd 19       		.uleb128 0x19
 1262 00de 03       		.uleb128 0x3
 1263 00df 0E       		.uleb128 0xe
 1264 00e0 3A       		.uleb128 0x3a
 1265 00e1 0B       		.uleb128 0xb
 1266 00e2 3B       		.uleb128 0x3b
 1267 00e3 05       		.uleb128 0x5
 1268 00e4 27       		.uleb128 0x27
 1269 00e5 19       		.uleb128 0x19
 1270 00e6 11       		.uleb128 0x11
 1271 00e7 01       		.uleb128 0x1
 1272 00e8 12       		.uleb128 0x12
 1273 00e9 06       		.uleb128 0x6
 1274 00ea 40       		.uleb128 0x40
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 39


 1275 00eb 18       		.uleb128 0x18
 1276 00ec 9642     		.uleb128 0x2116
 1277 00ee 19       		.uleb128 0x19
 1278 00ef 00       		.byte	0
 1279 00f0 00       		.byte	0
 1280 00f1 0E       		.uleb128 0xe
 1281 00f2 2E       		.uleb128 0x2e
 1282 00f3 01       		.byte	0x1
 1283 00f4 3F       		.uleb128 0x3f
 1284 00f5 19       		.uleb128 0x19
 1285 00f6 03       		.uleb128 0x3
 1286 00f7 0E       		.uleb128 0xe
 1287 00f8 3A       		.uleb128 0x3a
 1288 00f9 0B       		.uleb128 0xb
 1289 00fa 3B       		.uleb128 0x3b
 1290 00fb 05       		.uleb128 0x5
 1291 00fc 27       		.uleb128 0x27
 1292 00fd 19       		.uleb128 0x19
 1293 00fe 49       		.uleb128 0x49
 1294 00ff 13       		.uleb128 0x13
 1295 0100 11       		.uleb128 0x11
 1296 0101 01       		.uleb128 0x1
 1297 0102 12       		.uleb128 0x12
 1298 0103 06       		.uleb128 0x6
 1299 0104 40       		.uleb128 0x40
 1300 0105 18       		.uleb128 0x18
 1301 0106 9742     		.uleb128 0x2117
 1302 0108 19       		.uleb128 0x19
 1303 0109 01       		.uleb128 0x1
 1304 010a 13       		.uleb128 0x13
 1305 010b 00       		.byte	0
 1306 010c 00       		.byte	0
 1307 010d 0F       		.uleb128 0xf
 1308 010e 34       		.uleb128 0x34
 1309 010f 00       		.byte	0
 1310 0110 03       		.uleb128 0x3
 1311 0111 0E       		.uleb128 0xe
 1312 0112 3A       		.uleb128 0x3a
 1313 0113 0B       		.uleb128 0xb
 1314 0114 3B       		.uleb128 0x3b
 1315 0115 05       		.uleb128 0x5
 1316 0116 49       		.uleb128 0x49
 1317 0117 13       		.uleb128 0x13
 1318 0118 02       		.uleb128 0x2
 1319 0119 18       		.uleb128 0x18
 1320 011a 00       		.byte	0
 1321 011b 00       		.byte	0
 1322 011c 10       		.uleb128 0x10
 1323 011d 34       		.uleb128 0x34
 1324 011e 00       		.byte	0
 1325 011f 03       		.uleb128 0x3
 1326 0120 0E       		.uleb128 0xe
 1327 0121 3A       		.uleb128 0x3a
 1328 0122 0B       		.uleb128 0xb
 1329 0123 3B       		.uleb128 0x3b
 1330 0124 0B       		.uleb128 0xb
 1331 0125 49       		.uleb128 0x49
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 40


 1332 0126 13       		.uleb128 0x13
 1333 0127 3F       		.uleb128 0x3f
 1334 0128 19       		.uleb128 0x19
 1335 0129 02       		.uleb128 0x2
 1336 012a 18       		.uleb128 0x18
 1337 012b 00       		.byte	0
 1338 012c 00       		.byte	0
 1339 012d 00       		.byte	0
 1340              		.section	.debug_aranges,"",%progbits
 1341 0000 94000000 		.4byte	0x94
 1342 0004 0200     		.2byte	0x2
 1343 0006 00000000 		.4byte	.Ldebug_info0
 1344 000a 04       		.byte	0x4
 1345 000b 00       		.byte	0
 1346 000c 0000     		.2byte	0
 1347 000e 0000     		.2byte	0
 1348 0010 00000000 		.4byte	.LFB0
 1349 0014 24000000 		.4byte	.LFE0-.LFB0
 1350 0018 00000000 		.4byte	.LFB1
 1351 001c 80000000 		.4byte	.LFE1-.LFB1
 1352 0020 00000000 		.4byte	.LFB2
 1353 0024 20000000 		.4byte	.LFE2-.LFB2
 1354 0028 00000000 		.4byte	.LFB3
 1355 002c 20000000 		.4byte	.LFE3-.LFB3
 1356 0030 00000000 		.4byte	.LFB4
 1357 0034 20000000 		.4byte	.LFE4-.LFB4
 1358 0038 00000000 		.4byte	.LFB5
 1359 003c 20000000 		.4byte	.LFE5-.LFB5
 1360 0040 00000000 		.4byte	.LFB6
 1361 0044 1C000000 		.4byte	.LFE6-.LFB6
 1362 0048 00000000 		.4byte	.LFB7
 1363 004c 20000000 		.4byte	.LFE7-.LFB7
 1364 0050 00000000 		.4byte	.LFB8
 1365 0054 20000000 		.4byte	.LFE8-.LFB8
 1366 0058 00000000 		.4byte	.LFB9
 1367 005c 20000000 		.4byte	.LFE9-.LFB9
 1368 0060 00000000 		.4byte	.LFB10
 1369 0064 18000000 		.4byte	.LFE10-.LFB10
 1370 0068 00000000 		.4byte	.LFB11
 1371 006c 1C000000 		.4byte	.LFE11-.LFB11
 1372 0070 00000000 		.4byte	.LFB12
 1373 0074 20000000 		.4byte	.LFE12-.LFB12
 1374 0078 00000000 		.4byte	.LFB13
 1375 007c 18000000 		.4byte	.LFE13-.LFB13
 1376 0080 00000000 		.4byte	.LFB14
 1377 0084 18000000 		.4byte	.LFE14-.LFB14
 1378 0088 00000000 		.4byte	.LFB15
 1379 008c 18000000 		.4byte	.LFE15-.LFB15
 1380 0090 00000000 		.4byte	0
 1381 0094 00000000 		.4byte	0
 1382              		.section	.debug_ranges,"",%progbits
 1383              	.Ldebug_ranges0:
 1384 0000 00000000 		.4byte	.LFB0
 1385 0004 24000000 		.4byte	.LFE0
 1386 0008 00000000 		.4byte	.LFB1
 1387 000c 80000000 		.4byte	.LFE1
 1388 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 41


 1389 0014 20000000 		.4byte	.LFE2
 1390 0018 00000000 		.4byte	.LFB3
 1391 001c 20000000 		.4byte	.LFE3
 1392 0020 00000000 		.4byte	.LFB4
 1393 0024 20000000 		.4byte	.LFE4
 1394 0028 00000000 		.4byte	.LFB5
 1395 002c 20000000 		.4byte	.LFE5
 1396 0030 00000000 		.4byte	.LFB6
 1397 0034 1C000000 		.4byte	.LFE6
 1398 0038 00000000 		.4byte	.LFB7
 1399 003c 20000000 		.4byte	.LFE7
 1400 0040 00000000 		.4byte	.LFB8
 1401 0044 20000000 		.4byte	.LFE8
 1402 0048 00000000 		.4byte	.LFB9
 1403 004c 20000000 		.4byte	.LFE9
 1404 0050 00000000 		.4byte	.LFB10
 1405 0054 18000000 		.4byte	.LFE10
 1406 0058 00000000 		.4byte	.LFB11
 1407 005c 1C000000 		.4byte	.LFE11
 1408 0060 00000000 		.4byte	.LFB12
 1409 0064 20000000 		.4byte	.LFE12
 1410 0068 00000000 		.4byte	.LFB13
 1411 006c 18000000 		.4byte	.LFE13
 1412 0070 00000000 		.4byte	.LFB14
 1413 0074 18000000 		.4byte	.LFE14
 1414 0078 00000000 		.4byte	.LFB15
 1415 007c 18000000 		.4byte	.LFE15
 1416 0080 00000000 		.4byte	0
 1417 0084 00000000 		.4byte	0
 1418              		.section	.debug_line,"",%progbits
 1419              	.Ldebug_line0:
 1420 0000 89010000 		.section	.debug_str,"MS",%progbits,1
 1420      02004900 
 1420      00000201 
 1420      FB0E0D00 
 1420      01010101 
 1421              	.LASF41:
 1422 0000 433A5C55 		.ascii	"C:\\Users\\Krist\\OneDrive\\Dokumenter\\GitHub\\pla"
 1422      73657273 
 1422      5C4B7269 
 1422      73745C4F 
 1422      6E654472 
 1423 002d 746F6F6E 		.ascii	"tooning\\PSoC\\Platooning\\AngleMeasurement.cydsn\000"
 1423      696E675C 
 1423      50536F43 
 1423      5C506C61 
 1423      746F6F6E 
 1424              	.LASF11:
 1425 005c 63686172 		.ascii	"char\000"
 1425      00
 1426              	.LASF20:
 1427 0061 50574D5F 		.ascii	"PWM_H_BRIDGE_Stop\000"
 1427      485F4252 
 1427      49444745 
 1427      5F53746F 
 1427      7000
 1428              	.LASF39:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 42


 1429 0073 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1429      43313120 
 1429      352E342E 
 1429      31203230 
 1429      31363036 
 1430 00a6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1430      20726576 
 1430      6973696F 
 1430      6E203233 
 1430      37373135 
 1431 00d9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1431      66756E63 
 1431      74696F6E 
 1431      2D736563 
 1431      74696F6E 
 1432              	.LASF24:
 1433 0101 50574D5F 		.ascii	"PWM_H_BRIDGE_WritePeriod\000"
 1433      485F4252 
 1433      49444745 
 1433      5F577269 
 1433      74655065 
 1434              	.LASF26:
 1435 011a 70657269 		.ascii	"period\000"
 1435      6F6400
 1436              	.LASF3:
 1437 0121 73686F72 		.ascii	"short unsigned int\000"
 1437      7420756E 
 1437      7369676E 
 1437      65642069 
 1437      6E7400
 1438              	.LASF17:
 1439 0134 50574D5F 		.ascii	"PWM_H_BRIDGE_interruptState\000"
 1439      485F4252 
 1439      49444745 
 1439      5F696E74 
 1439      65727275 
 1440              	.LASF9:
 1441 0150 666C6F61 		.ascii	"float\000"
 1441      7400
 1442              	.LASF25:
 1443 0156 636F756E 		.ascii	"counter\000"
 1443      74657200 
 1444              	.LASF1:
 1445 015e 756E7369 		.ascii	"unsigned char\000"
 1445      676E6564 
 1445      20636861 
 1445      7200
 1446              	.LASF13:
 1447 016c 72656738 		.ascii	"reg8\000"
 1447      00
 1448              	.LASF22:
 1449 0171 50574D5F 		.ascii	"PWM_H_BRIDGE_WriteCounter\000"
 1449      485F4252 
 1449      49444745 
 1449      5F577269 
 1449      7465436F 
 1450              	.LASF19:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 43


 1451 018b 50574D5F 		.ascii	"PWM_H_BRIDGE_Enable\000"
 1451      485F4252 
 1451      49444745 
 1451      5F456E61 
 1451      626C6500 
 1452              	.LASF5:
 1453 019f 6C6F6E67 		.ascii	"long unsigned int\000"
 1453      20756E73 
 1453      69676E65 
 1453      6420696E 
 1453      7400
 1454              	.LASF12:
 1455 01b1 75696E74 		.ascii	"uint8\000"
 1455      3800
 1456              	.LASF35:
 1457 01b7 636F6E74 		.ascii	"control\000"
 1457      726F6C00 
 1458              	.LASF42:
 1459 01bf 50574D5F 		.ascii	"PWM_H_BRIDGE_ReadControlRegister\000"
 1459      485F4252 
 1459      49444745 
 1459      5F526561 
 1459      64436F6E 
 1460              	.LASF10:
 1461 01e0 646F7562 		.ascii	"double\000"
 1461      6C6500
 1462              	.LASF38:
 1463 01e7 50574D5F 		.ascii	"PWM_H_BRIDGE_ReadPeriod\000"
 1463      485F4252 
 1463      49444745 
 1463      5F526561 
 1463      64506572 
 1464              	.LASF32:
 1465 01ff 50574D5F 		.ascii	"PWM_H_BRIDGE_ReadStatusRegister\000"
 1465      485F4252 
 1465      49444745 
 1465      5F526561 
 1465      64537461 
 1466              	.LASF37:
 1467 021f 50574D5F 		.ascii	"PWM_H_BRIDGE_ReadCompare\000"
 1467      485F4252 
 1467      49444745 
 1467      5F526561 
 1467      64436F6D 
 1468              	.LASF8:
 1469 0238 756E7369 		.ascii	"unsigned int\000"
 1469      676E6564 
 1469      20696E74 
 1469      00
 1470              	.LASF36:
 1471 0245 50574D5F 		.ascii	"PWM_H_BRIDGE_ReadCapture\000"
 1471      485F4252 
 1471      49444745 
 1471      5F526561 
 1471      64436170 
 1472              	.LASF7:
 1473 025e 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 44


 1473      206C6F6E 
 1473      6720756E 
 1473      7369676E 
 1473      65642069 
 1474              	.LASF33:
 1475 0275 72657375 		.ascii	"result\000"
 1475      6C7400
 1476              	.LASF16:
 1477 027c 6374726C 		.ascii	"ctrl\000"
 1477      00
 1478              	.LASF15:
 1479 0281 73697A65 		.ascii	"sizetype\000"
 1479      74797065 
 1479      00
 1480              	.LASF6:
 1481 028a 6C6F6E67 		.ascii	"long long int\000"
 1481      206C6F6E 
 1481      6720696E 
 1481      7400
 1482              	.LASF30:
 1483 0298 696E7465 		.ascii	"interruptMode\000"
 1483      72727570 
 1483      744D6F64 
 1483      6500
 1484              	.LASF34:
 1485 02a6 50574D5F 		.ascii	"PWM_H_BRIDGE_WriteControlRegister\000"
 1485      485F4252 
 1485      49444745 
 1485      5F577269 
 1485      7465436F 
 1486              	.LASF40:
 1487 02c8 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_H_BRIDGE.c\000"
 1487      72617465 
 1487      645F536F 
 1487      75726365 
 1487      5C50536F 
 1488              	.LASF43:
 1489 02ee 50574D5F 		.ascii	"PWM_H_BRIDGE_initVar\000"
 1489      485F4252 
 1489      49444745 
 1489      5F696E69 
 1489      74566172 
 1490              	.LASF2:
 1491 0303 73686F72 		.ascii	"short int\000"
 1491      7420696E 
 1491      7400
 1492              	.LASF23:
 1493 030d 50574D5F 		.ascii	"PWM_H_BRIDGE_ClearFIFO\000"
 1493      485F4252 
 1493      49444745 
 1493      5F436C65 
 1493      61724649 
 1494              	.LASF4:
 1495 0324 6C6F6E67 		.ascii	"long int\000"
 1495      20696E74 
 1495      00
 1496              	.LASF31:
ARM GAS  C:\Users\Krist\AppData\Local\Temp\ccmUb1kw.s 			page 45


 1497 032d 50574D5F 		.ascii	"PWM_H_BRIDGE_ReadCounter\000"
 1497      485F4252 
 1497      49444745 
 1497      5F526561 
 1497      64436F75 
 1498              	.LASF14:
 1499 0346 6C6F6E67 		.ascii	"long double\000"
 1499      20646F75 
 1499      626C6500 
 1500              	.LASF18:
 1501 0352 50574D5F 		.ascii	"PWM_H_BRIDGE_Start\000"
 1501      485F4252 
 1501      49444745 
 1501      5F537461 
 1501      727400
 1502              	.LASF0:
 1503 0365 7369676E 		.ascii	"signed char\000"
 1503      65642063 
 1503      68617200 
 1504              	.LASF28:
 1505 0371 636F6D70 		.ascii	"compare\000"
 1505      61726500 
 1506              	.LASF21:
 1507 0379 50574D5F 		.ascii	"PWM_H_BRIDGE_Init\000"
 1507      485F4252 
 1507      49444745 
 1507      5F496E69 
 1507      7400
 1508              	.LASF29:
 1509 038b 50574D5F 		.ascii	"PWM_H_BRIDGE_SetInterruptMode\000"
 1509      485F4252 
 1509      49444745 
 1509      5F536574 
 1509      496E7465 
 1510              	.LASF27:
 1511 03a9 50574D5F 		.ascii	"PWM_H_BRIDGE_WriteCompare\000"
 1511      485F4252 
 1511      49444745 
 1511      5F577269 
 1511      7465436F 
 1512              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
